# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey and OneToOneField has `on_delete` set to the desired behavior
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from salesforce import models


class AcceptedEventRelation(models.Model):
    relation = models.ForeignKey('Calendar', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Calendar, User]
    event = models.ForeignKey('Event', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    responded_date = models.DateTimeField(verbose_name='Response Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    response = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='acceptedeventrelation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='acceptedeventrelation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    type = models.CharField(max_length=50, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AcceptedEventRelation'
        verbose_name = 'Accepted Event Relation'
        verbose_name_plural = 'Accepted Event Relations'
        # keyPrefix = 'None'



class Account(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    master_record = models.ForeignKey('self', models.DO_NOTHING, related_name='account_masterrecord_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=255, verbose_name='Account Name', sf_read_only=models.READ_ONLY)
    type = models.CharField(max_length=40, verbose_name='Account Type', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Prospect'), choices=[('Customer', 'Customer'), ('Prospect', 'Prospect'), ('Partner - Formal', 'Partner - Formal'), ('Partner - Informal', 'Partner - Informal'), ('Agency', 'Agency'), ('Agent', 'Agent'), ('Group', 'Group'), ('Individual', 'Individual'), ('Partner - Prospective', 'Partner - Prospective'), ('Dead Partner', 'Dead Partner'), ('Partner - Inactive', 'Partner - Inactive'), ('Enterprise', 'Enterprise'), ('Customer Contact', 'Customer Contact'), ('Carrier', 'Carrier')], blank=True, null=True)
    record_type = models.ForeignKey('RecordType', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent = models.ForeignKey('self', models.DO_NOTHING, related_name='account_parent_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_street = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_city = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_state = models.CharField(max_length=80, verbose_name='Billing State/Province', sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_postal_code = models.CharField(max_length=20, verbose_name='Billing Zip/Postal Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_country = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_state_code = models.CharField(max_length=10, verbose_name='Billing State/Province Code', sf_read_only=models.READ_ONLY, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], blank=True, null=True)
    billing_country_code = models.CharField(max_length=10, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('US'), choices=[('CA', 'Canada'), ('US', 'United States')], blank=True, null=True)
    billing_latitude = models.DecimalField(max_digits=18, decimal_places=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_longitude = models.DecimalField(max_digits=18, decimal_places=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    billing_geocode_accuracy = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], blank=True, null=True)
    billing_address = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    shipping_street = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_city = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_state = models.CharField(max_length=80, verbose_name='Shipping State/Province', sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_postal_code = models.CharField(max_length=20, verbose_name='Shipping Zip/Postal Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_country = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_state_code = models.CharField(max_length=10, verbose_name='Shipping State/Province Code', sf_read_only=models.READ_ONLY, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], blank=True, null=True)
    shipping_country_code = models.CharField(max_length=10, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('US'), choices=[('CA', 'Canada'), ('US', 'United States')], blank=True, null=True)
    shipping_latitude = models.DecimalField(max_digits=18, decimal_places=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_longitude = models.DecimalField(max_digits=18, decimal_places=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    shipping_geocode_accuracy = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], blank=True, null=True)
    shipping_address = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    phone = models.CharField(max_length=40, verbose_name='Account Phone', sf_read_only=models.READ_ONLY, blank=True, null=True)
    fax = models.CharField(max_length=40, verbose_name='Account Fax', sf_read_only=models.READ_ONLY, blank=True, null=True)
    website = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    photo_url = models.URLField(verbose_name='Photo URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    sic = models.CharField(max_length=20, verbose_name='SIC Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    industry = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Agriculture', 'Agriculture'), ('Apparel', 'Apparel'), ('Aviation', 'Aviation'), ('Banking', 'Banking'), ('Biotechnology', 'Biotechnology'), ('Chemicals', 'Chemicals'), ('Communications', 'Communications'), ('Construction', 'Construction'), ('Consulting', 'Consulting'), ('Education', 'Education'), ('Electronics', 'Electronics'), ('Energy', 'Energy'), ('Engineering', 'Engineering'), ('Entertainment', 'Entertainment'), ('Environmental', 'Environmental'), ('Finance', 'Finance'), ('Food & Beverage', 'Food & Beverage'), ('Government', 'Government'), ('Healthcare', 'Healthcare'), ('Hospitality', 'Hospitality'), ('Insurance', 'Insurance'), ('Machinery', 'Machinery'), ('Manufacturing', 'Manufacturing'), ('Media', 'Media'), ('Not For Profit', 'Not For Profit'), ('Other', 'Other'), ('Real Estate', 'Real Estate'), ('Recreation', 'Recreation'), ('Retail', 'Retail'), ('Shipping', 'Shipping'), ('Spa', 'Spa'), ('Technology', 'Technology'), ('Telecommunications', 'Telecommunications'), ('Transportation', 'Transportation'), ('Utilities', 'Utilities'), ('Waste Management', 'Waste Management')], blank=True, null=True)
    number_of_employees = models.IntegerField(verbose_name='Employees', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(verbose_name='Account Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    rating = models.CharField(max_length=40, verbose_name='Account Rating', sf_read_only=models.READ_ONLY, choices=[('Hot', 'Hot'), ('Warm', 'Warm'), ('Cold', 'Cold')], blank=True, null=True)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='account_owner_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='account_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='account_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_activity_date = models.DateField(verbose_name='Last Activity', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_customer_portal = models.BooleanField(verbose_name='Customer Portal Account', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    jigsaw_company_id = models.CharField(max_length=20, verbose_name='Jigsaw Company ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    account_source = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Sales Generated'), choices=[('Client', 'Client'), ('Sales Generated', 'Sales Generated'), ('Partner', 'Partner'), ('Advertisement', 'Advertisement'), ('Internal Employee Referral', 'Internal Employee Referral'), ('Marketing Lists', 'Marketing Lists'), ('Public Relations', 'Public Relations'), ('Social Media', 'Social Media'), ('Toll Free', 'Toll Free'), ('Trade Show', 'Trade Show'), ('Website', 'Website'), ('Product', 'Product'), ('Association', 'Association'), ('Associations', 'Associations'), ('Bank', 'Bank'), ('Broker', 'Broker'), ('Chat', 'Chat'), ('Client Add On', 'Client Add On'), ('Clientele Conversion', 'Clientele Conversion'), ('Compliance', 'Compliance'), ('CPA', 'CPA'), ('Customer Referral', 'Customer Referral'), ('DSI', 'DSI'), ('EIN Change', 'EIN Change'), ('Existing Client', 'Existing Client'), ('External Referral', 'External Referral'), ('Franchisee', 'Franchisee'), ('Jigsaw', 'Jigsaw'), ('Networking', 'Networking'), ('Rest. List', 'Rest. List'), ('Sage', 'Sage'), ('Self Gen', 'Self Gen'), ('Self Generated', 'Self Generated'), ('Strategic Alliance', 'Strategic Alliance'), ('Tony Dillard', 'Tony Dillard'), ('Web Forms', 'Web Forms'), ('Webinar', 'Webinar'), ('PartnerFocus', 'PartnerFocus'), ('Acquisition - Planet Payroll', 'Acquisition - Planet Payroll'), ('Agency Workspace', 'Agency Workspace'), ('Acquisition - Rams', 'Acquisition - Rams')], blank=True, null=True)
    print_location = models.CharField(custom=True, db_column='Print_Location__c', max_length=255, verbose_name='Print Location', sf_read_only=models.READ_ONLY, help_text='For Operations users to indicate where the account’s checks and reports are printed and shipped.', choices=[('016 - West Palm Beach', '016 - West Palm Beach'), ('C99 - Tennessee', 'C99 - Tennessee'), ('001 - Miramar', '001 - Miramar'), ('002 - Tampa', '002 - Tampa'), ('003 - Phoenix', '003 - Phoenix'), ('004 - New York', '004 - New York'), ('005 - Atlanta', '005 - Atlanta'), ('006 - Long Island', '006 - Long Island'), ('007 - Selma', '007 - Selma'), ('008 - Maine', '008 - Maine'), ('010 - Tennessee', '010 - Tennessee'), ('011 - Chicago', '011 - Chicago'), ('012 - Orange County', '012 - Orange County'), ('013 - Boston', '013 - Boston'), ('014 - Walnut Creek', '014 - Walnut Creek'), ('097 - Seattle', '097 - Seattle'), ('095 - Tennessee', '095 - Tennessee'), ('P12 - Orange County', 'P12 - Orange County'), ('C02 - Tampa', 'C02 - Tampa'), ('C07 - Selma', 'C07 - Selma'), ('C34 - Seattle', 'C34 - Seattle'), ('C36 - Las Vegas', 'C36 - Las Vegas'), ('099 - Tennessee', '099 - Tennessee'), ('035 - New Jersey', '035 - New Jersey'), ('C03 - Phoenix', 'C03 - Phoenix')], blank=True, null=True)
    telemarketing_lead = models.BooleanField(custom=True, db_column='Telemarketing_Lead__c', verbose_name='Telemarketing Lead', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    cpay_business_size = models.CharField(custom=True, db_column='CPAY_Business_Size__c', max_length=1300, verbose_name='CPAY Business Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    bmll_business_size = models.CharField(custom=True, db_column='BMLL_Business_Size__c', max_length=1300, verbose_name='BMLL Business Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    frequency_of_payroll = models.CharField(custom=True, db_column='Frequency_of_Payroll__c', max_length=255, verbose_name='Frequency of Payroll', sf_read_only=models.READ_ONLY, choices=[('Weekly (52)', 'Weekly (52)'), ('Biweekly (26)', 'Biweekly (26)'), ('Semimonthly (24)', 'Semimonthly (24)'), ('Monthly (12)', 'Monthly (12)'), ('Quarterly (4)', 'Quarterly (4)')], blank=True, null=True)
    partner_type = models.CharField(custom=True, db_column='Partner_Type__c', max_length=255, verbose_name='Partner Type', sf_read_only=models.READ_ONLY, choices=[('Accountant', 'Accountant'), ('Association', 'Association'), ('Bank', 'Bank'), ('BMall GA Agency', 'BMall GA Agency'), ('Broker', 'Broker'), ('Brokerage Agency', 'Brokerage Agency'), ('Strategic', 'Strategic'), ('Other', 'Other')], blank=True, null=True)
    ein = models.CharField(custom=True, db_column='EIN__c', max_length=10, verbose_name='EIN', sf_read_only=models.READ_ONLY, blank=True, null=True)
    source_system = models.CharField(custom=True, db_column='Source_System__c', max_length=255, verbose_name='Source System', sf_read_only=models.READ_ONLY, choices=[('PayFocus', 'PayFocus'), ('PayFocus Full Service', 'PayFocus Full Service'), ('PayFocus Pro', 'PayFocus Pro'), ('PayFocus2 Full Service', 'PayFocus2 Full Service'), ('Construction Payroll', 'Construction Payroll'), ('M3', 'M3'), ('PayEntry (Mpay)', 'PayEntry (Mpay)'), ('Payload', 'Payload'), ('PayRight', 'PayRight'), ('PowerPay', 'PowerPay'), ('XpressPay', 'XpressPay'), ('BenefitPoint', 'BenefitPoint'), ('AMS', 'AMS'), ('CXC', 'CXC')], blank=True, null=True)
    service_location = models.CharField(custom=True, db_column='Service_Location__c', max_length=255, verbose_name='Service Location', sf_read_only=models.READ_ONLY, help_text='Operations users will populate this field with the location of the Service Rep who works the account.', choices=[('001 - Miramar', '001 - Miramar'), ('002 - Tampa', '002 - Tampa'), ('003 - Phoenix', '003 - Phoenix'), ('004 - New York', '004 - New York'), ('005 - Atlanta', '005 - Atlanta'), ('006 - PayFocus General Support', '006 - PayFocus General Support'), ('007 - Selma', '007 - Selma'), ('008 - Maine', '008 - Maine'), ('010 - Tennessee', '010 - Tennessee'), ('011 - Chicago', '011 - Chicago'), ('012 - Orange County', '012 - Orange County'), ('013 - Boston', '013 - Boston'), ('014 - Walnut Creek', '014 - Walnut Creek'), ('015 - PayFocus Partner Support', '015 - PayFocus Partner Support'), ('016 - West Palm Beach', '016 - West Palm Beach'), ('035 - New Jersey', '035 - New Jersey'), ('095 - Tennessee', '095 - Tennessee'), ('097 - Seattle', '097 - Seattle'), ('099 - Tennessee', '099 - Tennessee'), ('C02 - Tampa', 'C02 - Tampa'), ('C07 - Selma', 'C07 - Selma'), ('C34 - Seattle', 'C34 - Seattle'), ('C36 - Las Vegas', 'C36 - Las Vegas'), ('C99 - Tennessee', 'C99 - Tennessee'), ('P12 - Orange County', 'P12 - Orange County'), ('C15 - Dallas', 'C15 - Dallas'), ('C03 - Phoenix', 'C03 - Phoenix')], blank=True, null=True)
    client_code = models.CharField(custom=True, db_column='Client_Code__c', max_length=20, verbose_name='Client Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    platform_integration_id = models.CharField(custom=True, db_column='PlatformIntegrationID__c', unique=True, max_length=20, verbose_name='PlatformIntegrationID', sf_read_only=models.READ_ONLY, help_text='The unique ID of the account from the source system', blank=True, null=True)
    preferred_marketing_method = models.CharField(custom=True, db_column='Preferred_Marketing_Method__c', max_length=255, verbose_name='Preferred Marketing Method', sf_read_only=models.READ_ONLY, choices=[('Newsletter Articles', 'Newsletter Articles'), ('Statement Stuffers', 'Statement Stuffers'), ('Small Business Month', 'Small Business Month'), ('Promotions', 'Promotions')], blank=True, null=True)
    attrition_reason = models.CharField(custom=True, db_column='Attrition_Reason__c', max_length=255, verbose_name='Attrition Reason', sf_read_only=models.READ_ONLY, choices=[('Acquisition Conversion Issue', 'Acquisition Conversion Issue'), ('Annual Price Increase', 'Annual Price Increase'), ('Bank/CPA Relationship', 'Bank/CPA Relationship'), ('Bankruptcy', 'Bankruptcy'), ('Branch Service Issues', 'Branch Service Issues'), ('Copy Over - Changing Platforms', 'Copy Over - Changing Platforms'), ('Copy Over - Same Platform', 'Copy Over - Same Platform'), ('Distribution Issues', 'Distribution Issues'), ('Employee Leasing', 'Employee Leasing'), ('In House', 'In House'), ('Local Processing', 'Local Processing'), ("Moved EE's to a current account", "Moved EE's to a current account"), ('Never Processed One Payroll', 'Never Processed One Payroll'), ('No Employees', 'No Employees'), ('NSF/Past Due', 'NSF/Past Due'), ('Oversold by Sales', 'Oversold by Sales'), ('Permanently Closed Business', 'Permanently Closed Business'), ('Pricing', 'Pricing'), ('Products/Features', 'Products/Features'), ('Sold Business - not replaced', 'Sold Business - not replaced'), ('Tax Issues', 'Tax Issues'), ('Treasury Issues', 'Treasury Issues'), ('Workers Comp Issues', 'Workers Comp Issues'), ('Other', 'Other'), ('Service - Can’t Contact', 'Service - Can’t Contact')], blank=True, null=True)
    attrition_other_reason = models.TextField(custom=True, db_column='Attrition_Other_Reason__c', verbose_name='Attrition Other Reason', sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_provider = models.CharField(custom=True, db_column='New_Provider__c', max_length=255, verbose_name='New Provider', sf_read_only=models.READ_ONLY, choices=[('ADP', 'ADP'), ('Banking Service [Require field to specify]', 'Banking Service [Require field to specify]'), ('Ceridian', 'Ceridian'), ('CPA', 'CPA'), ('In House', 'In House'), ('Internal Transfer', 'Internal Transfer'), ('Intuit (QuickBooks)', 'Intuit (QuickBooks)'), ('Ovation Payroll', 'Ovation Payroll'), ('Paychex', 'Paychex'), ('PayChoice', 'PayChoice'), ('Paycor', 'Paycor'), ('Paylocity', 'Paylocity'), ('PrimePay', 'PrimePay'), ('SurePayroll', 'SurePayroll'), ('Unknown', 'Unknown'), ('Other', 'Other')], blank=True, null=True)
    other_new_provider = models.CharField(custom=True, db_column='Other_New_Provider__c', max_length=20, verbose_name='Other New Provider', sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_method = models.CharField(custom=True, db_column='New_Method__c', max_length=255, verbose_name='New Method', sf_read_only=models.READ_ONLY, choices=[('Phone', 'Phone'), ('Mobile', 'Mobile'), ('Fax', 'Fax'), ('Desktop Software', 'Desktop Software'), ('Web', 'Web'), ('Other', 'Other')], blank=True, null=True)
    other_new_method = models.CharField(custom=True, db_column='Other_New_Method__c', max_length=20, verbose_name='Other New Method', sf_read_only=models.READ_ONLY, blank=True, null=True)
    high_visibility = models.BooleanField(custom=True, db_column='High_Visibility__c', verbose_name='High Visibility', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_process_date = models.DateTimeField(custom=True, db_column='Last_Process_Date__c', verbose_name='Last Process Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    source_service_rep = models.CharField(custom=True, db_column='Source_Service_Rep__c', max_length=100, verbose_name='Source Service Rep', sf_read_only=models.READ_ONLY, blank=True, null=True)
    next_check_date = models.DateField(custom=True, db_column='Next_Check_Date__c', verbose_name='Next Check Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    next_schedule_date = models.DateTimeField(custom=True, db_column='Next_Schedule_Date__c', verbose_name='Next Schedule Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    tax_type = models.CharField(custom=True, db_column='Tax_Type__c', max_length=255, verbose_name='Tax Type', sf_read_only=models.READ_ONLY, choices=[('941 Only', '941 Only'), ('944 Only', '944 Only'), ('943 Only', '943 Only'), ('941/943', '941/943'), ('944', '944'), ('943', '943'), ('Household', 'Household')], blank=True, null=True)
    processing_type = models.CharField(custom=True, db_column='Processing_Type__c', max_length=255, verbose_name='Processing Type', sf_read_only=models.READ_ONLY, choices=[('Auto', 'Auto'), ('Call-In', 'Call-In'), ('Call-Out', 'Call-Out'), ('Email', 'Email'), ('Fax-In', 'Fax-In'), ('Hosted', 'Hosted'), ('Online', 'Online'), ('Remote (PC)', 'Remote (PC)')], blank=True, null=True)
    processing_deadline = models.DateField(custom=True, db_column='Processing_Deadline__c', verbose_name='Processing Deadline', sf_read_only=models.READ_ONLY, blank=True, null=True)
    branch = models.CharField(custom=True, max_length=50, sf_read_only=models.READ_ONLY, blank=True, null=True)
    consolidate = models.CharField(custom=True, max_length=255, sf_read_only=models.READ_ONLY, choices=[('None', 'None'), ('Child', 'Child'), ('Master', 'Master')], blank=True, null=True)
    processing_discount = models.DecimalField(custom=True, db_column='Processing_Discount__c', max_digits=5, decimal_places=2, verbose_name='Processing Discount', sf_read_only=models.READ_ONLY, blank=True, null=True)
    telemarketer = models.CharField(custom=True, max_length=100, sf_read_only=models.READ_ONLY, blank=True, null=True)
    termination_date = models.DateField(custom=True, db_column='Termination_Date__c', verbose_name='Termination Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    location = models.CharField(custom=True, max_length=255, verbose_name='Data Location', sf_read_only=models.READ_ONLY, help_text='For Operations users to indicate the cost center to which these accounts are coded.', choices=[('001 - Miramar', '001 - Miramar'), ('016 - West Palm Beach', '016 - West Palm Beach'), ('C99 - Tennessee', 'C99 - Tennessee'), ('002 - Tampa', '002 - Tampa'), ('003 - Phoenix', '003 - Phoenix'), ('004 - New York', '004 - New York'), ('005 - Atlanta', '005 - Atlanta'), ('006 - Long Island', '006 - Long Island'), ('007 - Selma', '007 - Selma'), ('008 - Maine', '008 - Maine'), ('010 - Tennessee', '010 - Tennessee'), ('012 - Orange County', '012 - Orange County'), ('013 - Boston', '013 - Boston'), ('014 - Walnut Creek', '014 - Walnut Creek'), ('035 - New Jersey', '035 - New Jersey'), ('095 - Tennessee', '095 - Tennessee'), ('097 - Seattle', '097 - Seattle'), ('099 - Tennessee', '099 - Tennessee'), ('C02 - Tampa', 'C02 - Tampa'), ('C07 - Selma', 'C07 - Selma'), ('C34 - Seattle', 'C34 - Seattle'), ('C36 - Las Vegas', 'C36 - Las Vegas'), ('P12 - Orange County', 'P12 - Orange County'), ('011 - Chicago', '011 - Chicago'), ('C15 - PayFocus Pro Dallas', 'C15 - PayFocus Pro Dallas'), ('015 - Dallas PAM', '015 - Dallas PAM'), ('C03 - Phoenix', 'C03 - Phoenix')], blank=True, null=True)
    direct_deposit_ach_term = models.CharField(custom=True, db_column='Direct_Deposit_ACH_Term__c', max_length=255, verbose_name='Direct Deposit ACH Term', sf_read_only=models.READ_ONLY, help_text='N/A = Not on Service', choices=[('ACH24', 'ACH24'), ('ACH48', 'ACH48'), ('ACH72', 'ACH72'), ('ACH96', 'ACH96'), ('ACH120', 'ACH120'), ('WIRE', 'WIRE'), ('REV WIRE', 'REV WIRE'), ('ACH Credit', 'ACH Credit'), ('N/A', 'N/A')], blank=True, null=True)
    legacy_id = models.CharField(custom=True, db_column='Legacy_ID__c', max_length=24, verbose_name='Legacy ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    year_end_hold = models.BooleanField(custom=True, db_column='Year_End_Hold__c', verbose_name='Year End Hold', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    quarter_end_hold = models.BooleanField(custom=True, db_column='Quarter_End_Hold__c', verbose_name='Quarter End Hold', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    business_type = models.CharField(custom=True, db_column='Business_Type__c', max_length=255, verbose_name='Business Type', sf_read_only=models.READ_ONLY, choices=[('S-Corp', 'S-Corp'), ('C-Corp', 'C-Corp'), ('Partnership', 'Partnership'), ('LLC', 'LLC'), ('Sole Proprietor', 'Sole Proprietor'), ('Corporation', 'Corporation'), ('Non-profit Organization', 'Non-profit Organization')], blank=True, null=True)
    first_payroll_of_transactions = models.DecimalField(custom=True, db_column='First_Payroll_of_Transactions__c', max_digits=16, decimal_places=0, verbose_name='First Payroll # of Transactions', sf_read_only=models.READ_ONLY, blank=True, null=True)
    previous_provider = models.CharField(custom=True, db_column='Previous_Provider__c', max_length=255, verbose_name='Previous Provider', sf_read_only=models.READ_ONLY, choices=[('ADP', 'ADP'), ('Bamboo HR', 'Bamboo HR'), ('Banking Service', 'Banking Service'), ('Ceridian', 'Ceridian'), ('CPA', 'CPA'), ('In House', 'In House'), ('Internal Transfer', 'Internal Transfer'), ('Intuit (QuickBooks)', 'Intuit (QuickBooks)'), ('Other', 'Other'), ('Ovation Payroll', 'Ovation Payroll'), ('Patriot Software', 'Patriot Software'), ('Paychex', 'Paychex'), ('Pay Choice', 'Pay Choice'), ('Paycor', 'Paycor'), ('Paylocity', 'Paylocity'), ('PrimePay', 'PrimePay'), ('SurePayroll', 'SurePayroll'), ('Unknown', 'Unknown')], blank=True, null=True)
    record_type_name = models.CharField(custom=True, db_column='Record_Type_Name__c', max_length=1300, verbose_name='Record Type Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    lead_referral_id = models.CharField(custom=True, db_column='Lead_Referral_ID__c', max_length=20, verbose_name='Lead Referral ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    state_sui_filing = models.CharField(custom=True, db_column='State_SUI_Filing__c', max_length=4099, verbose_name='State SUI Filing', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    date_of_first_payroll = models.DateField(custom=True, db_column='Date_of_First_Payroll__c', verbose_name='Date of First Payroll', sf_read_only=models.READ_ONLY, blank=True, null=True)
    dba = models.CharField(custom=True, db_column='DBA__c', max_length=100, verbose_name='DBA', sf_read_only=models.READ_ONLY, blank=True, null=True)
    partner_code = models.CharField(custom=True, db_column='Partner_Code__c', max_length=20, verbose_name='Partner Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    advisory_notice = models.TextField(custom=True, db_column='Advisory_Notice__c', verbose_name='Advisory Notice', sf_read_only=models.READ_ONLY, blank=True, null=True)
    referring_employee = models.ForeignKey('User', models.DO_NOTHING, db_column='Referring_Employee__c', custom=True, related_name='account_referringemployee_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    state_swt_filing = models.CharField(custom=True, db_column='State_SWT_Filing__c', max_length=4099, verbose_name='State SWT Filing', sf_read_only=models.READ_ONLY, choices=[('Values', 'Values'), ('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    state_sdi_filing = models.CharField(custom=True, db_column='State_SDI_Filing__c', max_length=4099, verbose_name='State SDI Filing', sf_read_only=models.READ_ONLY, choices=[('Values', 'Values'), ('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    payroll_url = models.URLField(custom=True, db_column='Payroll_URL__c', verbose_name='Payroll URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    officer = models.CharField(custom=True, max_length=25, sf_read_only=models.READ_ONLY, blank=True, null=True)
    broker_payroll_referral_program = models.CharField(custom=True, db_column='Broker_Payroll_Referral_Program__c', max_length=255, verbose_name='Broker Payroll Referral Program', sf_read_only=models.READ_ONLY, choices=[('Yes', 'Yes'), ('No', 'No')], blank=True, null=True)
    file_thru_date = models.CharField(custom=True, db_column='File_Thru_Date__c', max_length=6, verbose_name='File Thru Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    region = models.CharField(custom=True, max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    premium = models.DecimalField(custom=True, max_digits=5, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    annualized_payroll_revenue = models.DecimalField(custom=True, db_column='Annualized_Payroll_Revenue__c', max_digits=18, decimal_places=2, verbose_name='Annualized Payroll Revenue', sf_read_only=models.READ_ONLY, help_text='The revolving sum of the last 12 months of invoices combined.', blank=True, null=True)
    maximum_discount_allowable = models.DecimalField(custom=True, db_column='Maximum_Discount_Allowable__c', max_digits=5, decimal_places=2, verbose_name='Maximum Discount Allowable', sf_read_only=models.READ_ONLY, help_text='The maximum discount that Sales is allowed to grant', blank=True, null=True)
    contracted_pricing_schedule = models.CharField(custom=True, db_column='Contracted_Pricing_Schedule__c', max_length=40, verbose_name='Contracted Pricing Schedule', sf_read_only=models.READ_ONLY, blank=True, null=True)
    xp_pp_corp_id_range = models.CharField(custom=True, db_column='XP_PP_Corp_ID_Range__c', max_length=40, verbose_name='XP/PP Corp ID Range', sf_read_only=models.READ_ONLY, blank=True, null=True)
    xp_pp_partner_code = models.CharField(custom=True, db_column='XP_PP_Partner_Code__c', max_length=40, verbose_name='XP/PP Partner Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    pam_cpo_partner_code = models.CharField(custom=True, db_column='PAM_CPO_Partner_Code__c', max_length=40, verbose_name='PAM/CPO Partner Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    back_office_partner_code = models.CharField(custom=True, db_column='Back_Office_Partner_Code__c', max_length=40, verbose_name='Back Office Partner Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    partner_category = models.CharField(custom=True, db_column='Partner_Category__c', max_length=255, verbose_name='Partner Category', sf_read_only=models.READ_ONLY, choices=[('Accountant', 'Accountant'), ('Acumatica VAR', 'Acumatica VAR'), ('Bank-Branch', 'Bank-Branch'), ('Bank-Main', 'Bank-Main'), ('BenefitMall broker', 'BenefitMall broker'), ('Benefitmall - Top Tier', 'Benefitmall - Top Tier'), ('Benefitmall - All Other', 'Benefitmall - All Other'), ('Benefitmall - Market Broker Prospect', 'Benefitmall - Market Broker Prospect'), ('Non-Benefitmall Broker', 'Non-Benefitmall Broker'), ('Business partner (other)', 'Business partner (other)'), ('Complimentary Payroll', 'Complimentary Payroll'), ('Financial institution', 'Financial institution'), ('Main', 'Main'), ('Sage', 'Sage'), ('Smart Tax Franchise', 'Smart Tax Franchise'), ('Warren/Averett', 'Warren/Averett')], blank=True, null=True)
    partner_subcategory = models.CharField(custom=True, db_column='Partner_Subcategory__c', max_length=4099, verbose_name='Partner Subcategory', sf_read_only=models.READ_ONLY, choices=[('Acquisition', 'Acquisition'), ('Back-office', 'Back-office'), ('Referral', 'Referral'), ('Sage BusinessWorks', 'Sage BusinessWorks'), ('Sage DacEasy', 'Sage DacEasy'), ('Sage HRMS', 'Sage HRMS'), ('Sage 50', 'Sage 50'), ('Sage 100 Contractor', 'Sage 100 Contractor'), ('Sage 100 ERP', 'Sage 100 ERP'), ('Sage 100 Fund Accounting', 'Sage 100 Fund Accounting'), ('Sage 300 Construction and Real Estate', 'Sage 300 Construction and Real Estate'), ('Sage 300 ERP', 'Sage 300 ERP'), ('Sage 500 ERP', 'Sage 500 ERP'), ('KeyBank Referral', 'KeyBank Referral'), ('KeyBank Back Office', 'KeyBank Back Office'), ('Wholesale Program', 'Wholesale Program')], blank=True, null=True)
    billing = models.CharField(custom=True, max_length=255, sf_read_only=models.READ_ONLY, choices=[('Bill Client', 'Bill Client'), ('Bill Accountant', 'Bill Accountant')], blank=True, null=True)
    coverage = models.CharField(custom=True, max_length=255, sf_read_only=models.READ_ONLY, choices=[('Field Sales', 'Field Sales'), ('Inside Sales', 'Inside Sales'), ('Mid Market', 'Mid Market'), ('Corporate/National Sales', 'Corporate/National Sales')], blank=True, null=True)
    contract_entrance_date = models.DateField(custom=True, db_column='Contract_Entrance_Date__c', verbose_name='Contract Entrance Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    payment_schedule = models.CharField(custom=True, db_column='Payment_Schedule__c', max_length=255, verbose_name='Payment Schedule', sf_read_only=models.READ_ONLY, choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly')], blank=True, null=True)
    promotions = models.CharField(custom=True, max_length=255, sf_read_only=models.READ_ONLY, choices=[('1 month free', '1 month free'), ('2 months free', '2 months free'), ('Free W-2s', 'Free W-2s')], blank=True, null=True)
    office = models.CharField(custom=True, max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_check_date = models.DateField(custom=True, db_column='Last_Check_Date__c', verbose_name='Last Check Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    schedule_day = models.CharField(custom=True, db_column='Schedule_Day__c', max_length=255, verbose_name='Schedule Day', sf_read_only=models.READ_ONLY, choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], blank=True, null=True)
    do_not_sell = models.CharField(custom=True, db_column='Do_Not_Sell__c', max_length=4099, verbose_name='Do Not Sell', sf_read_only=models.READ_ONLY, choices=[('401k', '401k'), ('Accting SW', 'Accting SW'), ('All', 'All'), ('Casualty', 'Casualty'), ('Data Risk Management', 'Data Risk Management'), ('Emp Background Scrn', 'Emp Background Scrn'), ('FSA', 'FSA'), ('Gen Liability', 'Gen Liability'), ('Health to BMLL Broker', 'Health to BMLL Broker'), ('HR360', 'HR360'), ('HRA', 'HRA'), ('HRIS', 'HRIS'), ('HR Mgr Helpline', 'HR Mgr Helpline'), ('HSA', 'HSA'), ('L&D', 'L&D'), ('Mgr Self-Svc', 'Mgr Self-Svc'), ('NY SDI Prem Calc', 'NY SDI Prem Calc'), ('OnePay Svc', 'OnePay Svc'), ('PayComp', 'PayComp'), ('Payroll', 'Payroll'), ('P-Cards', 'P-Cards'), ('POP', 'POP'), ('PowerCobra', 'PowerCobra'), ('Prof Liability', 'Prof Liability'), ('Sec 132', 'Sec 132'), ('Tax Credit Rec', 'Tax Credit Rec'), ('Time & Att', 'Time & Att'), ('Unemployment', 'Unemployment'), ('Voluntary Benes', 'Voluntary Benes'), ('WC BMLL (P&C)', 'WC BMLL (P&C)'), ('WC Direct Bill', 'WC Direct Bill'), ('WC Other', 'WC Other'), ('WC PayComp', 'WC PayComp'), ('WC Wholesale', 'WC Wholesale'), ('Welfare', 'Welfare')], blank=True, null=True)
    broker_id = models.CharField(custom=True, db_column='Broker_ID__c', max_length=15, verbose_name='Broker ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    high_vis_yes_no = models.CharField(custom=True, db_column='HighVis_YesNo__c', max_length=1300, verbose_name='HighVis YesNo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    lead_referral_date = models.DateField(custom=True, db_column='Lead_Referral_Date__c', verbose_name='Lead Referral Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    dns_formula = models.CharField(custom=True, db_column='DNS_Formula__c', max_length=1300, verbose_name='Do Not Sell List', sf_read_only=models.READ_ONLY, blank=True, null=True)
    dns_trigger = models.TextField(custom=True, db_column='DNS_Trigger__c', verbose_name='DNS_Trigger', sf_read_only=models.READ_ONLY, blank=True, null=True)
    primary_partner_type = models.CharField(custom=True, db_column='Primary_Partner_Type__c', max_length=255, verbose_name='Primary Partner Type', sf_read_only=models.READ_ONLY, choices=[('Agent', 'Agent'), ('CPA', 'CPA')], blank=True, null=True)
    primary_partner = models.ForeignKey('self', models.DO_NOTHING, db_column='Primary_Partner__c', custom=True, related_name='account_primarypartner_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    secondary_partner_type = models.CharField(custom=True, db_column='Secondary_Partner_Type__c', max_length=255, verbose_name='Secondary Partner Type', sf_read_only=models.READ_ONLY, choices=[('Agent', 'Agent'), ('CPA', 'CPA')], blank=True, null=True)
    secondary_partner = models.ForeignKey('self', models.DO_NOTHING, db_column='Secondary_Partner__c', custom=True, related_name='account_secondarypartner_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    update_flag = models.BooleanField(custom=True, verbose_name='UpdateFlag', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    loss_notes = models.TextField(custom=True, db_column='Loss_Notes__c', verbose_name='Loss Notes', sf_read_only=models.READ_ONLY, help_text='Any details surrounding customer leaving payroll services', blank=True, null=True)
    zchange_origin = models.CharField(custom=True, db_column='ZChangeOrigin__c', max_length=16, verbose_name='ZChangeOrigin', sf_read_only=models.READ_ONLY, blank=True, null=True)
    number_of_full_time_equivalents = models.DecimalField(custom=True, db_column='Number_Of_Full_Time_Equivalents__c', max_digits=18, decimal_places=0, verbose_name='Number Of Full Time Equivalents', sf_read_only=models.READ_ONLY, blank=True, null=True)
    number_of_full_time_equivalents_as_of_date = models.DateField(custom=True, db_column='Number_Of_Full_Time_Equivalents_AsOfDate__c', verbose_name='Number Of Full Time Equivalents AsOfDate', sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_name = models.CharField(custom=True, db_column='First_Name__c', max_length=40, verbose_name='First Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    middle_name = models.CharField(custom=True, db_column='Middle_Name__c', max_length=40, verbose_name='Middle Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_name = models.CharField(custom=True, db_column='Last_Name__c', max_length=50, verbose_name='Last Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    broker_referral_program = models.CharField(custom=True, db_column='Broker_Referral_Program__c', max_length=255, verbose_name='Broker Referral Program', sf_read_only=models.READ_ONLY, choices=[('Yes', 'Yes'), ('No', 'No')], blank=True, null=True)
    entitlement_program = models.CharField(custom=True, db_column='Entitlement_Program__c', max_length=255, verbose_name='Entitlement Program', sf_read_only=models.READ_ONLY, choices=[('Broker Referral', 'Broker Referral'), ('Payroll Subjective', 'Payroll Subjective')], blank=True, null=True)
    entitlement = models.CharField(custom=True, max_length=1300, sf_read_only=models.READ_ONLY, blank=True, null=True)
    primary_partner_type_f = models.CharField(custom=True, db_column='Primary_Partner_Type_f__c', max_length=1300, verbose_name='Primary Partner Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    secondary_partner_type_f = models.CharField(custom=True, db_column='Secondary_Partner_Type_f__c', max_length=1300, verbose_name='Secondary Partner Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    reverse_integration_error = models.TextField(custom=True, db_column='Reverse_Integration_Error__c', verbose_name='Reverse Integration Error', sf_read_only=models.READ_ONLY, blank=True, null=True)
    pay_focus_hr_features = models.CharField(custom=True, db_column='PayFocus_HR_features__c', max_length=4099, verbose_name='PayFocus HR features', sf_read_only=models.READ_ONLY, choices=[('Position Profiles', 'Position Profiles'), ('Document Management', 'Document Management'), ('Org Chart', 'Org Chart'), ('Compliance Reporting', 'Compliance Reporting'), ('PTO Request', 'PTO Request'), ('Performance Management', 'Performance Management'), ('Custom Fields', 'Custom Fields'), ('Manager Self Service', 'Manager Self Service'), ('Company Calendar', 'Company Calendar')], blank=True, null=True)
    original_date_of_first_payroll = models.DateField(custom=True, db_column='Original_Date_of_First_Payroll__c', verbose_name='Original Date of First Payroll', sf_read_only=models.READ_ONLY, blank=True, null=True)
    people_focus_effective_date = models.DateField(custom=True, db_column='PeopleFocus_Effective_Date__c', verbose_name='PeopleFocus Effective Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    people_focus_term_date = models.DateField(custom=True, db_column='PeopleFocus_Term_Date__c', verbose_name='PeopleFocus Term Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    people_focus = models.BooleanField(custom=True, verbose_name='PeopleFocus', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    contracted_products = models.CharField(custom=True, db_column='Contracted_Products__c', max_length=4099, verbose_name='Contracted Products', sf_read_only=models.READ_ONLY, choices=[('401k', '401k'), ('allCompliance', 'allCompliance'), ('HRFocus', 'HRFocus'), ('Time/Attendance', 'Time/Attendance'), ("Worker's Compensation", "Worker's Compensation"), ('Payroll', 'Payroll')], blank=True, null=True)
    retail_broker = models.CharField(custom=True, db_column='Retail_Broker__c', max_length=255, verbose_name='Retail Broker', sf_read_only=models.READ_ONLY, choices=[('AG', 'AG'), ('Forest', 'Forest')], blank=True, null=True)
    payroll_platform = models.CharField(custom=True, db_column='Payroll_Platform__c', max_length=1300, verbose_name='Payroll Platform', sf_read_only=models.READ_ONLY, blank=True, null=True)
    cs_team = models.CharField(custom=True, db_column='CS_Team__c', max_length=255, verbose_name='CS Team', sf_read_only=models.READ_ONLY, choices=[('1', '1'), ('2', '2'), ('4', '4'), ('7', '7'), ('8', '8'), ('C', 'C'), ('D', 'D'), ('H', 'H'), ('K', 'K'), ('M', 'M'), ('P', 'P'), ('R', 'R')], blank=True, null=True)
    ffm = models.CharField(custom=True, db_column='FFM__c', max_length=100, verbose_name='FFM#', sf_read_only=models.READ_ONLY, help_text='Federally Facilitated Marketplace', blank=True, null=True)
    npn = models.CharField(custom=True, db_column='NPN__c', max_length=100, verbose_name='NPN#', sf_read_only=models.READ_ONLY, help_text='National Producer Number', blank=True, null=True)
    corporate_city = models.CharField(custom=True, db_column='Corporate_City__c', max_length=60, verbose_name='Corporate City', sf_read_only=models.READ_ONLY, blank=True, null=True)
    corporate_name = models.TextField(custom=True, db_column='Corporate_Name__c', verbose_name='Corporate Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    corporate_state_province = models.CharField(custom=True, db_column='Corporate_State_Province__c', max_length=60, verbose_name='Corporate State/Province', sf_read_only=models.READ_ONLY, blank=True, null=True)
    corporate_street = models.CharField(custom=True, db_column='Corporate_Street__c', max_length=255, verbose_name='Corporate Street', sf_read_only=models.READ_ONLY, blank=True, null=True)
    corporate_zip_postal_code = models.CharField(custom=True, db_column='Corporate_Zip_Postal_Code__c', max_length=15, verbose_name='Corporate Zip/Postal Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_meeting_completed = models.DateField(custom=True, db_column='First_Meeting_Completed__c', verbose_name='First Meeting Completed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    products_offered_lost = models.CharField(custom=True, db_column='Products_Offered_Lost__c', max_length=4099, verbose_name='Products- Offered Lost', sf_read_only=models.READ_ONLY, blank=True, null=True)
    products_offered_open = models.CharField(custom=True, db_column='Products_Offered_Open__c', max_length=4099, verbose_name='Products- Offered Open', sf_read_only=models.READ_ONLY, blank=True, null=True)
    services_active = models.CharField(custom=True, db_column='Services_Active__c', max_length=4099, verbose_name='Services - Active', sf_read_only=models.READ_ONLY, choices=[('401k-Admin Only', '401k-Admin Only'), ('401k-Power401k', '401k-Power401k'), ('Abra Suite', 'Abra Suite'), ('Abra Sync', 'Abra Sync'), ('ACA Compliance', 'ACA Compliance'), ('allCompliance PEPM Charge', 'allCompliance PEPM Charge'), ('Compliance Posters (Biweekly)', 'Compliance Posters (Biweekly)'), ('Compliance Posters (Semimonthly)', 'Compliance Posters (Semimonthly)'), ('Compliance Posters (Weekly)', 'Compliance Posters (Weekly)'), ('Compupay 125', 'Compupay 125'), ('Deferred Comp', 'Deferred Comp'), ('Direct Deposit', 'Direct Deposit'), ('ESS', 'ESS'), ('FSA', 'FSA'), ('General Ledger', 'General Ledger'), ('GL Interface-Add-on to Basic', 'GL Interface-Add-on to Basic'), ('HR Manager Helpline', 'HR Manager Helpline'), ('HR360', 'HR360'), ('HRFocus 500 Installation Fee', 'HRFocus 500 Installation Fee'), ('HRFocus Hardware', 'HRFocus Hardware'), ('HRIntegrations', 'HRIntegrations'), ('HRIS-HR Online - 3rd party', 'HRIS-HR Online - 3rd party'), ('HRIS-Sage HRMS', 'HRIS-Sage HRMS'), ('HRO to CPO', 'HRO to CPO'), ('HROnline', 'HROnline'), ('Manager Helpline', 'Manager Helpline'), ('Manager Helpline (Biweekly)', 'Manager Helpline (Biweekly)'), ('Manager Helpline (Monthly)', 'Manager Helpline (Monthly)'), ('Manager Helpline (Semimonthly)', 'Manager Helpline (Semimonthly)'), ('Manager Self Service', 'Manager Self Service'), ('NY SDI Admin', 'NY SDI Admin'), ('One Pay', 'One Pay'), ('OnePay Check Service-Base Setup', 'OnePay Check Service-Base Setup'), ('PayAgent', 'PayAgent'), ('Payroll Base Fee', 'Payroll Base Fee'), ('Payroll Cards (P-Cards)-PayOptions Card', 'Payroll Cards (P-Cards)-PayOptions Card'), ('Poster E-Update Service', 'Poster E-Update Service'), ('Restaurant Svc Pack + Avero (Monthly)', 'Restaurant Svc Pack + Avero (Monthly)'), ('Restaurant Svc Pack + Avero (Weekly)', 'Restaurant Svc Pack + Avero (Weekly)'), ('SAGE ESS', 'SAGE ESS'), ('Section 125', 'Section 125'), ('Section 132', 'Section 132'), ('Tax Filing', 'Tax Filing'), ('Time & Attendance-CompuPay Time', 'Time & Attendance-CompuPay Time'), ('TimeFocus', 'TimeFocus'), ('TippedReporting', 'TippedReporting'), ('Worker Comp', 'Worker Comp'), ('Workers Compensation Report', 'Workers Compensation Report')], blank=True, null=True)
    services_inactive = models.CharField(custom=True, db_column='Services_Inactive__c', max_length=4099, verbose_name='Services - Inactive', sf_read_only=models.READ_ONLY, choices=[('401k-Admin Only', '401k-Admin Only'), ('401k-Power401k', '401k-Power401k'), ('Abra Suite', 'Abra Suite'), ('Abra Sync', 'Abra Sync'), ('ACA Compliance', 'ACA Compliance'), ('allCompliance PEPM Charge', 'allCompliance PEPM Charge'), ('Compliance Posters (Biweekly)', 'Compliance Posters (Biweekly)'), ('Compliance Posters (Semimonthly)', 'Compliance Posters (Semimonthly)'), ('Compliance Posters (Weekly)', 'Compliance Posters (Weekly)'), ('Compupay 125', 'Compupay 125'), ('Deferred Comp', 'Deferred Comp'), ('Direct Deposit', 'Direct Deposit'), ('ESS', 'ESS'), ('FSA', 'FSA'), ('General Ledger', 'General Ledger'), ('GL Interface-Add-on to Basic', 'GL Interface-Add-on to Basic'), ('HR Manager Helpline', 'HR Manager Helpline'), ('HR360', 'HR360'), ('HRFocus 500 Installation Fee', 'HRFocus 500 Installation Fee'), ('HRFocus Hardware', 'HRFocus Hardware'), ('HRIntegrations', 'HRIntegrations'), ('HRIS-HR Online - 3rd party', 'HRIS-HR Online - 3rd party'), ('HRIS-Sage HRMS', 'HRIS-Sage HRMS'), ('HRO to CPO', 'HRO to CPO'), ('HROnline', 'HROnline'), ('Manager Helpline', 'Manager Helpline'), ('Manager Helpline (Biweekly)', 'Manager Helpline (Biweekly)'), ('Manager Helpline (Monthly)', 'Manager Helpline (Monthly)'), ('Manager Helpline (Semimonthly)', 'Manager Helpline (Semimonthly)'), ('Manager Self Service', 'Manager Self Service'), ('NY SDI Admin', 'NY SDI Admin'), ('One Pay', 'One Pay'), ('OnePay Check Service-Base Setup', 'OnePay Check Service-Base Setup'), ('PayAgent', 'PayAgent'), ('Payroll Base Fee', 'Payroll Base Fee'), ('Payroll Cards (P-Cards)-PayOptions Card', 'Payroll Cards (P-Cards)-PayOptions Card'), ('Poster E-Update Service', 'Poster E-Update Service'), ('Restaurant Svc Pack + Avero (Monthly)', 'Restaurant Svc Pack + Avero (Monthly)'), ('Restaurant Svc Pack + Avero (Weekly)', 'Restaurant Svc Pack + Avero (Weekly)'), ('SAGE ESS', 'SAGE ESS'), ('Section 125', 'Section 125'), ('Section 132', 'Section 132'), ('Tax Filing', 'Tax Filing'), ('Time & Attendance-CompuPay Time', 'Time & Attendance-CompuPay Time'), ('TimeFocus', 'TimeFocus'), ('TippedReporting', 'TippedReporting'), ('Worker Comp', 'Worker Comp'), ('Workers Compensation Report', 'Workers Compensation Report')], blank=True, null=True)
    vanilla_soft_lead = models.BooleanField(custom=True, db_column='VanillaSoft_Lead__c', verbose_name='LMT Processed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    cannabis_business = models.BooleanField(custom=True, db_column='Cannabis_Business__c', verbose_name='MRB', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    ps_scheduled_delivery_date_time_0 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_0__c', verbose_name='PS-Scheduled Delivery Date/Time 0', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_1 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_1__c', verbose_name='PS-Scheduled Delivery Date/Time 1', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_2 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_2__c', verbose_name='PS-Scheduled Delivery Date/Time 2', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_3 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_3__c', verbose_name='PS-Scheduled Delivery Date/Time 3', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_4 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_4__c', verbose_name='PS-Scheduled Delivery Date/Time 4', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_5 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_5__c', verbose_name='PS-Scheduled Delivery Date/Time 5', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_6 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_6__c', verbose_name='PS-Scheduled Delivery Date/Time 6', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_7 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_7__c', verbose_name='PS-Scheduled Delivery Date/Time 7', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_8 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_8__c', verbose_name='PS-Scheduled Delivery Date/Time 8', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_scheduled_delivery_date_time_9 = models.DateTimeField(custom=True, db_column='PS_Scheduled_Delivery_Date_Time_9__c', verbose_name='PS-Scheduled Delivery Date/Time 9', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_0 = models.CharField(custom=True, db_column='PS_Service_0__c', max_length=100, verbose_name='PS-Service 0', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_1 = models.CharField(custom=True, db_column='PS_Service_1__c', max_length=100, verbose_name='PS-Service 1', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_2 = models.CharField(custom=True, db_column='PS_Service_2__c', max_length=100, verbose_name='PS-Service 2', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_3 = models.CharField(custom=True, db_column='PS_Service_3__c', max_length=100, verbose_name='PS-Service 3', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_4 = models.CharField(custom=True, db_column='PS_Service_4__c', max_length=100, verbose_name='PS-Service 4', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_5 = models.CharField(custom=True, db_column='PS_Service_5__c', max_length=100, verbose_name='PS-Service 5', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_6 = models.CharField(custom=True, db_column='PS_Service_6__c', max_length=100, verbose_name='PS-Service 6', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_7 = models.CharField(custom=True, db_column='PS_Service_7__c', max_length=100, verbose_name='PS-Service 7', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_8 = models.CharField(custom=True, db_column='PS_Service_8__c', max_length=100, verbose_name='PS-Service 8', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_service_9 = models.CharField(custom=True, db_column='PS_Service_9__c', max_length=100, verbose_name='PS-Service 9', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_0 = models.CharField(custom=True, db_column='PS_Ship_To_Address_0__c', max_length=255, verbose_name='PS-Ship To Address 0', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_1 = models.CharField(custom=True, db_column='PS_Ship_To_Address_1__c', max_length=255, verbose_name='PS-Ship To Address 1', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_2 = models.CharField(custom=True, db_column='PS_Ship_To_Address_2__c', max_length=255, verbose_name='PS-Ship To Address 2', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_3 = models.CharField(custom=True, db_column='PS_Ship_To_Address_3__c', max_length=255, verbose_name='PS-Ship To Address 3', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_4 = models.CharField(custom=True, db_column='PS_Ship_To_Address_4__c', max_length=255, verbose_name='PS-Ship To Address 4', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_5 = models.CharField(custom=True, db_column='PS_Ship_To_Address_5__c', max_length=255, verbose_name='PS-Ship To Address 5', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_6 = models.CharField(custom=True, db_column='PS_Ship_To_Address_6__c', max_length=255, verbose_name='PS-Ship To Address 6', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_7 = models.CharField(custom=True, db_column='PS_Ship_To_Address_7__c', max_length=255, verbose_name='PS-Ship To Address 7', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_8 = models.CharField(custom=True, db_column='PS_Ship_To_Address_8__c', max_length=255, verbose_name='PS-Ship To Address 8', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_address_9 = models.CharField(custom=True, db_column='PS_Ship_To_Address_9__c', max_length=255, verbose_name='PS-Ship To Address 9', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_0 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_0__c', max_length=100, verbose_name='PS-Ship To Attention 0', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_1 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_1__c', max_length=100, verbose_name='PS-Ship To Attention 1', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_2 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_2__c', max_length=100, verbose_name='PS-Ship To Attention 2', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_3 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_3__c', max_length=100, verbose_name='PS-Ship To Attention 3', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_4 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_4__c', max_length=100, verbose_name='PS-Ship To Attention 4', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_5 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_5__c', max_length=100, verbose_name='PS-Ship To Attention 5', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_6 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_6__c', max_length=100, verbose_name='PS-Ship To Attention 6', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_7 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_7__c', max_length=100, verbose_name='PS-Ship To Attention 7', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_8 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_8__c', max_length=100, verbose_name='PS-Ship To Attention 8', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_ship_to_attention_9 = models.CharField(custom=True, db_column='PS_Ship_To_Attention_9__c', max_length=100, verbose_name='PS-Ship To Attention 9', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_0 = models.CharField(custom=True, db_column='PS_Tracking_Number_0__c', max_length=100, verbose_name='PS-Tracking Number 0', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_1 = models.CharField(custom=True, db_column='PS_Tracking_Number_1__c', max_length=100, verbose_name='PS-Tracking Number 1', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_2 = models.CharField(custom=True, db_column='PS_Tracking_Number_2__c', max_length=100, verbose_name='PS-Tracking Number 2', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_3 = models.CharField(custom=True, db_column='PS_Tracking_Number_3__c', max_length=100, verbose_name='PS-Tracking Number 3', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_4 = models.CharField(custom=True, db_column='PS_Tracking_Number_4__c', max_length=100, verbose_name='PS-Tracking Number 4', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_5 = models.CharField(custom=True, db_column='PS_Tracking_Number_5__c', max_length=100, verbose_name='PS-Tracking Number 5', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_6 = models.CharField(custom=True, db_column='PS_Tracking_Number_6__c', max_length=100, verbose_name='PS-Tracking Number 6', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_7 = models.CharField(custom=True, db_column='PS_Tracking_Number_7__c', max_length=100, verbose_name='PS-Tracking Number 7', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_8 = models.CharField(custom=True, db_column='PS_Tracking_Number_8__c', max_length=100, verbose_name='PS-Tracking Number 8', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ps_tracking_number_9 = models.CharField(custom=True, db_column='PS_Tracking_Number_9__c', max_length=100, verbose_name='PS-Tracking Number 9', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ssn = models.CharField(custom=True, db_column='SSN__c', max_length=9, verbose_name='SSN', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ben_admin_system = models.CharField(custom=True, db_column='BenAdmin_System__c', max_length=255, verbose_name='BenAdmin System', sf_read_only=models.READ_ONLY, choices=[('EaseCentral', 'EaseCentral'), ('EmployerFocus', 'EmployerFocus'), ('EmployeeNavigator', 'EmployeeNavigator'), ('HR Focus', 'HR Focus')], blank=True, null=True)
    naics_code = models.CharField(custom=True, db_column='NAICS_Code__c', max_length=8, verbose_name='NAICS Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    marketing_engaged = models.BooleanField(custom=True, db_column='Marketing_Engaged__c', verbose_name='Marketing Engaged', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    annualized_premium = models.DecimalField(custom=True, db_column='Annualized_Premium__c', max_digits=18, decimal_places=2, verbose_name='Annualized Premium', sf_read_only=models.READ_ONLY, blank=True, null=True)
    bse_assigned = models.ForeignKey('User', models.DO_NOTHING, db_column='BSE_Assigned__c', custom=True, related_name='account_bseassigned_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    naics_description = models.CharField(custom=True, db_column='NAICS_Description__c', max_length=120, verbose_name='NAICS Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    active_assigned_dm_or_bse = models.BooleanField(custom=True, db_column='Active_Assigned_DM_or_BSE__c', verbose_name='Active Assigned DM or BSE', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    noof_attachment = models.DecimalField(custom=True, max_digits=5, decimal_places=0, verbose_name='NoofAttachment', sf_read_only=models.READ_ONLY, blank=True, null=True)
    broker_class = models.CharField(custom=True, db_column='Broker_Class__c', max_length=255, verbose_name='Broker Class', sf_read_only=models.READ_ONLY, choices=[('Active', 'Active'), ('Growth', 'Growth'), ('Inactive', 'Inactive')], blank=True, null=True)
    bws_principle_agent_agency = models.ForeignKey('self', models.DO_NOTHING, db_column='BWS_Principle_Agent_Agency__c', custom=True, related_name='account_bwsprincipleagentagency_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    hipaa_acceptance = models.BooleanField(custom=True, db_column='HIPAA_Acceptance__c', verbose_name='HIPAA Acceptance', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    hipaa_agreement = models.DateTimeField(custom=True, db_column='HIPAA_Agreement__c', verbose_name='HIPAA Agreement', sf_read_only=models.READ_ONLY, blank=True, null=True)
    contract_term_date = models.DateField(custom=True, db_column='Contract_Term_Date__c', verbose_name='Contract Term Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    do_not_contact = models.BooleanField(custom=True, db_column='Do_Not_Contact__c', verbose_name='Do Not Contact', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_administered_plan = models.BooleanField(custom=True, verbose_name='HasAdministeredPlan', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    marketing_engaged_date = models.DateField(custom=True, db_column='Marketing_Engaged_Date__c', verbose_name='Marketing Engaged Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    bank = models.CharField(custom=True, max_length=100, sf_read_only=models.READ_ONLY, blank=True, null=True)
    benefit_enrollment_date = models.DateField(custom=True, db_column='Benefit_Enrollment_Date__c', verbose_name='Benefit Enrollment Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    benefits_carrier = models.CharField(custom=True, db_column='Benefits_Carrier__c', max_length=100, verbose_name='Benefits Carrier', sf_read_only=models.READ_ONLY, blank=True, null=True)
    benefits_offered = models.CharField(custom=True, db_column='Benefits_Offered__c', max_length=4099, verbose_name='Benefits Offered', sf_read_only=models.READ_ONLY, choices=[('Medical', 'Medical'), ('Dental', 'Dental'), ('Vision', 'Vision'), ('WC', 'WC')], blank=True, null=True)
    broker2 = models.CharField(custom=True, max_length=100, verbose_name='Broker', sf_read_only=models.READ_ONLY, blank=True, null=True)
    current_hr_system = models.CharField(custom=True, db_column='Current_HR_System__c', max_length=255, verbose_name='Current HR System', sf_read_only=models.READ_ONLY, choices=[('ADP', 'ADP'), ('Ascentis', 'Ascentis'), ('Bamboo HR', 'Bamboo HR'), ('Epicor', 'Epicor'), ('Kronos', 'Kronos'), ('Optimum Employer Solutions', 'Optimum Employer Solutions'), ('Oracle', 'Oracle'), ('Other', 'Other'), ('Paychex', 'Paychex'), ('Paycor', 'Paycor'), ('Paylocity', 'Paylocity'), ('PeopleSoft', 'PeopleSoft'), ('Proliant', 'Proliant'), ('Sage', 'Sage'), ('Ultimate Software', 'Ultimate Software'), ('Zenefits', 'Zenefits')], blank=True, null=True)
    current_time_system = models.CharField(custom=True, db_column='Current_Time_System__c', max_length=255, verbose_name='Current Time System', sf_read_only=models.READ_ONLY, choices=[('Avero', 'Avero'), ('CTR/NY', 'CTR/NY'), ('HRFocus', 'HRFocus'), ('Insperity', 'Insperity'), ('iSolved Time', 'iSolved Time'), ('Kronos', 'Kronos'), ('Other', 'Other'), ('SwipeClock', 'SwipeClock'), ('TimeFocus', 'TimeFocus')], blank=True, null=True)
    wc_carrier = models.CharField(custom=True, db_column='WC_Carrier__c', max_length=100, verbose_name='WC Carrier', sf_read_only=models.READ_ONLY, blank=True, null=True)
    wc_renewal_date = models.DateField(custom=True, db_column='WC_Renewal_Date__c', verbose_name='WC Renewal Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    accountant = models.CharField(custom=True, max_length=100, sf_read_only=models.READ_ONLY, blank=True, null=True)
    days_since_last_bfits_nb_case_created = models.DecimalField(custom=True, db_column='Days_Since_Last_Bfits_NB_Case_Created__c', max_digits=18, decimal_places=0, verbose_name='Days Since Last Bfits NB Case Created', sf_read_only=models.READ_ONLY, blank=True, null=True)
    days_since_last_oppty_modified = models.DecimalField(custom=True, db_column='Days_Since_Last_Oppty_Modified__c', max_digits=18, decimal_places=0, verbose_name='Days Since Last Oppty Modified', sf_read_only=models.READ_ONLY, blank=True, null=True)
    days_since_last_task_completed = models.DecimalField(custom=True, db_column='Days_Since_Last_Task_Completed__c', max_digits=18, decimal_places=0, verbose_name='Days Since Last Task Completed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_bfits_nb_case_created = models.DateField(custom=True, db_column='Last_Bfits_NB_Case_Created__c', verbose_name='Last Bfits NB Case Created', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_oppty_modified = models.DateField(custom=True, db_column='Last_Oppty_Modified__c', verbose_name='Last Oppty Modified', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_task_completed = models.DateField(custom=True, db_column='Last_Task_Completed__c', verbose_name='Last Task Completed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ben_admin_integrated = models.BooleanField(custom=True, db_column='BenAdmin_Integrated__c', verbose_name='BenAdmin Integrated', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    inquisium_descriptor = models.CharField(custom=True, db_column='Inquisium_Descriptor__c', max_length=1300, verbose_name='Inquisium Descriptor', sf_read_only=models.READ_ONLY, blank=True, null=True)
    local_code = models.CharField(custom=True, db_column='Local_Code__c', max_length=255, verbose_name='Local Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    national_code = models.CharField(custom=True, db_column='National_Code__c', max_length=255, verbose_name='National Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    reason_type = models.CharField(custom=True, db_column='Reason_Type__c', max_length=1300, verbose_name='Reason Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    referral_nps = models.DecimalField(custom=True, db_column='Referral_NPS__c', max_digits=10, decimal_places=2, verbose_name='Referral NPS', sf_read_only=models.READ_ONLY, blank=True, null=True)
    service_nps = models.DecimalField(custom=True, db_column='Service_NPS__c', max_digits=10, decimal_places=2, verbose_name='Service NPS', sf_read_only=models.READ_ONLY, blank=True, null=True)
    bundle = models.CharField(custom=True, max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('HR Basic'), choices=[('HR Basic', 'HR Basic'), ('HR Essentials', 'HR Essentials'), ('HR Enhanced', 'HR Enhanced')], blank=True, null=True)
    large_group_notifications = models.BooleanField(custom=True, db_column='Large_Group_Notifications__c', verbose_name='Large Group Notifications', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(True))
    small_group_notifications = models.BooleanField(custom=True, db_column='Small_Group_Notifications__c', verbose_name='Small Group Notifications', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(True))
    tpa_notification_email = models.EmailField(custom=True, db_column='TPA_Notification_Email__c', verbose_name='TPA Notification Email', sf_read_only=models.READ_ONLY, blank=True, null=True)
    qbdialer_close_date = models.DateTimeField(db_column='qbdialer__CloseDate__c', custom=True, verbose_name='NeuralView: Close Score Last Updated', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_close_score = models.DecimalField(db_column='qbdialer__CloseScore__c', custom=True, max_digits=9, decimal_places=5, verbose_name='NeuralView: Close Score', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_dials = models.DecimalField(db_column='qbdialer__Dials__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Dials', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE, blank=True, null=True) 
    qbdialer_last_call_time = models.DateTimeField(db_column='qbdialer__LastCallTime__c', custom=True, verbose_name='Last Call Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_related_contact_dials = models.DecimalField(db_column='qbdialer__Related_Contact_Dials__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Related Contact Dials', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE, blank=True, null=True) 
    qbdialer_related_contact_last_call_time = models.DateTimeField(db_column='qbdialer__Related_Contact_LastCallTime__c', custom=True, verbose_name='Related Contact Last Call Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_response_time = models.DecimalField(db_column='qbdialer__ResponseTime__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Response Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    cascading_updates_new = models.CharField(custom=True, db_column='Cascading_Updates_New__c', max_length=255, verbose_name='Cascading Updates New', sf_read_only=models.READ_ONLY, blank=True, null=True)
    noof_files = models.DecimalField(custom=True, max_digits=5, decimal_places=0, verbose_name='NoofFiles', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE, blank=True, null=True)
    days_since_last_bfits_nb_case_closed = models.DecimalField(custom=True, db_column='Days_Since_Last_Bfits_NB_Case_Closed__c', max_digits=18, decimal_places=0, verbose_name='Days Since Last Bfits NB Case Closed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_bfits_nb_case_closed = models.DateField(custom=True, db_column='Last_Bfits_NB_Case_Closed__c', verbose_name='Last Bfits NB Case Closed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    small_group_product_types = models.CharField(custom=True, db_column='Small_Group_Product_Types__c', max_length=4099, verbose_name='Small Group Product Types', sf_read_only=models.READ_ONLY, choices=[('Dental', 'Dental'), ('Disability', 'Disability'), ('Life', 'Life'), ('Medical', 'Medical'), ('Other', 'Other'), ('Vision', 'Vision')], blank=True, null=True)
    large_group_product_types = models.CharField(custom=True, db_column='Large_Group_Product_Types__c', max_length=4099, verbose_name='Large Group Product Types', sf_read_only=models.READ_ONLY, choices=[('Dental', 'Dental'), ('Disability', 'Disability'), ('Life', 'Life'), ('Medical', 'Medical'), ('Other', 'Other'), ('Vision', 'Vision')], blank=True, null=True)
    individual_product_types = models.CharField(custom=True, db_column='Individual_Product_Types__c', max_length=4099, verbose_name='Individual Product Types', sf_read_only=models.READ_ONLY, choices=[('Dental', 'Dental'), ('Disability', 'Disability'), ('Life', 'Life'), ('Medical', 'Medical'), ('Other', 'Other'), ('Vision', 'Vision')], blank=True, null=True)
    senior_product_types = models.CharField(custom=True, db_column='Senior_Product_Types__c', max_length=4099, verbose_name='Senior Product Types', sf_read_only=models.READ_ONLY, choices=[('Annuities', 'Annuities'), ('Dental', 'Dental'), ('Final Expense', 'Final Expense'), ('First Diagnosis Cancer', 'First Diagnosis Cancer'), ('Hospital Indemnity', 'Hospital Indemnity'), ('LTC', 'LTC'), ('Medicare Advantage', 'Medicare Advantage'), ('Medicare Supplements', 'Medicare Supplements'), ('Prescription Drug Plan', 'Prescription Drug Plan'), ('Savings Card', 'Savings Card')], blank=True, null=True)
    additional_product_types = models.CharField(custom=True, db_column='Additional_Product_Types__c', max_length=4099, verbose_name='Additional Product Types', sf_read_only=models.READ_ONLY, choices=[('Discount', 'Discount'), ('EAP/Telehealth/Wellness', 'EAP/Telehealth/Wellness'), ('HSA/HRA', 'HSA/HRA'), ('International', 'International'), ('Misc.', 'Misc.'), ('Worksite', 'Worksite')], blank=True, null=True)
    stop_loss_product_types = models.CharField(custom=True, db_column='Stop_Loss_Product_Types__c', max_length=4099, verbose_name='Stop Loss Product Types', sf_read_only=models.READ_ONLY, choices=[('Aggregate Stop Loss', 'Aggregate Stop Loss'), ('Specific Stop Loss', 'Specific Stop Loss')], blank=True, null=True)
    small_group_online_quoting_states = models.CharField(custom=True, db_column='Small_Group_Online_Quoting_States__c', max_length=4099, verbose_name='Small Group Online Quoting States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    large_group_online_quoting_states = models.CharField(custom=True, db_column='Large_Group_Online_Quoting_States__c', max_length=4099, verbose_name='Large Group Online Quoting States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    individual_online_quoting_states = models.CharField(custom=True, db_column='Individual_Online_Quoting_States__c', max_length=4099, verbose_name='Individual Online Quoting States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    stop_loss_online_quoting_states = models.CharField(custom=True, db_column='Stop_Loss_Online_Quoting_States__c', max_length=4099, verbose_name='Stop Loss Online Quoting States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    additional_online_quoting_states = models.CharField(custom=True, db_column='Additional_Online_Quoting_States__c', max_length=4099, verbose_name='Additional Online Quoting States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    senior_online_quoting_states = models.CharField(custom=True, db_column='Senior_Online_Quoting_States__c', max_length=4099, verbose_name='Senior Online Quoting States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    small_group_product_states = models.CharField(custom=True, db_column='Small_Group_Product_States__c', max_length=4099, verbose_name='Small Group Product States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    large_group_product_states = models.CharField(custom=True, db_column='Large_Group_Product_States__c', max_length=4099, verbose_name='Large Group Product States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    senior_product_states = models.CharField(custom=True, db_column='Senior_Product_States__c', max_length=4099, verbose_name='Senior Product States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    additional_product_states = models.CharField(custom=True, db_column='Additional_Product_States__c', max_length=4099, verbose_name='Additional Product States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    individual_product_states = models.CharField(custom=True, db_column='Individual_Product_States__c', max_length=4099, verbose_name='Individual Product States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    stop_loss_product_states = models.CharField(custom=True, db_column='Stop_Loss_Product_States__c', max_length=4099, verbose_name='Stop Loss Product States', sf_read_only=models.READ_ONLY, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Account'
        verbose_name = 'Account'
        verbose_name_plural = 'Accounts'
        # keyPrefix = '001'



class AccountFeed(models.Model):
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='accountfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey('ContentVersion', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='accountfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AccountFeed'
        verbose_name = 'Account Feed'
        verbose_name_plural = 'Account Feed'
        # keyPrefix = 'None'



class AccountHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    account = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    field = models.CharField(max_length=255, verbose_name='Changed Field', sf_read_only=models.READ_ONLY, choices=[('EE_w_deductions__c', '#EE w/deductions'), ('Accountant__c', 'Accountant'), ('Account_Bundle__c', 'Account Bundle'), ('Account_Classification__c', 'Account Classification'), ('Account_Executive__c', 'Account Executive'), ('Accounting_ID__c', 'Accounting ID'), ('accountMerged', 'Account Merged'), ('Name', 'Account Name'), ('TextName', 'Account Name'), ('AccountNumber', 'Account Number'), ('Owner', 'Account Owner'), ('Agent_Rank__c', 'Account Rank'), ('RecordType', 'Account Record Type'), ('Site', 'Account Site'), ('AccountSource', 'Account Source'), ('Additional_Online_Quoting_States__c', 'Additional Online Quoting States'), ('Additional_Product_States__c', 'Additional Product States'), ('Additional_Product_Types__c', 'Additional Product Types'), ('Advisory_Notice__c', 'Advisory Notice'), ('Affiliation_Type__c', 'Affiliation Type'), ('AFocus_Lead_Record_Type__c', 'AFocus_Lead Record Type'), ('AFocus_CRQS_CRC_ID__c', 'AFocus CRQS/CRC ID'), ('AFocus_Enable_CRQS_CRC__c', 'AFocus Enable CRQS & CRC'), ('AFocus_Enable_EmployerFocus__c', 'AFocus Enable EmployerFocus'), ('AFocus_Lead_Source__c', 'AFocus Lead Source'), ('AFocus_Loaded_with_Bulk_API__c', 'AFocus Loaded with Bulk API'), ('AgencyFocus_Auto_Lead_Convert__c', 'AgencyFocus Auto Lead Convert'), ('Agency_Rank_BoB_in_State__c', 'Agency Rank (BoB) in State'), ('Agency_View_Broker__c', 'Agency View Broker?'), ('AMS_ID__c', 'AMS ID'), ('AMS_Primary_Carrier__c', 'AMS Primary Carrier'), ('Annualized_Payroll_Revenue__c', 'Annualized Payroll Revenue'), ('Annualized_Premium__c', 'Annualized Premium'), ('Annualized_Premium_for_Agency_s_Agents__c', "Annualized Premium for Agency's Agents"), ('Annualized_Premium_for_Agent_Agency__c', 'Annualized Premium for Agent/Agency'), ('Annualized_Revenue_for_Agency_s_Agents__c', "Annualized Revenue for Agency's Agents"), ('Annualized_Revenue_for_Agent_Agency__c', 'Annualized Revenue for Agent/Agency'), ('AnnualRevenue', 'Annual Revenue'), ('Applications__c', 'Applications'), ('ASD_Account_Coordinator__c', 'ASD Account Coordinator'), ('ASD_Account_Executive__c', 'ASD Account Executive'), ('ASD_Attrition_Reason__c', 'ASD Attrition Reason'), ('ASD_End_Date__c', 'ASD End Date'), ('ASD_Market_Director__c', 'ASD Market Director'), ('ASD_Regional_Vice_President__c', 'ASD Regional Vice President'), ('ASD_Sales_Director__c', 'ASD Sales Director'), ('ASD_Service_Team__c', 'ASD Service Team'), ('ASD_Split__c', 'ASD Split %'), ('ASD_Start_Date__c', 'ASD Start Date'), ('ASD_Type__c', 'ASD Status'), ('Assistant_phone__c', 'Assistant phone'), ('Associated_Agents__c', 'Associated Agents'), ('At_Risk_for_Deactivation__c', 'At Risk for Deactivation'), ('Attrition_Other_Reason__c', 'Attrition Other Reason'), ('Attrition_Reason__c', 'Attrition Reason'), ('Authorized_for_PartnerFocus__c', 'Authorized for PartnerFocus'), ('AutorabitExtId__c', 'AutorabitExtId__c'), ('Is_Active_In_COPR__c', 'Available in COPR'), ('Back_Office_Partner_Code__c', 'Back Office Partner Code'), ('Bank__c', 'Bank'), ('Bankruptcy__c', 'Bankruptcy'), ('EmployerFocus_Effective_Date__c', 'BenAdmin Effective Date'), ('BenAdmin_Integrated__c', 'BenAdmin Integrated'), ('BenAdmin_Subscription_s__c', 'BenAdmin Subscription'), ('BenAdmin_System__c', 'BenAdmin System'), ('EmployerFocus_Term_Date__c', 'BenAdmin Term Date'), ('BenAdmin_Tier__c', 'BenAdmin Tier'), ('Benefit_Enrollment_Date__c', 'Benefit Enrollment Date'), ('BenefitPointID__c', 'BenefitPointID'), ('Benefits_Carrier__c', 'Benefits Carrier'), ('Benefits_Offered__c', 'Benefits Offered'), ('Billing__c', 'Billing'), ('BillingAddress', 'Billing Address'), ('BillingCity', 'Billing City'), ('Billing_Contact__c', 'Billing Contact'), ('Billing_Contact_Email__c', 'Billing Contact Email'), ('Billing_Contact_Phone__c', 'Billing Contact Phone'), ('BillingCountry', 'Billing Country'), ('BillingCountryCode', 'Billing Country Code'), ('BillingGeocodeAccuracy', 'Billing Geocode Accuracy'), ('BillingLatitude', 'Billing Latitude'), ('BillingLongitude', 'Billing Longitude'), ('BillingState', 'Billing State/Province'), ('BillingStateCode', 'Billing State/Province Code'), ('BillingStreet', 'Billing Street'), ('Billing_Type__c', 'Billing Type'), ('BillingPostalCode', 'Billing Zip/Postal Code'), ('BIP_Mkt__c', 'BIP/Mkt%'), ('BIP_End_Date__c', 'BIP End Date'), ('BIP_Name__c', 'BIP Name'), ('BIP_Start_Date__c', 'BIP Start Date'), ('BIP_Status__c', 'BIP Status'), ('Birthdate__c', 'Birthdate'), ('BMAS_ID__c', 'BMAS ID'), ('BP_Integration_Status__c', 'BP_Integration Status'), ('BP_Account_Request__c', 'BP Account Request'), ('BP_Account_Response__c', 'BP Account Response'), ('BP_Created_Date__c', 'BP Created Date'), ('BP_ID__c', 'BP ID'), ('BP_Integration_Error__c', 'BP Integration Error'), ('AFocus_BP_Last_Sync_Date_Time__c', 'BP Last Sync Date Time'), ('BP_Primary_Carrier__c', 'BP Primary Carrier'), ('Branch__c', 'Branch'), ('Broker__c', 'Broker'), ('Broker2__c', 'Broker'), ('Broker_Class__c', 'Broker Class'), ('Broker_Commission_Email__c', 'Broker Commission Email'), ('Broker_Executive__c', 'Broker Executive'), ('Broker_ID__c', 'Broker ID'), ('Broker_Partnership_Level__c', 'Broker Partnership Level'), ('Broker_Payroll_Referral_Program__c', 'Broker Payroll Referral Program'), ('Broker_Referral_Program__c', 'Broker Referral Program'), ('Broker_Workspace_Username__c', 'Broker Workspace Username'), ('BSE_Assigned__c', 'BSE Assigned'), ('BSE_Email__c', 'BSE Email'), ('BSE_First_Name__c', 'BSE First Name'), ('BSE_Last_Name__c', 'BSE Last Name'), ('BSE_Phone__c', 'BSE Phone'), ('BSE_UserId__c', 'BSE UserId'), ('BSR_Email__c', 'BSR Email'), ('BSR_First_Name__c', 'BSR First Name'), ('BSR_Last_Name__c', 'BSR Last Name'), ('BSR_Phone__c', 'BSR Phone'), ('BSR_UserId__c', 'BSR UserId'), ('Bundle__c', 'Bundle'), ('Business_Focus__c', 'Business Focus'), ('Business_Segment__c', 'Business Segment'), ('Business_Segment_old__c', 'Business Segment old'), ('Business_Type__c', 'Business Type'), ('BWS_Principle_Agent_Agency__c', 'BWS Principle Agent/Agency'), ('Carrier_Announcements__c', 'Carrier Announcements'), ('Carrier_Notes__c', 'Carrier Bonus Provision'), ('Carrier_Code__c', 'Carrier Code'), ('Carrier_Contact_Name__c', 'Carrier Contact Name'), ('Carrier_Data_Mapping__c', 'Carrier Data Mapping'), ('Carrier_Description__c', 'Carrier Description'), ('Carrier_Email__c', 'Carrier Email'), ('Carrier_Logo_URL__c', 'Carrier Logo URL'), ('Carrier_Phone__c', 'Carrier Phone'), ('Carrier_Preferences__c', 'Carrier Preferences'), ('Carrier_Rating__c', 'Carrier Rating'), ('Carrier_Rating_Classification__c', 'Carrier Rating Classification'), ('Carrier_Rating_Company_Name__c', 'Carrier Rating Company Name'), ('Carrier_Rating_Description__c', 'Carrier Rating Description'), ('Carrier_Status__c', 'Carrier Status'), ('Cascading_Updates__c', 'Cascading Updates'), ('Cascading_Updates_New__c', 'Cascading Updates New'), ('AFocus_CreatedFromCase__c', 'Case'), ('Cases_Policies_Renewals__c', 'Cases / Policies Renewals'), ('Client_Code__c', 'Client Code'), ('Client_Contact_Title__c', 'Client Contact Title'), ('Client_ID__c', 'Client ID'), ('Client_Notification_Opt_Out__c', 'Client Notification Opt-Out'), ('Client_Notification_Override__c', 'Client Notification Override'), ('Client_Volume__c', 'Client Volume'), ('Comments__c', 'Comments'), ('Commission_Rate_Dollar_Amt__c', 'Commission Rate/Dollar Amt'), ('Complexity_Indicator__c', 'Complexity Indicator'), ('Consolidate__c', 'Consolidate'), ('Current_Contact__c', 'Contact'), ('Contact_Email__c', 'Contact Email'), ('Contact_First_Name__c', 'Contact First Name'), ('Contact_Last_Name__c', 'Contact Last Name'), ('Contact_Phone__c', 'Contact Phone'), ('Contact_UserId__c', 'Contact UserId'), ('Contracted_Pricing_Schedule__c', 'Contracted Pricing Schedule'), ('Contracted_Products__c', 'Contracted Products'), ('Contracted_State__c', 'Contracted State'), ('Contract_Entrance_Date__c', 'Contract Entrance Date'), ('Contract_Limitations__c', 'Contract Limitations'), ('Contract_Number__c', 'Contract Number'), ('Contract_Status__c', 'Contract Status'), ('Contract_Term_Date__c', 'Contract Term Date'), ('Convert_Record_Type__c', 'Convert Record Type'), ('Corporate_City__c', 'Corporate City'), ('Corporate_Name__c', 'Corporate Name'), ('Corporate_State_Province__c', 'Corporate State/Province'), ('Corporate_Street__c', 'Corporate Street'), ('Corporate_Zip_Postal_Code__c', 'Corporate Zip/Postal Code'), ('County__c', 'County'), ('Coverage__c', 'Coverage'), ('CPD_BSE__c', 'CPD BSE'), ('created', 'Created.'), ('accountCreatedFromLead', 'Created by lead convert'), ('Cross_Sell_Account__c', 'Cross-Sell Account'), ('CRQS_Quote_Proposals__c', 'CRQS Quote Proposals'), ('CS_Team__c', 'CS Team'), ('Current_HR_System__c', 'Current HR System'), ('Current_Payroll_Provider__c', 'Current Payroll Provider'), ('Current_Time_System__c', 'Current Time System'), ('Current_Year_Sales__c', 'Current Year Sales'), ('Jigsaw', 'Data.com Key'), ('Data_com_NAICS__c', 'Data.com NAICS'), ('Data_com_NAICS_Description__c', 'Data.com NAICS Description'), ('Data_com_SIC_c__c', 'Data.com SIC'), ('Data_com_SIC_Description__c', 'Data.com SIC Description'), ('Location__c', 'Data Location'), ('Date_Authorized_for_PartnerFocus__c', 'Date Authorized for PartnerFocus'), ('Date_of_Direct_Deposit__c', 'Date of Direct Deposit'), ('Date_of_First_Payroll__c', 'Date of First Payroll'), ('DBA__c', 'DBA'), ('Department__c', 'Department'), ('Deprecated_SSN__c', 'Deprecated SSN'), ('Description', 'Description'), ('qbdialer__Dials__c', 'Dials'), ('Direct_Deposit__c', 'Direct Deposit'), ('Direct_Deposit_ACH_Term__c', 'Direct Deposit ACH Term'), ('Disable_Web_Access__c', 'Disable Web Access'), ('Display_End_Date__c', 'Display End Date'), ('Display_End_Time__c', 'Display End Time'), ('Display_Start_Date__c', 'Display Start Date'), ('Display_Start_Time__c', 'Display Start Time'), ('DM_Assigned__c', 'DM Assigned'), ('DM_Engagement_Status__c', 'DM Engagement Status'), ('DNS_Trigger__c', 'DNS_Trigger'), ('Do_Not_Contact__c', 'Do Not Contact'), ('Do_Not_Sell__c', 'Do Not Sell'), ('DUNS_Number__c', 'DUNS Number'), ('EC_Annual_Subscription_Fee__c', 'EC Annual Subscription Fee'), ('EC_Subscription_Start_Date__c', 'EC Subscription Start Date'), ('EC_Subscription_Term_Date__c', 'EC Subscription Term Date'), ('AFocus_Most_Recent_Effective_Date__c', 'Effective Date'), ('EF_Fee_Waived__c', 'EF Fee Waived'), ('EF_Subscription_Start_Date__c', 'EF Subscription Start Date'), ('EF_Subscription_Term_Date__c', 'EF Subscription Term Date'), ('EIN__c', 'EIN'), ('Email__c', 'Email'), ('NumberOfEmployees', 'Employees'), ('EmployerFocus_Start_Date__c', 'EmployerFocus Start Date'), ('Enable_OBMS_Website_Link__c', 'Enable EmployerFocus Access'), ('EN_Annual_Subscription_Fee__c', 'EN Annual Subscription Fee'), ('End_Date__c', 'End Date'), ('EN_Subscription_Start_Date__c', 'EN Subscription Start Date'), ('EN_Subscription_Term_Date__c', 'EN Subscription Term Date'), ('Enterprise__c', 'Enterprise'), ('Entitlement_Program__c', 'Entitlement Program'), ('Epic_Last_Modified_Date__c', 'Epic Last Modified Date'), ('Events_Invitations__c', 'Events Invitations'), ('Exchange__c', 'Exchange'), ('Extension__c', 'Extension'), ('Fax', 'Fax'), ('feedEvent', 'Feed event'), ('FFM__c', 'FFM#'), ('File_Thru_Date__c', 'File Thru Date'), ('Financial_Stress_Score_Percentile__c', 'Financial Stress Score Percentile'), ('First_Meeting_Completed__c', 'First Meeting Completed'), ('First_Name__c', 'First Name'), ('First_Payroll_of_Transactions__c', 'First Payroll # of Transactions'), ('Frequency_of_Payroll__c', 'Frequency of Payroll'), ('FT_Employees_Count_Last_Updated__c', 'FT Employees Count Last Updated'), ('GA_or_Fee__c', 'GA or Fee'), ('General_Communication_Preference__c', 'General Communication Preference'), ('HasAdministeredPlan__c', 'HasAdministeredPlan'), ('Health_Deductions__c', 'Health Deductions'), ('High_Visibility__c', 'High Visibility'), ('HIPAA_Acceptance__c', 'HIPAA Acceptance'), ('HIPAA_Agreement__c', 'HIPAA Agreement'), ('Home_phone__c', 'Home phone'), ('IBAS_Division_ID__c', 'IBAS Division ID'), ('IBAS_ID__c', 'IBAS ID'), ('Implementation_Fee__c', 'Implementation Fee'), ('individualMerged', 'Individual Merged'), ('Individual_Online_Quoting_States__c', 'Individual Online Quoting States'), ('Individual_Product_States__c', 'Individual Product States'), ('Individual_Product_Types__c', 'Individual Product Types'), ('Industry', 'Industry'), ('Inherit_Account_Team__c', 'Inherit Account Team'), ('Inherit_ASD_Acct_Team__c', 'Inherit ASD Fields'), ('Inherit_EF_Subscription_Fields__c', 'Inherit BenAdmin Subscription Fields'), ('Insurance_Types__c', 'Insurance Types'), ('Integrated_Account__c', 'Integrated Account'), ('Integrated_Benefits_Administration__c', 'Integrated Benefits Administration'), ('Integrated_End_Date__c', 'Integrated End Date'), ('Integrated_Start_Date__c', 'Integrated Start Date'), ('Internal_BD_Restrictions__c', 'Internal BD Restrictions'), ('Is_Account_Team_Updated__c', 'Is Account Team Updated'), ('Affiliate__c', 'Is Affiliate'), ('Is_Cascading_Batch_Error__c', 'Is Cascading Batch Error'), ('IsLeadConvert__c', 'IsLeadConvert'), ('Issued__c', 'Issued'), ('Large_Group_Notifications__c', 'Large Group Notifications'), ('Large_Group_Online_Quoting_States__c', 'Large Group Online Quoting States'), ('Large_Group_Product_States__c', 'Large Group Product States'), ('Large_Group_Product_Types__c', 'Large Group Product Types'), ('Last_allCompliance_Demo__c', 'Last allCompliance Demo'), ('Last_Bfits_NB_Case_Closed__c', 'Last Bfits NB Case Closed'), ('Last_Bfits_NB_Case_Created__c', 'Last Bfits NB Case Created'), ('qbdialer__LastCallTime__c', 'Last Call Time'), ('Last_Check_Date__c', 'Last Check Date'), ('Last_HRFocus_Demo__c', 'Last HRFocus Demo'), ('Last_Name__c', 'Last Name'), ('Last_NSF_Date__c', 'Last NSF Date'), ('Last_Oppty_Modified__c', 'Last Oppty Modified'), ('Last_Process_Date__c', 'Last Process Date'), ('LastSentToBPTime__c', 'LastSentToBPTime\xa0'), ('Last_Task_Completed__c', 'Last Task Completed'), ('Last_TimeFocus_Demo__c', 'Last TimeFocus Demo'), ('Lead_Agency__c', 'Lead Agency'), ('accountUpdatedByLead', 'Lead converted to Account'), ('personAccountUpdatedByLead', 'Lead converted to Person Account'), ('Lead_Referral_Date__c', 'Lead Referral Date'), ('Lead_Referral_ID__c', 'Lead Referral ID'), ('Legacy_ID__c', 'Legacy ID'), ('Legislative_Corporate_Announcements__c', 'Legislative / Corporate Announcements'), ('License_Verified__c', 'License Verified?'), ('License_Verified_States__c', 'License Verified States'), ('Lines_of_Coverage__c', 'Lines of Coverage'), ('VanillaSoft_Lead__c', 'LMT Processed'), ('Local_Code__c', 'Local Code'), ('Loss_Notes__c', 'Loss Notes'), ('Loss_Reason__c', 'Loss Reason'), ('Mailing_City__c', 'Mailing City'), ('Mailing_Country__c', 'Mailing Country'), ('Mailing_Postal_Code__c', 'Mailing Postal Code'), ('Mailing_State_Province__c', 'Mailing State/Province'), ('Mailing_Street__c', 'Mailing Street'), ('sma__MAAssignmentRule__c', 'MapAnything Assignment Rule'), ('Market_Benefit__c', 'Market (Benefit)'), ('Market_Director_Email__c', 'Market Director Email'), ('Market_Director_First_Name__c', 'Market Director First Name'), ('Market_Director_Last_Name__c', 'Market Director Last Name'), ('Current_MD_or_Admin__c', 'Market Director or Admin'), ('Market_Director_or_Admin_BPID__c', 'Market Director or Admin BPID'), ('Market_Director_Phone__c', 'Market Director Phone'), ('Market_Director_UserId__c', 'Market Director UserId'), ('Marketing_Engaged__c', 'Marketing Engaged'), ('Marketing_Engaged_Date__c', 'Marketing Engaged Date'), ('Market_Segment__c', 'Market Segment'), ('Maximum_Discount_Allowable__c', 'Maximum Discount Allowable'), ('Medicare_Number__c', 'Medicare Number'), ('Middle_Name__c', 'Middle Name'), ('Migration_Flag__c', 'Migration Flag'), ('Mobile__c', 'Mobile'), ('Text_Notification_Mobile__c', 'Mobile Number for Text Notification'), ('Cannabis_Business__c', 'MRB'), ('NAICS_Code__c', 'NAICS Code'), ('NAICS_Description__c', 'NAICS Description'), ('National_Code__c', 'National Code'), ('National_Producer__c', 'National Producer #'), ('qbdialer__CloseScore__c', 'NeuralView: Close Score'), ('qbdialer__CloseDate__c', 'NeuralView: Close Score Last Updated'), ('New_Existing_Broker__c', 'New/Existing Broker'), ('New_Existing_Client__c', 'New/Existing Client'), ('New_Documents_Availability__c', 'New Documents Availability'), ('New_Method__c', 'New Method'), ('New_Provider__c', 'New Provider'), ('Newsletters__c', 'Newsletters'), ('Next_Check_Date__c', 'Next Check Date'), ('Next_Schedule_Date__c', 'Next Schedule Date'), ('NoofAttachment__c', 'NoofAttachment'), ('NoofFiles__c', 'NoofFiles'), ('NPN__c', 'NPN#'), ('NSF_Count__c', 'NSF Count'), ('Number_of_FT_Employees__c', 'Number of FT Employees'), ('Number_Of_Full_Time_Equivalents__c', 'Number Of Full Time Equivalents'), ('Number_Of_Full_Time_Equivalents_AsOfDate__c', 'Number Of Full Time Equivalents AsOfDate'), ('Number_of_Lives__c', 'Number of Lives'), ('INQ__NumberofLocations__c', 'Number of Locations'), ('Office__c', 'Office'), ('Office_Benefit__c', 'Office (Benefit)'), ('Afocus_Office_Id__c', 'Office Id'), ('Officer__c', 'Officer'), ('Old_Client_Number__c', 'Old Client Number'), ('Primary_BSE__c', 'OLD Current BSE'), ('Primary_BSR__c', 'OLD Current BSR'), ('Primary_NBA__c', 'OLD Current Contact'), ('Market_Director__c', 'OLD Current Market Director or Admin'), ('Old_Data_Location__c', 'Old Data Location'), ('Old_Date_of_First_Payroll__c', 'Old Date of First Payroll'), ('Old_PID__c', 'Old PIID'), ('Old_Service_Location__c', 'Old Service Location'), ('Old_Service_Rep__c', 'Old Source Rep'), ('Old_Source_System__c', 'Old Source System'), ('Original_BSE2__c', 'Original BSE'), ('Original_BSR2__c', 'Original BSR'), ('Original_Contact2__c', 'Original Contact'), ('Original_Date_of_First_Payroll__c', 'Original Date of First Payroll'), ('Original_MD_or_Admin__c', 'Original Market Director or Admin'), ('OSP_Comments__c', 'OSP Comments'), ('OSP_Review_Required__c', 'OSP Review Required'), ('Other_New_Method__c', 'Other New Method'), ('Other_New_Provider__c', 'Other New Provider'), ('Other_Phone__c', 'Other Phone'), ('Outsourced_Partner__c', 'Outsourced Partner'), ('ownerAccepted', 'Owner (Accepted)'), ('ownerAssignment', 'Owner (Assignment)'), ('Ownership', 'Ownership'), ('PAM_CPO_Partner_Code__c', 'PAM/CPO Partner Code'), ('Parent', 'Parent Account'), ('Partner_Category__c', 'Partner Category'), ('Partner_CoBranding__c', 'Partner Co-Branding'), ('Partner_Code__c', 'Partner Code'), ('PartnerFocus_Access_End_Date__c', 'PartnerFocus Access End Date'), ('PartnerFocus_Email_Notif_Opt_Out__c', 'PartnerFocus Email Notif Opt-Out'), ('PartnerFocus_Trial__c', 'PartnerFocus Trial'), ('Partner_Subcategory__c', 'Partner Subcategory'), ('Partner_Type__c', 'Partner Type'), ('Pay_Agency__c', 'Pay Agency'), ('Paydex_Score__c', 'Paydex Score'), ('PayFocus_HR_features__c', 'PayFocus HR features'), ('Payment_Schedule__c', 'Payment Schedule'), ('Payroll_Specialist__c', 'Payroll Specialist'), ('Payroll_URL__c', 'Payroll URL'), ('PEO_BSE__c', 'PEO BSE'), ('PeopleFocus__c', 'PeopleFocus'), ('PeopleFocus_Effective_Date__c', 'PeopleFocus Effective Date'), ('PeopleFocus_Term_Date__c', 'PeopleFocus Term Date'), ('Phone', 'Phone'), ('Platform_Created_Date__c', 'Platform Created Date'), ('PlatformIntegrationID__c', 'PlatformIntegrationID'), ('Preferred_Marketing_Method__c', 'Preferred Marketing Method'), ('Preferred_Name__c', 'Preferred Name'), ('Preferred_Quote_Delivery_Method__c', 'Preferred Quote Delivery Method'), ('Premium__c', 'Premium'), ('Previous_Provider__c', 'Previous Provider'), ('Primary_BSE_BPID__c', 'Primary BSE BPID'), ('Primary_BSR_BPID__c', 'Primary BSR BPID'), ('Primary_Contact_BPID__c', 'Primary Contact BPID'), ('Primary_Partner__c', 'Primary Partner'), ('Primary_Partner_Type__c', 'Primary Partner Type'), ('Primary_State_of_Residence__c', 'Primary State of Business'), ('Print_Location__c', 'Print Location'), ('Prior_Platform_Id__c', 'Prior Client Code'), ('Processing_Deadline__c', 'Processing Deadline'), ('Processing_Discount__c', 'Processing Discount'), ('Processing_Type__c', 'Processing Type'), ('Product_Lines_of_Interest__c', 'Product Lines of Interest'), ('Product_of_Interest__c', 'Product of Interest'), ('Products__c', 'Products'), ('Products_Offered_Lost__c', 'Products- Offered Lost'), ('Products_Offered_Open__c', 'Products- Offered Open'), ('Products_Offered_Won__c', 'Products- Offered Won'), ('Promotions__c', 'Promotions'), ('PS_Scheduled_Delivery_Date_Time_0__c', 'PS-Scheduled Delivery Date/Time 0'), ('PS_Scheduled_Delivery_Date_Time_1__c', 'PS-Scheduled Delivery Date/Time 1'), ('PS_Scheduled_Delivery_Date_Time_2__c', 'PS-Scheduled Delivery Date/Time 2'), ('PS_Scheduled_Delivery_Date_Time_3__c', 'PS-Scheduled Delivery Date/Time 3'), ('PS_Scheduled_Delivery_Date_Time_4__c', 'PS-Scheduled Delivery Date/Time 4'), ('PS_Scheduled_Delivery_Date_Time_5__c', 'PS-Scheduled Delivery Date/Time 5'), ('PS_Scheduled_Delivery_Date_Time_6__c', 'PS-Scheduled Delivery Date/Time 6'), ('PS_Scheduled_Delivery_Date_Time_7__c', 'PS-Scheduled Delivery Date/Time 7'), ('PS_Scheduled_Delivery_Date_Time_8__c', 'PS-Scheduled Delivery Date/Time 8'), ('PS_Scheduled_Delivery_Date_Time_9__c', 'PS-Scheduled Delivery Date/Time 9'), ('PS_Service_0__c', 'PS-Service 0'), ('PS_Service_1__c', 'PS-Service 1'), ('PS_Service_2__c', 'PS-Service 2'), ('PS_Service_3__c', 'PS-Service 3'), ('PS_Service_4__c', 'PS-Service 4'), ('PS_Service_5__c', 'PS-Service 5'), ('PS_Service_6__c', 'PS-Service 6'), ('PS_Service_7__c', 'PS-Service 7'), ('PS_Service_8__c', 'PS-Service 8'), ('PS_Service_9__c', 'PS-Service 9'), ('PS_Ship_To_Address_0__c', 'PS-Ship To Address 0'), ('PS_Ship_To_Address_1__c', 'PS-Ship To Address 1'), ('PS_Ship_To_Address_2__c', 'PS-Ship To Address 2'), ('PS_Ship_To_Address_3__c', 'PS-Ship To Address 3'), ('PS_Ship_To_Address_4__c', 'PS-Ship To Address 4'), ('PS_Ship_To_Address_5__c', 'PS-Ship To Address 5'), ('PS_Ship_To_Address_6__c', 'PS-Ship To Address 6'), ('PS_Ship_To_Address_7__c', 'PS-Ship To Address 7'), ('PS_Ship_To_Address_8__c', 'PS-Ship To Address 8'), ('PS_Ship_To_Address_9__c', 'PS-Ship To Address 9'), ('PS_Ship_To_Attention_0__c', 'PS-Ship To Attention 0'), ('PS_Ship_To_Attention_1__c', 'PS-Ship To Attention 1'), ('PS_Ship_To_Attention_2__c', 'PS-Ship To Attention 2'), ('PS_Ship_To_Attention_3__c', 'PS-Ship To Attention 3'), ('PS_Ship_To_Attention_4__c', 'PS-Ship To Attention 4'), ('PS_Ship_To_Attention_5__c', 'PS-Ship To Attention 5'), ('PS_Ship_To_Attention_6__c', 'PS-Ship To Attention 6'), ('PS_Ship_To_Attention_7__c', 'PS-Ship To Attention 7'), ('PS_Ship_To_Attention_8__c', 'PS-Ship To Attention 8'), ('PS_Ship_To_Attention_9__c', 'PS-Ship To Attention 9'), ('PS_Tracking_Number_0__c', 'PS-Tracking Number 0'), ('PS_Tracking_Number_1__c', 'PS-Tracking Number 1'), ('PS_Tracking_Number_2__c', 'PS-Tracking Number 2'), ('PS_Tracking_Number_3__c', 'PS-Tracking Number 3'), ('PS_Tracking_Number_4__c', 'PS-Tracking Number 4'), ('PS_Tracking_Number_5__c', 'PS-Tracking Number 5'), ('PS_Tracking_Number_6__c', 'PS-Tracking Number 6'), ('PS_Tracking_Number_7__c', 'PS-Tracking Number 7'), ('PS_Tracking_Number_8__c', 'PS-Tracking Number 8'), ('PS_Tracking_Number_9__c', 'PS-Tracking Number 9'), ('Quarter_End_Hold__c', 'Quarter End Hold'), ('Quoting_Proposal_Preferences__c', 'Quoting & Proposal Preferences'), ('QuotIT_Broker_ID__c', 'QuotIT Broker ID'), ('Rating', 'Rating'), ('Rating_Date__c', 'Rating Date'), ('Reciprocal_Referral__c', 'Reciprocal Referral'), ('Reciprocal_Referral_Checked__c', 'Reciprocal Referral Checked'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('Referral_NPS__c', 'Referral NPS'), ('Referred_Products__c', 'Referred Products'), ('Referrer_Email__c', 'Referrer Email'), ('Referrer_ID__c', 'Referrer ID'), ('Referrer_Name__c', 'Referrer Name'), ('Referrer_Other__c', 'Referrer Other'), ('Referrer_Phone__c', 'Referrer Phone'), ('Referring_Employee__c', 'Referring Employee'), ('Region__c', 'Region'), ('Region_Benefit__c', 'Region (Benefit)'), ('qbdialer__Related_Contact_Dials__c', 'Related Contact Dials'), ('qbdialer__Related_Contact_LastCallTime__c', 'Related Contact Last Call Time'), ('Renewal__c', 'Renewal'), ('AFocus_Earliest_Renewal_Date__c', 'Renewal Date'), ('Requested_Level_of_Access__c', 'Requested Level of Access'), ('Resend_Email__c', 'Resend Email'), ('qbdialer__ResponseTime__c', 'Response Time'), ('Retail_Broker__c', 'Retail Broker'), ('Revenue_Share_Percentage__c', 'Revenue Share Percentage'), ('Reverse_Integration_Error__c', 'Reverse Integration Error'), ('Current_BSE__c', 'Sales Executive'), ('Current_BSR__c', 'Sales Representative'), ('Schedule_Day__c', 'Schedule Day'), ('Secondary_Partner__c', 'Secondary Partner'), ('Secondary_Partner_Type__c', 'Secondary Partner Type'), ('Security_Line_of_Business__c', 'Security Line of Business'), ('Selling_Line_of_Business__c', 'Selling Line of Business'), ('Selling_Status__c', 'Selling Status'), ('Send_to_ICM__c', 'Send to ICM'), ('Senior_Online_Quoting_States__c', 'Senior Online Quoting States'), ('Senior_Product_States__c', 'Senior Product States'), ('Senior_Product_Types__c', 'Senior Product Types'), ('Service_Location__c', 'Service Location'), ('Service_NPS__c', 'Service NPS'), ('Services_Active__c', 'Services - Active'), ('Services_with_Vendor__c', 'Services for Marketo'), ('Services_Inactive__c', 'Services - Inactive'), ('SFI_ID__c', 'SFI_ID'), ('Shipment_Date__c', 'Shipment Date'), ('ShippingAddress', 'Shipping Address'), ('ShippingCity', 'Shipping City'), ('ShippingCountry', 'Shipping Country'), ('ShippingCountryCode', 'Shipping Country Code'), ('ShippingGeocodeAccuracy', 'Shipping Geocode Accuracy'), ('ShippingLatitude', 'Shipping Latitude'), ('ShippingLongitude', 'Shipping Longitude'), ('ShippingState', 'Shipping State/Province'), ('ShippingStateCode', 'Shipping State/Province Code'), ('ShippingStreet', 'Shipping Street'), ('ShippingPostalCode', 'Shipping Zip/Postal Code'), ('Sic', 'SIC Code'), ('SicDesc', 'SIC Description'), ('INQ__SLASerialNumber__c', 'SLA Serial Number'), ('Small_Group_Notifications__c', 'Small Group Notifications'), ('Small_Group_Online_Quoting_States__c', 'Small Group Online Quoting States'), ('Small_Group_Product_States__c', 'Small Group Product States'), ('Small_Group_Product_Types__c', 'Small Group Product Types'), ('Source_Service_Rep__c', 'Source Service Rep'), ('Source_System__c', 'Source System'), ('SSN__c', 'SSN'), ('SSN_Search__c', 'SSN Search'), ('Stage2URL__c', 'Stage2URL'), ('Start_Date__c', 'Start Date'), ('State_SDI_Filing__c', 'State SDI Filing'), ('State_SUI_Filing__c', 'State SUI Filing'), ('State_SWT_Filing__c', 'State SWT Filing'), ('Status__c', 'Status'), ('Stop_Loss_Online_Quoting_States__c', 'Stop Loss Online Quoting States'), ('Stop_Loss_Product_States__c', 'Stop Loss Product States'), ('Stop_Loss_Product_Types__c', 'Stop Loss Product Types'), ('Strategic_Alliance__c', 'Strategic Alliance'), ('Submitted__c', 'Submitted'), ('Tax_Type__c', 'Tax Type'), ('Telemarketer__c', 'Telemarketer'), ('Telemarketing_Disposition__c', 'Telemarketing Disposition'), ('Telemarketing_Lead__c', 'Telemarketing Lead'), ('Termination_Date__c', 'Termination Date'), ('Inactive_Status_Reason__c', 'Termination Reason'), ('TickerSymbol', 'Ticker Symbol'), ('Top_100__c', 'Top 50'), ('Total_Cases_Sold__c', 'Total Cases Sold'), ('Total_Employees_on_Payroll__c', 'Total Employees on Payroll'), ('TPA_Notification_Email__c', 'TPA Notification Email'), ('Tracking_Number_s__c', 'Tracking Number(s)'), ('Training_Announcements__c', 'Training Announcements'), ('AFocus_Trip_Status_Rolls_Up_to_Agency__c', 'Trip Status Rolls Up to Agency'), ('Type', 'Type'), ('Union_Affliation__c', 'Union Affiliation'), ('UpdateFlag__c', 'UpdateFlag'), ('Vesting__c', 'Vesting'), ('WC_Carrier__c', 'WC Carrier'), ('WC_Renewal_Date__c', 'WC Renewal Date'), ('Website', 'Website'), ('WL_YTD_for_Agency_s_Agents__c', "WL YTD for Agency's Agents"), ('WL_YTD_for_Agent_Agency__c', 'WL YTD for Agent/Agency'), ('Work_phone__c', 'Work phone'), ('XP_PP_Corp_ID_Range__c', 'XP/PP Corp ID Range'), ('XP_PP_Partner_Code__c', 'XP/PP Partner Code'), ('Year_End_Hold__c', 'Year End Hold'), ('ZChangeOrigin__c', 'ZChangeOrigin')])
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AccountHistory'
        verbose_name = 'Account History'
        verbose_name_plural = 'Account History'
        # keyPrefix = 'None'



class AccountPartner(models.Model):
    account_from = models.ForeignKey(Account, models.DO_NOTHING, related_name='accountpartner_accountfrom_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    account_to = models.ForeignKey(Account, models.DO_NOTHING, related_name='accountpartner_accountto_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    role = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Advertiser', 'Advertiser'), ('Agency', 'Agency'), ('Broker', 'Broker'), ('Consultant', 'Consultant'), ('CPA', 'CPA'), ('Dealer', 'Dealer'), ('Developer', 'Developer'), ('Distributor', 'Distributor'), ('Institution', 'Institution'), ('Lender', 'Lender'), ('System Integrator', 'System Integrator'), ('VAR/Reseller', 'VAR/Reseller'), ('Trusted Advisor', 'Trusted Advisor'), ('Banker', 'Banker'), ('Referrer', 'Referrer')], blank=True, null=True)
    is_primary = models.BooleanField(verbose_name='Primary', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='accountpartner_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='accountpartner_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    reverse_partner = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AccountPartner'
        verbose_name = 'Account Partner'
        verbose_name_plural = 'Account Partner'
        # keyPrefix = '00I'



class AccountShare(models.Model):
    account = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    user_or_group = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    account_access_level = models.CharField(max_length=40, verbose_name='Account Access', default=models.DEFAULTED_ON_CREATE, choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    opportunity_access_level = models.CharField(max_length=40, verbose_name='Opportunity Access', default=models.DEFAULTED_ON_CREATE, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')])
    case_access_level = models.CharField(max_length=40, verbose_name='Case Access', default=models.DEFAULTED_ON_CREATE, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')])
    contact_access_level = models.CharField(max_length=40, verbose_name='Contact Access', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')], blank=True, null=True)
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'AccountShare'
        verbose_name = 'Account Share'
        verbose_name_plural = 'Account Share'
        # keyPrefix = '00r'



class AccountTeamMember(models.Model):
    account = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='accountteammember_user_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    team_member_role = models.CharField(max_length=40, verbose_name='Team Role', sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('BSE', 'BSE'), ('DM', 'DM'), ('RSM', 'RSM'), ('Service Rep', 'Service Rep'), ('Lead Credit User', 'Lead Credit User'), ('Broker Affiliate', 'Broker Affiliate')], blank=True, null=True)
    photo_url = models.URLField(verbose_name='Url for thumbnail sized photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    account_access_level = models.CharField(max_length=40, verbose_name='Account Access', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')], blank=True, null=True)
    opportunity_access_level = models.CharField(max_length=40, verbose_name='Opportunity Access', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')], blank=True, null=True)
    case_access_level = models.CharField(max_length=40, verbose_name='Case Access', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')], blank=True, null=True)
    contact_access_level = models.CharField(max_length=40, verbose_name='Contact Access', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByParent', 'Controlled By Parent')], blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='accountteammember_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='accountteammember_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'AccountTeamMember'
        verbose_name = 'Account Team Member'
        verbose_name_plural = 'Account Team'
        # keyPrefix = '01M'



class ActionLinkGroupTemplate(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='actionlinkgrouptemplate_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='actionlinkgrouptemplate_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    executions_allowed = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Once', 'Once'), ('OncePerUser', 'Once per User'), ('Unlimited', 'Unlimited')])
    hours_until_expiration = models.IntegerField(verbose_name='Hours until Expiration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    category = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Primary', 'Primary action'), ('Overflow', 'Overflow action')])
    is_published = models.BooleanField(verbose_name='Published', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ActionLinkGroupTemplate'
        verbose_name = 'Action Link Group Template'
        verbose_name_plural = 'Action Link Group Templates'
        # keyPrefix = '07g'



class ActionLinkTemplate(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='actionlinktemplate_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='actionlinktemplate_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    action_link_group_template = models.ForeignKey(ActionLinkGroupTemplate, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    label_key = models.CharField(max_length=128, sf_read_only=models.READ_ONLY)
    method = models.CharField(max_length=255, verbose_name='HTTP Method', sf_read_only=models.READ_ONLY, choices=[('HttpDelete', 'DELETE'), ('HttpHead', 'HEAD'), ('HttpGet', 'GET'), ('HttpPatch', 'PATCH'), ('HttpPost', 'POST'), ('HttpPut', 'PUT')])
    link_type = models.CharField(max_length=255, verbose_name='Action Type', sf_read_only=models.READ_ONLY, choices=[('API', 'API'), ('APIAsync', 'API Async'), ('Download', 'Download'), ('UI', 'UI')])
    position = models.IntegerField(sf_read_only=models.READ_ONLY)
    is_confirmation_required = models.BooleanField(verbose_name='Confirmation Required', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_group_default = models.BooleanField(verbose_name='Default Link in Group', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    user_visibility = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Creator', 'Only creator can see'), ('Everyone', 'Everyone can see'), ('EveryoneButCreator', 'Everyone but creator can see'), ('Manager', "Only creator's manager can see"), ('CustomUser', 'Only custom user can see'), ('CustomExcludedUser', 'Everyone but custom user can see')])
    user_alias = models.CharField(max_length=128, verbose_name='Custom User Alias', sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    action_url = models.TextField(verbose_name='Action URL', sf_read_only=models.READ_ONLY)
    request_body = models.TextField(verbose_name='HTTP Request Body', sf_read_only=models.READ_ONLY, blank=True, null=True)
    headers = models.TextField(verbose_name='HTTP Headers', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ActionLinkTemplate'
        verbose_name = 'Action Link Template'
        verbose_name_plural = 'Action Link Templates'
        # keyPrefix = '07l'



class ActivityHistory(models.Model):
    account = models.ForeignKey(Account, models.DO_NOTHING, related_name='activityhistory_account_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    what = models.ForeignKey(Account, models.DO_NOTHING, related_name='activityhistory_what_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Account, ListEmail] Master Detail Relationship *
    subject = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, choices=[('After Payroll Solutions', 'After Payroll Solutions'), ('AIQA Re-Audits', 'AIQA Re-Audits'), ('AIQA Times Returned', 'AIQA Times Returned'), ('Audit', 'Audit'), ('Call', 'Call'), ('Carrier Approval', 'Carrier Approval'), ('Client Training', 'Client Training'), ('Missing Item', 'Missing Item'), ('Other', 'Other'), ('Pending Item', 'Pending Item'), ('QA 2nd Audit Review Task', 'QA 2nd Audit Review Task'), ('QA Enrollment Task', 'QA Enrollment Task'), ('QAE Re-Audits', 'QAE Re-Audits'), ('QAE Times Returned', 'QAE Times Returned'), ('QA Task', 'QA Task'), ('Send Letter', 'Send Letter'), ('Send Quote', 'Send Quote'), ('Service Hand-Off', 'Service Hand-Off'), ('Specialized Training', 'Specialized Training')], blank=True, null=True)
    is_task = models.BooleanField(verbose_name='Task', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_date = models.DateField(verbose_name='Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_date_time = models.DateTimeField(verbose_name='Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey('Calendar', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Calendar, User]
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Not Started'), choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Waiting on someone else', 'Waiting on someone else'), ('Deferred', 'Deferred')], blank=True, null=True)
    priority = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Normal'), choices=[('Critical', 'Critical'), ('High', 'High'), ('Normal', 'Normal'), ('Low', 'Low')], blank=True, null=True)
    is_high_priority = models.BooleanField(verbose_name='High Priority', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_type = models.CharField(max_length=40, verbose_name='Type', sf_read_only=models.READ_ONLY, choices=[('A/R Collections', None), ('Activity Log/Issue Carrier/Plan', None), ('Admin Kits', None), ('Agent BMALL Visit', None), ('Agent BMLL Visit', None), ('APS Platform Change', None), ('Audit', None), ('BDM Meeting', None), ('BDM Meeting', None), ('Broker Escalation', None), ('Call', None), ('Call', None), ('Cancellation', None), ('CBRU 90 Day Renewal Call', None), ('Client Visit', None), ('Cold Call', None), ('Cold Call', None), ('Conference Call', None), ('Customer Visit', None), ('Drop Information', None), ('Email', None), ('Email', None), ('Employer Meeting', None), ('Enrollment Kits', None), ('Enrollment Meeting', None), ('Established Partner Meeting', None), ('EUP', None), ('Face to Face', None), ('Fax', None), ('First Meeting', None), ('First Meeting', None), ('Follow-up', None), ('Follow-up', None), ('General Meeting', None), ('General Meeting', None), ('Lunch/Learn', None), ('Open Enrollment Meeting', None), ('Other', None), ('Other', None), ('PartnerFocus', None), ('Partner Visit', None), ('Product Demo', None), ('Proposal Meeting', None), ('Proposal Meeting', None), ('Proposal Review', None), ('Q2E internal training', None), ('Q2E with broker', None), ('Reinstatement', None), ('Renewal Meeting', None), ('Renewal Meeting', None), ('Service Add-on', None), ('Set Up', None), ('SFBP', None), ('System Demo', None), ('System Training', None), ('TalentFocus - Site Support', None), ('TalentFocus - Transfer In from External Support', None), ('TalentFocus - Transfer Out to External Support', None), ('Transmission', None)], blank=True, null=True)
    is_closed = models.BooleanField(verbose_name='Closed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_all_day_event = models.BooleanField(verbose_name='All-Day Event', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    duration_in_minutes = models.IntegerField(verbose_name='Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    location = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(verbose_name='Comments', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='activityhistory_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='activityhistory_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    call_duration_in_seconds = models.IntegerField(verbose_name='Call Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Internal', 'Internal'), ('Inbound', 'Inbound'), ('Outbound', 'Outbound')], blank=True, null=True)
    call_disposition = models.CharField(max_length=255, verbose_name='Call Result', sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_object = models.CharField(max_length=255, verbose_name='Call Object Identifier', sf_read_only=models.READ_ONLY, blank=True, null=True)
    reminder_date_time = models.DateTimeField(verbose_name='Reminder Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_reminder_set = models.BooleanField(verbose_name='Reminder Set', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    end_date_time = models.DateTimeField(verbose_name='End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date_time = models.DateTimeField(verbose_name='Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_subtype = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Task', 'Task'), ('Email', 'Email'), ('ListEmail', 'List Email'), ('Cadence', 'Cadence'), ('Call', 'Call'), ('Event', 'Event')], blank=True, null=True)
    event_outcome = models.CharField(custom=True, db_column='Event_Outcome__c', max_length=255, verbose_name='Event Outcome', sf_read_only=models.READ_ONLY, help_text='Select the value that best describes the outcome of the event.', choices=[('Meeting Completed', 'Meeting Completed'), ('DM No Show', 'DM No Show'), ('Customer Canceled', 'Customer Canceled'), ('Unable to Contact Customer', 'Unable to Contact Customer')], blank=True, null=True)
    activity_type_0 = models.CharField(db_column='Activity_Type__c', custom=True, max_length=255, verbose_name='Activity Type', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Field renamed because of name conflict.
    qbdialer_call_recording_url = models.URLField(db_column='qbdialer__CallRecordingURL__c', custom=True, verbose_name='Call Recording', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_date_time = models.DateTimeField(db_column='qbdialer__Call_Date_Time__c', custom=True, verbose_name='Call Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_dial_number = models.DecimalField(db_column='qbdialer__Call_Dial_Number__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Dial Number', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_hour = models.CharField(db_column='qbdialer__Call_Hour__c', custom=True, max_length=8, verbose_name='Call Hour', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_lead_status = models.CharField(db_column='qbdialer__Call_Lead_Status__c', custom=True, max_length=40, verbose_name='Call Lead Status', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_ring_time = models.DecimalField(db_column='qbdialer__Call_Ring_Time__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Ring Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_time_zone = models.CharField(db_column='qbdialer__Call_Time_Zone__c', custom=True, max_length=20, verbose_name='Call Time Zone', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    isdc_dialed_phone_number = models.CharField(custom=True, db_column='isdc_dialed_phone_number__c', max_length=40, verbose_name='Phone Dialed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    isdc_dialer_call_type = models.CharField(custom=True, db_column='isdc_dialer_call_type__c', max_length=255, verbose_name='Dialer Type', sf_read_only=models.READ_ONLY, choices=[('Click-to-Call', 'Click-to-Call'), ('Seek', 'Seek'), ('Domino', 'Domino')], blank=True, null=True)
    isdc_dialer_list_name = models.CharField(custom=True, db_column='isdc_dialer_list_name__c', max_length=80, verbose_name='List Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    isdc_dialer_query_name = models.CharField(custom=True, db_column='isdc_dialer_query_name__c', max_length=80, verbose_name='Query Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    task_external_id = models.CharField(custom=True, db_column='Task_External_Id__c', max_length=255, verbose_name='Task External Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    event_external_id = models.CharField(custom=True, db_column='Event_External_Id__c', max_length=255, verbose_name='Event External Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    telemarketing_call_type = models.CharField(custom=True, db_column='Telemarketing_Call_Type__c', max_length=255, verbose_name='Telemarketing Call Type', sf_read_only=models.READ_ONLY, choices=[('Contact', 'Contact'), ('Decision Maker', 'Decision Maker'), ('Disconnected Number', 'Disconnected Number'), ('No Answer', 'No Answer'), ('Set Call Back', 'Set Call Back'), ('Set Event', 'Set Event'), ('Voicemail No Message', 'Voicemail No Message'), ('Wrong Number', 'Wrong Number')], blank=True, null=True)
    audit_error_reason = models.CharField(custom=True, db_column='Audit_Error_Reason__c', max_length=255, verbose_name='Audit Error Reason', sf_read_only=models.READ_ONLY, choices=[('Address Truncated in IBAS', 'Address Truncated in IBAS'), ('Age Change Basis Incorrect', 'Age Change Basis Incorrect'), ('Ancillary', 'Ancillary'), ('App Not Signed', 'App Not Signed'), ('Benefit Amounts - Not added or Incorrect', 'Benefit Amounts - Not added or Incorrect'), ('Benefit Error', 'Benefit Error'), ('BMLL Box Not Checked', 'BMLL Box Not Checked'), ('Carrier Group Number Incorrect', 'Carrier Group Number Incorrect'), ('Carrier Incorrect Case Setup', 'Carrier Incorrect Case Setup'), ('City Incorrect', 'City Incorrect'), ('COB Not Updated', 'COB Not Updated'), ('Cobra Error', 'Cobra Error'), ('Cobra Med Codes', 'Cobra Med Codes'), ('Contact Phone Number Incorrect', 'Contact Phone Number Incorrect'), ('Contract Date/Period Incorrect or Not Updated', 'Contract Date/Period Incorrect or Not Updated'), ('Coverage Code Incorrect', 'Coverage Code Incorrect'), ('Coverage Code Missing', 'Coverage Code Missing'), ('Coverage Codes Not Termed', 'Coverage Codes Not Termed'), ('Coverage Level Incorrect', 'Coverage Level Incorrect'), ('CT # of Apps Field Not Updated or Incorrect', 'CT # of Apps Field Not Updated or Incorrect'), ('CT Date Sent to Audit Field Not Updated', 'CT Date Sent to Audit Field Not Updated'), ('CT Record Not Updated', 'CT Record Not Updated'), ('Date of Birth Incorrect', 'Date of Birth Incorrect'), ('Date of Hire Incorrect', 'Date of Hire Incorrect'), ('Dependent Date of Birth Incorrect', 'Dependent Date of Birth Incorrect'), ('Dependent Enrolled without Student Cert', 'Dependent Enrolled without Student Cert'), ('Dependent Name Misspelled', 'Dependent Name Misspelled'), ('Dependent Not Enrolled or Not Termed', 'Dependent Not Enrolled or Not Termed'), ('Dependent Not Entered', 'Dependent Not Entered'), ('Dependent SSN Incorrect', 'Dependent SSN Incorrect'), ('Domestic Partner Not Updated', 'Domestic Partner Not Updated'), ('Dual Coverage Not Updated', 'Dual Coverage Not Updated'), ('Effective Date Incorrect', 'Effective Date Incorrect'), ('Eligibility Period Incorrect', 'Eligibility Period Incorrect'), ('Employee Not Enrolled', 'Employee Not Enrolled'), ('ER Contributions', 'ER Contributions'), ('Error Removed', 'Error Removed'), ('Gender Incorrect', 'Gender Incorrect'), ('Group Address Not Updated or Incorrect', 'Group Address Not Updated or Incorrect'), ('Group Contact Incorrect', 'Group Contact Incorrect'), ('Group Size Incorrect', 'Group Size Incorrect'), ('HB1057 Box Not Checked', 'HB1057 Box Not Checked'), ('Home Phone Incorrect', 'Home Phone Incorrect'), ('Incorrect Broker Information', 'Incorrect Broker Information'), ('Incorrect Carrier Code', 'Incorrect Carrier Code'), ('Incorrect Class or Class Missing', 'Incorrect Class or Class Missing'), ('Incorrect HB8', 'Incorrect HB8'), ('Incorrect Or Missing Beneficiary', 'Incorrect Or Missing Beneficiary'), ('Incorrect or Misspelled Group Name', 'Incorrect or Misspelled Group Name'), ('Incorrect PCP Code Used', 'Incorrect PCP Code Used'), ('Incorrect PDF Number', 'Incorrect PDF Number'), ('Incorrect Plan', 'Incorrect Plan'), ('Incorrect Rate', 'Incorrect Rate'), ('Incorrect Tax ID Number', 'Incorrect Tax ID Number'), ('Incorrect Team', 'Incorrect Team'), ('Mapping Not Processed/Incorrect', 'Mapping Not Processed/Incorrect'), ('Member Name Misspelled', 'Member Name Misspelled'), ('Miscellaneous', 'Miscellaneous'), ('Missing Middle Initial', 'Missing Middle Initial'), ('Missing Student Cert Not Requested', 'Missing Student Cert Not Requested'), ('NCA Class Codes Incorrect or Missing', 'NCA Class Codes Incorrect or Missing'), ('Not Verified', 'Not Verified'), ('OFE O/E Not Updated', 'OFE O/E Not Updated'), ('Original Effective Date Not Updated or Incorrect', 'Original Effective Date Not Updated or Incorrect'), ('Overage Dependent Age Incorrect', 'Overage Dependent Age Incorrect'), ('Parallel Non-Parallel Incorrect', 'Parallel Non-Parallel Incorrect'), ('Part Time Eligibility Incorrect or Not Updated', 'Part Time Eligibility Incorrect or Not Updated'), ('PCP Error', 'PCP Error'), ('Plan Not Setup', 'Plan Not Setup'), ('Plan Not Termed', 'Plan Not Termed'), ('Rate(s) Not Termed', 'Rate(s) Not Termed'), ('Rate(s) Termed in Error', 'Rate(s) Termed in Error'), ('Rate Error', 'Rate Error'), ('Request Not Processed', 'Request Not Processed'), ('Retro Date Incorrect', 'Retro Date Incorrect'), ('Salary Incorrect', 'Salary Incorrect'), ('SSN Incorrect', 'SSN Incorrect'), ('State Incorrect', 'State Incorrect'), ('Street Address Incorrect or Misspelled', 'Street Address Incorrect or Misspelled'), ('Student Cert Status Incorrect or Not Updated', 'Student Cert Status Incorrect or Not Updated'), ('Supporting Documentation-Missing Info', 'Supporting Documentation-Missing Info'), ('System Error', 'System Error'), ('Termination Date Incorrect', 'Termination Date Incorrect'), ('Title Missing from Name', 'Title Missing from Name'), ('Transmission/Upload Issue', 'Transmission/Upload Issue'), ('Transmit to Carrier Missed', 'Transmit to Carrier Missed'), ('Wrong CT Record Updated', 'Wrong CT Record Updated'), ('Zip Code Incorrect', 'Zip Code Incorrect')], blank=True, null=True)
    audit_type = models.CharField(custom=True, db_column='Audit_Type__c', max_length=255, verbose_name='Audit Type', sf_read_only=models.READ_ONLY, choices=[('FYI', 'FYI'), ('Error', 'Error'), ('Group level error', 'Group level error'), ('Enrollment error', 'Enrollment error')], blank=True, null=True)
    call_back_date = models.DateField(custom=True, db_column='Call_Back_Date__c', verbose_name='Call Back Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    qbdialer_callback_date_time = models.DateTimeField(db_column='qbdialer__Callback_Date_Time__c', custom=True, verbose_name='Callback Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_impression_id = models.DecimalField(db_column='qbdialer__ImpressionId__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Impression ID', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_smsreminder = models.BooleanField(db_column='qbdialer__SMSReminder__c', custom=True, verbose_name='Send text msg reminder to all attendees', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False), help_text='Text message reminders will be sent to all attendees at the set reminder time.') 
    class Meta(models.Model.Meta):
        db_table = 'ActivityHistory'
        verbose_name = 'Activity History'
        verbose_name_plural = 'Activity History'
        # keyPrefix = 'None'



class AdditionalNumber(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    call_center = models.ForeignKey('CallCenter', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    phone = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='additionalnumber_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='additionalnumber_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'AdditionalNumber'
        verbose_name = 'Additional Directory Number'
        verbose_name_plural = 'Additional Directory Numbers'
        # keyPrefix = '04m'



class AgentWork(models.Model):
    owner = models.ForeignKey('Group', models.DO_NOTHING, related_name='agentwork_owner_set')  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='agentwork_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='agentwork_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='agentwork_user_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    work_item = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Assigned', 'Assigned'), ('Unavailable', 'Unavailable'), ('Declined', 'Declined'), ('Opened', 'Opened'), ('Closed', 'Closed'), ('DeclinedOnPushTimeout', 'Declined on Push Time-Out'), ('Canceled', 'Canceled'), ('Transferred', 'Transferred')])
    service_channel = models.ForeignKey('ServiceChannel', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    original_queue = models.ForeignKey('Group', models.DO_NOTHING, related_name='agentwork_originalqueue_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    capacity_weight = models.DecimalField(max_digits=10, decimal_places=2, verbose_name='Units of Capacity', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    capacity_percentage = models.DecimalField(max_digits=5, decimal_places=2, verbose_name='Percentage  of Capacity', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    request_date_time = models.DateTimeField(verbose_name='Request Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    accept_date_time = models.DateTimeField(verbose_name='Accept Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    decline_date_time = models.DateTimeField(verbose_name='Decline Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    close_date_time = models.DateTimeField(verbose_name='Close Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    speed_to_answer = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    agent_capacity_when_declined = models.DecimalField(max_digits=10, decimal_places=2, verbose_name='Agent Capacity when Declined', sf_read_only=models.READ_ONLY, blank=True, null=True)
    pending_service_routing = models.ForeignKey('PendingServiceRouting', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    push_timeout = models.IntegerField(verbose_name='Push Time-Out', sf_read_only=models.READ_ONLY, blank=True, null=True)
    push_timeout_date_time = models.DateTimeField(verbose_name='Push Time-Out Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    handle_time = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    active_time = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    decline_reason = models.CharField(max_length=200, sf_read_only=models.READ_ONLY, blank=True, null=True)
    cancel_date_time = models.DateTimeField(verbose_name='Cancel Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    should_skip_capacity_check = models.BooleanField(sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    routing_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('QueueBased', 'Queue Based'), ('SkillsBased', 'Skills Based')], blank=True, null=True)
    routing_model = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('LeastActive', 'Least Active'), ('MostAvailable', 'Most Available'), ('ExternalRouting', 'External Routing')], blank=True, null=True)
    routing_priority = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    assigned_date_time = models.DateTimeField(verbose_name='Assign Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    preferred_user = models.ForeignKey('User', models.DO_NOTHING, related_name='agentwork_preferreduser_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    original_group = models.ForeignKey('Group', models.DO_NOTHING, related_name='agentwork_originalgroup_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AgentWork'
        verbose_name = 'Agent Work'
        verbose_name_plural = 'Agent Work'
        # keyPrefix = '0Bz'



class AgentWorkShare(models.Model):
    parent = models.ForeignKey(AgentWork, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'AgentWorkShare'
        verbose_name = 'Agent Work Share'
        verbose_name_plural = 'Agent Work Share'
        # keyPrefix = 'None'



class AggregateResult(models.Model):
    class Meta(models.Model.Meta):
        db_table = 'AggregateResult'
        verbose_name = 'Aggregate Result'
        verbose_name_plural = 'Aggregate Result'
        # keyPrefix = 'None'



class Announcement(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='announcement_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='announcement_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    feed_item = models.OneToOneField('FeedItem', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    expiration_date = models.DateTimeField()
    send_emails = models.BooleanField(verbose_name='Send Emails on Announcement', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_archived = models.BooleanField(verbose_name='Is Announcement Archived', sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey('CollaborationGroup', models.DO_NOTHING, related_name='announcement_parent_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Announcement'
        verbose_name = 'Announcement'
        verbose_name_plural = 'Announcements'
        # keyPrefix = '0Bt'



class ApexClass(models.Model):
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, sf_read_only=models.READ_ONLY)
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Deleted', 'Deleted')])
    is_valid = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    body_crc = models.DecimalField(max_digits=18, decimal_places=0, verbose_name='Body CRC', sf_read_only=models.READ_ONLY)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    length_without_comments = models.IntegerField(verbose_name='Size Without Comments', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apexclass_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apexclass_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ApexClass'
        verbose_name = 'Apex Class'
        verbose_name_plural = 'Apex Classes'
        # keyPrefix = '01p'



class ApexComponent(models.Model):
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, sf_read_only=models.READ_ONLY)
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    controller_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('0', 'Not Specified'), ('1', 'Standard'), ('4', 'Standard Set'), ('2', 'Custom'), ('3', 'Java'), ('5', 'Spring')])
    controller_key = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    markup = models.TextField(sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apexcomponent_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apexcomponent_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ApexComponent'
        verbose_name = 'Visualforce Component'
        verbose_name_plural = 'Visualforce Components'
        # keyPrefix = '099'



class ApexPage(models.Model):
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, sf_read_only=models.READ_ONLY)
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    controller_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('0', 'Not Specified'), ('1', 'Standard'), ('4', 'Standard Set'), ('2', 'Custom'), ('3', 'Java'), ('5', 'Spring')])
    controller_key = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_available_in_touch = models.BooleanField(verbose_name='Available for Lightning Experience, Lightning Communities, and the mobile app', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_confirmation_token_required = models.BooleanField(verbose_name='Require CSRF protection on GET requests', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    markup = models.TextField(sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apexpage_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apexpage_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ApexPage'
        verbose_name = 'Visualforce Page'
        verbose_name_plural = 'Visualforce Pages'
        # keyPrefix = '066'



class ApexPageInfo(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    apex_page_id = models.CharField(max_length=18, verbose_name='Apex Page ID', sf_read_only=models.READ_ONLY)
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    name_space_prefix = models.CharField(max_length=512, sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, verbose_name='API Version', sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_available_in_touch = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    master_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_show_header = models.CharField(max_length=80, verbose_name='Show Header', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ApexPageInfo'
        verbose_name = 'Apex Page Info'
        verbose_name_plural = 'Apex Pages Info'
        # keyPrefix = '4ve'



class ApexTestQueueItem(models.Model):
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    apex_class = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    status = models.CharField(max_length=40, sf_read_only=models.NOT_CREATEABLE, choices=[('Queued', 'Queued'), ('Processing', 'Processing'), ('Aborted', 'Aborted'), ('Completed', 'Completed'), ('Failed', 'Failed'), ('Preparing', 'Preparing'), ('Holding', 'Holding')])
    extended_status = models.CharField(max_length=1000, verbose_name='Status Detail', sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent_job = models.ForeignKey('AsyncApexJob', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    test_run_result = models.ForeignKey('ApexTestRunResult', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    should_skip_code_coverage = models.BooleanField(default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ApexTestQueueItem'
        verbose_name = 'Apex Test Queue Item'
        verbose_name_plural = 'Apex Test Queue Items'
        # keyPrefix = '709'



class ApexTestResult(models.Model):
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    test_timestamp = models.DateTimeField(verbose_name='Time Started')
    outcome = models.CharField(max_length=40, verbose_name='Pass/Fail', choices=[('Pass', 'Pass'), ('Fail', 'Fail'), ('CompileFail', 'CompileFail'), ('Skip', 'Skip')])
    apex_class = models.ForeignKey(ApexClass, models.DO_NOTHING)
    method_name = models.CharField(max_length=255, blank=True, null=True)
    message = models.CharField(max_length=4000, verbose_name='Error Message', blank=True, null=True)
    stack_trace = models.CharField(max_length=4000, blank=True, null=True)
    async_apex_job = models.ForeignKey('AsyncApexJob', models.DO_NOTHING, blank=True, null=True)
    queue_item = models.ForeignKey(ApexTestQueueItem, models.DO_NOTHING, blank=True, null=True)
    apex_test_run_result = models.ForeignKey('ApexTestRunResult', models.DO_NOTHING, blank=True, null=True)
    run_time = models.IntegerField(blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ApexTestResult'
        verbose_name = 'Apex Test Result'
        verbose_name_plural = 'Apex Test Results'
        # keyPrefix = '07M'



class ApexTestResultLimits(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestresultlimits_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestresultlimits_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    apex_test_result = models.OneToOneField(ApexTestResult, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    soql = models.IntegerField(verbose_name='Total number of SOQL queries issued')
    query_rows = models.IntegerField(verbose_name='Total number of records retrieved by SOQL queries')
    sosl = models.IntegerField(verbose_name='Total number of SOSL queries issued')
    dml = models.IntegerField(verbose_name='Total number of DML statements issued')
    dml_rows = models.IntegerField(verbose_name='Total number of records processed as a result of DML statements')
    cpu = models.IntegerField(verbose_name='Maximum CPU time on the Salesforce servers')
    callouts = models.IntegerField(verbose_name='Total number of callouts')
    email = models.IntegerField(verbose_name='Total number of sendEmail methods allowed')
    async_calls = models.IntegerField(verbose_name='Total number of async calls')
    mobile_push = models.IntegerField(verbose_name='Maximum number of push notification method calls allowed per Apex transaction')
    limit_context = models.CharField(max_length=255, verbose_name='LimitContext', blank=True, null=True)
    limit_exceptions = models.CharField(max_length=255, verbose_name='LimitExceptions', blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ApexTestResultLimits'
        verbose_name = 'Apex Test Result Limit'
        verbose_name_plural = 'Apex Test Result Limit'
        # keyPrefix = '05n'



class ApexTestRunResult(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestrunresult_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestrunresult_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    async_apex_job = models.OneToOneField('AsyncApexJob', models.DO_NOTHING, blank=True, null=True)
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestrunresult_user_set', blank=True, null=True)
    job_name = models.CharField(max_length=255, verbose_name='Name of the job', blank=True, null=True)
    is_all_tests = models.BooleanField(verbose_name='allTests', default=models.DefaultedOnCreate(False))
    source = models.CharField(max_length=255, verbose_name='Client that kicked off the test run', blank=True, null=True)
    start_time = models.DateTimeField(verbose_name='Start time of the test run')
    end_time = models.DateTimeField(verbose_name='End time of the test run', blank=True, null=True)
    test_time = models.IntegerField(verbose_name='Time(ms) actually spent running tests', blank=True, null=True)
    status = models.CharField(max_length=255, verbose_name='Status of the test run', choices=[('Queued', 'Queued'), ('Processing', 'Processing'), ('Aborted', 'Aborted'), ('Completed', 'Completed'), ('Failed', 'Failed'), ('Preparing', 'Preparing'), ('Holding', 'Holding')])
    classes_enqueued = models.IntegerField(verbose_name='Number of classes enqueued in this test run')
    classes_completed = models.IntegerField(verbose_name='Number of classes completed in this test run', blank=True, null=True)
    methods_enqueued = models.IntegerField(verbose_name='Number of methods enqueued in this test run', blank=True, null=True)
    methods_completed = models.IntegerField(verbose_name='Number of methods completed in this test run', blank=True, null=True)
    methods_failed = models.IntegerField(verbose_name='Number of methods failed in this test run', blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ApexTestRunResult'
        verbose_name = 'Apex Test Run Result'
        verbose_name_plural = 'Apex Test Run Result'
        # keyPrefix = '05m'



class ApexTestSuite(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestsuite_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextestsuite_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    test_suite_name = models.CharField(unique=True, max_length=255, sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'ApexTestSuite'
        verbose_name = 'Apex Test Suite'
        verbose_name_plural = 'Apex Test Suites'
        # keyPrefix = '05F'



class ApexTrigger(models.Model):
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    table_enum_or_id = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('Account_Bundle__ChangeEvent', None), ('AccountBrand', None), ('AccountChangeEvent', None), ('AccountContactRoleChangeEvent', None), ('AccountTeamMember', None), ('ActivityEngagementRollup', None), ('Agent_Affiliation__ChangeEvent', None), ('AgentWork', None), ('Alert__ChangeEvent', None), ('ambition__AmbitionEmailRecipient__ChangeEvent', None), ('ambition__AmbitionEntity__ChangeEvent', None), ('ambition__AmbitionEntityField__ChangeEvent', None), ('ambition__AmbitionGeneralConfig__ChangeEvent', None), ('ambition__AmbitionLogEntry__ChangeEvent', None), ('ambition__AmbitionPushableObject__ChangeEvent', None), ('ambition__AmbitionPushableObjectField__ChangeEvent', None), ('ambition__AmbitionPushableObjectTestObject__ChangeEvent', None), ('ambition__AmbitionReportFilter__ChangeEvent', None), ('ambition__AmbitionReportInstance__ChangeEvent', None), ('ambition__AmbitionReportInstanceChunk__ChangeEvent', None), ('ambition__AmbitionReportRunConfig__ChangeEvent', None), ('ambition__log_entry__ChangeEvent', None), ('AMS_Account_Team__ChangeEvent', None), ('ANTS_Letters_and_Attachments__ChangeEvent', None), ('Apex_Error__ChangeEvent', None), ('ApexHammerOrgResult', None), ('ApexHammerResult', None), ('AppAnalyticsQueryRequest', None), ('Asset', None), ('AssetChangeEvent', None), ('AssetRelationship', None), ('AssetTokenEvent', None), ('AssistantRecommendation', None), ('AsyncOperationEvent', None), ('AsyncOperationStatus', None), ('Attachment', None), ('Authorization__ChangeEvent', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormConsentChangeEvent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('BatchApexErrorEvent', None), ('Benefits_Upsell_Opportunity__ChangeEvent', None), ('Broker_Commission__ChangeEvent', None), ('Broker_Email_Archive__ChangeEvent', None), ('Broker_Favorites__ChangeEvent', None), ('Broker_Trip_Status__ChangeEvent', None), ('BrokerOpportunity__ChangeEvent', None), ('BrokerSales__ChangeEvent', None), ('Campaign', None), ('CampaignChangeEvent', None), ('CampaignInfluence', None), ('CampaignMember', None), ('CampaignMemberChangeEvent', None), ('CampaignMemberStatusChangeEvent', None), ('Carrier__ChangeEvent', None), ('Carrier_Data_Mapping__ChangeEvent', None), ('Carrier_RFP__ChangeEvent', None), ('CarrierLibrary__ChangeEvent', None), ('CartPricingResponseEvent', None), ('Case', None), ('Case_Dimension_Email__ChangeEvent', None), ('Case_Route__ChangeEvent', None), ('CaseChangeEvent', None), ('CaseComment', None), ('CaseExternalDocument', None), ('ChatterActivity', None), ('ChatterMessage', None), ('Checklist__ChangeEvent', None), ('Class__ChangeEvent', None), ('CollaborationGroup', None), ('CollaborationGroupMember', None), ('CollaborationGroupRecord', None), ('Commission__ChangeEvent', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Community_Message__ChangeEvent', None), ('CommunityTiles__ChangeEvent', None), ('Connection_Credential__ChangeEvent', None), ('Contact', None), ('ContactChangeEvent', None), ('ContactPointConsent', None), ('ContactPointConsentChangeEvent', None), ('ContactPointEmail', None), ('ContactPointEmailChangeEvent', None), ('ContactPointPhone', None), ('ContactPointPhoneChangeEvent', None), ('ContactPointTypeConsent', None), ('ContactPointTypeConsentChangeEvent', None), ('ContactRequest', None), ('ContentDistribution', None), ('ContentDocument', None), ('ContentDocumentLink', None), ('ContentDocumentListViewMapping', None), ('ContentExternalStorage', None), ('ContentVersion', None), ('Contract', None), ('ContractChangeEvent', None), ('ContractLineItem', None), ('ContractLineItemChangeEvent', None), ('ConversationContextEntry', None), ('Course__ChangeEvent', None), ('Credential__ChangeEvent', None), ('DatasetExportEvent', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('EaasEvent', None), ('Email_Signature_Attachments__ChangeEvent', None), ('EmailMessage', None), ('EmailMessageChangeEvent', None), ('EmailTemplateChangeEvent', None), ('EngagementChannelType', None), ('EngagementEvent', None), ('Enrollment__ChangeEvent', None), ('Entitlement', None), ('EntitlementChangeEvent', None), ('EntitlementContact', None), ('Event', None), ('EventChangeEvent', None), ('EventRelationChangeEvent', None), ('Feedback__ChangeEvent', None), ('FeedComment', None), ('FeedItem', None), ('FlowExecutionErrorEvent', None), ('FlowExecutionEvent', None), ('Group_Calendar__ChangeEvent', None), ('HammerResultStatus', None), ('Idea', None), ('IdeaComment', None), ('Image', None), ('Individual', None), ('IndividualChangeEvent', None), ('INQ__Criteria_Fields_Status__ChangeEvent', None), ('INQ__Data_Mapping_Configuration__ChangeEvent', None), ('INQ__Data_Transfer_Criteria__ChangeEvent', None), ('INQ__Data_Transfer_Criteria_Detail__ChangeEvent', None), ('INQ__Email_Template_Mapping_Configuration__ChangeEvent', None), ('INQ__Exception_Logger__ChangeEvent', None), ('INQ__iConnectionStatus__ChangeEvent', None), ('INQ__Inquisium_Activity_Tracker__ChangeEvent', None), ('INQ__Respondent__ChangeEvent', None), ('INQ__Respondent_Field_Mapping__ChangeEvent', None), ('INQ__Survey_Answer__ChangeEvent', None), ('INQ__Survey_Criteria__ChangeEvent', None), ('INQ__Survey_Criteria_Detail__ChangeEvent', None), ('INQ__Survey_Program__ChangeEvent', None), ('INQ__Survey_Program_Question__ChangeEvent', None), ('INQ__Survey_Staging__ChangeEvent', None), ('INQ__Trigger_Object_Exclusion__ChangeEvent', None), ('Intake__ChangeEvent', None), ('Lead', None), ('Lead_Assignment_Rules__ChangeEvent', None), ('LeadChangeEvent', None), ('LinkedArticle', None), ('ListEmailChangeEvent', None), ('ListEmailSentResult', None), ('LiveAgentSession', None), ('LiveChatTranscript', None), ('LiveChatTranscriptChangeEvent', None), ('LiveChatTranscriptEvent', None), ('LiveChatVisitor', None), ('LogoutEventStream', None), ('Macro', None), ('MacroChangeEvent', None), ('MacroInstructionChangeEvent', None), ('MacroUsage', None), ('ManagedContentSpaceMember', None), ('Menu__ChangeEvent', None), ('Migration_Task__ChangeEvent', None), ('mkto_si__Best_Bets_View__ChangeEvent', None), ('mkto_si__Best_Bets_View_Detail__ChangeEvent', None), ('mkto_si__BestBetsCache__ChangeEvent', None), ('mkto_si__EmailActivityCache__ChangeEvent', None), ('mkto_si__GroupedWebActivityCache__ChangeEvent', None), ('mkto_si__InterestingMomentsCache__ChangeEvent', None), ('mkto_si__Marketo_Sales_Insight_Config__ChangeEvent', None), ('mkto_si__ScoringCache__ChangeEvent', None), ('mkto_si__Value__ChangeEvent', None), ('mkto_si__WebActivityCache__ChangeEvent', None), ('myobj__ChangeEvent', None), ('NetworkMember', None), ('Note', None), ('Notification__ChangeEvent', None), ('OE_Error__ChangeEvent', None), ('Office__ChangeEvent', None), ('Opportunity', None), ('Opportunity_Pipeline_Snapshot__ChangeEvent', None), ('OpportunityChangeEvent', None), ('OpportunityContactRole', None), ('OpportunityContactRoleChangeEvent', None), ('OpportunityLineItem', None), ('OpportunityTeamMember', None), ('OrgDeleteRequest', None), ('OrgLifecycleNotification', None), ('OrgMetric', None), ('OrgMetricScanResult', None), ('OrgMetricScanSummary', None), ('Out_Of_Office__ChangeEvent', None), ('PackagingHammerResult', None), ('Partner', None), ('PartyConsent', None), ('PartyConsentChangeEvent', None), ('Payroll_Price_Book__ChangeEvent', None), ('PendingServiceRouting', None), ('PersonalizationResource', None), ('Plan_Selection__ChangeEvent', None), ('Plan_Type__ChangeEvent', None), ('Platform_History__ChangeEvent', None), ('PlatformStatusAlertEvent', None), ('Postal_Code__ChangeEvent', None), ('Pricebook2', None), ('Pricebook2ChangeEvent', None), ('ProcessCartPricingEvent', None), ('Product2', None), ('Product2ChangeEvent', None), ('PromptAction', None), ('qbdialer__ContactScore__ChangeEvent', None), ('qbdialer__DialerQuery__ChangeEvent', None), ('qbdialer__DialerQueryAttendee__ChangeEvent', None), ('qbdialer__DialerQueryItem__ChangeEvent', None), ('qbdialer__isDialerConfig__ChangeEvent', None), ('qbdialer__SeekInitiative__ChangeEvent', None), ('qbdialer__SeekInitiativeAttendee__ChangeEvent', None), ('qbdialer__SeekInitiativeItem__ChangeEvent', None), ('QuickText', None), ('QuickTextChangeEvent', None), ('QuickTextUsage', None), ('Quote', None), ('Quote_Line_Item__ChangeEvent', None), ('QuoteChangeEvent', None), ('QuoteLineItem', None), ('QuoteLineItemChangeEvent', None), ('Recommendation', None), ('RecommendationChangeEvent', None), ('RecommendationReaction', None), ('RecommendationReactionChangeEvent', None), ('RecordAction', None), ('RecordMergeHistory', None), ('RecordOrigin', None), ('Referral__ChangeEvent', None), ('RequestsForAccessSIQ', None), ('sbv2__Group__ChangeEvent', None), ('sbv2__List_Object__ChangeEvent', None), ('sbv2__Quality_Sample__ChangeEvent', None), ('sbv2__Sample_Criteria_Filter__ChangeEvent', None), ('sbv2__Score_List__ChangeEvent', None), ('sbv2__Summary_Score__ChangeEvent', None), ('sbv2__Team__ChangeEvent', None), ('sbv2__Team_User__ChangeEvent', None), ('Security_Questions__ChangeEvent', None), ('seismic__Debug_Log__ChangeEvent', None), ('ServiceContract', None), ('ServiceContractChangeEvent', None), ('Services__ChangeEvent', None), ('Shipment__ChangeEvent', None), ('SIC_Code__ChangeEvent', None), ('SiqUserBlacklist', None), ('sma__AvailableField__ChangeEvent', None), ('sma__MAAJAXDebugLog__ChangeEvent', None), ('sma__MAAnalytic__ChangeEvent', None), ('sma__MAArcGISBatchPushLog__ChangeEvent', None), ('sma__MAArcGISBatchPushSetting__ChangeEvent', None), ('sma__MAArcGISBatchPushTest__ChangeEvent', None), ('sma__MAAssignmentDebugLog__ChangeEvent', None), ('sma__MAAssignmentPlan__ChangeEvent', None), ('sma__MAAssignmentRule__ChangeEvent', None), ('sma__MABaseObject__ChangeEvent', None), ('sma__MAButtonSet__ChangeEvent', None), ('sma__MACache__ChangeEvent', None), ('sma__MAClick2Create__ChangeEvent', None), ('sma__MACustomAction__ChangeEvent', None), ('sma__MADataLayerSetting__ChangeEvent', None), ('sma__MADataLoad__ChangeEvent', None), ('sma__MADataLoadSegment__ChangeEvent', None), ('sma__MADriveProfile__ChangeEvent', None), ('sma__MAEventBaseObj__ChangeEvent', None), ('sma__MAEventLookup__ChangeEvent', None), ('sma__MAExport__ChangeEvent', None), ('sma__MAExportRow__ChangeEvent', None), ('sma__MAFolder__ChangeEvent', None), ('sma__MAFolderPermission__ChangeEvent', None), ('sma__MALayer__ChangeEvent', None), ('sma__MALocation__ChangeEvent', None), ('sma__MALocationFolder__ChangeEvent', None), ('sma__MALog__ChangeEvent', None), ('sma__MAMiniMapSetting__ChangeEvent', None), ('sma__MARelatedList__ChangeEvent', None), ('sma__MARoute__ChangeEvent', None), ('sma__MASavedQry__ChangeEvent', None), ('sma__MASavedQryComponent__ChangeEvent', None), ('sma__MAScheduledJob__ChangeEvent', None), ('sma__MASettingsAssignments__ChangeEvent', None), ('sma__MASettingsGroup__ChangeEvent', None), ('sma__MAShift__ChangeEvent', None), ('sma__MATerritory__ChangeEvent', None), ('sma__MATerritoryAggregation__ChangeEvent', None), ('sma__MATerritoryAggregationSetting__ChangeEvent', None), ('sma__MATerritoryCollection__ChangeEvent', None), ('sma__MATerritoryCollectionBaseObject__ChangeEvent', None), ('sma__MATerritoryCollectionFieldUpdate__ChangeEvent', None), ('sma__MATerritoryGeometry__ChangeEvent', None), ('sma__MATerritoryNode__ChangeEvent', None), ('sma__MATerritoryRollup__ChangeEvent', None), ('sma__MATerritoryRollupComponent__ChangeEvent', None), ('sma__MATerritoryRollupFolder__ChangeEvent', None), ('sma__MATerritoryRollupRun__ChangeEvent', None), ('sma__MATerritoryRollupValue__ChangeEvent', None), ('sma__MAWaypoint__ChangeEvent', None), ('SocialPersona', None), ('SocialPost', None), ('SocialPostChangeEvent', None), ('Solution', None), ('Source_Account_Team__ChangeEvent', None), ('StrategyExecutionEvent', None), ('StrategyMonthlyStats', None), ('StreamActivityAccess', None), ('StreamingChannel', None), ('Task', None), ('TaskChangeEvent', None), ('TaskRelationChangeEvent', None), ('TaxNotice__ChangeEvent', None), ('Topic', None), ('TopicAssignment', None), ('trailheadapp__Badge__ChangeEvent', None), ('trailheadapp__Debug_Log__ChangeEvent', None), ('trailheadapp__Trail__ChangeEvent', None), ('trailheadapp__Trailhead_User_Data__ChangeEvent', None), ('trailheadapp__Trailmix__ChangeEvent', None), ('trailheadapp__Trailmix_Assignment__ChangeEvent', None), ('trailheadapp__User_Badge__ChangeEvent', None), ('trailheadapp__User_Trailmix__ChangeEvent', None), ('TrainingEnrollment__ChangeEvent', None), ('Trip_Status_Eligibility__ChangeEvent', None), ('Twilio_Voice_Response__ChangeEvent', None), ('Upsell_Opportunity__ChangeEvent', None), ('User', None), ('User_Login_Snapshot__ChangeEvent', None), ('UserChangeEvent', None), ('UserNavItem', None), ('UserProvAccount', None), ('UserProvAccountStaging', None), ('UserProvisioningLog', None), ('UserProvisioningRequest', None), ('UserProvMockTarget', None), ('UserServicePresence', None), ('vidyard__Video_View__ChangeEvent', None), ('VisibilityUpdateEvent', None), ('WaveAssetEvent', None), ('XactlyCorp__XactlyUserBusiness__ChangeEvent', None), ('XactlyCorp__XCIncentBusiness__ChangeEvent', None)], blank=True, null=True)
    usage_before_insert = models.BooleanField(verbose_name='BeforeInsert', sf_read_only=models.READ_ONLY)
    usage_after_insert = models.BooleanField(verbose_name='AfterInsert', sf_read_only=models.READ_ONLY)
    usage_before_update = models.BooleanField(verbose_name='BeforeUpdate', sf_read_only=models.READ_ONLY)
    usage_after_update = models.BooleanField(verbose_name='AfterUpdate', sf_read_only=models.READ_ONLY)
    usage_before_delete = models.BooleanField(verbose_name='BeforeDelete', sf_read_only=models.READ_ONLY)
    usage_after_delete = models.BooleanField(verbose_name='AfterDelete', sf_read_only=models.READ_ONLY)
    usage_is_bulk = models.BooleanField(verbose_name='IsBulk', sf_read_only=models.READ_ONLY)
    usage_after_undelete = models.BooleanField(verbose_name='AfterUndelete', sf_read_only=models.READ_ONLY)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, sf_read_only=models.READ_ONLY)
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Inactive', 'Inactive'), ('Active', 'Active'), ('Deleted', 'Deleted')])
    is_valid = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    body_crc = models.DecimalField(max_digits=18, decimal_places=0, verbose_name='Body CRC', sf_read_only=models.READ_ONLY)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    length_without_comments = models.IntegerField(verbose_name='Size Without Comments', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextrigger_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='apextrigger_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ApexTrigger'
        verbose_name = 'Apex Trigger'
        verbose_name_plural = 'Apex Triggers'
        # keyPrefix = '01q'



class AppDefinition(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    master_label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    logo_url = models.URLField(verbose_name='Logo URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    ui_type = models.CharField(max_length=255, verbose_name='UI Type', sf_read_only=models.READ_ONLY, choices=[('Aloha', None), ('Lightning', None)], blank=True, null=True)
    nav_type = models.CharField(max_length=255, verbose_name='Navigation Type', sf_read_only=models.READ_ONLY, choices=[('Standard', None), ('Console', None)], blank=True, null=True)
    utility_bar = models.CharField(max_length=80, verbose_name='Utility Bar Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    header_color = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_override_org_theme = models.BooleanField(verbose_name='Is Org Theme Overridden', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_small_form_factor_supported = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_medium_form_factor_supported = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_large_form_factor_supported = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_nav_personalization_disabled = models.BooleanField(verbose_name='Is Navigation Menu Personalization Disabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_nav_auto_temp_tabs_disabled = models.BooleanField(verbose_name='Is Navigation Menu Automatically Create Temporary Tabs Disabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'AppDefinition'
        verbose_name = 'App Definition'
        verbose_name_plural = 'App Definitions'
        # keyPrefix = '06m'



class AppMenuItem(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='appmenuitem_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='appmenuitem_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY)
    name = models.CharField(max_length=80, verbose_name='Developer Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=250, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=250, sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_start_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    logo_url = models.URLField(verbose_name='Logo Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    icon_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    info_url = models.URLField(verbose_name='Info URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_using_admin_authorization = models.BooleanField(verbose_name='IsUsingAdminAuthorization', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    mobile_platform = models.CharField(max_length=255, verbose_name='Mobile device OS platform', sf_read_only=models.READ_ONLY, choices=[('ios', 'iOS'), ('android', 'Android')], blank=True, null=True)
    mobile_min_os_ver = models.CharField(max_length=255, verbose_name='Minimum required mobile device OS version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_device_type = models.CharField(max_length=255, verbose_name='Type of mobile device', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_registered_device_only = models.BooleanField(verbose_name='App requires a registered mobile device', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    mobile_app_ver = models.CharField(max_length=255, verbose_name='Version of the mobile app', sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_app_installed_date = models.DateTimeField(verbose_name='Date the mobile app was most recently installed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_app_installed_version = models.CharField(max_length=255, verbose_name='Most recently installed version of the mobile app', sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_app_binary_id = models.CharField(max_length=255, verbose_name='ID for the related mobile app binary', sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_app_install_url = models.URLField(verbose_name='URL to install the mobile app', sf_read_only=models.READ_ONLY, blank=True, null=True)
    canvas_enabled = models.BooleanField(verbose_name='Is this a canvas-enabled application', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    canvas_reference_id = models.CharField(max_length=18, verbose_name='The identifier used to render the canvas application.', sf_read_only=models.READ_ONLY, blank=True, null=True)
    canvas_url = models.URLField(verbose_name='The canvas url for the canvas application', sf_read_only=models.READ_ONLY, blank=True, null=True)
    canvas_access_method = models.CharField(max_length=255, verbose_name='The configured access method for the canvas application', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Post'), choices=[('Get', 'OAuth Webflow (GET)'), ('Post', 'Signed Request (POST)')], blank=True, null=True)
    canvas_selected_locations = models.CharField(max_length=255, verbose_name='The selected/supported locations of the canvas application', sf_read_only=models.READ_ONLY, blank=True, null=True)
    canvas_options = models.CharField(max_length=255, verbose_name='The options to hide publisher header or publisher share button', sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=255, verbose_name='App Type', sf_read_only=models.READ_ONLY, choices=[('ConnectedApplication', None), ('Network', None), ('ServiceProvider', None), ('TabSet', None)], blank=True, null=True)
    application_id = models.CharField(max_length=18, verbose_name='Application ID', sf_read_only=models.READ_ONLY, blank=True, null=True)  # No Reference table
    user_sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_visible = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_accessible = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'AppMenuItem'
        verbose_name = 'AppMenuItem'
        verbose_name_plural = 'AppMenuItems'
        # keyPrefix = '0DS'



class AppTabMember(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    app_definition_id = models.CharField(max_length=512, verbose_name='App Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    tab_definition_id = models.CharField(max_length=512, verbose_name='Tab Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    workspace_driver_field = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AppTabMember'
        verbose_name = 'App Tab Member'
        verbose_name_plural = 'App Tab Members'
        # keyPrefix = '06o'



class AssignmentRule(models.Model):
    name = models.CharField(max_length=120, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sobject_type = models.CharField(max_length=40, verbose_name='SObject Type', sf_read_only=models.READ_ONLY, choices=[('Case', None), ('Lead', None)], blank=True, null=True)
    active = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='assignmentrule_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='assignmentrule_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'AssignmentRule'
        verbose_name = 'Assignment Rule'
        verbose_name_plural = 'Assignment Rules'
        # keyPrefix = '01Q'



class AsyncApexJob(models.Model):
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    job_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Future', 'Future'), ('SharingRecalculation', 'Sharing Recalculation'), ('ScheduledApex', 'Scheduled Apex'), ('BatchApex', 'Batch Apex'), ('BatchApexWorker', 'Batch Apex Worker'), ('TestRequest', 'Test Request'), ('TestWorker', 'Test Worker'), ('ApexToken', 'Apex Token'), ('Queueable', 'Queueable')])
    apex_class = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Queued', 'Queued'), ('Processing', 'Processing'), ('Aborted', 'Aborted'), ('Completed', 'Completed'), ('Failed', 'Failed'), ('Preparing', 'Preparing'), ('Holding', 'Holding')])
    job_items_processed = models.IntegerField(verbose_name='Batches Processed', sf_read_only=models.READ_ONLY)
    total_job_items = models.IntegerField(verbose_name='Total Batches', sf_read_only=models.READ_ONLY, blank=True, null=True)
    number_of_errors = models.IntegerField(verbose_name='Failures', sf_read_only=models.READ_ONLY, blank=True, null=True)
    completed_date = models.DateTimeField(verbose_name='Completion Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    method_name = models.CharField(max_length=255, verbose_name='Apex Method', sf_read_only=models.READ_ONLY, blank=True, null=True)
    extended_status = models.CharField(max_length=255, verbose_name='Status Detail', sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent_job = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_processed = models.CharField(max_length=15, verbose_name='Last ID processed and committed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_processed_offset = models.IntegerField(verbose_name='Offset of last ID processed and committed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AsyncApexJob'
        verbose_name = 'Apex Job'
        verbose_name_plural = 'Apex Jobs'
        # keyPrefix = '707'



class AttachedContentDocument(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    linked_entity = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Account, CollaborationGroup, ContentWorkspace, Dashboard, DashboardComponent, EmailTemplate, EnhancedLetterhead, Event, Knowledge__ka, Knowledge__kav, LinkedArticle, ListEmail, Network, Organization, Report, Site, Task, User] Master Detail Relationship *
    content_document = models.ForeignKey('ContentDocument', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='attachedcontentdocument_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(verbose_name='Created', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='attachedcontentdocument_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(verbose_name='Content Modified Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    file_type = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_size = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_url = models.URLField(verbose_name='Content URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_data_source_name = models.CharField(max_length=80, verbose_name='External Data Source', sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_data_source_type = models.CharField(max_length=80, verbose_name='Class ID', sf_read_only=models.READ_ONLY, choices=[('contentHubItem', None), ('Datajourney', None), ('Identity', None), ('OpenSearch', None), ('outgoingemail', None), ('recommendation', None), ('SimpleURL', None), ('Wrapper', None)], blank=True, null=True)
    sharing_option = models.CharField(max_length=40, verbose_name='Prevent others from sharing and unsharing', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('A'), choices=[('A', 'Freeze Sharing Off'), ('R', 'Freeze Sharing On')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AttachedContentDocument'
        verbose_name = 'Attached Content Document'
        verbose_name_plural = 'Attached Content Documents'
        # keyPrefix = 'None'



class Attachment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Account, EmailTemplate, Event, LinkedArticle, Task] Master Detail Relationship *
    name = models.CharField(max_length=255, verbose_name='File Name')
    is_private = models.BooleanField(verbose_name='Private', default=models.DefaultedOnCreate(False))
    content_type = models.CharField(max_length=120, blank=True, null=True)
    body_length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField()
    owner = models.ForeignKey('Calendar', models.DO_NOTHING)  # Reference to tables [Calendar, User]
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='attachment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='attachment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    description = models.TextField(blank=True, null=True)
    is_encrypted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'Attachment'
        verbose_name = 'Attachment'
        verbose_name_plural = 'Attachments'
        # keyPrefix = '00P'



class Audience(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.NOT_CREATEABLE)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.NOT_CREATEABLE, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.NOT_CREATEABLE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='audience_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='audience_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    container = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Network, Organization] Master Detail Relationship *
    audience_name = models.CharField(max_length=80, sf_read_only=models.NOT_CREATEABLE)
    description = models.CharField(max_length=255, sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    formula_filter_type = models.CharField(max_length=255, sf_read_only=models.NOT_CREATEABLE, choices=[('AllCriteriaMatch', 'All Conditions Are Met'), ('AnyCriterionMatches', 'Any Condition Is Met'), ('CustomLogicMatches', 'Custom Logic Is Met')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Audience'
        verbose_name = 'Audience'
        verbose_name_plural = 'Audiences'
        # keyPrefix = '6Au'



class AuraDefinition(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='auradefinition_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='auradefinition_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    aura_definition_bundle = models.ForeignKey('AuraDefinitionBundle', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    def_type = models.CharField(max_length=255, verbose_name='Definition Type', sf_read_only=models.READ_ONLY, choices=[('APPLICATION', '0'), ('CONTROLLER', '1'), ('COMPONENT', '2'), ('EVENT', '3'), ('HELPER', '4'), ('INTERFACE', '5'), ('RENDERER', '7'), ('STYLE', '8'), ('PROVIDER', '9'), ('MODEL', '10'), ('TESTSUITE', '11'), ('DOCUMENTATION', '12'), ('TOKENS', '13'), ('DESIGN', '14'), ('SVG', '15'), ('MODULE', '16')])
    format = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('XML', 'XML'), ('JS', 'JS'), ('CSS', 'CSS'), ('TEMPLATE_CSS', 'TEMPLATE_CSS'), ('SVG', 'SVG')])
    source = models.TextField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'AuraDefinition'
        verbose_name = 'Lightning Component Definition'
        verbose_name_plural = 'Lightning Component Definitions'
        # keyPrefix = '0Ad'



class AuraDefinitionBundle(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='auradefinitionbundle_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='auradefinitionbundle_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'AuraDefinitionBundle'
        verbose_name = 'Aura Component Bundle'
        verbose_name_plural = 'Aura Component Bundles'
        # keyPrefix = '0Ab'



class AuraDefinitionBundleInfo(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    aura_definition_bundle_id = models.CharField(max_length=18, verbose_name='Lightning Definition Bundle ID', sf_read_only=models.READ_ONLY)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='Bundle Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AuraDefinitionBundleInfo'
        verbose_name = 'AuraDefinitionBundle Info'
        verbose_name_plural = 'AuraDefinitionBundle Infos'
        # keyPrefix = '0ab'



class AuraDefinitionInfo(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    aura_definition_bundle_info_id = models.CharField(max_length=100, verbose_name='Lightning Definition Bundle ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    aura_definition_id = models.CharField(max_length=18, verbose_name='Lightning Definition ID', sf_read_only=models.READ_ONLY)
    def_type = models.CharField(max_length=255, verbose_name='Definition Type', sf_read_only=models.READ_ONLY, choices=[('APPLICATION', '0'), ('CONTROLLER', '1'), ('COMPONENT', '2'), ('EVENT', '3'), ('HELPER', '4'), ('INTERFACE', '5'), ('RENDERER', '7'), ('STYLE', '8'), ('PROVIDER', '9'), ('MODEL', '10'), ('TESTSUITE', '11'), ('DOCUMENTATION', '12'), ('TOKENS', '13'), ('DESIGN', '14'), ('SVG', '15'), ('MODULE', '16')])
    format = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('XML', 'XML'), ('JS', 'JS'), ('CSS', 'CSS'), ('TEMPLATE_CSS', 'TEMPLATE_CSS'), ('SVG', 'SVG')])
    source = models.TextField(sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    developer_name = models.CharField(max_length=80, verbose_name='Bundle Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'AuraDefinitionInfo'
        verbose_name = 'AuraDefinition Info'
        verbose_name_plural = 'AuraDefinition Infos'
        # keyPrefix = '0ad'



class AuthConfig(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='authconfig_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='authconfig_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    url = models.CharField(unique=True, max_length=240, verbose_name='URL', sf_read_only=models.READ_ONLY)
    auth_options_username_password = models.BooleanField(verbose_name='UsernamePassword', sf_read_only=models.READ_ONLY)
    auth_options_saml = models.BooleanField(verbose_name='Saml', sf_read_only=models.READ_ONLY)
    auth_options_auth_provider = models.BooleanField(verbose_name='AuthProvider', sf_read_only=models.READ_ONLY)
    auth_options_certificate = models.BooleanField(verbose_name='Certificate', sf_read_only=models.READ_ONLY)
    is_active = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    type = models.CharField(max_length=255, verbose_name='Authentication Configuration Type', sf_read_only=models.READ_ONLY, choices=[('Org', 'Org'), ('Community', 'Community'), ('Site', 'Site'), ('Portal', 'Portal')])
    class Meta(models.Model.Meta):
        db_table = 'AuthConfig'
        verbose_name = 'Authentication Configuration'
        verbose_name_plural = 'Authentication Configurations'
        # keyPrefix = '07T'



class AuthConfigProviders(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='authconfigproviders_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='authconfigproviders_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    auth_config = models.ForeignKey(AuthConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    auth_provider = models.ForeignKey('SamlSsoConfig', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'AuthConfigProviders'
        verbose_name = 'Authentication Configuration Auth. Provider'
        verbose_name_plural = 'Authentication Configuration Auth. Providers'
        # keyPrefix = '07U'



class AuthSession(models.Model):
    users = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(verbose_name='Created', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(verbose_name='Updated', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    num_seconds_valid = models.IntegerField(verbose_name='Valid For', sf_read_only=models.READ_ONLY)
    user_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Standard', 'Standard'), ('PowerPartner', 'Partner'), ('PowerCustomerSuccess', 'Customer Portal Manager'), ('CustomerSuccess', 'Customer Portal User'), ('Guest', 'Guest'), ('CspLitePortal', 'High Volume Portal'), ('CsnOnly', 'CSN Only'), ('SelfService', 'Self Service')])
    source_ip = models.CharField(max_length=39, verbose_name='Source IP', sf_read_only=models.READ_ONLY)
    login_type = models.CharField(max_length=40, verbose_name='Login', sf_read_only=models.READ_ONLY, blank=True, null=True)
    session_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    session_security_level = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('LOW', None), ('STANDARD', None), ('HIGH_ASSURANCE', None)], blank=True, null=True)
    logout_url = models.CharField(max_length=1500, verbose_name='Logout URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    login_history = models.ForeignKey('LoginHistory', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_current = models.BooleanField(verbose_name='Current Session', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'AuthSession'
        verbose_name = 'Auth Session'
        verbose_name_plural = 'Auth Sessions'
        # keyPrefix = '0Ak'



class BackgroundOperation(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Background Operation Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='backgroundoperation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='backgroundoperation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    submitted_at = models.DateTimeField(verbose_name='Submitted', sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('New', None), ('Scheduled', None), ('Canceled', None), ('Merged', None), ('Waiting', None), ('Running', None), ('Error', None), ('Complete', None)], blank=True, null=True)
    execution_group = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sequence_group = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sequence_number = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    group_leader = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    started_at = models.DateTimeField(verbose_name='Started', sf_read_only=models.READ_ONLY, blank=True, null=True)
    finished_at = models.DateTimeField(verbose_name='Finished', sf_read_only=models.READ_ONLY, blank=True, null=True)
    worker_uri = models.CharField(max_length=255, verbose_name='Worker URI', sf_read_only=models.READ_ONLY, blank=True, null=True)
    timeout = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    expires_at = models.DateTimeField(verbose_name='ExpiresAt', sf_read_only=models.READ_ONLY, blank=True, null=True)
    num_followers = models.IntegerField(verbose_name='NumFollowers', sf_read_only=models.READ_ONLY, blank=True, null=True)
    process_after = models.DateTimeField(verbose_name='ProcessAfter', sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent_key = models.CharField(max_length=255, verbose_name='ParentKey', sf_read_only=models.READ_ONLY, blank=True, null=True)
    retry_limit = models.IntegerField(verbose_name='RetryLimit', sf_read_only=models.READ_ONLY, blank=True, null=True)
    retry_count = models.IntegerField(verbose_name='RetryCount', sf_read_only=models.READ_ONLY, blank=True, null=True)
    retry_backoff = models.IntegerField(verbose_name='RetryBackoff', sf_read_only=models.READ_ONLY, blank=True, null=True)
    error = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'BackgroundOperation'
        verbose_name = 'Background Operation'
        verbose_name_plural = 'Background Operations'
        # keyPrefix = '08P'



class BackgroundOperationResult(models.Model):
    parent_id = models.CharField(max_length=18, verbose_name='Parent ID', sf_read_only=models.READ_ONLY)  # No Reference table
    data = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    message = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    message_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('ERROR', None), ('WARNING', None), ('INFO', None)], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'BackgroundOperationResult'
        verbose_name = 'Background Operation Result'
        verbose_name_plural = 'Background Operation Result'
        # keyPrefix = '06q'



class BrandTemplate(models.Model):
    name = models.CharField(max_length=255, verbose_name='Brand Template Name', sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='Letterhead Unique Name', sf_read_only=models.READ_ONLY)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    description = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    value = models.TextField(sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='brandtemplate_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='brandtemplate_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'BrandTemplate'
        verbose_name = 'Letterhead'
        verbose_name_plural = 'Letterheads'
        # keyPrefix = '016'



class BrandingSet(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Set Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='brandingset_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='brandingset_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'BrandingSet'
        verbose_name = 'Branding Set'
        verbose_name_plural = 'Branding Sets'
        # keyPrefix = '0Lw'



class BrandingSetProperty(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='brandingsetproperty_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='brandingsetproperty_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    branding_set = models.ForeignKey(BrandingSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    property_name = models.CharField(max_length=255, verbose_name='Branding Set Property Name', sf_read_only=models.READ_ONLY)
    property_value = models.TextField(verbose_name='Branding Set Property Value', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'BrandingSetProperty'
        verbose_name = 'Branding Set Property'
        verbose_name_plural = 'Branding Set Properties'
        # keyPrefix = '0Ly'



class BusinessHours(models.Model):
    name = models.CharField(max_length=80, verbose_name='Business Hours Name', sf_read_only=models.READ_ONLY)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_default = models.BooleanField(verbose_name='Default Business Hours', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sunday_start_time = models.TimeField(verbose_name='Sunday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    sunday_end_time = models.TimeField(verbose_name='Sunday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    monday_start_time = models.TimeField(verbose_name='Monday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    monday_end_time = models.TimeField(verbose_name='Monday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    tuesday_start_time = models.TimeField(verbose_name='Tuesday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    tuesday_end_time = models.TimeField(verbose_name='Tuesday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    wednesday_start_time = models.TimeField(verbose_name='Wednesday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    wednesday_end_time = models.TimeField(verbose_name='Wednesday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    thursday_start_time = models.TimeField(verbose_name='Thursday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    thursday_end_time = models.TimeField(verbose_name='Thursday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    friday_start_time = models.TimeField(verbose_name='Friday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    friday_end_time = models.TimeField(verbose_name='Friday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    saturday_start_time = models.TimeField(verbose_name='Saturday Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    saturday_end_time = models.TimeField(verbose_name='Saturday End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    time_zone_sid_key = models.CharField(max_length=40, verbose_name='Time Zone', sf_read_only=models.READ_ONLY, choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')])
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='businesshours_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='businesshours_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'BusinessHours'
        verbose_name = 'Business Hours'
        verbose_name_plural = 'Business Hours'
        # keyPrefix = '01m'



class BusinessProcess(models.Model):
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    table_enum_or_id = models.CharField(max_length=40, verbose_name='Entity Enumeration Or ID', sf_read_only=models.READ_ONLY, choices=[('Case', None), ('Lead', None), ('Opportunity', None), ('Solution', None)])
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='businessprocess_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='businessprocess_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'BusinessProcess'
        verbose_name = 'Business Process'
        verbose_name_plural = 'Business Process'
        # keyPrefix = '019'



class Calendar(models.Model):
    name = models.CharField(max_length=80, verbose_name='Calendar Name', sf_read_only=models.READ_ONLY)
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='calendar_user_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Calendar Type', sf_read_only=models.READ_ONLY, choices=[('User', 'User Calendar'), ('Public', 'Public Calendar'), ('Resource', 'Resource Calendar'), ('Holiday', 'Holiday Calendar')])
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='calendar_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='calendar_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Calendar'
        verbose_name = 'Calendar'
        verbose_name_plural = 'Calendars'
        # keyPrefix = '023'



class CallCenter(models.Model):
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    internal_name = models.CharField(max_length=240, sf_read_only=models.READ_ONLY)
    version = models.DecimalField(max_digits=18, decimal_places=3, sf_read_only=models.READ_ONLY, blank=True, null=True)
    adapter_url = models.CharField(max_length=2000, verbose_name='CTI Adapter URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    custom_settings = models.CharField(max_length=3000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='callcenter_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='callcenter_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'CallCenter'
        verbose_name = 'Call Center'
        verbose_name_plural = 'Call Centers'
        # keyPrefix = '04v'



class CaseSubjectParticle(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='casesubjectparticle_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='casesubjectparticle_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    index = models.IntegerField(unique=True, sf_read_only=models.READ_ONLY)
    type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('ProvidedString', 'ProvidedString'), ('Source', 'Source'), ('MessageType', 'MessageType'), ('SocialHandle', 'SocialHandle'), ('SocialNetwork', 'SocialNetwork'), ('Sentiment', 'Sentiment'), ('RealName', 'RealName'), ('Content', 'Message'), ('PipeSeparator', 'PipeSeparator'), ('ColonSeparator', 'ColonSeparator'), ('HyphenSeparator', 'HyphenSeparator')])
    text_field = models.CharField(max_length=255, verbose_name='Freeform Text Field', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CaseSubjectParticle'
        verbose_name = 'Case Subject Particle'
        verbose_name_plural = 'Case Subject Particles'
        # keyPrefix = '0Oi'



class CategoryNode(models.Model):
    parent = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    master_label = models.CharField(max_length=40, verbose_name='Name', sf_read_only=models.READ_ONLY)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    sort_style = models.CharField(max_length=40, verbose_name='Subcategory Sort Style', sf_read_only=models.READ_ONLY, choices=[('custom', 'Custom Order'), ('alphabetical', 'Alphabetical Order')])
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='categorynode_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='categorynode_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'CategoryNode'
        verbose_name = 'Category Node'
        verbose_name_plural = 'Category Nodes'
        # keyPrefix = '02n'



class ChatterActivity(models.Model):
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    post_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    comment_received_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_received_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    influence_raw_rank = models.IntegerField(sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ChatterActivity'
        verbose_name = 'Chatter Activity'
        verbose_name_plural = 'Chatter Activity'
        # keyPrefix = '0ca'



class ChatterExtension(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name')
    language = models.CharField(max_length=40, verbose_name='Master Language', default=models.DEFAULTED_ON_CREATE, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    master_label = models.CharField(max_length=80, verbose_name='Label')
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_protected = models.BooleanField(verbose_name='Protected Component', default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='chatterextension_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='chatterextension_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    extension_name = models.CharField(max_length=32, verbose_name='Name')
    type = models.CharField(max_length=255, choices=[('Lightning', None)])
    icon = models.ForeignKey('ContentAsset', models.DO_NOTHING, blank=True, null=True)
    description = models.CharField(max_length=255)
    composition_component_enum_or_id = models.CharField(max_length=255, verbose_name='Lightning Definition Bundle ID', choices=[('adminui:adminTemplate', None), ('aloha_sales_forecasting:forecasting3OrgSettings', None), ('aloha_sales_forecasting:forecasting3TypeSettings', None), ('aloha_sales_forecasting:forecasting3settings', None), ('aloha_sales_opptysplit:multiLineEdit', None), ('aloha_sales_opptysplit:multiLineEditColumn', None), ('aloha_sales_opptysplit:multiLineEditExample', None), ('aloha_sales_opptysplit:multiLineEditItem', None), ('aloha_sales_opptysplit:multiLineEditRecordHeader', None), ('aloha_sales_opptysplit:multiLineEditSection', None), ('aloha_sales_opptysplit:multiLineEditSectionFooter', None), ('aloha_sales_opptysplit:multiLineEditWrapper', None), ('aloha_sales_opptysplit:opportunitySplitTabBody', None), ('aloha_sales_opptysplit:opportunitySplitTabHeader', None), ('aloha_sales_opptysplit:opportunitySplitTabSet', None), ('aloha_sales_opptysplit:opportunitySplitTypeMultiEditSection', None), ('aloha_sales_opptysplit:opportunitySplitsTypeSectionFooter', None), ('aloha_sales_tm2:territory2AsyncHelper', None), ('aloha_sales_tm2:territory2DialogAlert', None), ('aloha_sales_tm2:territory2ModelHeader', None), ('aloha_sales_tm2:territory2Settings', None), ('aloha_sales_tm2:territoryManagement2Enable', None), ('analytics:chart', None), ('analytics:componentError', None), ('analytics:cordaChart', None), ('analytics:csrPopChart', None), ('analytics:embeddedChart', None), ('analytics:embeddedReportChart', None), ('analytics:metric', None), ('analytics:pluginChart', None), ('analytics:reportChart', None), ('analytics:reportMetadata', None), ('analytics:scheduleSelectorBase', None), ('analytics:subscribeDialog', None), ('analytics:subscribeDialogFooter', None), ('analytics:table', None), ('analytics:urogFilterableList', None), ('analyticsHome:analyticsDataProvider', None), ('analyticsHome:analyticsVirtualAction', None), ('analyticsHome:createNewDashboard', None), ('analyticsHome:createNewReport', None), ('analyticsHome:deleteFolderErrorDialog', None), ('analyticsHome:deleteFolderErrorDialogFooter', None), ('analyticsHome:deleteShareConfirmationDialog', None), ('analyticsHome:deleteShareConfirmationDialogFooter', None), ('analyticsHome:folderNameDialog', None), ('analyticsHome:folderNameDialogFooter', None), ('analyticsHome:folderOutput', None), ('analyticsHome:folderShare', None), ('analyticsHome:folderShareEntityDataProvider', None), ('analyticsHome:folderShareGrid', None), ('analyticsHome:folderShareGridDataProvider', None), ('analyticsHome:folderShareGridEditAccessColumn', None), ('analyticsHome:folderShareGridEntityColumn', None), ('analyticsHome:folderShareGridRemoveShareColumn', None), ('analyticsHome:folderSharePanel', None), ('analyticsHome:folderSharePanelFooter', None), ('analyticsHome:folderShareWhoCanAccess', None), ('analyticsHome:subscribeCondition', None), ('analyticsHome:subscribeConditionSection', None), ('analyticsHome:subscribeConditionsList', None), ('analyticsHome:subscribeEmailOptionsSection', None), ('analyticsHome:subscriptionEditRecipientsDialog', None), ('analyticsHome:subscriptionRecipientsFilterableList', None), ('analyticsHome:subscriptionRecipientsFilterableListDataSource', None), ('analyticsHome:subscriptionRecipientsLookup', None), ('analyticsHome:subscriptionRecipientsLookupDataProvider', None), ('appexUi:appExchangeSetupOverlayOpener', None), ('appexUi:appexchangeOverlay', None), ('appexUi:appexchangeOverlayTest', None), ('appexUi:appexchangeOverlayWrapper', None), ('appexUi:appxBase', None), ('appexUi:bannersSide', None), ('appexUi:base', None), ('appexUi:breadcrumb', None), ('appexUi:carItem', None), ('appexUi:carousel', None), ('appexUi:category', None), ('appexUi:confirmInstallationDetails', None), ('appexUi:contentWrapper', None), ('appexUi:deleteReviewModal', None), ('appexUi:disabledOverlay', None), ('appexUi:dropdownFilter', None), ('appexUi:editUserProfile', None), ('appexUi:error', None), ('appexUi:filter', None), ('appexUi:filterActionButtons', None), ('appexUi:filterBox', None), ('appexUi:filterTooltip', None), ('appexUi:filterTrigger', None), ('appexUi:footer', None), ('appexUi:footerListingDetail', None), ('appexUi:genericExtraModal', None), ('appexUi:header', None), ('appexUi:history', None), ('appexUi:homeMenu', None), ('appexUi:landingPageTable', None), ('appexUi:landingPageTableSection', None), ('appexUi:landingPageTableSectionTitle', None), ('appexUi:linksList', None), ('appexUi:listingDetail', None), ('appexUi:listingDetailContent', None), ('appexUi:listingDetailContentTest', None), ('appexUi:listingDetailHeader', None), ('appexUi:listingDetailLeftSidePanel', None), ('appexUi:listingDetailLeftSidePanelTest', None), ('appexUi:listingDetailMenu', None), ('appexUi:listingDetailTest', None), ('appexUi:listingDetails', None), ('appexUi:listingDetailsTest', None), ('appexUi:listingInstallContent', None), ('appexUi:listingProvider', None), ('appexUi:listingReviews', None), ('appexUi:listingReviewsContent', None), ('appexUi:logInActions', None), ('appexUi:loginActionsModalHandler', None), ('appexUi:loginActionsModalHandlerTest', None), ('appexUi:loginActionsTest', None), ('appexUi:modalHandler', None), ('appexUi:modalHandlerTest', None), ('appexUi:mostHelpfulReviews', None), ('appexUi:navMenu', None), ('appexUi:pageBodyWrapper', None), ('appexUi:pageBodyWrapperTest', None), ('appexUi:pageHeaderWrapper', None), ('appexUi:popupMessage', None), ('appexUi:rating', None), ('appexUi:reportAbuseModal', None), ('appexUi:restAPI', None), ('appexUi:resultsMeta', None), ('appexUi:review', None), ('appexUi:reviewRating', None), ('appexUi:reviewsList', None), ('appexUi:reviewsModal', None), ('appexUi:richText', None), ('appexUi:searchInput', None), ('appexUi:searchResultText', None), ('appexUi:searchResults', None), ('appexUi:setupTile', None), ('appexUi:sort', None), ('appexUi:storeFilters', None), ('appexUi:storeFiltersTooltip', None), ('appexUi:svg', None), ('appexUi:tabsSearch', None), ('appexUi:template', None), ('appexUi:textAreaWithCounter', None), ('appexUi:tile', None), ('appexUi:tilesList', None), ('appexUi:userInfoReadOnly', None), ('appexUi:userInfoWriteProfile', None), ('assistantFramework:assistantBlock', None), ('assistantFramework:assistantBlockCompressed', None), ('assistantFramework:assistantPage', None), ('assistantFramework:header', None), ('assistantFramework:learningPathCustomStep', None), ('assistantFramework:learningPathList', None), ('assistantFramework:learningPathStepCompressedTemplate', None), ('assistantFramework:learningPathStepTemplate', None), ('assistantFramework:linkWithTooltip', None), ('assistantFramework:navigationComponent', None), ('assistantFramework:pathCompleteBlock', None), ('assistantFramework:pathSummaryBlock', None), ('assistantFramework:relatedContent', None), ('assistantFramework:setupAssistantProgress', None), ('assistantFramework:summaryBlock', None), ('assistantFramework:wizard', None), ('assistantFramework:wizardHeader', None), ('assistantFramework:wizardNavigator', None), ('assistantFramework:wizardStep', None), ('assistantFrameworkModules:addUsersInput', None), ('assistantFrameworkModules:addUsersInputStep', None), ('assistantFrameworkModules:addUsersList', None), ('assistantFrameworkModules:addUsersSuccess', None), ('assistantFrameworkModules:addUsersSuccessStep', None), ('assistantFrameworkModules:addUsersWizard', None), ('assistantFrameworkModules:dataImportContainer', None), ('assistantFrameworkModules:dragDropList', None), ('assistantFrameworkModules:eacConnectStep', None), ('assistantFrameworkModules:eacContactAdmin', None), ('assistantFrameworkModules:eacEnableStep', None), ('assistantFrameworkModules:eacLandingStep', None), ('assistantFrameworkModules:eacReviewTermsStep', None), ('assistantFrameworkModules:eacWizard', None), ('assistantFrameworkModules:inviteUsersInput', None), ('assistantFrameworkModules:inviteUsersInputStep', None), ('assistantFrameworkModules:inviteUsersWizard', None), ('assistantFrameworkModules:listItemMover', None), ('assistantFrameworkModules:opportunityStageAddTemplate', None), ('assistantFrameworkModules:opportunityStageConfigureTemplate', None), ('assistantFrameworkModules:opportunityStagesAdd', None), ('assistantFrameworkModules:opportunityStagesAddStep', None), ('assistantFrameworkModules:opportunityStagesConfigure', None), ('assistantFrameworkModules:opportunityStagesConfigureStep', None), ('assistantFrameworkModules:opportunityStagesReview', None), ('assistantFrameworkModules:opportunityStagesReviewStep', None), ('assistantFrameworkModules:opportunityStagesWizard', None), ('assistantFrameworkModules:resourceDownloadStep', None), ('assistantFrameworkModules:resourceDownloadWizard', None), ('assistantFrameworkModules:videoStep', None), ('assistantFrameworkModules:vidyardVideoWizard', None), ('aura:component', None), ('aura:debug', None), ('aura:embeddedTemplate', None), ('aura:expression', None), ('aura:html', None), ('aura:if', None), ('aura:include', None), ('aura:integrationServiceTemplate', None), ('aura:iteration', None), ('aura:label', None), ('aura:placeholder', None), ('aura:renderIf', None), ('aura:template', None), ('aura:text', None), ('aura:unescapedHtml', None), ('auraStorage:crypto', None), ('auraStorage:fuelGauge', None), ('auraStorage:init', None), ('auradev:blankTemplate', None), ('auradev:testDataProvider', None), ('auradev:testDataProvider2', None), ('auradocs:about', None), ('auradocs:api', None), ('auradocs:apiParam', None), ('auradocs:apiParams', None), ('auradocs:apiSymbol', None), ('auradocs:apiSymbols', None), ('auradocs:apiTopic', None), ('auradocs:codeblock', None), ('auradocs:def', None), ('auradocs:defDependencies', None), ('auradocs:defDescription', None), ('auradocs:defLayout', None), ('auradocs:defLink', None), ('auradocs:defMemberList', None), ('auradocs:defOverview', None), ('auradocs:demoAutocomplete', None), ('auradocs:demoAutocompleteProvider', None), ('auradocs:demoCarousel', None), ('auradocs:demoCss', None), ('auradocs:demoDataProvider', None), ('auradocs:demoDialog', None), ('auradocs:demoEvents', None), ('auradocs:demoForm', None), ('auradocs:demoFriendlyError', None), ('auradocs:demoLabel', None), ('auradocs:demoLabelDyn', None), ('auradocs:demoLangLocale', None), ('auradocs:demoList', None), ('auradocs:demoListTemplate', None), ('auradocs:demoLocale', None), ('auradocs:demoMenu', None), ('auradocs:demoMenuMeta', None), ('auradocs:demoMessage', None), ('auradocs:demoModal', None), ('auradocs:demoPanel', None), ('auradocs:demoScroller', None), ('auradocs:demoSelect', None), ('auradocs:demoSpinner', None), ('auradocs:demoStamp', None), ('auradocs:demoSubmitForm', None), ('auradocs:demoTab', None), ('auradocs:demoTable', None), ('auradocs:demoTodo', None), ('auradocs:demoToolbar', None), ('auradocs:demoTooltip', None), ('auradocs:demoVbox', None), ('auradocs:demoVdatagrid', None), ('auradocs:demos', None), ('auradocs:descriptorLink', None), ('auradocs:docTestRef', None), ('auradocs:doctabs', None), ('auradocs:download', None), ('auradocs:editorPanel', None), ('auradocs:empty', None), ('auradocs:error', None), ('auradocs:helloAttributes', None), ('auradocs:helpPanel', None), ('auradocs:home', None), ('auradocs:htmlTags', None), ('auradocs:htmlTagsTopic', None), ('auradocs:info', None), ('auradocs:nav', None), ('auradocs:navLink', None), ('auradocs:openTopicTree', None), ('auradocs:prefixerTopic', None), ('auradocs:referenceTabTopic', None), ('auradocs:referenceTopicLink', None), ('auradocs:referenceTree', None), ('auradocs:referenceTreeSection', None), ('auradocs:sampleUnescape', None), ('auradocs:searchFilterTree', None), ('auradocs:sidebar', None), ('auradocs:simpledragdrop', None), ('auradocs:spinnerTopic', None), ('auradocs:stretchEditorPanel', None), ('auradocs:stretchTab', None), ('auradocs:tableDemo', None), ('auradocs:template', None), ('auradocs:topic', None), ('auradocs:topicExample', None), ('auradocs:topicLink', None), ('auradocs:topicList', None), ('auradocs:topicPanel', None), ('auradocs:topics', None), ('auradocs:warning', None), ('auradocs:welcomeTopic', None), ('auraplat:defSource', None), ('auraplat:lockerServiceSetup', None), ('b2b_buyer_builder:addedToCartModal', None), ('b2b_buyer_builder:availableLists', None), ('b2b_buyer_builder:availableListsDesignInfo', None), ('b2b_buyer_builder:cartBadge', None), ('b2b_buyer_builder:cartContents', None), ('b2b_buyer_builder:cartSummary', None), ('b2b_buyer_builder:cartSummaryDesignInfo', None), ('b2b_buyer_builder:categoryBreadcrumbs', None), ('b2b_buyer_builder:categoryBreadcrumbsDesignInfo', None), ('b2b_buyer_builder:checkoutButtonWrapper', None), ('b2b_buyer_builder:checkoutButtonWrapperDesignInfo', None), ('b2b_buyer_builder:clearCartModalWrapper', None), ('b2b_buyer_builder:productDescription', None), ('b2b_buyer_builder:productDescriptionDesignInfo', None), ('b2b_buyer_builder:productDetailDataContentMapping', None), ('b2b_buyer_builder:productDetailDataContentMappingItemEditor', None), ('b2b_buyer_builder:productDetailsSummary', None), ('b2b_buyer_builder:productDetailsSummaryDesignInfo', None), ('b2b_buyer_builder:productDetailsTable', None), ('b2b_buyer_builder:productDetailsTableDesignInfo', None), ('b2b_buyer_builder:quickOrderPage', None), ('b2b_buyer_data:cartService', None), ('b2b_buyer_data:productCardFieldService', None), ('b2b_buyer_data:productCategoryService', None), ('b2b_buyer_data:productDetailsService', None), ('b2b_buyer_data:productPricingService', None), ('b2b_buyer_data:productSearchService', None), ('b2b_buyer_data:searchSettingsService', None), ('b2b_search_builder:contentMappingContainer', None), ('b2b_search_builder:contentMappingItemEditor', None), ('b2b_search_builder:resultsDisplay', None), ('b2b_search_builder:searchInput', None), ('b2b_search_management:commerceSearch', None), ('b2b_search_management:displaySettingsContainer', None), ('b2b_search_management:searchIndexContainer', None), ('b2b_search_management:searchableFieldsContainer', None), ('builder_communities_nba:editorPanelProxy', None), ('builder_communities_nba:nbaWidgetDesignInfo', None), ('builder_communities_nba:runPanel', None), ('builder_communities_nba:serverDataLibInit', None), ('builder_communities_nba:strategyBuilderBody', None), ('builder_communities_nba:strategyBuilderTemplate', None), ('builder_framework:auraControllerProvider', None), ('builder_framework:auraControllerProviderManager', None), ('builder_framework:auraErrorHandlerControllerProvider', None), ('builder_framework:designTimeComponentInfoControllerProvider', None), ('builder_framework:designTimeComponentPropertyInfoControllerProvider', None), ('builder_framework:emailHtmlGen', None), ('builder_framework:exampleExpandedEditor', None), ('builder_framework:exampleRichTextCkEditor', None), ('builder_framework:imagePanelManager', None), ('builder_framework:visualEditorBuilderControllerProvider', None), ('builder_framework:visualEditorExpressionService', None), ('builder_framework:visualEditorInfoComponentWrapper', None), ('builder_framework:visualEditorPaletteControllerProvider', None), ('builder_framework:visualEditorPropertyEditorWrapper', None), ('builder_industries_decisiontable:editor', None), ('builder_industries_fsc:fscRelationships', None), ('builder_industries_healthcare:careDeterminants', None), ('builder_industries_healthcare:careProgramsCommunity', None), ('builder_industries_insurance:communityIndustryMilestones', None), ('builder_industries_insurance:communityPolicy360', None), ('builder_industries_insurance:fscMultiTbl', None), ('builder_industries_insurance:fscSinglTbl', None), ('builder_industries_insurance:keyHomeMetrices', None), ('builder_industries_insurance:keyMetrics', None), ('builder_industries_insurance:lifeEvents', None), ('builder_industries_insurance:outlookperformance', None), ('builder_industries_insurance:policy360', None), ('builder_industries_insurance:summaryMetrics', None), ('builder_industries_publicsector:businessProfileContainer', None), ('builder_industries_publicsector:licensePermitList', None), ('builder_industries_publicsector:licensePermitLookupContainer', None), ('builder_industries_publicsector:reportBusinessContainer', None), ('builder_industries_survey:deleteSurvey', None), ('builder_industries_survey:surveySetup', None), ('builder_industries_utilizationmanagement:careRequestDetails', None), ('builder_industries_utilizationmanagement:createCareRequest', None), ('builder_industries_utilizationmanagement:createCareRequestCommunity', None), ('builder_industries_visit:visitInventorySettings', None), ('builder_industries_visit:visitsHome', None), ('builder_platform_blockchain:blockchainManager', None), ('builder_platform_blockchain:serverLibWrapper', None), ('builder_platform_interaction:container', None), ('builder_platform_interaction:flowBuilderTemplate', None), ('builder_platform_interaction:panelManagerWrapper', None), ('builder_platform_interaction:propertyEditor', None), ('builder_platform_interaction:propertyEditorFooter', None), ('builder_platform_interaction:propertyEditorHeader', None), ('builder_platform_interaction:serverDataLibInit', None), ('builder_platform_process:test', None), ('builder_platform_usage:serverDataLibInit', None), ('builder_platform_usage:usageEntitlementExplorer', None), ('builder_service_chatbots:analyticsState', None), ('builder_service_chatbots:appHeader', None), ('builder_service_chatbots:appNavigation', None), ('builder_service_chatbots:baseTemplate', None), ('builder_service_chatbots:botDetails', None), ('builder_service_chatbots:botDomainsListCard', None), ('builder_service_chatbots:botGlobalSettings', None), ('builder_service_chatbots:botList', None), ('builder_service_chatbots:botListItem', None), ('builder_service_chatbots:botLogFilter', None), ('builder_service_chatbots:botLogList', None), ('builder_service_chatbots:botLogPanel', None), ('builder_service_chatbots:botMetrics', None), ('builder_service_chatbots:botOverview', None), ('builder_service_chatbots:botPerformance', None), ('builder_service_chatbots:botReviewTerms', None), ('builder_service_chatbots:botReviewTermsFlow', None), ('builder_service_chatbots:botSessionFilter', None), ('builder_service_chatbots:botSessionList', None), ('builder_service_chatbots:botSetup', None), ('builder_service_chatbots:botSetupWizard', None), ('builder_service_chatbots:botSetupWizardAstro', None), ('builder_service_chatbots:botSetupWizardComplete', None), ('builder_service_chatbots:botSetupWizardDetails', None), ('builder_service_chatbots:botSetupWizardGreeting', None), ('builder_service_chatbots:botSetupWizardMainMenu', None), ('builder_service_chatbots:botSetupWizardWelcome', None), ('builder_service_chatbots:botState', None), ('builder_service_chatbots:botVersionListItem', None), ('builder_service_chatbots:botVersionSettings', None), ('builder_service_chatbots:botVersionSettingsDelay', None), ('builder_service_chatbots:botVersionSettingsLogCustomerData', None), ('builder_service_chatbots:botVersionSettingsNlp', None), ('builder_service_chatbots:botVersionSettingsUser', None), ('builder_service_chatbots:builderCanvas', None), ('builder_service_chatbots:builderHeader', None), ('builder_service_chatbots:builderNav', None), ('builder_service_chatbots:builderPage', None), ('builder_service_chatbots:channelProviders', None), ('builder_service_chatbots:combobox', None), ('builder_service_chatbots:confirmModal', None), ('builder_service_chatbots:dialogBuilder', None), ('builder_service_chatbots:dialogCanvas', None), ('builder_service_chatbots:dialogDetail', None), ('builder_service_chatbots:dialogElement', None), ('builder_service_chatbots:dialogIntent', None), ('builder_service_chatbots:dialogMap', None), ('builder_service_chatbots:dialogMapConnector', None), ('builder_service_chatbots:dialogMapNode', None), ('builder_service_chatbots:dialogMapNodePopover', None), ('builder_service_chatbots:dialogMapZoomPanel', None), ('builder_service_chatbots:dialogState', None), ('builder_service_chatbots:domainState', None), ('builder_service_chatbots:element', None), ('builder_service_chatbots:elementCollectInfoQuickReply', None), ('builder_service_chatbots:elementCollectVariableInfo', None), ('builder_service_chatbots:elementMenu', None), ('builder_service_chatbots:elementMenuItem', None), ('builder_service_chatbots:elementMessage', None), ('builder_service_chatbots:elementRoute', None), ('builder_service_chatbots:elementRules', None), ('builder_service_chatbots:elementScript', None), ('builder_service_chatbots:errorModal', None), ('builder_service_chatbots:filter', None), ('builder_service_chatbots:intentCanvas', None), ('builder_service_chatbots:intentExtensionList', None), ('builder_service_chatbots:intentExtensionListItem', None), ('builder_service_chatbots:intentExtensionsCard', None), ('builder_service_chatbots:intentState', None), ('builder_service_chatbots:intentStateIcon', None), ('builder_service_chatbots:intentTraining', None), ('builder_service_chatbots:intentTrainingGame', None), ('builder_service_chatbots:intentTrainingList', None), ('builder_service_chatbots:iteration', None), ('builder_service_chatbots:modal', None), ('builder_service_chatbots:modalManager', None), ('builder_service_chatbots:modelState', None), ('builder_service_chatbots:nluDashboard', None), ('builder_service_chatbots:nluDashboardDataManager', None), ('builder_service_chatbots:nluDashboardIntentDetails', None), ('builder_service_chatbots:nluModelManagement', None), ('builder_service_chatbots:nluTestInput', None), ('builder_service_chatbots:previewPanel', None), ('builder_service_chatbots:router', None), ('builder_service_chatbots:routerState', None), ('builder_service_chatbots:routerUrlManager', None), ('builder_service_chatbots:selectDialog', None), ('builder_service_chatbots:selectRecord', None), ('builder_service_chatbots:setupState', None), ('builder_service_chatbots:slotClassCanvas', None), ('builder_service_chatbots:slotClassList', None), ('builder_service_chatbots:slotClassRecord', None), ('builder_service_chatbots:slotClassRecords', None), ('builder_service_chatbots:slotClassRecordsHeader', None), ('builder_service_chatbots:slotClassValueList', None), ('builder_service_chatbots:stateManager', None), ('builder_service_chatbots:store', None), ('builder_service_chatbots:template', None), ('builder_service_chatbots:tooltip', None), ('builder_service_chatbots:utterancesCard', None), ('builder_service_chatbots:variableRecords', None), ('calendar:abstractEvent', None), ('calendar:attendee', None), ('calendar:attendeeComposer', None), ('calendar:attendeeComposerWrapper', None), ('calendar:attendees', None), ('calendar:calendarColorMenuItem', None), ('calendar:calendarShareConfirmationModalBody', None), ('calendar:calendarShareDataProvider', None), ('calendar:calendarShareGrid', None), ('calendar:calendarShareGridAccessLevelColumn', None), ('calendar:calendarShareGridRemoveColumn', None), ('calendar:calendarShareGridTitleColumn', None), ('calendar:calendarTextureBox', None), ('calendar:columnHeader', None), ('calendar:createCalendarModal', None), ('calendar:createCalendarModalHeader', None), ('calendar:createCalendarWizardStep1', None), ('calendar:createCalendarWizardStep2', None), ('calendar:customColor', None), ('calendar:deleteEventSeriesModal', None), ('calendar:deleteModal', None), ('calendar:discoveryModal', None), ('calendar:home', None), ('calendar:isPrivateCheckboxWithGdprText', None), ('calendar:listItem', None), ('calendar:listPanel', None), ('calendar:multiColumnDayView', None), ('calendar:pillContainer', None), ('calendar:resourceAttendeeDataProvider', None), ('calendar:sfdcCalendarDataProvider', None), ('calendar:shareModal', None), ('calendar:sharedEventDetailPage', None), ('calendar:sharedEventDetailStencil', None), ('calendar:sidebar', None), ('calendar:timeMarker', None), ('calendar:timedEvent', None), ('calendar:troughEvent', None), ('calendar:troughLayout', None), ('calendar:troughToggle', None), ('calendar:updateCalendarModal', None), ('cg_retail:retailSearch', None), ('cg_retail:retailTaskKPI', None), ('cg_retail:retailTaskList', None), ('cg_retail:retailVisitAction', None), ('cg_retail:retailVisitList', None), ('cg_retail:retailVisitMap', None), ('cg_retail:retailVisitOverview', None), ('cg_retail:tabbedTaskContainer', None), ('chatbots:movable', None), ('chatbots:movableContainer', None), ('chatbots:treeGrid', None), ('chatbots:treeGridColumn', None), ('chatbots:treeGridRow', None), ('clients:accountInsightsContainer', None), ('clients:actionContainer', None), ('clients:actionsRibbon', None), ('clients:activateMailAppPage', None), ('clients:associationContext', None), ('clients:associationSelectionManager', None), ('clients:attachment', None), ('clients:attachmentDownloadPanelBody', None), ('clients:attachmentsCard', None), ('clients:attachmentsDataProvider', None), ('clients:attachmentsDataProviderComposeMode', None), ('clients:attachmentsManager', None), ('clients:auraService', None), ('clients:authEpt', None), ('clients:autoFocusForceSearchInputDesktop', None), ('clients:bustOutButton', None), ('clients:cardMetrics', None), ('clients:clientServices', None), ('clients:consentManager', None), ('clients:defaultMailAppTemplate', None), ('clients:detailedErrorModal', None), ('clients:duplicatePersonCardStencil', None), ('clients:einsteinInline', None), ('clients:einsteinInsightsButton', None), ('clients:emailContextComponentDecorator', None), ('clients:emailTemplatesActionContainerFlex', None), ('clients:emailTemplatesContainer', None), ('clients:emailTemplatesDesignInfo', None), ('clients:emailToSalesforceSettings', None), ('clients:exchangeUserMappingList', None), ('clients:exchangeUserMappingListDataProvider', None), ('clients:exchangeUserMappingSettings', None), ('clients:header', None), ('clients:hidingListRecordItem', None), ('clients:highlightsStencil', None), ('clients:homeCard', None), ('clients:hvsManager', None), ('clients:insightAggregator', None), ('clients:inviteeAddRowStencil', None), ('clients:inviteeListRowStencil', None), ('clients:labelWithLink', None), ('clients:leadScoreInline', None), ('clients:mailAppAndS2XPreferenceToggle', None), ('clients:mailAppCommonSettings', None), ('clients:mailAppFlexiPageList', None), ('clients:mailAppFlexiPageListDataProvider', None), ('clients:mailAppFlexiPageSettings', None), ('clients:mailAppGmailAndS2XGoogleSettings', None), ('clients:mailAppGmailSettings', None), ('clients:mailAppLightningPageDataProvider', None), ('clients:mailAppOutlookAndS2XExchangeSettings', None), ('clients:mailAppOutlookSettings', None), ('clients:mailAppSettingsSection', None), ('clients:mailAppSettingsSubsection', None), ('clients:matchingManager', None), ('clients:msMailContainerFlex', None), ('clients:msMailFooter', None), ('clients:opportunityInsightsContainer', None), ('clients:opportunityScoreInline', None), ('clients:opportunityTopInsightInline', None), ('clients:outlookDiagnosticTool', None), ('clients:outlookPublisherLayoutTable', None), ('clients:outlookPublisherLayoutTableDataProvider', None), ('clients:outputEmail', None), ('clients:owaWhitelistDataProvider', None), ('clients:owaWhitelistDisplay', None), ('clients:owaWhitelistEditor', None), ('clients:owaWhitelistSettings', None), ('clients:pageActionMenu', None), ('clients:pageAssignmentByProfileReviewStep', None), ('clients:pageAssignmentDefaultAssignmentReviewStep', None), ('clients:pageAssignmentPickerStep', None), ('clients:pageAssignmentProfilePickerStep', None), ('clients:pageAssignmentReviewStepDataProvider', None), ('clients:pageAssignmentSetDefaultOrAssignStep', None), ('clients:pardotEngageContainer', None), ('clients:pardotEngagePersonSelector', None), ('clients:pardotEngageToggle', None), ('clients:peopleCardContainerFlex', None), ('clients:peopleCardContainerFlexDesignInfo', None), ('clients:peopleCardDesignSubstitute', None), ('clients:peopleDupeRadio', None), ('clients:peopleDuplicateButton', None), ('clients:peopleDuplicateList', None), ('clients:peopleListCard', None), ('clients:peopleListDataManager', None), ('clients:peopleListDesignDataManager', None), ('clients:peopleListing', None), ('clients:permanentlyDismissableDialog', None), ('clients:pre', None), ('clients:profilePageAssignment', None), ('clients:profilePageAssignmentDataProvider', None), ('clients:publisherLayoutSettings', None), ('clients:quickActionHeader', None), ('clients:quickActionLayout', None), ('clients:quickActionsLoader', None), ('clients:quickCreateButton', None), ('clients:quickCreateMenuItem', None), ('clients:recipientList', None), ('clients:recordDetail', None), ('clients:recordLayoutLoader', None), ('clients:recordList', None), ('clients:recordListing', None), ('clients:relatedCustomEntity', None), ('clients:relatedCustomEntityDesignInfo', None), ('clients:relatedCustomEntitySubstitute', None), ('clients:relatedRecordCollectionDataManager', None), ('clients:relatedRecordCollectionDesignDataManager', None), ('clients:relatedRecordEntityDesignInfo', None), ('clients:relatedRecordListCard', None), ('clients:relatedRecordListCardStencil', None), ('clients:relatedRecordStencilBase', None), ('clients:relatedRecordsPageDesignSubstitute', None), ('clients:relatedRecordsPageFlex', None), ('clients:relatedToLabelManager', None), ('clients:s2xCredentialFlowStepContainer', None), ('clients:s2xCredentialFlowStepIcon', None), ('clients:s2xCredentialsFlow', None), ('clients:s2xCredentialsTestUser', None), ('clients:s2xExchangeOAuthCredentials', None), ('clients:s2xExchangeServiceAccountCredentials', None), ('clients:s2xExchangeSettings', None), ('clients:s2xGoogleOAuthCredentials', None), ('clients:s2xGoogleSettings', None), ('clients:s2xServerTypeChangeModal', None), ('clients:s2xStatusSettings', None), ('clients:searchButton', None), ('clients:searchStencil', None), ('clients:selectiveAttachments', None), ('clients:sfoEndOfSale', None), ('clients:sidepanelAppDependenciesTemplate', None), ('clients:speedtest', None), ('clients:styledOutAppContainer', None), ('clients:styledOutAppTemplate', None), ('clients:tab', None), ('clients:tabset', None), ('clients:tabsetDesignInfo', None), ('clients:tasksActionContainerFlex', None), ('clients:tasksCardContainerFlex', None), ('clients:tasksContainerFlexDesignInfo', None), ('clients:tasksListFilter', None), ('clients:tasksListViewAll', None), ('clients:template', None), ('clients:unactionableRelatedRecordStencil', None), ('clients:userFeedbackManager', None), ('clients:userProfileCard', None), ('clients:virtualAction', None), ('clients:workQueueWidget', None), ('clients:workQueueWidgetDesignInfo', None), ('cmsAuthor:addPublishTargets', None), ('cmsAuthor:allExperiencesWrapper', None), ('cmsAuthor:allWorkspaces', None), ('cmsAuthor:cmsAuthorHome', None), ('cmsAuthor:cmsChannels', None), ('cmsAuthor:cmsRecordCompactLayout', None), ('cmsAuthor:cmsRichEditorCreateLinkPanel', None), ('cmsAuthor:cmsRichEditorCreateVideoPanel', None), ('cmsAuthor:cmsRichEditorHeaderSelect', None), ('cmsAuthor:cmsRichEditorLinkButton', None), ('cmsAuthor:cmsRichEditorVideoButton', None), ('cmsAuthor:cmsWelcomeMat', None), ('cmsAuthor:cmsWorkspaceHome', None), ('cmsAuthor:collaborators', None), ('cmsAuthor:contentDetail', None), ('cmsAuthor:contentPicker', None), ('cmsAuthor:contentPickerCreateMedia', None), ('cmsAuthor:contentSpaceCreateForm', None), ('cmsAuthor:contentSpaceCreateWizard', None), ('cmsAuthor:contentSpaceForm', None), ('cmsAuthor:contentSpaceSelectLanguages', None), ('cmsAuthor:contentSpaceSummary', None), ('cmsAuthor:contentTypeChooser', None), ('cmsAuthor:getStartedBanner', None), ('cmsAuthor:help', None), ('cmsAuthor:imageUploadWithPreview', None), ('cmsAuthor:importTranslationsPanel', None), ('cmsAuthor:inputDateNode', None), ('cmsAuthor:inputDateTimeNode', None), ('cmsAuthor:inputImgNode', None), ('cmsAuthor:inputMTextNode', None), ('cmsAuthor:inputMediaContentNode', None), ('cmsAuthor:inputRTENode', None), ('cmsAuthor:inputReferenceContentPickerNode', None), ('cmsAuthor:inputTextNode', None), ('cmsAuthor:inputTitleNode', None), ('cmsAuthor:inputURLNode', None), ('cmsAuthor:languagesPanelLauncher', None), ('cmsAuthor:managePublishTargets', None), ('cmsAuthor:managePublishTargetsDataProvider', None), ('cmsAuthor:managedContentChannelCreate', None), ('cmsAuthor:managedContentChannelEdit', None), ('cmsAuthor:managedContentEmptyState', None), ('cmsAuthor:managedContentForm', None), ('cmsAuthor:managedContentItemHeader', None), ('cmsAuthor:managedContentLayout', None), ('cmsAuthor:managedContentList', None), ('cmsAuthor:managedContentPage', None), ('cmsAuthor:managedContentTranslationView', None), ('cmsAuthor:managedContentVersionList', None), ('cmsAuthor:mcontentNavigationCMC', None), ('cmsAuthor:mcontentNavigationLEX', None), ('cmsAuthor:mcontentPermissionsProvider', None), ('cmsAuthor:mediaContentWithPreview', None), ('cmsAuthor:mediaFileCard', None), ('cmsAuthor:outputDateNode', None), ('cmsAuthor:outputDateTimeNode', None), ('cmsAuthor:outputImgNode', None), ('cmsAuthor:outputMTextNode', None), ('cmsAuthor:outputMediaContentNode', None), ('cmsAuthor:outputRTENode', None), ('cmsAuthor:outputURLNode', None), ('cmsAuthor:publishingTargets', None), ('cmsAuthor:referenceWithPreview', None), ('commerce:orderItemDataProvider', None), ('commerce:orderItemMultiLineEdit', None), ('commerce:orderItemMultiLineEditWrapper', None), ('commerce_catalog:categoryHierarchy', None), ('commerce_catalog:categoryHierarchyDataManager', None), ('commerce_catalog:categoryHierarchyTriggerCell', None), ('commerce_catalog:enrichmentFileInfo', None), ('commerce_catalog:enrichmentFileMetadataWrapper', None), ('commerce_catalog:enrichmentFileOrder', None), ('commerce_catalog:enrichmentFilePicker', None), ('commerce_catalog:enrichmentFilePreview', None), ('commerce_catalog:enrichmentFileProperties', None), ('commerce_catalog:enrichmentGallery', None), ('commerce_catalog:massActionToSetProductIsActive', None), ('commerce_catalog:massAddProductsToCategory', None), ('commerce_catalog:productEnrichment', None), ('commerce_catalog:setPrimaryCategory', None), ('commerce_console:compositeListContainer', None), ('commerce_console:emptyStateWrapper', None), ('commerce_console:outputBooleanBadge', None), ('commerce_console:productCompositeList', None), ('commerce_console:productTranslation', None), ('commerce_console:productWorkspace', None), ('commerce_console:translationListContainer', None), ('commerce_console:webStoreTileNavigation', None), ('communitySetup:actionMenuCMSConnection', None), ('communitySetup:addArticlesDialog', None), ('communitySetup:appLauncherManager', None), ('communitySetup:arsrSetupPage', None), ('communitySetup:arsrSetupPageLightning', None), ('communitySetup:articleCategoryFilterMenu', None), ('communitySetup:articleGroupFilterMenu', None), ('communitySetup:articleManagement', None), ('communitySetup:articleManagementRow', None), ('communitySetup:assistantCustomStep', None), ('communitySetup:assistantHelpAndTrailhead', None), ('communitySetup:assistantPage', None), ('communitySetup:assistantSubStepLink', None), ('communitySetup:audienceCriteriaAutoComplete', None), ('communitySetup:audienceCriteriaDataProvider', None), ('communitySetup:audienceCriteriaExpressionRow', None), ('communitySetup:audienceCriteriaFieldTraversal', None), ('communitySetup:audienceCriteriaGeoLocation', None), ('communitySetup:audienceCriteriaSection', None), ('communitySetup:audienceCustomEditor', None), ('communitySetup:audienceDeleteAction', None), ('communitySetup:audienceEditor', None), ('communitySetup:audienceSelector', None), ('communitySetup:audienceSummary', None), ('communitySetup:authorDetailCard', None), ('communitySetup:authorFeedInfo', None), ('communitySetup:authorList', None), ('communitySetup:authorModerationInfoIcon', None), ('communitySetup:badgeAccessListEditor', None), ('communitySetup:badgeAccessListItem', None), ('communitySetup:badgeAccessListItemContainer', None), ('communitySetup:badgeImageUpload', None), ('communitySetup:badgeTypeCheckBox', None), ('communitySetup:badgeUserRelatedListRecord', None), ('communitySetup:badgesList', None), ('communitySetup:baseCMCComponent', None), ('communitySetup:baseRecommendationRow', None), ('communitySetup:baseRecommendationRowEditMode', None), ('communitySetup:baseRecommendationRowViewMode', None), ('communitySetup:baseRecommendationSetup', None), ('communitySetup:baseTopicRow', None), ('communitySetup:baseTopics', None), ('communitySetup:borderStylePropertyEditor', None), ('communitySetup:borderStylePropertyEditorPanelBody', None), ('communitySetup:builderSortableListPropertyEditor', None), ('communitySetup:cbBackgroundImageEditor', None), ('communitySetup:cbBackgroundImagePositionDataProvider', None), ('communitySetup:cbBackgroundImageSizeOrRepeatDataProvider', None), ('communitySetup:cbColorEditor', None), ('communitySetup:cbColumnsEditor', None), ('communitySetup:cbCreateRecordEditor', None), ('communitySetup:cbHtmlContentEditor', None), ('communitySetup:cbIntegerSlider', None), ('communitySetup:cbOmniboxTypeaheadEditor', None), ('communitySetup:cbRichTextEditor', None), ('communitySetup:cbRichTextPicker', None), ('communitySetup:cbSearchResultsEditor', None), ('communitySetup:cbSelectComponentEditor', None), ('communitySetup:cbTabsetEditor', None), ('communitySetup:cbTabsetEditorItemEditor', None), ('communitySetup:cbTopArticleListEditor', None), ('communitySetup:cbUserProfileBannerEditor', None), ('communitySetup:cmcAppLayoutContainer', None), ('communitySetup:cmcButton', None), ('communitySetup:cmcErrorPage', None), ('communitySetup:cmcHeader', None), ('communitySetup:cmcHelpCenterUpgrade', None), ('communitySetup:cmcHelpLinkSection', None), ('communitySetup:cmcHelpLinks', None), ('communitySetup:cmcHelpMenu', None), ('communitySetup:cmcHome', None), ('communitySetup:cmcHomeHeader', None), ('communitySetup:cmcHubMenu', None), ('communitySetup:cmcHubMenuItem', None), ('communitySetup:cmcListButton', None), ('communitySetup:cmcNodeItem', None), ('communitySetup:cmcPageLayout', None), ('communitySetup:cmcProfileMenu', None), ('communitySetup:cmcQuickLinks', None), ('communitySetup:cmcReleaseNotes', None), ('communitySetup:cmcStyledList', None), ('communitySetup:cmcTemplate', None), ('communitySetup:cmcTrailhead', None), ('communitySetup:cmcWelcomePanel', None), ('communitySetup:cmcWelcomePanelWrapper', None), ('communitySetup:cmcWhatsNew', None), ('communitySetup:cmcWorkspaceChangeHandler', None), ('communitySetup:cmcWorkspaceLauncher', None), ('communitySetup:cmcWorkspaceTabs', None), ('communitySetup:cmcWorkspaceTile', None), ('communitySetup:cmsConnectEditor', None), ('communitySetup:cmsConnectScriptRow', None), ('communitySetup:cmsContentEditor', None), ('communitySetup:cmsContentEditorSection', None), ('communitySetup:cmsContentLayoutDesignAttribute', None), ('communitySetup:cmsContentLinkEditor', None), ('communitySetup:cmsContentParamRow', None), ('communitySetup:cmsJSONResourceDefintion', None), ('communitySetup:cmsJSONResourceTypes', None), ('communitySetup:cmsJSONSection', None), ('communitySetup:cmsLayoutDesignTimeSeparator', None), ('communitySetup:cmsLayoutLinkEditor', None), ('communitySetup:cmsLinksListPropertyEditor', None), ('communitySetup:cmsLinksOverridePropertyEditor', None), ('communitySetup:collaboratorsChangeRoleModal', None), ('communitySetup:collaboratorsListView', None), ('communitySetup:collaboratorsManager', None), ('communitySetup:collaboratorsSetupAddMembers', None), ('communitySetup:collaboratorsSetupDataProvider', None), ('communitySetup:collaboratorsSetupMultiSelectTable', None), ('communitySetup:collaboratorsSetupSelectRoles', None), ('communitySetup:collaboratorsSetupWizard', None), ('communitySetup:collapsibleSection', None), ('communitySetup:colorPicker', None), ('communitySetup:communityWorkspaceBanner', None), ('communitySetup:communityWorkspaceCollaboratorsManager', None), ('communitySetup:compoundFieldBadgeGivenBy', None), ('communitySetup:compoundFieldBadgeImageUrl', None), ('communitySetup:compoundFieldBadgeMessage', None), ('communitySetup:compoundFieldBadgeName', None), ('communitySetup:compoundFieldTimeAgo', None), ('communitySetup:compoundFieldsBadgeLastModifiedBy', None), ('communitySetup:compoundFieldsBadgeName', None), ('communitySetup:createCustomBadge', None), ('communitySetup:createMission', None), ('communitySetup:createRecordEditorItem', None), ('communitySetup:createRecordEditorItemEditor', None), ('communitySetup:crmContentHome', None), ('communitySetup:customBadgeAction', None), ('communitySetup:customMissionAction', None), ('communitySetup:customRecommendationDataProvider', None), ('communitySetup:customRecommendationRow', None), ('communitySetup:customRecommendationRowEditMode', None), ('communitySetup:customRecommendationRowViewMode', None), ('communitySetup:customRecommendationSetup', None), ('communitySetup:customRecommendationUploadFileButton', None), ('communitySetup:customTopicAction', None), ('communitySetup:cwBulkApprove', None), ('communitySetup:cwBulkDelete', None), ('communitySetup:cwBulkFlag', None), ('communitySetup:cwBulkFreezeUnfreeze', None), ('communitySetup:cwBulkPost', None), ('communitySetup:cwBulkUnflag', None), ('communitySetup:cwFlaggers', None), ('communitySetup:cwInsightActionsContainer', None), ('communitySetup:cwInsightQActionsManager', None), ('communitySetup:cwInsightQGrid', None), ('communitySetup:cwInsightQHeader', None), ('communitySetup:cwInsightQueue', None), ('communitySetup:cwModerationHomeMetrics', None), ('communitySetup:cwQContainer', None), ('communitySetup:cwReportDataProvider', None), ('communitySetup:cwSpinner', None), ('communitySetup:cwVFAction', None), ('communitySetup:cwVirtualActionColumn', None), ('communitySetup:cwVirtualColumn', None), ('communitySetup:cwVirtualSelectionColumn', None), ('communitySetup:dataCategoriesListDataProvider', None), ('communitySetup:dataCategoryListRow', None), ('communitySetup:datetimeBindablePropertyEditor', None), ('communitySetup:deleteCommunityBadge', None), ('communitySetup:deleteMission', None), ('communitySetup:dynamicCollectionEditor', None), ('communitySetup:enableTopicsForContent', None), ('communitySetup:engagementHomeSettings', None), ('communitySetup:errorMessage', None), ('communitySetup:extensionOverview', None), ('communitySetup:extensionTile', None), ('communitySetup:extensionsHome', None), ('communitySetup:extensionsHomeFeatureTiles', None), ('communitySetup:featureCMCPopover', None), ('communitySetup:featuredTopicRow', None), ('communitySetup:featuredTopics', None), ('communitySetup:filterMenu', None), ('communitySetup:flagQueue', None), ('communitySetup:flagReasonHolder', None), ('communitySetup:inlineBindablePropertyEditor', None), ('communitySetup:inputRadioGroup', None), ('communitySetup:inputSelectWrapper', None), ('communitySetup:installConfirmation', None), ('communitySetup:installPackage', None), ('communitySetup:installSetupPackage', None), ('communitySetup:listCMSConnection', None), ('communitySetup:localeMappingEditor', None), ('communitySetup:locationPicker', None), ('communitySetup:locationPill', None), ('communitySetup:lsfMilestoneSelectContentSource', None), ('communitySetup:manageCMSConnection', None), ('communitySetup:managedContentBindingEditor', None), ('communitySetup:managedContentBlockPropertyEditor', None), ('communitySetup:managedContentCollectionDataProviderEditor', None), ('communitySetup:managedContentCollectionDetail', None), ('communitySetup:managedContentCollectionItemLayoutPropertyEditor', None), ('communitySetup:managedContentCollectionLayoutPropertyEditor', None), ('communitySetup:managedContentCollectionPicker', None), ('communitySetup:managedContentCollectionsCMSEditModal', None), ('communitySetup:managedContentCollectionsDeleteDialog', None), ('communitySetup:managedContentCollectionsHome', None), ('communitySetup:managedContentCollectionsList', None), ('communitySetup:managedContentContentBlockLayoutPropertyEditor', None), ('communitySetup:managedContentDetailPropertyEditor', None), ('communitySetup:managedContentHome', None), ('communitySetup:managedContentItemCreatePage', None), ('communitySetup:managedContentItemVersionPage', None), ('communitySetup:managedContentItemsPicker', None), ('communitySetup:managedContentItemsPropertiesEditor', None), ('communitySetup:managedContentLayoutPropertyEditor', None), ('communitySetup:managedContentLayoutVisualPicker', None), ('communitySetup:managedContentMultiSelectTable', None), ('communitySetup:managedContentPicker', None), ('communitySetup:managedContentPropertiesPanelSection', None), ('communitySetup:managedContentQueryCriteria', None), ('communitySetup:managedContentQueryCriteriaList', None), ('communitySetup:managedContentQueryCriteriaListRow', None), ('communitySetup:managedContentQueryCriteriaWrapper', None), ('communitySetup:managedContentSchemaDataProvider', None), ('communitySetup:managedContentTopics', None), ('communitySetup:managedContentTypeList', None), ('communitySetup:managedContentTypeListDataProvider', None), ('communitySetup:managedContentTypeWhitelist', None), ('communitySetup:managedTopicsDataProvider', None), ('communitySetup:mcfManualCollectionDataProvider', None), ('communitySetup:mcfSetupCreateContentCollection', None), ('communitySetup:mcfSetupCreateManualCollection', None), ('communitySetup:mcfSetupEditCRMListView', None), ('communitySetup:mcfSetupEditManualCollection', None), ('communitySetup:mcfSetupSelectCRMListView', None), ('communitySetup:mcfSetupSelectCollectionType', None), ('communitySetup:mcfSetupSelectContentSource', None), ('communitySetup:mcfSetupVisualPicker', None), ('communitySetup:mcfSetupWizard', None), ('communitySetup:mergeTopicDialog', None), ('communitySetup:missionsList', None), ('communitySetup:moderationAppReportMetrics', None), ('communitySetup:moderationFeedItemDetail', None), ('communitySetup:moderationQueueFeedComment', None), ('communitySetup:moderationQueueFeedItem', None), ('communitySetup:moderationQueueFeedItemFooter', None), ('communitySetup:moderationQueueFeedItemHeader', None), ('communitySetup:moderationQueueFeedIterationElement', None), ('communitySetup:navigationBarCustomEditor', None), ('communitySetup:navigationBarEditorItem', None), ('communitySetup:navigationBarEditorItemPlaceholder', None), ('communitySetup:navigationBarEditorPropertiesPanel', None), ('communitySetup:navigationBarEditorPropertiesPanelV2', None), ('communitySetup:navigationMenuEditor', None), ('communitySetup:navigationMenuEditorDataProvider', None), ('communitySetup:navigationalTopicRow', None), ('communitySetup:navigationalTopics', None), ('communitySetup:navigationalTopicsPickList', None), ('communitySetup:nestedComponentPropertyPanel', None), ('communitySetup:networkDashboardWrapper', None), ('communitySetup:networkWorkspaceMetricDefaultPage', None), ('communitySetup:networkWorkspaceMetricEditorItem', None), ('communitySetup:networkWorkspaceMetricPropertiesPanel', None), ('communitySetup:networkWorkspaceMetricSetupEditor', None), ('communitySetup:networksWorkspaceErrorInfo', None), ('communitySetup:networksWorkspaceMetricsHolder', None), ('communitySetup:networksWorkspaceMetricsInstallPackage', None), ('communitySetup:networksWorkspaceMetricsTile', None), ('communitySetup:newTopicDialog', None), ('communitySetup:pageAssignmentAudienceSummary', None), ('communitySetup:pencilButton', None), ('communitySetup:personalizationAssignmentRow', None), ('communitySetup:personalizationModal', None), ('communitySetup:pillContainerAutoComplete', None), ('communitySetup:placeholderForTable', None), ('communitySetup:quillButtonWithPanel', None), ('communitySetup:quillPanel', None), ('communitySetup:recommendationAudienceDataProvider', None), ('communitySetup:recommendationAudienceRow', None), ('communitySetup:recommendationAudienceRowEditMode', None), ('communitySetup:recommendationAudienceRowViewMode', None), ('communitySetup:recommendationAudienceSetup', None), ('communitySetup:recommendationPreview', None), ('communitySetup:reorderArrows', None), ('communitySetup:resourceDefinitionEditor', None), ('communitySetup:searchResultsEditorItemEditor', None), ('communitySetup:secondaryNav', None), ('communitySetup:sectionHeaderCMSConnection', None), ('communitySetup:securityUpdateAssistantStep', None), ('communitySetup:securityUpdateConfirmation', None), ('communitySetup:securityUpdateDetail', None), ('communitySetup:securityUpdateHelpAndTraining', None), ('communitySetup:securityUpdateOverview', None), ('communitySetup:securityUpdateStatus', None), ('communitySetup:securityUpdateSummaryBlock', None), ('communitySetup:securityUpdateTile', None), ('communitySetup:securityUpdates', None), ('communitySetup:securityUpdatesRouter', None), ('communitySetup:sentiments', None), ('communitySetup:setupFeedback', None), ('communitySetup:summaryBlock', None), ('communitySetup:taskSummaryErrorHandler', None), ('communitySetup:taskSummaryHolder', None), ('communitySetup:textDecorationPropertyEditor', None), ('communitySetup:thanksButton', None), ('communitySetup:topicAssignmentRules', None), ('communitySetup:topicImageUpload', None), ('communitySetup:topicListView', None), ('communitySetup:topicRow', None), ('communitySetup:topics', None), ('communitySetup:topicsDataProvider', None), ('communitySetup:unearnedBadgeListRecord', None), ('communitySetup:userRecognitionBadgeItem', None), ('communitySetup:userRecognitionList', None), ('communitySetup:vFActionComponent', None), ('communitySetup:viewReportWrapper', None), ('componentReference:baseLayoutContainer', None), ('componentReference:bundle', None), ('componentReference:dataProvider', None), ('componentReference:dscFooter', None), ('componentReference:dscHeader', None), ('componentReference:examples', None), ('componentReference:highlightComponent', None), ('componentReference:offCoreTemplate', None), ('componentReference:template', None), ('console:bookmarkEntry', None), ('console:community360FilterMenu', None), ('console:componentManager', None), ('console:embeddedReportChart', None), ('console:history', None), ('console:lastViewedInCommunity', None), ('console:lastViewedInCommunityDataProvider', None), ('console:lastViewedInCommunityItem', None), ('console:lastViewedInCommunityWrapper', None), ('console:mruEntry', None), ('console:mruEntryMenuTrigger', None), ('console:mruSubEntry', None), ('console:mruWidget', None), ('console:relatedRecord', None), ('console:relatedRecordCompact', None), ('console:relatedRecordDescriptionDesignInfo', None), ('console:relatedRecordDesignInfo', None), ('console:tabIcon', None), ('contentPage:defaultEmailTemplatePageTemplate', None), ('conversation:home', None), ('conversation:mediaPlayerContainer', None), ('cooper:companyInsight', None), ('cooper:companyInsightCompetitors', None), ('cooper:companyInsightContacts', None), ('cooper:companyInsightFinancialDetails', None), ('cooper:companyInsightFullAddress', None), ('cooper:companyInsightHighlight', None), ('cooper:companyInsightIndustries', None), ('cooper:companyInsightRevenue', None), ('cooper:companyInsightSubcomponent', None), ('cooper:companyInsightSummary', None), ('cooper:companyInsightSummaryText', None), ('cooper:companyInsightTeaser', None), ('cooper:companyInsightTeaserCard', None), ('cooper:companyInsightTeaserDesignInfo', None), ('cooper:companyInsightText', None), ('cooper:insightCard', None), ('cooper:newsApp', None), ('cooper:tempDepend', None), ('cordaDashboards:component', None), ('cordaDashboards:dashboardComponent', None), ('cordaDashboards:dashboardSingleComponentView', None), ('cordaDashboards:feedAux', None), ('cordaDashboards:filterSlidePanel', None), ('cordaDashboards:primer', None), ('cordaDashboards:primerActionConnector', None), ('cordaDashboards:primerConfigConnector', None), ('cordaDashboards:primerTabConnector', None), ('cordaDashboards:slide', None), ('cordaDashboards:snapshot', None), ('cordaDashboards:snapshotPost', None), ('cordaDashboards:tempDepend', None), ('cordaDashboards:visualForcePageComponent', None), ('dashboards:actionBar', None), ('dashboards:actionProxy', None), ('dashboards:componentFiltersView', None), ('dashboards:dashboardLoader', None), ('dashboards:eclairChartTypeOption', None), ('dashboards:eclairChartTypeSwitcher', None), ('dashboards:eclairComponent', None), ('dashboards:eclairSingleComponentView', None), ('dashboards:eclairSlide', None), ('dashboards:eclairSnapshotPost', None), ('dashboards:filterPanel', None), ('dashboards:filterPanelRow', None), ('dashboards:highlightsStencilExtension', None), ('dashboards:linkCard', None), ('dashboards:pagedReportDetail', None), ('dashboards:refresher', None), ('dashboards:reportDetailContainer', None), ('dashboards:reportEntityLink', None), ('dashboards:runAsUserPanel', None), ('dashboards:slidingPanel', None), ('dashboards:tableChart', None), ('dashboards:tmpDepends', None), ('dataImporter:diActivityHeader', None), ('dataImporter:diAdvancedAccountContactOptions', None), ('dataImporter:diAdvancedCampaignMemberUpdateOptions', None), ('dataImporter:diAdvancedCustomOptions', None), ('dataImporter:diAdvancedGenericOptions', None), ('dataImporter:diAdvancedLeadOptions', None), ('dataImporter:diAdvancedLookupFieldOptions', None), ('dataImporter:diAdvancedOpportunityOptions', None), ('dataImporter:diAdvancedPersonAccountOptions', None), ('dataImporter:diAdvancedSolutionOptions', None), ('dataImporter:diButtonBar', None), ('dataImporter:diCsvFileDropzone', None), ('dataImporter:diCsvFileSelector', None), ('dataImporter:diCsvSelectionActivity', None), ('dataImporter:diErrorBlock', None), ('dataImporter:diErrorMessage', None), ('dataImporter:diFileSelectionBase', None), ('dataImporter:diFileUploadButton', None), ('dataImporter:diFutureActivity', None), ('dataImporter:diInitialStep', None), ('dataImporter:diInputFile', None), ('dataImporter:diInputFileDropzone', None), ('dataImporter:diInvisibleFileUploader', None), ('dataImporter:diLanding', None), ('dataImporter:diLegacy', None), ('dataImporter:diMappingFieldDataProvider', None), ('dataImporter:diMappingStep', None), ('dataImporter:diMappingStepSampleRow', None), ('dataImporter:diMatchingChoiceActivity', None), ('dataImporter:diOverlay', None), ('dataImporter:diProgressBar', None), ('dataImporter:diProgressMarker', None), ('dataImporter:diReviewStep', None), ('dataImporter:diSfdcObjectSelectionActivity', None), ('dataImporter:diSingleMapping', None), ('dataImporter:diSingleMappingEditor', None), ('dataImporter:diStep', None), ('dataImporter:diStepHeader', None), ('dataImporter:diTemplate', None), ('ddcProspector:accountPreview', None), ('ddcProspector:companyHierarchy', None), ('ddcProspector:companyHierarchyPreview', None), ('ddcProspector:companyHierarchyPreviewDesignInfo', None), ('ddcProspector:getAccountsMultiAddButton', None), ('ddcProspector:getAccountsMultiAddHeader', None), ('ddcProspector:getContactsMultiAddButton', None), ('ddcProspector:getContactsMultiAddHeader', None), ('ddcProspector:isInCrmIcon', None), ('ddcProspector:isOwnedIcon', None), ('ddcProspector:messageBlock', None), ('ddcProspector:tree', None), ('ddcProspector:treeNode', None), ('ddcProspector:treeNodeContent', None), ('ddcProspector:updatedDate', None), ('desktopDashboards:componentShareModalFooter', None), ('desktopDashboards:dashboard', None), ('desktopDashboards:embeddedDashboard', None), ('desktopDashboards:embeddedDashboardDataSourceInfo', None), ('desktopDashboards:embeddedDashboardDesignSubstitute', None), ('desktopDashboards:feedPanel', None), ('desktopDashboards:tempDepend', None), ('desktopDashboards:webtemplate', None), ('einstein_assistant:assistantContextItemDataProvider', None), ('einstein_assistant:assistantDefinitionControllerDataProvider', None), ('einstein_assistant:assistantDeleteServiceDataProvider', None), ('einstein_assistant:assistantProfilesControllerDataProvider', None), ('einstein_assistant:assistantQuickActionControllerDataProvider', None), ('einstein_assistant:assistantSObjectBuilderDataProvider', None), ('einstein_assistant:assistantTemplateObjectsListControllerDataProvider', None), ('einstein_assistant:assistantTemplatesListControllerDataProvider', None), ('einstein_assistant:builderTemplate', None), ('einsteinbuilder:advancedConditionPopover', None), ('einsteinbuilder:advancedFilterGroup', None), ('einsteinbuilder:advancedFilterRow', None), ('einsteinbuilder:assessor', None), ('einsteinbuilder:autocomplete', None), ('einsteinbuilder:banner', None), ('einsteinbuilder:binaryClassificationLabelDefinition', None), ('einsteinbuilder:conditionLogicTypes', None), ('einsteinbuilder:detailsSummaryCount', None), ('einsteinbuilder:dialogHeader', None), ('einsteinbuilder:einsteinBuilderHeader', None), ('einsteinbuilder:einsteinBuilderPredictions', None), ('einsteinbuilder:emptyState', None), ('einsteinbuilder:eplite', None), ('einsteinbuilder:exclusionFields', None), ('einsteinbuilder:fieldExistsSelection', None), ('einsteinbuilder:fieldSearchAndTrainingFilterSelection', None), ('einsteinbuilder:fieldSearchAutocomplete', None), ('einsteinbuilder:fieldSearchAutocompleteOption', None), ('einsteinbuilder:fieldSearchDataProvider', None), ('einsteinbuilder:fieldSelect', None), ('einsteinbuilder:globalFilterList', None), ('einsteinbuilder:globalFilterRowCondition', None), ('einsteinbuilder:guidePanel', None), ('einsteinbuilder:input', None), ('einsteinbuilder:inputBoolean', None), ('einsteinbuilder:inputCurrency', None), ('einsteinbuilder:inputDate', None), ('einsteinbuilder:inputDateTime', None), ('einsteinbuilder:inputError', None), ('einsteinbuilder:inputNumber', None), ('einsteinbuilder:inputPicklist', None), ('einsteinbuilder:inputSelect', None), ('einsteinbuilder:inputString', None), ('einsteinbuilder:inputText', None), ('einsteinbuilder:inputValueText', None), ('einsteinbuilder:logicTypesRadioButtons', None), ('einsteinbuilder:objectSearchAndGlobalFilterSelection', None), ('einsteinbuilder:objectSearchAutocomplete', None), ('einsteinbuilder:objectSearchAutocompleteOption', None), ('einsteinbuilder:objectSearchDataProvider', None), ('einsteinbuilder:operatorSelect', None), ('einsteinbuilder:popover', None), ('einsteinbuilder:predictionBuilderConfirmation', None), ('einsteinbuilder:predictionConfirmSettings', None), ('einsteinbuilder:predictionCsvDownload', None), ('einsteinbuilder:predictionQualityCard', None), ('einsteinbuilder:predictionSettings', None), ('einsteinbuilder:predictionTypeSelection', None), ('einsteinbuilder:pushbackCustomField', None), ('einsteinbuilder:pushbackFieldSelection', None), ('einsteinbuilder:reviewTerms', None), ('einsteinbuilder:reviewTermsFlow', None), ('einsteinbuilder:scorecard', None), ('einsteinbuilder:scorecardDetails', None), ('einsteinbuilder:scorecardOverview', None), ('einsteinbuilder:scorecardPredictorsOverview', None), ('einsteinbuilder:setupPredictionFlow', None), ('einsteinbuilder:setupTile', None), ('einsteinbuilder:splashScreen', None), ('einsteinbuilder:startScreen', None), ('einsteinbuilder:statusCount', None), ('einsteinbuilder:stepLayout', None), ('einsteinbuilder:stepLayoutFinish', None), ('einsteinbuilder:stepLayoutSplit', None), ('einsteinbuilder:tile', None), ('einsteinbuilder:topPredictorsCard', None), ('einsteinbuilder:visualPickerForm', None), ('einsteinbuilder:welcomeModal', None), ('einsteinconduit:commanderApi', None), ('einsteinconduit:commanderUi', None), ('einsteinconduit:datasetExplorer', None), ('emailStream:activityStorage', None), ('emailStream:activityStoragePage', None), ('emailStream:activitySyncEngineSetupMain', None), ('emailStream:activitySyncEngineSetupSplashScreen', None), ('emailStream:activitySyncEngineTabbed', None), ('emailStream:aseAdvancedSettingsTab', None), ('emailStream:aseEditConfiguration', None), ('emailStream:aseFilterRow', None), ('emailStream:aseModalToConfirmEmailCaptureOff', None), ('emailStream:aseSetupAssignUsers', None), ('emailStream:aseSetupConfigurations', None), ('emailStream:aseSetupExcludeAddresses', None), ('emailStream:aseSetupModalFinalize', None), ('emailStream:aseSetupModalFlowContainer', None), ('emailStream:aseSetupModalProgressIndicator', None), ('emailStream:aseSetupModalReviewTerms', None), ('emailStream:aseSetupModalStart', None), ('emailStream:aseSetupModalStep', None), ('emailStream:aseSetupSyncSettings', None), ('emailStream:aseTabHome', None), ('emailStream:aseTabSyncConfigurations', None), ('emailStream:automaticActivityCaptureSetup', None), ('emailStream:automaticActivityCaptureSetupAssistant', None), ('emailStream:automaticActivityCaptureSetupAssistantPage', None), ('emailStream:automaticActivityCaptureSetupPage', None), ('emailStream:automaticActivityCaptureSetupSplashScreen', None), ('emailStream:baseSetup', None), ('emailStream:chooseDataSourceType', None), ('emailStream:connectEmail', None), ('emailStream:connectEmailAgreement', None), ('emailStream:connectEmailWrapper', None), ('emailStream:customInsightCreate', None), ('emailStream:customInsightList', None), ('emailStream:customInsightSetupPage', None), ('emailStream:dataSourceStatus', None), ('emailStream:dataSourceStatusRow', None), ('emailStream:defaultOrgSharingSettingsPanel', None), ('emailStream:defaultOrgSharingSettingsPanelFooter', None), ('emailStream:defaultSharingSettings', None), ('emailStream:defaultSharingSettingsPanel', None), ('emailStream:defaultSharingSettingsPanelFooter', None), ('emailStream:emailIqSetup', None), ('emailStream:emailIqSetupPage', None), ('emailStream:emailIqSetupRow', None), ('emailStream:emailStreamSettings', None), ('emailStream:emailStreamSharingSettings', None), ('emailStream:emptyStateCard', None), ('emailStream:enabledEntities', None), ('emailStream:entitySelector', None), ('emailStream:iconLabel', None), ('emailStream:insightsEmailAgreement', None), ('emailStream:insightsOrgSettingSetupStep', None), ('emailStream:insightsPermissionSetSetupStep', None), ('emailStream:insightsSetupAssistant', None), ('emailStream:insightsSetupAssistantStep', None), ('emailStream:insightsSetupCheckmark', None), ('emailStream:launchpad', None), ('emailStream:launchpadMat', None), ('emailStream:oauthFlowContainer', None), ('emailStream:orgBlacklistModalFlowContainer', None), ('emailStream:orgBlacklistModalToConfirmInput', None), ('emailStream:orgBlacklistModalToEnterDetails', None), ('emailStream:orgBlacklistModalToSelectType', None), ('emailStream:reviewTerms', None), ('emailStream:reviewTermsFlow', None), ('emailStream:salesforceInboxDeleteEmailsAndEvents', None), ('emailStream:salesforceInboxDeleteEmailsAndEventsEmailTab', None), ('emailStream:salesforceInboxDeleteEmailsAndEventsUserTab', None), ('emailStream:salesforceInboxExchangeSetting', None), ('emailStream:salesforceInboxExchangeSettingDetails', None), ('emailStream:salesforceInboxExchangeSettingPage', None), ('emailStream:salesforceInboxExchangeSettingRowAction', None), ('emailStream:salesforceInboxExcludeFromML', None), ('emailStream:salesforceInboxOrgBlacklist', None), ('emailStream:salesforceInboxOrgBlacklistPage', None), ('emailStream:salesforceInboxOrgBlacklistRowAction', None), ('emailStream:salesforceInboxUserBlacklist', None), ('emailStream:salesforceInboxUserBlacklistPage', None), ('emailStream:salesforceInboxUserBlacklistRowAction', None), ('emailStream:sharingControl', None), ('emailStream:sharingPreview', None), ('emailStream:tempDepend', None), ('emailStream:updateSharing', None), ('emailStream:updateSharingBody', None), ('emailStream:userBlacklistModalToConfirmInput', None), ('emailStream:usersAndLicenses', None), ('emailStream:usersAndLicensesPage', None), ('emailStream:waveJobList', None), ('emailStream:welcomeMat', None), ('emailStream:whatIsIq', None), ('emailui:activityTimeline2EmailMessageAddressListOverride', None), ('emailui:activityTimeline2EmailMessageBccAddressFieldOverride', None), ('emailui:activityTimeline2EmailMessageCcAddressFieldOverride', None), ('emailui:activityTimeline2EmailMessageFromAddressFieldOverride', None), ('emailui:activityTimeline2EmailMessageToAddressFieldOverride', None), ('emailui:activityTimelineFixedLayoutEmailMessageStencil', None), ('emailui:addressContainer', None), ('emailui:addressListOutput', None), ('emailui:baseAddressContainer', None), ('emailui:baseEmailHighlightsStencil', None), ('emailui:consentManager', None), ('emailui:consentWarningModal', None), ('emailui:consentWarningModalFooter', None), ('emailui:emailAttachment', None), ('emailui:emailBaseReplyActions', None), ('emailui:emailMessage', None), ('emailui:emailMessageDetailDropdown', None), ('emailui:emailMessageEngagementSummary', None), ('emailui:emailMessageEngagementTab', None), ('emailui:emailMessageFromProfilePhoto', None), ('emailui:emailMessageHighlightsActionsContainer', None), ('emailui:emailMessageHighlightsStencil', None), ('emailui:emailMessageRecordHome', None), ('emailui:emailMessageReplyActions', None), ('emailui:emailRelatedToContainer', None), ('emailui:emailTemplateDataGrid', None), ('emailui:emailToolbarContainer', None), ('emailui:emailToolbarRelatedTo', None), ('emailui:enhancedEmailSetup', None), ('emailui:enhancedEmailSetupPage', None), ('emailui:externalEmailAuthenticator', None), ('emailui:formattedEmail', None), ('emailui:illustrationInlineText', None), ('emailui:integrationOrgSetup', None), ('emailui:listEmailCampaignDropDown', None), ('emailui:listEmailEngagementTab', None), ('emailui:listEmailHighlightsStencil', None), ('emailui:listEmailRecipientSuggestionDataProvider', None), ('emailui:listEmailRecordHome', None), ('emailui:listEmailRelatedListContainer', None), ('emailui:massEmailActionFooter', None), ('emailui:massEmailContentTab', None), ('emailui:massEmailList', None), ('emailui:massEmailReviewTab', None), ('emailui:massEmailTab', None), ('emailui:massEmailTabSet', None), ('emailui:oauthSplash', None), ('emailui:outboxActivity', None), ('emailui:outboxActivityTimeline', None), ('emailui:outputEmail', None), ('emailui:outputEmailPanel', None), ('emailui:outputRichText', None), ('emailui:pageError', None), ('emailui:pendingEmailActivity', None), ('emailui:pillContainer', None), ('emailui:pillContainerAutoComplete', None), ('emailui:placeholderEmailGenerator', None), ('emailui:placeholderLookup', None), ('emailui:previewModal', None), ('emailui:publisherAttachmentsMenuItem', None), ('emailui:publisherDiscardDraft', None), ('emailui:publisherPreview', None), ('emailui:publisherResetFields', None), ('emailui:publisherSpawnDocker', None), ('emailui:recipientAutocompleteOption', None), ('emailui:recipientListAutocomplete', None), ('emailui:recipientListAutocompleteOption', None), ('emailui:recipientSuggestionDataProvider', None), ('emailui:relatedOtherPeopleContainer', None), ('emailui:relatedPeople', None), ('emailui:relatedRecordContainer', None), ('emailui:resetDraftModal', None), ('emailui:resetDraftModalFooter', None), ('emailui:resetDraftModalHeader', None), ('emailui:salesEngagementRelatedList', None), ('emailui:salesforceFileWarningModal', None), ('emailui:salesforceInboxConnector', None), ('emailui:sendListEmailAction', None), ('emailui:warningModal', None), ('emailui:whatAndWhoOutput', None), ('embeddedService:activateEmbeddedServicePage', None), ('embeddedService:apiNameField', None), ('embeddedService:baseCustomLabelsTable', None), ('embeddedService:baseCustomLabelsTableRow', None), ('embeddedService:basePanel', None), ('embeddedService:channelMenuList', None), ('embeddedService:channelMenuSetup', None), ('embeddedService:channelMenuSetupCardCodeSnippet', None), ('embeddedService:channelMenuSetupPanelBranding', None), ('embeddedService:channelMenuSetupPanelCodeSnippet', None), ('embeddedService:channelMenuSetupPanelLabels', None), ('embeddedService:channelMenuSetupViewer', None), ('embeddedService:deploymentList', None), ('embeddedService:embeddedServicePageTemplateDefault', None), ('embeddedService:embeddedServiceSetup', None), ('embeddedService:esPageCanvasConfig', None), ('embeddedService:fieldServiceActionBar', None), ('embeddedService:fieldServiceAppointmentCard', None), ('embeddedService:fieldServicePageActivationSetupFlow', None), ('embeddedService:fieldServicePageActivationSetupFlowDeploymentSelection', None), ('embeddedService:fieldServicePageActivationSetupFlowNextSteps', None), ('embeddedService:fieldServicePageActivationSetupFlowStatusSelection', None), ('embeddedService:fieldServicePageActivationSetupFlowUpdateReview', None), ('embeddedService:fieldServiceScheduling', None), ('embeddedService:fieldServiceSelectionTabs', None), ('embeddedService:fieldServiceSidebarFeature', None), ('embeddedService:fieldServiceStateAppointmentDetail', None), ('embeddedService:fieldServiceStateAppointmentHome', None), ('embeddedService:fieldServiceStateAppointmentList', None), ('embeddedService:fieldServiceStateConfirmation', None), ('embeddedService:fieldServiceStateHome', None), ('embeddedService:fieldServiceStateSchedulingApexService', None), ('embeddedService:fieldServiceStateServiceResourceDetail', None), ('embeddedService:flowActionButton', None), ('embeddedService:flowInput', None), ('embeddedService:flowInputBaseCheckbox', None), ('embeddedService:flowInputCheckbox', None), ('embeddedService:flowInputCurrency', None), ('embeddedService:flowInputDate', None), ('embeddedService:flowInputDateTime', None), ('embeddedService:flowInputLongText', None), ('embeddedService:flowInputMultiCheckbox', None), ('embeddedService:flowInputMultiSelect', None), ('embeddedService:flowInputNumber', None), ('embeddedService:flowInputOptions', None), ('embeddedService:flowInputPassword', None), ('embeddedService:flowInputRadio', None), ('embeddedService:flowInputSelect', None), ('embeddedService:flowInputSimple', None), ('embeddedService:flowInputText', None), ('embeddedService:flowOutputDisplayText', None), ('embeddedService:flowSidebarFeature', None), ('embeddedService:flowStateViewer', None), ('embeddedService:icon', None), ('embeddedService:inputLookupSelector', None), ('embeddedService:keyValuePairList', None), ('embeddedService:liveAgentQueuePosition', None), ('embeddedService:liveAgentSidebar', None), ('embeddedService:liveAgentSidebarFeature', None), ('embeddedService:liveAgentStateChat', None), ('embeddedService:liveAgentStateChatAction', None), ('embeddedService:liveAgentStateChatAvatar', None), ('embeddedService:liveAgentStateChatBubble', None), ('embeddedService:liveAgentStateChatButtonItem', None), ('embeddedService:liveAgentStateChatButtonMessage', None), ('embeddedService:liveAgentStateChatEventMessage', None), ('embeddedService:liveAgentStateChatFileTransferMessage', None), ('embeddedService:liveAgentStateChatHeader', None), ('embeddedService:liveAgentStateChatHeaderAvatars', None), ('embeddedService:liveAgentStateChatHeaderOption', None), ('embeddedService:liveAgentStateChatInputFooter', None), ('embeddedService:liveAgentStateChatItem', None), ('embeddedService:liveAgentStateChatMenuMessage', None), ('embeddedService:liveAgentStateChatMessage', None), ('embeddedService:liveAgentStateChatPlaintextMessageDefaultUI', None), ('embeddedService:liveAgentStateChatRichItem', None), ('embeddedService:liveAgentStateChatRichMessage', None), ('embeddedService:liveAgentStateChatTypingIndicator', None), ('embeddedService:liveAgentStateChatUnreadMessageBanner', None), ('embeddedService:liveAgentStateOfflineSupport', None), ('embeddedService:liveAgentStateOfflineSupportDefaultUI', None), ('embeddedService:liveAgentStatePostchat', None), ('embeddedService:liveAgentStatePrechat', None), ('embeddedService:liveAgentStatePrechatDefaultUI', None), ('embeddedService:liveAgentStateSelfService', None), ('embeddedService:liveAgentStateSelfServiceArticleList', None), ('embeddedService:liveAgentStateSelfServiceArticleListItem', None), ('embeddedService:liveAgentStateSelfServiceArticleView', None), ('embeddedService:liveAgentStateWaiting', None), ('embeddedService:liveAgentStateWaitingHeader', None), ('embeddedService:loadingBalls', None), ('embeddedService:noAssignedResourceView', None), ('embeddedService:prechatSetupFlow', None), ('embeddedService:prechatSetupFlowCustomizeFields', None), ('embeddedService:prechatSetupFlowDefaultFields', None), ('embeddedService:prechatSetupFlowRecordAssociations', None), ('embeddedService:prechatSetupFlowRecordAssociationsRecordTypePicklist', None), ('embeddedService:serviceAppointmentFullView', None), ('embeddedService:serviceAppointmentRecordCard', None), ('embeddedService:serviceAppointmentReducedView', None), ('embeddedService:serviceResourceFullView', None), ('embeddedService:serviceResourceRecordCard', None), ('embeddedService:serviceResourceReducedView', None), ('embeddedService:setupBaseCard', None), ('embeddedService:setupBrandingStencil', None), ('embeddedService:setupBrandingStencilDialog', None), ('embeddedService:setupBrandingStencilFieldServiceAppointmentDetail', None), ('embeddedService:setupBrandingStencilFieldServiceAppointmentList', None), ('embeddedService:setupBrandingStencilFieldServiceAppointmentListEmpty', None), ('embeddedService:setupBrandingStencilFieldServiceAuthenticationFailure', None), ('embeddedService:setupBrandingStencilFieldServiceBase', None), ('embeddedService:setupBrandingStencilFieldServiceConfirmation', None), ('embeddedService:setupBrandingStencilFieldServiceDialog', None), ('embeddedService:setupBrandingStencilFieldServiceDialogWithFooter', None), ('embeddedService:setupBrandingStencilFieldServiceHome', None), ('embeddedService:setupBrandingStencilFieldServiceResourceDetail', None), ('embeddedService:setupBrandingStencilFieldServiceScheduling', None), ('embeddedService:setupBrandingStencilFieldServiceSchedulingWithError', None), ('embeddedService:setupBrandingStencilLiveAgentBase', None), ('embeddedService:setupBrandingStencilLiveAgentChat', None), ('embeddedService:setupBrandingStencilLiveAgentChatBotActions', None), ('embeddedService:setupBrandingStencilLiveAgentChatEnded', None), ('embeddedService:setupBrandingStencilLiveAgentChatExtendedHeader', None), ('embeddedService:setupBrandingStencilLiveAgentChatFileUpload', None), ('embeddedService:setupBrandingStencilLiveAgentChatMinimized', None), ('embeddedService:setupBrandingStencilLiveAgentChatReconnecting', None), ('embeddedService:setupBrandingStencilLiveAgentChatTimeout', None), ('embeddedService:setupBrandingStencilLiveAgentChatTransfer', None), ('embeddedService:setupBrandingStencilLiveAgentChatTransferQueuePosition', None), ('embeddedService:setupBrandingStencilLiveAgentChatUnseenMessages', None), ('embeddedService:setupBrandingStencilLiveAgentChatWithAttachment', None), ('embeddedService:setupBrandingStencilLiveAgentOfflineSupportMinimized', None), ('embeddedService:setupBrandingStencilLiveAgentPostchat', None), ('embeddedService:setupBrandingStencilLiveAgentPrechat', None), ('embeddedService:setupBrandingStencilLiveAgentWaiting', None), ('embeddedService:setupBrandingStencilLiveAgentWaitingMinimized', None), ('embeddedService:setupBrandingStencilLiveAgentWaitingQueuePosition', None), ('embeddedService:setupBrandingStencilMinimized', None), ('embeddedService:setupBrandingStencilMinimizedStack', None), ('embeddedService:setupBrandingStencilRegion', None), ('embeddedService:setupBrandingStencilViewer', None), ('embeddedService:setupCard', None), ('embeddedService:setupCardActionButton', None), ('embeddedService:setupCardActionButtonToggle', None), ('embeddedService:setupCardBranding', None), ('embeddedService:setupCardCodeSnippet', None), ('embeddedService:setupCardFieldServiceAppointmentHome', None), ('embeddedService:setupCardLiveAgentCustomization', None), ('embeddedService:setupCardLiveAgentOfflineCases', None), ('embeddedService:setupCardPrechat', None), ('embeddedService:setupCardWarning', None), ('embeddedService:setupChannelMenuChannelSpecificIcon', None), ('embeddedService:setupChannelMenuPanel', None), ('embeddedService:setupCustomLabels', None), ('embeddedService:setupCustomLabelsTable', None), ('embeddedService:setupCustomLabelsTableRow', None), ('embeddedService:setupCustomizationPicklist', None), ('embeddedService:setupFlexipageList', None), ('embeddedService:setupFlowBranding', None), ('embeddedService:setupFlowCard', None), ('embeddedService:setupFlowCustomizeFieldsTable', None), ('embeddedService:setupFlowCustomizeFieldsTableAddFieldPopover', None), ('embeddedService:setupFlowCustomizeFieldsTableRow', None), ('embeddedService:setupFlowCustomizeFieldsTableRowIconButton', None), ('embeddedService:setupFlowCustomizeFieldsTableTooltip', None), ('embeddedService:setupFlowLiveAgentOfflineCases', None), ('embeddedService:setupFlowLiveAgentOfflineCasesConfiguration', None), ('embeddedService:setupFlowRecordTypePicklist', None), ('embeddedService:setupFlowTooltip', None), ('embeddedService:setupHeaderCard', None), ('embeddedService:setupHeaderCardChannelMenu', None), ('embeddedService:setupHeaderCardSnapins', None), ('embeddedService:setupMenuItemLabelsTable', None), ('embeddedService:setupMenuItemLabelsTableRow', None), ('embeddedService:setupPage', None), ('embeddedService:setupPageCard', None), ('embeddedService:setupPageChannelMenu', None), ('embeddedService:setupPageFieldService', None), ('embeddedService:setupPageFlows', None), ('embeddedService:setupPageLiveAgent', None), ('embeddedService:setupPageSnapins', None), ('embeddedService:setupPageViewer', None), ('embeddedService:setupPanel', None), ('embeddedService:setupPanelBranding', None), ('embeddedService:setupPanelBrandingColorPicker', None), ('embeddedService:setupPanelCard', None), ('embeddedService:setupPanelChannelMenu', None), ('embeddedService:setupPanelCodeSnippet', None), ('embeddedService:setupPanelFieldService', None), ('embeddedService:setupPanelFieldServiceAuthentication', None), ('embeddedService:setupPanelFieldServiceBranding', None), ('embeddedService:setupPanelFieldServiceFlows', None), ('embeddedService:setupPanelFlows', None), ('embeddedService:setupPanelFlowsBranding', None), ('embeddedService:setupPanelInput', None), ('embeddedService:setupPanelInputCheckbox', None), ('embeddedService:setupPanelInputDropdown', None), ('embeddedService:setupPanelInputJunctionRecordPicklist', None), ('embeddedService:setupPanelInputNumber', None), ('embeddedService:setupPanelInputPicklist', None), ('embeddedService:setupPanelInputText', None), ('embeddedService:setupPanelLiveAgent', None), ('embeddedService:setupPanelLiveAgentBranding', None), ('embeddedService:setupPanelSnapins', None), ('embeddedService:setupPanelTab', None), ('embeddedService:setupTab', None), ('embeddedService:setupTabChannelMenuItem', None), ('embeddedService:setupTabCustomLabels', None), ('embeddedService:setupTabCustomLabelsHeader', None), ('embeddedService:setupTabCustomLabelsTableRow', None), ('embeddedService:setupTabCustomizeLabelsTable', None), ('embeddedService:setupTabFlow', None), ('embeddedService:setupTabFlowCard', None), ('embeddedService:setupTabFlowContents', None), ('embeddedService:sidebar', None), ('embeddedService:sidebarBaseFeature', None), ('embeddedService:sidebarButton', None), ('embeddedService:sidebarDialogState', None), ('embeddedService:sidebarExtendedHeader', None), ('embeddedService:sidebarFeature', None), ('embeddedService:sidebarForm', None), ('embeddedService:sidebarFormField', None), ('embeddedService:sidebarHeader', None), ('embeddedService:sidebarMinimizedContainer', None), ('embeddedService:sidebarMinimizedDefaultUI', None), ('embeddedService:sidebarMinimizedFabDefaultUI', None), ('embeddedService:sidebarScriptLoader', None), ('embeddedService:sidebarState', None), ('embeddedService:verticalTab', None), ('embeddedService:verticalTabsEditor', None), ('embeddedService:verticalTabset', None), ('environmenthub:connectOrganization', None), ('environmenthub:createOrganization', None), ('environmenthub:displayNameRenderer', None), ('environmenthub:errorHandlingDisplay', None), ('environmenthub:generateModal', None), ('environmenthub:isFedIdSsoMatchAllowedEditRenderer', None), ('environmenthub:isFedIdSsoMatchAllowedRenderer', None), ('environmenthub:logIntoOrganization', None), ('environmenthub:modalButtons', None), ('environmenthub:serviceProviderRenderer', None), ('environmenthub:ssoMappedUsersRenderer', None), ('environmenthub:ssoStatusFilter', None), ('environmenthub:ssoStatusFilterEdit', None), ('environmenthub:ssoUserMapping', None), ('environmenthub:ssoUsernameFormulaEditRenderer', None), ('environmenthub:ssoUsernameFormulaRenderer', None), ('environmenthub:toggleSso', None), ('environmenthub:validatingInput', None), ('environmenthub:validatingMyDomainInput', None), ('environmenthub:validatingTemplateIdInput', None), ('environmenthub:validatingUserNameInput', None), ('essentials:essentialsAppSwitcher', None), ('essentials:essentialsTemplate', None), ('essentials_trialassistant:badgeService', None), ('essentials_trialassistant:chatProviderService', None), ('essentials_trialassistant:contentSearchSandbox', None), ('essentials_trialassistant:feedbackNextService', None), ('essentials_trialassistant:feedbackWrapper', None), ('essentials_trialassistant:helpContentService', None), ('essentials_trialassistant:liveChatService', None), ('essentials_trialassistant:pocketGuideService', None), ('essentials_trialassistant:pocketGuideTrialLibrary', None), ('essentials_trialassistant:pocketGuideWrapper', None), ('essentials_trialassistant:pushChatWindowService', None), ('essentials_trialassistant:pushChatWindowWrapper', None), ('externalServicesSetup:actionExplorer', None), ('externalServicesSetup:actionLink', None), ('externalServicesSetup:actionMenuItem', None), ('externalServicesSetup:createLsf', None), ('externalServicesSetup:detailPage', None), ('externalServicesSetup:errorList', None), ('externalServicesSetup:externalServicesV2Toggle', None), ('externalServicesSetup:listPage', None), ('externalServicesSetup:milestoneRegistration', None), ('externalServicesSetup:milestoneSplashPage', None), ('externalServicesSetup:milestoneSyncActions', None), ('externalServicesSetup:setupComponent', None), ('flexipage:accordion', None), ('flexipage:accordionDesignInfo', None), ('flexipage:accordionDesignSubstitute', None), ('flexipage:accordionSection', None), ('flexipage:actionBar', None), ('flexipage:activeChild', None), ('flexipage:appHomeTemplateHeaderThreeColumns', None), ('flexipage:appHomeTemplateHeaderTwoColumns', None), ('flexipage:appHomeTemplateHeaderTwoColumnsEqualWidth', None), ('flexipage:appHomeTemplateHeaderTwoColumnsLeftSidebar', None), ('flexipage:appHomeTemplateThreeColumns', None), ('flexipage:appHomeTemplateTwoColumns', None), ('flexipage:appHomeTemplateTwoColumnsStacked', None), ('flexipage:backgroundComponentsWrapper', None), ('flexipage:baseFlexipageWithGlobalPublisherContext', None), ('flexipage:baseRecordHomeTemplateDesktop', None), ('flexipage:card', None), ('flexipage:clientError', None), ('flexipage:column', None), ('flexipage:component', None), ('flexipage:component3', None), ('flexipage:componentDecorator', None), ('flexipage:defaultAppHomeTemplate', None), ('flexipage:defaultObjectHomeTemplate', None), ('flexipage:defaultStandardTabTemplate', None), ('flexipage:fieldSection', None), ('flexipage:filterListCard', None), ('flexipage:filterListCardDesignInfo', None), ('flexipage:filterListCardDesignSubstitute', None), ('flexipage:listRecord', None), ('flexipage:objectHomeTemplateThreeColumns', None), ('flexipage:objectHomeTemplateTwoColumns', None), ('flexipage:objectHomeTemplateTwoColumnsStacked', None), ('flexipage:page', None), ('flexipage:pageDeprecated', None), ('flexipage:panelCollapseButton', None), ('flexipage:recentItemStencil', None), ('flexipage:recentItemTemplate', None), ('flexipage:recentItems', None), ('flexipage:recentItemsDesignSubstitute', None), ('flexipage:recordHomeLeftSidebarTemplateDesktop', None), ('flexipage:recordHomePinnedHeaderLeftSidebarTemplateDesktop', None), ('flexipage:recordHomePinnedHeaderLeftSidebarTwoColTemplateDesktop', None), ('flexipage:recordHomePinnedHeaderTemplateDesktop', None), ('flexipage:recordHomePinnedLeftRightSidebarsTemplateDesktop', None), ('flexipage:recordHomePinnedLeftSidebarCollapsibleRegionsTemplateDesktop', None), ('flexipage:recordHomePinnedLeftSidebarTemplateDesktop', None), ('flexipage:recordHomePinnedLeftSidebarTwoColTemplateDesktop', None), ('flexipage:recordHomeSimpleViewTemplate', None), ('flexipage:recordHomeSingleColNoHeaderTemplateDesktop', None), ('flexipage:recordHomeSingleColTemplateDesktop', None), ('flexipage:recordHomeTemplateDesktop', None), ('flexipage:recordHomeThreeColHeaderTemplateDesktop', None), ('flexipage:recordHomeThreeColTemplateDesktop', None), ('flexipage:recordHomeTwoColEqualHeaderTemplateDesktop', None), ('flexipage:recordHomeWithSubheaderLeftSidebarTemplateDesktop', None), ('flexipage:recordHomeWithSubheaderTemplateDesktop', None), ('flexipage:recordPrintableViewTemplate', None), ('flexipage:reportChart', None), ('flexipage:richText', None), ('flexipage:tab', None), ('flexipage:tabset', None), ('flexipage:tempDepend', None), ('flexipage:visualforcePage', None), ('flexipageEditor:activateActionOverrideAppAssignmentDataProvider', None), ('flexipageEditor:activateActionOverrideAppAssignmentStep', None), ('flexipageEditor:activateActionOverrideAppFormFactorSelectionStep', None), ('flexipageEditor:activateActionOverrideAppFormFactorSelectionStepDataProvider', None), ('flexipageEditor:activateActionOverrideFormFactorSelectionStep', None), ('flexipageEditor:activateActionOverrideModeSelectionStep', None), ('flexipageEditor:activateActionOverrideRemoveAppAssignmentWithFormFactorsStep', None), ('flexipageEditor:activateActionOverrideReviewAssignmentDataProvider', None), ('flexipageEditor:activateActionOverrideReviewAssignmentStep', None), ('flexipageEditor:activateActionOverrideReviewAssignmentStepWithFormFactor', None), ('flexipageEditor:activateActionOverrideReviewDefaultAssignmentStep', None), ('flexipageEditor:activateActionOverrideReviewDefaultWithFormFactorAssignmentStep', None), ('flexipageEditor:activateActionOverrideSelectedAppList', None), ('flexipageEditor:activateActionOverrideSelectedAppListWithFormFactor', None), ('flexipageEditor:activateAppPage', None), ('flexipageEditor:activateAppPageMenu', None), ('flexipageEditor:activateAppPageMultipleTabs', None), ('flexipageEditor:activateAppPageSettings', None), ('flexipageEditor:activateAppRecordTypeProfileFormFactorReviewStep', None), ('flexipageEditor:activateAppRecordTypeProfileReviewStep', None), ('flexipageEditor:activateAppRecordTypeProfileReviewStepDataProvider', None), ('flexipageEditor:activateAssignmentListHeaderActions', None), ('flexipageEditor:activateContainer', None), ('flexipageEditor:activateContent', None), ('flexipageEditor:activateOnFirstSaveDialog', None), ('flexipageEditor:activateProfileOverrideProfileStep', None), ('flexipageEditor:activateProfileOverrideProfileStepDataProvider', None), ('flexipageEditor:activateProfileOverrideRecordTypeStep', None), ('flexipageEditor:activateProfileOverrideRecordTypeStepDataProvider', None), ('flexipageEditor:activateRecordHomeHierarchy', None), ('flexipageEditor:activateRecordPage', None), ('flexipageEditor:activateSelectedAppRecordTypeProfileFormFactorList', None), ('flexipageEditor:activateSelectedAppRecordTypeProfileList', None), ('flexipageEditor:activateSelectedAppRecordTypeProfileListDataProvider', None), ('flexipageEditor:activateTabMenus', None), ('flexipageEditor:appBuilderExperience', None), ('flexipageEditor:appExchangeModal', None), ('flexipageEditor:appPageCanvasConfig', None), ('flexipageEditor:appSettings', None), ('flexipageEditor:appSettingsAppCapabilities', None), ('flexipageEditor:appSettingsAppCapabilitiesContainer', None), ('flexipageEditor:appSettingsAppCapabilitiesItem', None), ('flexipageEditor:appSettingsAppCapabilitiesSection', None), ('flexipageEditor:appSettingsAppNavigation', None), ('flexipageEditor:appSettingsAppNavigationContainer', None), ('flexipageEditor:appSettingsDetails', None), ('flexipageEditor:appSettingsDetailsContainer', None), ('flexipageEditor:appSettingsEditor', None), ('flexipageEditor:appSettingsHeader', None), ('flexipageEditor:appSettingsItem', None), ('flexipageEditor:appSettingsNavigationItems', None), ('flexipageEditor:appSettingsNavigationItemsContainer', None), ('flexipageEditor:appSettingsNavigationRules', None), ('flexipageEditor:appSettingsNavigationRulesContainer', None), ('flexipageEditor:appSettingsOptimizer', None), ('flexipageEditor:appSettingsUserProfiles', None), ('flexipageEditor:appSettingsUserProfilesContainer', None), ('flexipageEditor:appSettingsUtilityBarContainer', None), ('flexipageEditor:assignmentLookup', None), ('flexipageEditor:assignmentVisibilityBanner', None), ('flexipageEditor:availableNavItemsDataProvider', None), ('flexipageEditor:baseBuilder', None), ('flexipageEditor:baseFlexipageEditorCanvasConfig', None), ('flexipageEditor:baseFormInfo', None), ('flexipageEditor:breadcrumb', None), ('flexipageEditor:canvas', None), ('flexipageEditor:component', None), ('flexipageEditor:componentInstanceItemRow', None), ('flexipageEditor:confirm', None), ('flexipageEditor:consoleTabset', None), ('flexipageEditor:container', None), ('flexipageEditor:debugDialog', None), ('flexipageEditor:designLayout', None), ('flexipageEditor:dockingPanelManager', None), ('flexipageEditor:dynamicFormsPrompt', None), ('flexipageEditor:editor', None), ('flexipageEditor:element', None), ('flexipageEditor:errorListFlyout', None), ('flexipageEditor:errorListFlyoutBody', None), ('flexipageEditor:expressionsContextDataProvider', None), ('flexipageEditor:field', None), ('flexipageEditor:flexipageList', None), ('flexipageEditor:flexipageListDataProvider', None), ('flexipageEditor:formFactorSelectionActionCell', None), ('flexipageEditor:formItem', None), ('flexipageEditor:formPaletteSectionItemRow', None), ('flexipageEditor:guardrailsNotificationCount', None), ('flexipageEditor:header', None), ('flexipageEditor:helpDropdown', None), ('flexipageEditor:homePageCanvasConfig', None), ('flexipageEditor:keyboardHelpDialog', None), ('flexipageEditor:lastModifiedByOn', None), ('flexipageEditor:leftPanel', None), ('flexipageEditor:lightningOnMobileContentLAB', None), ('flexipageEditor:mailAppCanvasConfig', None), ('flexipageEditor:menu', None), ('flexipageEditor:menuItem', None), ('flexipageEditor:menuTrigger', None), ('flexipageEditor:message', None), ('flexipageEditor:middlePanel', None), ('flexipageEditor:migrationWizard', None), ('flexipageEditor:migrationWizardDescription', None), ('flexipageEditor:migrationWizardLayoutSource', None), ('flexipageEditor:multiselectEditorModal', None), ('flexipageEditor:newPageDialog', None), ('flexipageEditor:newPageWizardPageTypeStep', None), ('flexipageEditor:newPageWizardPropertiesStep', None), ('flexipageEditor:newPageWizardTemplateStep', None), ('flexipageEditor:node', None), ('flexipageEditor:objectManagerAppDefaultList', None), ('flexipageEditor:objectManagerAppDefaultListDataProvider', None), ('flexipageEditor:objectManagerAppDefaultListWithoutFormFactor', None), ('flexipageEditor:objectManagerAppRecTypeProfileAssignmentList', None), ('flexipageEditor:objectManagerAppRecTypeProfileAssignmentListDataProvider', None), ('flexipageEditor:objectManagerAppRecTypeProfileAssignmentListWithoutFormFactor', None), ('flexipageEditor:objectManagerRecordPageAssignmentList', None), ('flexipageEditor:openPageModal', None), ('flexipageEditor:openPageModalFooter', None), ('flexipageEditor:orgDefaultPageAssignment', None), ('flexipageEditor:page', None), ('flexipageEditor:pageBuilder', None), ('flexipageEditor:pageListing', None), ('flexipageEditor:pageSwitcherMenu', None), ('flexipageEditor:paletteContainer', None), ('flexipageEditor:paletteMyDomainMessage', None), ('flexipageEditor:paletteSettingsMenuItems', None), ('flexipageEditor:picker', None), ('flexipageEditor:pickerItem', None), ('flexipageEditor:pickerSection', None), ('flexipageEditor:readOnlyBanner', None), ('flexipageEditor:recordHomeCanvasConfig', None), ('flexipageEditor:recordPageAssignments', None), ('flexipageEditor:region', None), ('flexipageEditor:removeSelectedAppRecordTypeProfileFormFactorStep', None), ('flexipageEditor:removeSelectedAppRecordTypeProfileStep', None), ('flexipageEditor:resolvedPageInfo', None), ('flexipageEditor:rightPanel', None), ('flexipageEditor:routeCalculator', None), ('flexipageEditor:routeCalculatorDataProvider', None), ('flexipageEditor:routeCalculatorPickList', None), ('flexipageEditor:routeCalculatorTester', None), ('flexipageEditor:ruleDynamicTypeEditor', None), ('flexipageEditor:ruleLHSRelatedFieldDataProvider', None), ('flexipageEditor:rulePropertyEditorProvider', None), ('flexipageEditor:setupDetailPageLink', None), ('flexipageEditor:surfaceTemplate', None), ('flexipageEditor:templateEditor', None), ('flexipageEditor:templateMyDomainMessage', None), ('flexipageEditor:templateSwitchingRegionMappingRow', None), ('flexipageEditor:templateSwitchingWizard', None), ('flexipageEditor:templateSwitchingWizardRegionMapping', None), ('flexipageEditor:templateSwitchingWizardSelectTemplate', None), ('flexipageEditor:topToolbar', None), ('flexipageEditor:workspace', None), ('flowruntime:actionBar', None), ('flowruntime:actionBase', None), ('flowruntime:actionButton', None), ('flowruntime:address', None), ('flowruntime:body', None), ('flowruntime:cancelButton', None), ('flowruntime:checkboxInput', None), ('flowruntime:choiceUserInput', None), ('flowruntime:currencyInput', None), ('flowruntime:dateInput', None), ('flowruntime:dateTimeInput', None), ('flowruntime:debug', None), ('flowruntime:debugInput', None), ('flowruntime:debugOutput', None), ('flowruntime:dependentPicklists', None), ('flowruntime:displayText', None), ('flowruntime:dropDownInput', None), ('flowruntime:email', None), ('flowruntime:errorText', None), ('flowruntime:flowRuntime', None), ('flowruntime:flowRuntimeForFlexiPage', None), ('flowruntime:flowRuntimeForQuickAction', None), ('flowruntime:flowRuntimeForS1', None), ('flowruntime:flowRuntimeForS1Header', None), ('flowruntime:flowRuntimeHeaderForModal', None), ('flowruntime:flowRuntimeV1', None), ('flowruntime:flowRuntimeV2', None), ('flowruntime:flowruntimeForModal', None), ('flowruntime:header', None), ('flowruntime:helpIcon', None), ('flowruntime:helpText', None), ('flowruntime:image', None), ('flowruntime:inputWrapper', None), ('flowruntime:interview', None), ('flowruntime:interviewDesignInfo', None), ('flowruntime:interviewDesignSubstitute', None), ('flowruntime:longTextInput', None), ('flowruntime:modalManager', None), ('flowruntime:multiCheckbox', None), ('flowruntime:name', None), ('flowruntime:numberInput', None), ('flowruntime:oneColumn', None), ('flowruntime:passwordInput', None), ('flowruntime:pauseFinalizedMessage', None), ('flowruntime:pauseScreen', None), ('flowruntime:pausedInterviewCard', None), ('flowruntime:pausedInterviewCardRow', None), ('flowruntime:phone', None), ('flowruntime:picklistInput', None), ('flowruntime:radioButtonInput', None), ('flowruntime:richTextWrapper', None), ('flowruntime:runtime', None), ('flowruntime:slider', None), ('flowruntime:spinner', None), ('flowruntime:tempDepend', None), ('flowruntime:textInput', None), ('flowruntime:toggle', None), ('flowruntime:twoColumn', None), ('flowruntime:url', None), ('flowruntime:visibilityWrapper', None), ('flowruntime:visibilityWrapperV2', None), ('folder:actionBar', None), ('folder:analyticsIntegration', None), ('folder:baseIntegration', None), ('folder:breadcrumb', None), ('folder:breadcrumbItem', None), ('folder:configRetriever', None), ('folder:folderActionProcessor', None), ('folder:forceActionProxy', None), ('folder:listView', None), ('folder:listViewDataProvider', None), ('folder:navigator', None), ('folder:pickerDialog', None), ('folder:pickerDialogFooter', None), ('folder:pickerDialogPanel', None), ('folder:searchResult', None), ('folder:selectColumnPanelFooter', None), ('folder:sidebar', None), ('folder:sidebarItem', None), ('force:abstractBorderLayout', None), ('force:abstractBorderLayoutDataProvider', None), ('force:abstractComponent', None), ('force:access', None), ('force:action', None), ('force:actionAPILoader', None), ('force:actionButton', None), ('force:actionEventLink', None), ('force:actionIconMenuItem', None), ('force:actionLink', None), ('force:actionMenuItem', None), ('force:actionOverrideCallback', None), ('force:actionRow', None), ('force:actionWindowLink', None), ('force:actionsContainer', None), ('force:actionsDropDownMenuList', None), ('force:actionsText', None), ('force:addressAutocomplete', None), ('force:addressAutocompleteOption', None), ('force:addressCompletionDataProvider', None), ('force:alohaPageTemplate', None), ('force:alternateIdProvider', None), ('force:apiBridgeLoader', None), ('force:apiVersion', None), ('force:appMessageManager', None), ('force:applicationLayoutTemplateDesktop', None), ('force:asyncCarousel', None), ('force:asyncCarouselIndicator', None), ('force:asyncCarouselPage', None), ('force:badgeButton', None), ('force:baseCard', None), ('force:baseHome', None), ('force:baseListView', None), ('force:baseLookupCardTemplate', None), ('force:borderLayoutPageHost', None), ('force:brandBand', None), ('force:brandBandPageContainer', None), ('force:breadCrumbItem', None), ('force:breadCrumbs', None), ('force:browserTabTitleUtil', None), ('force:buttonBarDeprecated', None), ('force:buyerAccountDetailPanelWrapper', None), ('force:calendar', None), ('force:calendarButtonIconRefresh', None), ('force:calendarDay', None), ('force:calendarDayHeader', None), ('force:calendarDayWeekView', None), ('force:calendarEventIcons', None), ('force:calendarEventPopup', None), ('force:calendarExternalEventPopup', None), ('force:calendarExternalEventPreview', None), ('force:calendarHeader', None), ('force:calendarItemListPopup', None), ('force:calendarMonthView', None), ('force:calendarMonthWeek', None), ('force:calendarSidebar', None), ('force:calendarTimeRuler', None), ('force:callHandler', None), ('force:canvasApp', None), ('force:canvasAppCard', None), ('force:canvasAppTemplate', None), ('force:card', None), ('force:cardPayment', None), ('force:changeOwnerContent', None), ('force:changeRecordType', None), ('force:changeRecordTypeFooter', None), ('force:chartDataProvider', None), ('force:colorPicker', None), ('force:colorPickerTrigger', None), ('force:componentDeveloper', None), ('force:componentDeveloperInstance', None), ('force:componentDeveloperManager', None), ('force:componentSpinner', None), ('force:componentsText', None), ('force:confirmDialog', None), ('force:confirmationWindow', None), ('force:consoleActionOverrideCallback', None), ('force:containerMediator', None), ('force:copyToClipboardButton', None), ('force:createAnchorPanel', None), ('force:createLinkAdvancedPanel', None), ('force:createLinkPanel', None), ('force:createMediaEmbedPanel', None), ('force:createRecordTypeChecker', None), ('force:createSmartLinkPanel', None), ('force:createTablePanel', None), ('force:dashboardHome', None), ('force:dataManager', None), ('force:dataProviderLoadErrorMessage', None), ('force:dedupeManager', None), ('force:defenseHook', None), ('force:deferredDropDownAction', None), ('force:densityDiscoveryDockedContent', None), ('force:dependencyManagerAPI', None), ('force:dependentFieldContainer', None), ('force:detailPanel', None), ('force:detailPanelDesktop', None), ('force:detailPanelEventBroker', None), ('force:detailPanelMobile', None), ('force:detailPanelProgressive', None), ('force:detailViewPanelDesignInfo', None), ('force:detailViewPanelDesignInfoDialogContent', None), ('force:detailViewPanelMobileDesignInfo', None), ('force:dirtyStateManager', None), ('force:dockableActionRunnable', None), ('force:dockingPanel', None), ('force:dockingPanelOverflow', None), ('force:dockingPanelOverflowItem', None), ('force:dotsSpinner', None), ('force:downloadHandler', None), ('force:draggableResizablePanelManager', None), ('force:duelingLists', None), ('force:duplicateList', None), ('force:duplicateListDataManager', None), ('force:duplicateListStencil', None), ('force:duplicateTabs', None), ('force:dynamicLabel', None), ('force:dynamicLabelProvider', None), ('force:eclairChart', None), ('force:eclairChartListView', None), ('force:emailHandler', None), ('force:emailTemplateInfo', None), ('force:embeddedTemplate', None), ('force:empApi', None), ('force:empty', None), ('force:entityBannerPhotoDetail', None), ('force:entityIcon', None), ('force:entityShare', None), ('force:eventLink', None), ('force:featureDiscoveryDocked', None), ('force:featureDiscoveryDockedContent', None), ('force:fieldDependencyManager', None), ('force:fieldMapping', None), ('force:fieldMappingTabs', None), ('force:fileUpload', None), ('force:filterCriteria', None), ('force:filterCriteriaBlockSectionRow', None), ('force:filterCriteriaDataProvider', None), ('force:filterCriteriaInputField', None), ('force:filterCriteriaMenuItem', None), ('force:filterDataProvider', None), ('force:filterInfiniteScrollDataProvider', None), ('force:filterList', None), ('force:filterListDeprecated', None), ('force:filterMenu', None), ('force:filterMenuItem', None), ('force:filterPanel', None), ('force:filterPanelBooleanCriterionEditor', None), ('force:filterPanelCallout', None), ('force:filterPanelDateCriterionEditor', None), ('force:filterPanelFieldSelector', None), ('force:filterPanelFilterCriterion', None), ('force:filterPanelFilterEditor', None), ('force:filterPanelMultiPicklistCriterionEditor', None), ('force:filterPanelScope', None), ('force:filterPanelScopeEditor', None), ('force:filterPanelTextFieldEditor', None), ('force:fingerprint', None), ('force:fireEventAfterLogging', None), ('force:headerButton', None), ('force:headerButtonDeprecated', None), ('force:headerLayout', None), ('force:headerMenuTrigger', None), ('force:heightMemoizer', None), ('force:highlightText', None), ('force:highlights', None), ('force:highlightsActionWrapper', None), ('force:highlightsAttributeContainer', None), ('force:highlightsDesktopListRecordItem', None), ('force:highlightsMobileListRecordItem', None), ('force:highlightsPanel', None), ('force:highlightsPlaceholder', None), ('force:highlightsPreviewStencil', None), ('force:highlightsStencil', None), ('force:highlightsStencilDesktop', None), ('force:highlightsStencilDesktopVertical', None), ('force:highlightsStencilMobile', None), ('force:hostConfig', None), ('force:hoverPanel', None), ('force:hoverPrototype', None), ('force:hoverPrototypeManager', None), ('force:icon', None), ('force:iconDeprecated', None), ('force:iconTriggerLink', None), ('force:imageRelatedListStencil', None), ('force:infiniteDuelingList', None), ('force:infiniteDuelingListAvailableItems', None), ('force:infiniteDuelingListSelectableItems', None), ('force:infiniteDuelingListSelectedItems', None), ('force:inlineEdit', None), ('force:inlineEditCell', None), ('force:inlineEditComponent', None), ('force:inlineEditGrid', None), ('force:inlineEditGridStencil', None), ('force:inlineEditKeyNavCell', None), ('force:inlineEditPanelBody', None), ('force:inlineEditPanelFooter', None), ('force:inlineExpandableContainer', None), ('force:inlinePulsingSpinner', None), ('force:inlineRotatingSpinner', None), ('force:inlineSpinner', None), ('force:inputAddress', None), ('force:inputCompoundField', None), ('force:inputField', None), ('force:inputFieldInternal', None), ('force:inputLocation', None), ('force:inputLookup', None), ('force:inputLookupManager', None), ('force:inputLookupPanel', None), ('force:inputLookupPanelItem', None), ('force:inputLookupPanelSelector', None), ('force:inputLookupTrigger', None), ('force:inputMultiPicklist', None), ('force:inputName', None), ('force:inputPicklist', None), ('force:inputRadio', None), ('force:inputRichText', None), ('force:inputTextarea', None), ('force:inputTime', None), ('force:inputURL', None), ('force:ldsPushInvalidationManager', None), ('force:linkCard', None), ('force:linkTemplate', None), ('force:list', None), ('force:listLoadingTemplate', None), ('force:listRecord', None), ('force:listRecordItem', None), ('force:listSorterDataProvider', None), ('force:listTemplate', None), ('force:listView', None), ('force:listViewDataManager', None), ('force:listViewDataManagerAdapter', None), ('force:listViewEntityShareDataProvider', None), ('force:listViewManager', None), ('force:listViewManagerDisplayActionConfiguration', None), ('force:listViewManagerDisplayDataConfiguration', None), ('force:listViewManagerDisplayDependencyConfiguration', None), ('force:listViewManagerDisplayDependencyItem', None), ('force:listViewManagerDisplayInlineEditConfiguration', None), ('force:listViewManagerDisplaySwitcher', None), ('force:listViewManagerDisplayViewConfiguration', None), ('force:listViewManagerDisplaysConfiguration', None), ('force:listViewManagerGrid', None), ('force:listViewManagerGridColumnHeaderConfiguration', None), ('force:listViewManagerGridColumnHeaderMenu', None), ('force:listViewManagerGridFooter', None), ('force:listViewManagerGridWrapText', None), ('force:listViewManagerHeader', None), ('force:listViewManagerHeaderConfiguration', None), ('force:listViewManagerLayoutHandlingConfiguration', None), ('force:listViewManagerNavigateToObjectHome', None), ('force:listViewManagerPinnedListConfiguration', None), ('force:listViewManagerPrimaryDisplayManager', None), ('force:listViewManagerSecondaryDisplayManager', None), ('force:listViewManagerSettingsMenuConfiguration', None), ('force:listViewManagerSettingsMenuOptionConfiguration', None), ('force:listViewManagerSplitViewList', None), ('force:listViewManagerStateManager', None), ('force:listViewPicker', None), ('force:listViewPickerAutocomplete', None), ('force:listViewPickerAutocompleteList', None), ('force:listViewPickerAutocompleteOption', None), ('force:listViewPickerDataProvider', None), ('force:listViewPlaceholder', None), ('force:listViewSettingsDetail', None), ('force:listViewSettingsMenu', None), ('force:listViewStatusInfo', None), ('force:listViewStencil', None), ('force:listviewChartsSetupPage', None), ('force:liveRecordsDelegate', None), ('force:loaderBar', None), ('force:loading', None), ('force:loadingLaser', None), ('force:localRecordChangeObserver', None), ('force:logoutHandler', None), ('force:lookupCard', None), ('force:lookupCardTemplate', None), ('force:lookupCreateActionManager', None), ('force:managePortalUserPermSets', None), ('force:mask', None), ('force:maskOutputText', None), ('force:massChangeOwner', None), ('force:massChangeStatus', None), ('force:massErrorsManager', None), ('force:massErrorsPanel', None), ('force:massQuickActionRunnable', None), ('force:menuTriggerIcon', None), ('force:message', None), ('force:mobileActionModal', None), ('force:mobileOverlay', None), ('force:modal', None), ('force:modalActionContainer', None), ('force:modalListViewFooterAdapter', None), ('force:modalSpinner', None), ('force:mruDataProvider', None), ('force:multiAdd', None), ('force:multiAddDataManagerSwitcher', None), ('force:multiAddDefaultNextAction', None), ('force:multiAddMultiEditBackAction', None), ('force:multiAddMultiEditHeader', None), ('force:multiAddMultiEditNextAction', None), ('force:multiAddSearch', None), ('force:multiAddUsingLVM', None), ('force:multiEdit', None), ('force:multiEditDataManager', None), ('force:multiEditDataManagerConverter', None), ('force:multiEditDefaultNextAction', None), ('force:multiEditDependencyManager', None), ('force:multiTemplateVirtualList', None), ('force:navigateConfirmation', None), ('force:noRowActions', None), ('force:notesBaseListViewNonGrid', None), ('force:notesObjectHomeListViewNonGrid', None), ('force:objectHome', None), ('force:objectHomeChart', None), ('force:objectHomeDataProvider', None), ('force:objectHomeDesktop', None), ('force:objectHomePipelineView', None), ('force:outputAddress', None), ('force:outputAddressText', None), ('force:outputAnimatedNumber', None), ('force:outputAnytype', None), ('force:outputCurrency', None), ('force:outputCustomLinkUrl', None), ('force:outputEventDateTime', None), ('force:outputField', None), ('force:outputFieldInternal', None), ('force:outputFile', None), ('force:outputFormulaHtml', None), ('force:outputImage', None), ('force:outputLocation', None), ('force:outputLookup', None), ('force:outputLookupText', None), ('force:outputLookupWithPreview', None), ('force:outputModStamp', None), ('force:outputModStampWithPreview', None), ('force:outputName', None), ('force:outputNameForUser', None), ('force:outputNoteorAttachment', None), ('force:outputOwnerIdLookupWithChangeLink', None), ('force:outputOwnerLookup', None), ('force:outputPhone', None), ('force:outputPicklist', None), ('force:outputPlainText', None), ('force:outputRecordType', None), ('force:outputRecordTypeWithoutChangeLink', None), ('force:outputRichText', None), ('force:outputScheduleDateField', None), ('force:outputTime', None), ('force:outputURL', None), ('force:pageBlock', None), ('force:pageBlockItem', None), ('force:pageBlockItemEdit', None), ('force:pageBlockItemView', None), ('force:pageBlockSection', None), ('force:pageBlockSectionEdit', None), ('force:pageBlockSectionRow', None), ('force:pageBlockSectionView', None), ('force:pageError', None), ('force:pageInfo', None), ('force:panelCallbackAction', None), ('force:panelOverlay', None), ('force:panelSlider', None), ('force:personalSettingsPageRouter', None), ('force:photoCrop', None), ('force:photoCropDraggable', None), ('force:placeholder', None), ('force:pluginButton', None), ('force:pluginForm', None), ('force:pluginFormItem', None), ('force:pluginFormItemList', None), ('force:pluginItem', None), ('force:pluginItemList', None), ('force:pluginListDataProvider', None), ('force:popOutManagerAura', None), ('force:popover', None), ('force:previewPanel', None), ('force:printSetupPage', None), ('force:publisherQuickActionCollapser', None), ('force:quickActionHandler', None), ('force:quickActionLayout', None), ('force:quickActionManager', None), ('force:quickActionRecord', None), ('force:quickActionRecordCollection', None), ('force:quickActionRunnable', None), ('force:quickEdit', None), ('force:quickEditField', None), ('force:quill', None), ('force:quillButtonLink', None), ('force:quillInsertImageButton', None), ('force:readOnlyRelatedListStencil', None), ('force:record', None), ('force:recordCollection', None), ('force:recordContentPlugin', None), ('force:recordData', None), ('force:recordDetailPanelMobile', None), ('force:recordEdit', None), ('force:recordEditActions', None), ('force:recordGlobalValueProvider', None), ('force:recordHome', None), ('force:recordHomeInContext', None), ('force:recordLandingPage', None), ('force:recordLayout', None), ('force:recordLayoutBroker', None), ('force:recordLayoutList', None), ('force:recordLayoutTemplate', None), ('force:recordList', None), ('force:recordListDummyDataProvider', None), ('force:recordMergeLibraryTester', None), ('force:recordPageUserSettings', None), ('force:recordPageUserSettingsPage', None), ('force:recordPreviewItem', None), ('force:recordPreviewTemplateDesktop', None), ('force:recordRunnable', None), ('force:recordView', None), ('force:recordsComparison', None), ('force:recordsComparisonTemplate', None), ('force:regionHidden', None), ('force:relatedCardContainer', None), ('force:relatedContentContainer', None), ('force:relatedList', None), ('force:relatedListAdvancedGridInfo', None), ('force:relatedListAdvancedGridPrompt', None), ('force:relatedListCard', None), ('force:relatedListCardDesktop', None), ('force:relatedListCardHeader', None), ('force:relatedListContainer', None), ('force:relatedListContainerDataProvider', None), ('force:relatedListContainerDesignInfo', None), ('force:relatedListContainerDesignInfoDialogContent', None), ('force:relatedListContainerMetadataProvider', None), ('force:relatedListDataProvider', None), ('force:relatedListDesktop', None), ('force:relatedListHeader', None), ('force:relatedListHover', None), ('force:relatedListOffline', None), ('force:relatedListPreview', None), ('force:relatedListPreviewAdvancedGrid', None), ('force:relatedListPreviewDataProvider', None), ('force:relatedListPreviewGrid', None), ('force:relatedListPreviewRecordLayoutList', None), ('force:relatedListPreviewTransitionList', None), ('force:relatedListQuickLinksContainer', None), ('force:relatedListQuickLinksContainerDataProvider', None), ('force:relatedListQuickLinksContainerDesignInfo', None), ('force:relatedListRowsToDisplayEditor', None), ('force:relatedListShowActionBarEditor', None), ('force:relatedListSingleContainer', None), ('force:relatedListSingleContainerDesignInfo', None), ('force:relatedListSingleContainerDesignSubstitute', None), ('force:relatedListView', None), ('force:relatedListViewDataManager', None), ('force:relatedListViewManager', None), ('force:relatedListVisibilityEditor', None), ('force:relatedListsDataCollection', None), ('force:relatedListsOffline', None), ('force:requires', None), ('force:retryButton', None), ('force:retryPanel', None), ('force:routingRetryPanel', None), ('force:rrhVersionIndicator', None), ('force:saveOption', None), ('force:scopedActionModal', None), ('force:scopedModal', None), ('force:scopedSldsTemplate', None), ('force:scrollableContext', None), ('force:scrollablePanel', None), ('force:searchFilterHeader', None), ('force:selectableListDataProvider', None), ('force:selectableListDataProviderSwitcher', None), ('force:selectableListView', None), ('force:selectableListViewHeader', None), ('force:selectableListViewSelectionColumn', None), ('force:selectableTargetAdapter', None), ('force:setupRouter', None), ('force:showSelectedListDataProvider', None), ('force:simpleRecordHomeActivitiesToggle', None), ('force:simpleRecordHomePageAssignments', None), ('force:simpleRecordHomePrompt', None), ('force:simpleRecordHomeSetupPage', None), ('force:simpleRecordHomeToggle', None), ('force:singularPluralMany', None), ('force:skipLink', None), ('force:sldsTemplate', None), ('force:socialAction', None), ('force:socialImage', None), ('force:socialPhoto', None), ('force:socialPhotoActionDialog', None), ('force:socialPhotoController', None), ('force:socialPhotoWrapper', None), ('force:socialPhoto_v2', None), ('force:sortFilterMenuItem', None), ('force:splitViewListRecord', None), ('force:splitViewListRecordItem', None), ('force:stackedTab', None), ('force:stackedTabContent', None), ('force:stackedTabset', None), ('force:stackedTabsetContainer', None), ('force:standardContent', None), ('force:standardHeader', None), ('force:staticGoogleMap', None), ('force:statusIcon', None), ('force:statusIconSummary', None), ('force:storageIsolationKey', None), ('force:streamingConfiguration', None), ('force:style', None), ('force:switchToNetworkHandler', None), ('force:tabBar', None), ('force:tabBarItem', None), ('force:targetInteractionHandler', None), ('force:tempDepend', None), ('force:templateWorkspace', None), ('force:templateWorkspaceWrapper', None), ('force:textEnumLookup', None), ('force:themeCssVarLoader', None), ('force:themedTemplate', None), ('force:toast', None), ('force:toastManager', None), ('force:toastMessage', None), ('force:treeGridTriggerCell', None), ('force:userAssistanceDocPreview', None), ('force:userAssistanceLightbox', None), ('force:userAssistanceMenuItem', None), ('force:userAssistanceMenuItemNew', None), ('force:userAssistancePlatform', None), ('force:userAssistancePopovers', None), ('force:userAssistancePopoversManager', None), ('force:utilityBar', None), ('force:video', None), ('force:videoPreview', None), ('force:virtualAction', None), ('force:virtualAutocompleteMenu', None), ('force:virtualAutocompleteMenuDataProviderAdaptor', None), ('force:virtualAutocompleteMenuList', None), ('force:virtualAutocompleteMenuOption', None), ('force:virtualCheckbox', None), ('force:virtualGrid', None), ('force:virtualRecordList', None), ('force:virtualRecordsComparison', None), ('force:virtualRowAction', None), ('force:virtualRowActionColumn', None), ('force:virtualRowNumberCell', None), ('force:virtualSelectionColumn', None), ('force:virtualTreeGrid', None), ('force:visualMessageQueue', None), ('force:walkthrough', None), ('force:walkthroughApps', None), ('force:workspaceContent', None), ('force:workspaceHeader', None), ('forceChatter:abstractFeedItem', None), ('forceChatter:actionChatterContainer', None), ('forceChatter:actionLink', None), ('forceChatter:actionLinkButton', None), ('forceChatter:actionLinkGroup', None), ('forceChatter:actionLinkGroupStatus', None), ('forceChatter:addMemberCard', None), ('forceChatter:addMembers', None), ('forceChatter:addMembersTemplate', None), ('forceChatter:addParticipantDialog', None), ('forceChatter:addSkillToProfileAction', None), ('forceChatter:addToStreamAction', None), ('forceChatter:addToStreamPanel', None), ('forceChatter:addToStreamPopover', None), ('forceChatter:addToStreamPopoverFollowButton', None), ('forceChatter:alohaPagePost', None), ('forceChatter:anchor', None), ('forceChatter:announcementPost', None), ('forceChatter:askToJoinGroupAction', None), ('forceChatter:attachFileActionButton', None), ('forceChatter:attachFileButton', None), ('forceChatter:autocomplete', None), ('forceChatter:badgeFilterMenu', None), ('forceChatter:bannerPhotoCrop', None), ('forceChatter:basePublisher', None), ('forceChatter:bookmarkAction', None), ('forceChatter:canvasPost', None), ('forceChatter:changeFeedStatusAction', None), ('forceChatter:changeGroupType', None), ('forceChatter:chatterDisabledMessage', None), ('forceChatter:chatterExtensionButton', None), ('forceChatter:chatterExtensionsSetup', None), ('forceChatter:chatterFollow', None), ('forceChatter:chatterGenericRelatedListRecord', None), ('forceChatter:chatterGroupAnalytics', None), ('forceChatter:chatterGroupAnalyticsCountCard', None), ('forceChatter:chatterGroupAnalyticsFeedHistory', None), ('forceChatter:chatterGroupAnalyticsInAloha', None), ('forceChatter:chatterGroupAnalyticsNewMembers', None), ('forceChatter:chatterGroupAnalyticsTotals', None), ('forceChatter:chatterGroupCompactStencil', None), ('forceChatter:chatterGroupCompactStencilDesktop', None), ('forceChatter:chatterGroupMemberRequestRelatedListRecord', None), ('forceChatter:chatterGroupMemberRequestRelatedListRecordDesktop', None), ('forceChatter:chatterGroupMemberRequestRelatedListRecordMobile', None), ('forceChatter:chatterNotification', None), ('forceChatter:chatterUserRelatedListRecord', None), ('forceChatter:chatterUserRelatedListRecordDrillIn', None), ('forceChatter:closeAction', None), ('forceChatter:clumpHeader', None), ('forceChatter:clumpItem', None), ('forceChatter:clumpItemFullView', None), ('forceChatter:codeSnippetButton', None), ('forceChatter:codeSnippetModal', None), ('forceChatter:collatedUserPhotos', None), ('forceChatter:comment', None), ('forceChatter:commentRetrievalService', None), ('forceChatter:compactFeed', None), ('forceChatter:compactFeedDesignInfo', None), ('forceChatter:compactFeedItem', None), ('forceChatter:compactFeedItemBody', None), ('forceChatter:compactFeedMetric', None), ('forceChatter:compositeRecsDataProvider', None), ('forceChatter:compositionComponentContainer', None), ('forceChatter:compositionComponentContainerFooter', None), ('forceChatter:compoundFieldUserNameRenderer', None), ('forceChatter:compoundFieldsGroupName', None), ('forceChatter:compoundNameWithOutOfOffice', None), ('forceChatter:conditionalRichTextInputButton', None), ('forceChatter:contentFileSize', None), ('forceChatter:contentFolderItemTileTemplate', None), ('forceChatter:contentPost', None), ('forceChatter:contentVisibilityMonitor', None), ('forceChatter:crudStream', None), ('forceChatter:deleteBannerPhoto', None), ('forceChatter:deleteCommentAction', None), ('forceChatter:deleteFeedItemAction', None), ('forceChatter:deletePhoto', None), ('forceChatter:desktopChatter', None), ('forceChatter:desktopChatterContainer', None), ('forceChatter:desktopChatterFeedPanel', None), ('forceChatter:downVoteAction', None), ('forceChatter:editCommentAction', None), ('forceChatter:editGroupMembership', None), ('forceChatter:editGroupMembershipRequest', None), ('forceChatter:editGroupNotification', None), ('forceChatter:editGroupNotificationSettings', None), ('forceChatter:editManager', None), ('forceChatter:editPostAction', None), ('forceChatter:editTopicsAction', None), ('forceChatter:emailConfirmation', None), ('forceChatter:emojiButton', None), ('forceChatter:emojiPicker', None), ('forceChatter:endorseProfileSkillUserAction', None), ('forceChatter:enterGroupDetails', None), ('forceChatter:entityCard', None), ('forceChatter:entityLink', None), ('forceChatter:entityPhoto', None), ('forceChatter:entityPhotoDetail', None), ('forceChatter:exposedFeed', None), ('forceChatter:exposedFeedDesignInfo', None), ('forceChatter:exposedFeedDesktop', None), ('forceChatter:exposedFeedMobile', None), ('forceChatter:extensionInstanceRenderWrapper', None), ('forceChatter:facepilePreviewItem', None), ('forceChatter:feed', None), ('forceChatter:feedAnchor', None), ('forceChatter:feedAnchorSubMenu', None), ('forceChatter:feedAuxBody', None), ('forceChatter:feedAuxBodyCanvasPost', None), ('forceChatter:feedAuxBodyCaseComment', None), ('forceChatter:feedAuxBodyChatterExtensionInstance', None), ('forceChatter:feedAuxBodyChatterExtensionInstancesContainer', None), ('forceChatter:feedAuxBodyContentPost', None), ('forceChatter:feedAuxBodyEmailMessage', None), ('forceChatter:feedAuxBodyEmpty', None), ('forceChatter:feedAuxBodyEnhancedLink', None), ('forceChatter:feedAuxBodyLinkPost', None), ('forceChatter:feedAuxBodyMediaReferences', None), ('forceChatter:feedAuxBodyPollPost', None), ('forceChatter:feedAuxBodyPollPostResults', None), ('forceChatter:feedAuxBodyPollPostVote', None), ('forceChatter:feedAuxBodyQuestionPost', None), ('forceChatter:feedAuxBodyQuestionPostInner', None), ('forceChatter:feedAuxBodyRecordSummary', None), ('forceChatter:feedAuxBodySharedPost', None), ('forceChatter:feedAuxBodySharedRecord', None), ('forceChatter:feedAuxBodySocialPost', None), ('forceChatter:feedAuxBodyText', None), ('forceChatter:feedAuxBodyTrackedChange', None), ('forceChatter:feedBody', None), ('forceChatter:feedBodyBanner', None), ('forceChatter:feedBodyQuestionWithBestAnswer', None), ('forceChatter:feedBodyQuestionWithoutAnswer', None), ('forceChatter:feedBodySimple', None), ('forceChatter:feedBodyText', None), ('forceChatter:feedCommentInput', None), ('forceChatter:feedCommentInputDesktop', None), ('forceChatter:feedCommentInputMobile', None), ('forceChatter:feedContentAttachment', None), ('forceChatter:feedContentAttachmentPreview', None), ('forceChatter:feedContentFilePreview', None), ('forceChatter:feedElement', None), ('forceChatter:feedElementFullView', None), ('forceChatter:feedElementFullViewDefault', None), ('forceChatter:feedElementIteration', None), ('forceChatter:feedEventsProcessor', None), ('forceChatter:feedInner', None), ('forceChatter:feedItem', None), ('forceChatter:feedItemActionLinks', None), ('forceChatter:feedItemFullView', None), ('forceChatter:feedItemHeader', None), ('forceChatter:feedItemInteractions', None), ('forceChatter:feedPill', None), ('forceChatter:feedQbProxy', None), ('forceChatter:feedSorter', None), ('forceChatter:feedSwitcher', None), ('forceChatter:feedback', None), ('forceChatter:feeditemAttachments', None), ('forceChatter:fileIcon', None), ('forceChatter:fileSize', None), ('forceChatter:fileThumbnail', None), ('forceChatter:fileUploader', None), ('forceChatter:flagAction', None), ('forceChatter:flags', None), ('forceChatter:followAction', None), ('forceChatter:followInStreamAction', None), ('forceChatter:ftcList', None), ('forceChatter:ftcPreamble', None), ('forceChatter:fullFeed', None), ('forceChatter:genericFeedElement', None), ('forceChatter:groupAnnouncement', None), ('forceChatter:groupArchiveBanner', None), ('forceChatter:groupCreationWizard', None), ('forceChatter:groupDetailCard', None), ('forceChatter:groupMemberRoleSwitch', None), ('forceChatter:groupMembershipRequestButton', None), ('forceChatter:groupPreviewStencil', None), ('forceChatter:groupSearchDataProvider', None), ('forceChatter:groupTileMembershipButton', None), ('forceChatter:groupTileTemplate', None), ('forceChatter:headerPhotoCallout', None), ('forceChatter:highlightingScriptWrapper', None), ('forceChatter:inlineImageFileAction', None), ('forceChatter:inputInformationBody', None), ('forceChatter:invitePeople', None), ('forceChatter:joinGroupAction', None), ('forceChatter:knowledgeArticleHighlightsPreviewStencil', None), ('forceChatter:lazyFeedAuxBody', None), ('forceChatter:leaveGroupAction', None), ('forceChatter:lightningComponent', None), ('forceChatter:lightningFeedBodyText', None), ('forceChatter:likersCard', None), ('forceChatter:linkPost', None), ('forceChatter:mediaReferenceFullview', None), ('forceChatter:mediaReferencePreview', None), ('forceChatter:mediaReferences', None), ('forceChatter:mediaReferencesViewer', None), ('forceChatter:mentionAutocomplete', None), ('forceChatter:menuTriggerLinkWithTooltip', None), ('forceChatter:messageActivity', None), ('forceChatter:messageBodyInput', None), ('forceChatter:messageBodyInputPlainTextArea', None), ('forceChatter:messageBodyInputRichTextArea', None), ('forceChatter:messageBodyInputRichTextEditor', None), ('forceChatter:messageDetailView', None), ('forceChatter:messageDetailViewHeader', None), ('forceChatter:messageItem', None), ('forceChatter:messageListViewDataProvider', None), ('forceChatter:messagePublisher', None), ('forceChatter:messagePublisherDesktop', None), ('forceChatter:messageSegmentWrapper', None), ('forceChatter:messageSegments', None), ('forceChatter:messageSummary', None), ('forceChatter:messages', None), ('forceChatter:messagesListView', None), ('forceChatter:messagesListViewHeader', None), ('forceChatter:messagesManager', None), ('forceChatter:mobileChatter', None), ('forceChatter:moderationDialog', None), ('forceChatter:moveAction', None), ('forceChatter:moveExecution', None), ('forceChatter:muteAction', None), ('forceChatter:navigationalTopicDropdown', None), ('forceChatter:newContent', None), ('forceChatter:newContentButton', None), ('forceChatter:newMessageButton', None), ('forceChatter:newMessageNotification', None), ('forceChatter:notes', None), ('forceChatter:objectHomeTileView', None), ('forceChatter:outOfOfficeSettings', None), ('forceChatter:outputDescription', None), ('forceChatter:outputGroupCombinedType', None), ('forceChatter:outputGroupIsActivityGroup', None), ('forceChatter:outputGroupIsArchived', None), ('forceChatter:outputGroupIsBroadcast', None), ('forceChatter:outputGroupMemberCount', None), ('forceChatter:outputGroupMemberRole', None), ('forceChatter:outputInformationBody', None), ('forceChatter:outputRewardFundValue', None), ('forceChatter:outputShareType', None), ('forceChatter:outputSkillEndorsementCount', None), ('forceChatter:outputSkillUserCount', None), ('forceChatter:outputSkillUserName', None), ('forceChatter:outputUserAboutMe', None), ('forceChatter:outputUserCompanyName', None), ('forceChatter:outputUserIsActive', None), ('forceChatter:outputVersionNumber', None), ('forceChatter:overflowActionMenu', None), ('forceChatter:panelLauncherBadgeSelect', None), ('forceChatter:participantsInput', None), ('forceChatter:pill', None), ('forceChatter:pillBox', None), ('forceChatter:pillContainer', None), ('forceChatter:pillItem', None), ('forceChatter:pinAction', None), ('forceChatter:pinnedItemManager', None), ('forceChatter:pollPost', None), ('forceChatter:pollPostChoice', None), ('forceChatter:pollPostDesktop', None), ('forceChatter:pollPostMobile', None), ('forceChatter:postLinkSharing', None), ('forceChatter:preamble', None), ('forceChatter:progressBar', None), ('forceChatter:publishDraftPostAction', None), ('forceChatter:publisher', None), ('forceChatter:publisherAttachmentActionEmptyContainer', None), ('forceChatter:publisherAttachmentButton', None), ('forceChatter:publisherAttachmentFileUploadButton', None), ('forceChatter:publisherAttachmentItem', None), ('forceChatter:publisherAttachmentPreview', None), ('forceChatter:publisherAttachments', None), ('forceChatter:publisherAttachmentsGroup', None), ('forceChatter:publisherAttachmentsMenu', None), ('forceChatter:publisherContentAttachmentsPreviewContainer', None), ('forceChatter:publisherDesignInfo', None), ('forceChatter:publisherDesignSubstitute', None), ('forceChatter:publisherInput', None), ('forceChatter:publisherPresentation', None), ('forceChatter:publisherPresentationDesktop', None), ('forceChatter:publisherPresentationMobile', None), ('forceChatter:publisherPresentationPanel', None), ('forceChatter:publisherQuickAction', None), ('forceChatter:publisherQuickCreate', None), ('forceChatter:publisherSalesforceFileAction', None), ('forceChatter:publisherUploadFileAction', None), ('forceChatter:publisherVisibility', None), ('forceChatter:publisherVisibilityWrapper', None), ('forceChatter:questionPost', None), ('forceChatter:questionPostDesktop', None), ('forceChatter:questionPostMobile', None), ('forceChatter:quickActionLoader', None), ('forceChatter:recommendationAcceptButton', None), ('forceChatter:recommendationBase', None), ('forceChatter:recommendationBaseWidget', None), ('forceChatter:recommendationBig', None), ('forceChatter:recommendationCarousel', None), ('forceChatter:recommendationCarouselPage', None), ('forceChatter:recommendationCarouselWidget', None), ('forceChatter:recommendationFollowButton', None), ('forceChatter:recommendationInFeed', None), ('forceChatter:recommendationJoinButton', None), ('forceChatter:recommendationListCard', None), ('forceChatter:recommendationListWidget', None), ('forceChatter:recommendationSingleCard', None), ('forceChatter:recommendationSmall', None), ('forceChatter:recommendationTile', None), ('forceChatter:recommendationUiButton', None), ('forceChatter:recommendations', None), ('forceChatter:recommendationsBig', None), ('forceChatter:recommendationsBigDesignInfo', None), ('forceChatter:recommendationsDesignSubstitute', None), ('forceChatter:recordFeedActions', None), ('forceChatter:recordFeedContainer', None), ('forceChatter:recordFeedContainerDesignInfo', None), ('forceChatter:recordFeedContainerDesktop', None), ('forceChatter:recordFeedContainerDesktopWrapper', None), ('forceChatter:recordFeedContainerMobile', None), ('forceChatter:relatedCardContainer', None), ('forceChatter:relatedTopics', None), ('forceChatter:relatedTopicsDataProvider', None), ('forceChatter:removeParticipantDialog', None), ('forceChatter:richLinkPreviewMetadata', None), ('forceChatter:router', None), ('forceChatter:s1FeedsProxy', None), ('forceChatter:scroller', None), ('forceChatter:searchInFeed', None), ('forceChatter:seenByCard', None), ('forceChatter:selectBadge', None), ('forceChatter:selectBadgeDesktop', None), ('forceChatter:selectBadgeMobile', None), ('forceChatter:selectFileFromListViewPanel', None), ('forceChatter:selectGroupType', None), ('forceChatter:selectMention', None), ('forceChatter:selectMentionCachedDataProvider', None), ('forceChatter:selectMentionDataProvider', None), ('forceChatter:selectMentionOption', None), ('forceChatter:selectTopicSuggestion', None), ('forceChatter:selectTopicSuggestionDataProvider', None), ('forceChatter:selectTopicSuggestionOption', None), ('forceChatter:selectUserDataProvider', None), ('forceChatter:selectUserOption', None), ('forceChatter:selectedFileBadge', None), ('forceChatter:selectedThanksBadge', None), ('forceChatter:sfxAnnouncementPost', None), ('forceChatter:sfxEditGroupNotificationSettings', None), ('forceChatter:sfxFollowAction', None), ('forceChatter:sfxJoinGroupAction', None), ('forceChatter:sfxLeaveGroupAction', None), ('forceChatter:shareButton', None), ('forceChatter:sharePostMenu', None), ('forceChatter:simpleFeedItemTopics', None), ('forceChatter:slashAutocomplete', None), ('forceChatter:sortMenu', None), ('forceChatter:streamDeleteModalBody', None), ('forceChatter:streamEditDeleteAction', None), ('forceChatter:streamHeader', None), ('forceChatter:streamNotifications', None), ('forceChatter:streamsListing', None), ('forceChatter:streamsListingHeader', None), ('forceChatter:streamsListingMobile', None), ('forceChatter:streamsListingNavigation', None), ('forceChatter:streamsListingProvider', None), ('forceChatter:streamsListingRecordCell', None), ('forceChatter:streamsListingRowActionMenu', None), ('forceChatter:style', None), ('forceChatter:stypiEditor', None), ('forceChatter:tempDepend', None), ('forceChatter:textPost', None), ('forceChatter:textPostDesktop', None), ('forceChatter:textPostDesktopConditionalPanelActions', None), ('forceChatter:textPostMobile', None), ('forceChatter:thanksBadge', None), ('forceChatter:thanksBadgeSelected', None), ('forceChatter:thanksPost', None), ('forceChatter:thanksPostDesktop', None), ('forceChatter:thanksPostMobile', None), ('forceChatter:thanksPostUserSelect', None), ('forceChatter:thanksPostUserSelectDesktop', None), ('forceChatter:thanksPostUserSelectMobile', None), ('forceChatter:threadedComment', None), ('forceChatter:todayToMeFeed', None), ('forceChatter:toggleLike', None), ('forceChatter:topicAutocompleteInput', None), ('forceChatter:topicDescription', None), ('forceChatter:topicList', None), ('forceChatter:topicMetrics', None), ('forceChatter:topicMetricsItem', None), ('forceChatter:topicSuggestionAutoComplete', None), ('forceChatter:topicSuggestionPillBox', None), ('forceChatter:topicsOnRecordWrapper', None), ('forceChatter:topicsOnRecordWrapperDesignSubstitute', None), ('forceChatter:trailHeadCard', None), ('forceChatter:trailheadBadge', None), ('forceChatter:translationLanguageSelectionAction', None), ('forceChatter:trendingTopics', None), ('forceChatter:trendingTopicsDataProvider', None), ('forceChatter:trendingTopicsDesignSubstitute', None), ('forceChatter:truncatedOutputText', None), ('forceChatter:typingIndicator', None), ('forceChatter:unansweredQuestions', None), ('forceChatter:unansweredQuestionsDataProvider', None), ('forceChatter:upVote', None), ('forceChatter:updateBannerPhoto', None), ('forceChatter:updatePhoto', None), ('forceChatter:userPhoto', None), ('forceChatter:userPreviewStencil', None), ('forceChatter:userProfileAboutMeEdit', None), ('forceChatter:userProfileHighlightsStencil', None), ('forceChatter:userProfileHighlightsStencilDesktop', None), ('forceChatter:usersLookupDataProvider', None), ('forceChatter:verifyUnverifyAction', None), ('forceChatter:viewPhoto', None), ('forceChatter:votersCard', None), ('forceChatter:workspaceTileTemplate', None), ('forceCommunity:accountBrandImage', None), ('forceCommunity:accountBrandImageEdit', None), ('forceCommunity:accountBrandImageView', None), ('forceCommunity:accountBrandRecord', None), ('forceCommunity:accountBrandRecordDesignSubstitute', None), ('forceCommunity:accountSwitcher', None), ('forceCommunity:accountSwitcherAction', None), ('forceCommunity:accountSwitcherDataManager', None), ('forceCommunity:accountSwitcherDataProvider', None), ('forceCommunity:accountSwitcherDesktop', None), ('forceCommunity:accountSwitcherListRecord', None), ('forceCommunity:accountSwitcherSearchPanel', None), ('forceCommunity:actionButtonMobile', None), ('forceCommunity:actionsContainerMobile', None), ('forceCommunity:activateDeactivatePortalUser', None), ('forceCommunity:activityPanel', None), ('forceCommunity:addMember', None), ('forceCommunity:allResults', None), ('forceCommunity:analyticsListener', None), ('forceCommunity:analyticsListenerGtag', None), ('forceCommunity:analyticsObjectHome', None), ('forceCommunity:appLauncher', None), ('forceCommunity:appLauncherTester', None), ('forceCommunity:articleThumbVote', None), ('forceCommunity:askCommunity', None), ('forceCommunity:askCommunityDesignInfo', None), ('forceCommunity:askCommunitySuggestionDesignInfo', None), ('forceCommunity:bannerImageLayout', None), ('forceCommunity:bannerLayout', None), ('forceCommunity:baseRecordValidationComponent', None), ('forceCommunity:baseSearch', None), ('forceCommunity:breadcrumbs', None), ('forceCommunity:breadcrumbsDesignInfo', None), ('forceCommunity:buyerAccountDetail', None), ('forceCommunity:calendar', None), ('forceCommunity:campaignImage', None), ('forceCommunity:campaignImageEdit', None), ('forceCommunity:campaignImageView', None), ('forceCommunity:campaignSignup', None), ('forceCommunity:campaignTileList', None), ('forceCommunity:campaignTileListDataFieldsEditor', None), ('forceCommunity:campaignTileListDataFieldsItemEditor', None), ('forceCommunity:campaignTileListDataManager', None), ('forceCommunity:campaignTileTemplate', None), ('forceCommunity:cancelCheckoutButton', None), ('forceCommunity:cardLayout', None), ('forceCommunity:cardLayoutWithImage', None), ('forceCommunity:cardLayoutWithTitleAndText', None), ('forceCommunity:carousel', None), ('forceCommunity:caseDeflection', None), ('forceCommunity:caseDeflectionDesignInfo', None), ('forceCommunity:caseDeflectionMetricsDesignInfo', None), ('forceCommunity:caseDeflectionZeroStateDesignInfo', None), ('forceCommunity:caseFeed', None), ('forceCommunity:changePassword', None), ('forceCommunity:chatterGroupAnalytics', None), ('forceCommunity:chatterGroupAnalyticsFeedHistory', None), ('forceCommunity:chatterGroupAnalyticsNewMembers', None), ('forceCommunity:chatterGroupAnalyticsTotals', None), ('forceCommunity:checkoutFlow', None), ('forceCommunity:checkoutFlowDesignSubstitute', None), ('forceCommunity:checkoutHeaderWrapper', None), ('forceCommunity:cmsConnect', None), ('forceCommunity:cmsConnectBindingProvider', None), ('forceCommunity:cmsConnectJSONCollectionDataBindingProvider', None), ('forceCommunity:cmsConnectJSONDataProvider', None), ('forceCommunity:cmsConnectJSONItemDataBindingProvider', None), ('forceCommunity:cmsContent', None), ('forceCommunity:cmsContentCardLayout', None), ('forceCommunity:cmsContentCollectionLayoutManager', None), ('forceCommunity:cmsContentGridLayout', None), ('forceCommunity:cmsContentItemDetailLayout', None), ('forceCommunity:cmsContentItemDetailManager', None), ('forceCommunity:cmsContentItemRenderer', None), ('forceCommunity:cmsContentLink', None), ('forceCommunity:commerceBilling', None), ('forceCommunity:commerceCheckoutSummary', None), ('forceCommunity:commerceDelivery', None), ('forceCommunity:commerceNextButton', None), ('forceCommunity:commerceOrderConfirmation', None), ('forceCommunity:commerceOrdersList', None), ('forceCommunity:commercePayment', None), ('forceCommunity:commerceReorder', None), ('forceCommunity:commerceScreenWait', None), ('forceCommunity:communitySelectBadge', None), ('forceCommunity:communitySelectBadgeDesktop', None), ('forceCommunity:communitySelectBadgeMobile', None), ('forceCommunity:communityThanksBadge', None), ('forceCommunity:communityThanksBadgeWrapper', None), ('forceCommunity:confirmMessageBody', None), ('forceCommunity:connectedSources', None), ('forceCommunity:contactSupportButton', None), ('forceCommunity:contactSupportButtonDesignInfo', None), ('forceCommunity:contactSupportConfirmation', None), ('forceCommunity:contactSupportFileInput', None), ('forceCommunity:contactSupportForm', None), ('forceCommunity:contactSupportFormDesignInfo', None), ('forceCommunity:contactSupportFormDesignSetupLink', None), ('forceCommunity:contactSupportFormDesignSupportSetupLink', None), ('forceCommunity:contactSupportSetupError', None), ('forceCommunity:createRecordButton', None), ('forceCommunity:createRecordForm', None), ('forceCommunity:dashboard', None), ('forceCommunity:dashboardDesignInfo', None), ('forceCommunity:dashboardList', None), ('forceCommunity:defaultCommAppPageTemplate', None), ('forceCommunity:deflection', None), ('forceCommunity:deflectionDataProvider', None), ('forceCommunity:deflectionOption', None), ('forceCommunity:deflectionSignalActions', None), ('forceCommunity:deflectionTracking', None), ('forceCommunity:deleteBadgeAssignment', None), ('forceCommunity:detailImageFirstLayout', None), ('forceCommunity:detailLayout', None), ('forceCommunity:detailLayoutWithSections', None), ('forceCommunity:disablePortalUser', None), ('forceCommunity:dynamicCollection', None), ('forceCommunity:dynamicCollectionBaseDataProvider', None), ('forceCommunity:dynamicCollectionCarousel', None), ('forceCommunity:dynamicCollectionCarouselMultiSlide', None), ('forceCommunity:dynamicCollectionCarouselSlideshow', None), ('forceCommunity:dynamicCollectionEditorDesignInfo', None), ('forceCommunity:dynamicCollectionGrid', None), ('forceCommunity:dynamicCollectionListviewDataProvider', None), ('forceCommunity:embeddedQuipComponent', None), ('forceCommunity:embeddedService', None), ('forceCommunity:embeddedServiceChannelMenu', None), ('forceCommunity:embeddedServiceChannelMenuDesignInfo', None), ('forceCommunity:embeddedServiceDesignInfo', None), ('forceCommunity:embeddedServiceFeature', None), ('forceCommunity:embeddedServiceFieldService', None), ('forceCommunity:embeddedServiceFieldServiceDesignInfo', None), ('forceCommunity:embeddedServiceHelpButton', None), ('forceCommunity:embeddedServiceSidebar', None), ('forceCommunity:emptyComponentPlaceholder', None), ('forceCommunity:emptyTileMenuComponentPlaceholder', None), ('forceCommunity:enablePortalUser', None), ('forceCommunity:expiringContent', None), ('forceCommunity:expiringContentBase', None), ('forceCommunity:expiringContentDesignInfo', None), ('forceCommunity:expiringContentDesignSubstitute', None), ('forceCommunity:externalAccountHierarchyActions', None), ('forceCommunity:feedCommentInput', None), ('forceCommunity:feedItemDetail', None), ('forceCommunity:feedPublisher', None), ('forceCommunity:feedPublisherDesignInfo', None), ('forceCommunity:feedResults', None), ('forceCommunity:fileDetailPage', None), ('forceCommunity:fileEngagement', None), ('forceCommunity:filesList', None), ('forceCommunity:flexTileLayout', None), ('forceCommunity:flexTileLayoutWithImage', None), ('forceCommunity:flowCommunity', None), ('forceCommunity:flowCommunityDesignSubstitute', None), ('forceCommunity:flowCommunityEditFlowButton', None), ('forceCommunity:flowRedirect', None), ('forceCommunity:follow', None), ('forceCommunity:followDesignInfo', None), ('forceCommunity:forceCommunityFeed', None), ('forceCommunity:forceCommunityFeedDesignInfo', None), ('forceCommunity:freeze', None), ('forceCommunity:freezeUserAction', None), ('forceCommunity:giveBadgeAction', None), ('forceCommunity:globalNavigation', None), ('forceCommunity:globalSearchInput', None), ('forceCommunity:groupAnnouncement', None), ('forceCommunity:groupContainer', None), ('forceCommunity:groupDetail', None), ('forceCommunity:groupHeadline', None), ('forceCommunity:groupHighlightStencilNapili', None), ('forceCommunity:groupObjectHome', None), ('forceCommunity:groupRecordHomeTabs', None), ('forceCommunity:groupRecordHomeTabsDesignInfo', None), ('forceCommunity:groupRelatedList', None), ('forceCommunity:headline', None), ('forceCommunity:headlineDesignInfo', None), ('forceCommunity:hierarchyList', None), ('forceCommunity:homeTabs', None), ('forceCommunity:homeTabsDesignInfo', None), ('forceCommunity:htmlBlock', None), ('forceCommunity:htmlBlockDesignInfo', None), ('forceCommunity:interactive', None), ('forceCommunity:iotEmbedded', None), ('forceCommunity:knowledgeablePeople', None), ('forceCommunity:languageMenuItem', None), ('forceCommunity:languagePicker', None), ('forceCommunity:languagePickerDesignInfo', None), ('forceCommunity:languagePickerTrigger', None), ('forceCommunity:languageSelector43', None), ('forceCommunity:languageSelectorDesignInfo', None), ('forceCommunity:leadInbox', None), ('forceCommunity:leadInboxStencil', None), ('forceCommunity:linkMenuItem', None), ('forceCommunity:listView', None), ('forceCommunity:loginAsPortalUser', None), ('forceCommunity:manageBuyerAccount', None), ('forceCommunity:managePartnerSuperUser', None), ('forceCommunity:managePortalAccount', None), ('forceCommunity:managedContent', None), ('forceCommunity:managedContentCollectionDataProvider', None), ('forceCommunity:managedContentDesignInfo', None), ('forceCommunity:managedContentDetail', None), ('forceCommunity:multiLevelNavigation', None), ('forceCommunity:navBar', None), ('forceCommunity:navigationMenu', None), ('forceCommunity:navigationMenuBase', None), ('forceCommunity:navigationMenuBaseInternal', None), ('forceCommunity:navigationMenuItem', None), ('forceCommunity:navigationMenuItemTriggerLink', None), ('forceCommunity:nbaWidget', None), ('forceCommunity:notifications', None), ('forceCommunity:objectHome', None), ('forceCommunity:objectHomeDesignInfo', None), ('forceCommunity:objectHomeEmptyDesignSubstitute', None), ('forceCommunity:omniBox', None), ('forceCommunity:omniBoxContactSupportActionMenuItem', None), ('forceCommunity:omniBoxSwitcher', None), ('forceCommunity:omniBoxTopicTriggerLink', None), ('forceCommunity:ordersMobileHome', None), ('forceCommunity:outputRichText', None), ('forceCommunity:pathAssistant', None), ('forceCommunity:pathAssistantDesignInfo', None), ('forceCommunity:pausedInterviewCard', None), ('forceCommunity:pausedInterviewCardDesignSubstitute', None), ('forceCommunity:pausedInterviewCardRow', None), ('forceCommunity:placeholder', None), ('forceCommunity:profileRenderer', None), ('forceCommunity:psscFeedsProxy', None), ('forceCommunity:psscPublisherSalesforceFileAction', None), ('forceCommunity:psscPublisherUploadFileAction', None), ('forceCommunity:psscSelectFileFromListViewPanel', None), ('forceCommunity:questionPostCommunities', None), ('forceCommunity:quillInsertAssetImageButton', None), ('forceCommunity:quipCard', None), ('forceCommunity:reCaptcha', None), ('forceCommunity:recommendations', None), ('forceCommunity:recommendationsDesignInfo', None), ('forceCommunity:recordDetail', None), ('forceCommunity:recordDetailDesignInfo', None), ('forceCommunity:recordHeadline', None), ('forceCommunity:recordHomeTabs', None), ('forceCommunity:recordListCompact', None), ('forceCommunity:recordListCompactCard', None), ('forceCommunity:recordListDesktop', None), ('forceCommunity:recordListMobile', None), ('forceCommunity:recordListStandard', None), ('forceCommunity:relatedList', None), ('forceCommunity:relatedListDesignSubstitute', None), ('forceCommunity:relatedListSingle', None), ('forceCommunity:relatedQuipItemsView', None), ('forceCommunity:relatedRecords', None), ('forceCommunity:relatedRecordsDesignInfo', None), ('forceCommunity:relatedTopics', None), ('forceCommunity:reportBuilder', None), ('forceCommunity:reportChart', None), ('forceCommunity:reportChartDesignInfo', None), ('forceCommunity:reportList', None), ('forceCommunity:reportPage', None), ('forceCommunity:reportPageDesignInfo', None), ('forceCommunity:reputationLeaderboard', None), ('forceCommunity:reputationLeaderboard42', None), ('forceCommunity:reputationLeaderboardDataProvider', None), ('forceCommunity:reputationLeaderboardDesignInfo', None), ('forceCommunity:reputationLeaderboardRow', None), ('forceCommunity:reputationWidget', None), ('forceCommunity:resetPasswordPortalUser', None), ('forceCommunity:resultsList', None), ('forceCommunity:retrieveCommunityRoute', None), ('forceCommunity:richText', None), ('forceCommunity:richTextDesignInfo', None), ('forceCommunity:richTextInline', None), ('forceCommunity:richTextInlineDesignInfo', None), ('forceCommunity:routeLink', None), ('forceCommunity:scorecard', None), ('forceCommunity:scorecardMetric', None), ('forceCommunity:search', None), ('forceCommunity:searchBox', None), ('forceCommunity:section', None), ('forceCommunity:sectionColumnDesignInfo', None), ('forceCommunity:selectGroupType', None), ('forceCommunity:seoAssistant', None), ('forceCommunity:showPortalUserMemberList', None), ('forceCommunity:showUserNetworkMemberList', None), ('forceCommunity:signalCollector', None), ('forceCommunity:stamp', None), ('forceCommunity:standardListViewGrid', None), ('forceCommunity:streamDetail', None), ('forceCommunity:streamDetailDesktop', None), ('forceCommunity:streamDetailMobile', None), ('forceCommunity:streamList', None), ('forceCommunity:suggestedFilesCard', None), ('forceCommunity:surveyCommunity', None), ('forceCommunity:surveyCommunityDesignSubstitute', None), ('forceCommunity:tabset', None), ('forceCommunity:taskList', None), ('forceCommunity:taskListCompact', None), ('forceCommunity:tempDepend', None), ('forceCommunity:themeHeaderB2B', None), ('forceCommunity:themeHeaderBase', None), ('forceCommunity:themeHeaderCompact', None), ('forceCommunity:themeHeaderCompactMenuStylesDesignInfo', None), ('forceCommunity:themeHeaderHelpCenter', None), ('forceCommunity:themeHeaderMfg', None), ('forceCommunity:themeHeaderStacked', None), ('forceCommunity:themeHeaderStackedMenuStylesDesignInfo', None), ('forceCommunity:themeHeroBase', None), ('forceCommunity:themeHeroStarter', None), ('forceCommunity:themeLogo', None), ('forceCommunity:themeLogoSalesforce', None), ('forceCommunity:themeNav', None), ('forceCommunity:themeNavSubMenu', None), ('forceCommunity:themeNavTrigger', None), ('forceCommunity:themeProfileMenu', None), ('forceCommunity:themeProfileMenuLoginButtonDesignInfo', None), ('forceCommunity:themeSearch', None), ('forceCommunity:themeSearchHero', None), ('forceCommunity:themeSearchSection', None), ('forceCommunity:tileLayout', None), ('forceCommunity:tileLayoutWithImage', None), ('forceCommunity:tileMenu', None), ('forceCommunity:tileMenuDesignSubstitute', None), ('forceCommunity:tileMenuItem', None), ('forceCommunity:topArticleItem', None), ('forceCommunity:topArticleList', None), ('forceCommunity:topArticleListDataProvider', None), ('forceCommunity:topArticleListDesignInfo', None), ('forceCommunity:topArticleListForTopic', None), ('forceCommunity:topicCatalog', None), ('forceCommunity:topicCatalogDesignInfo', None), ('forceCommunity:topicDescription', None), ('forceCommunity:topicMerticsDesignInfo', None), ('forceCommunity:topicMetrics', None), ('forceCommunity:topicsOnRecordDesignSubstitute', None), ('forceCommunity:topicsOnRecordWrapper', None), ('forceCommunity:trendingTopics', None), ('forceCommunity:trendingTopicsDesignInfo', None), ('forceCommunity:trendingTopicsDesignSubstitute', None), ('forceCommunity:updatePhotoSitecomWrapper', None), ('forceCommunity:userPreviewStencilNapili', None), ('forceCommunity:userProfileAndSettings', None), ('forceCommunity:userProfileBase', None), ('forceCommunity:userProfileBody', None), ('forceCommunity:userProfileDetail', None), ('forceCommunity:userProfileEdit', None), ('forceCommunity:userProfileHeader', None), ('forceCommunity:userProfileHeaderDetail', None), ('forceCommunity:userProfileKnowledgeableAbout', None), ('forceCommunity:userProfileStats', None), ('forceCommunity:userProfileTabs', None), ('forceCommunity:userProfileWithBanner', None), ('forceCommunity:userProfileWithBannerDesignInfo', None), ('forceCommunity:userRecognitionList', None), ('forceCommunity:userRecognitions', None), ('forceCommunity:userRecordHome', None), ('forceCommunity:userRecordHomeDesignInfo', None), ('forceCommunity:userRelatedList', None), ('forceCommunity:userSettings', None), ('forceCommunity:userSettingsCustomizable', None), ('forceCommunity:userSettingsInternal', None), ('forceCommunity:visualforcePage', None), ('forceCommunity:waveDashboard', None), ('forceCommunity:workspacesList', None), ('forceCommunity:workspacesListBetaBadge', None), ('forceContent:actionEventLink', None), ('forceContent:actionNewVersion', None), ('forceContent:assetDetailsPanel', None), ('forceContent:assetPicker', None), ('forceContent:baseFolderAction', None), ('forceContent:basePreview', None), ('forceContent:basePreviewPlayer', None), ('forceContent:basePreviewToolbar', None), ('forceContent:compoundFieldsTitleRenderer', None), ('forceContent:contentDistributionViewer', None), ('forceContent:contentDistributionViewerToolbar', None), ('forceContent:contentDocumentHighlightsStencilDesktop', None), ('forceContent:contentFolderDistributionViewer', None), ('forceContent:contentHubAuthenticationBanner', None), ('forceContent:contentHubError', None), ('forceContent:contentLinkableEntityIcon', None), ('forceContent:contentThumbnail', None), ('forceContent:contentVersionEditorPanel', None), ('forceContent:contentVersionFieldsEditor', None), ('forceContent:contentVersionRelatedListRecord', None), ('forceContent:contentVersionsEditWizard', None), ('forceContent:contentWorkspaceDataProvider', None), ('forceContent:contentWorkspaceImage', None), ('forceContent:contentWorkspaceNameRenderer', None), ('forceContent:createContentDocForContentHubFile', None), ('forceContent:createFolderAction', None), ('forceContent:deleteFolderAction', None), ('forceContent:documentLinkRowStencil', None), ('forceContent:downloadExternalFileAction', None), ('forceContent:editContentWorkspaceImage', None), ('forceContent:editFolderAction', None), ('forceContent:embeddedQuipActionMenu', None), ('forceContent:embeddedQuipActionMenuBase', None), ('forceContent:embeddedQuipComponent', None), ('forceContent:embeddedQuipCreateFieldButton', None), ('forceContent:embeddedQuipDocumentChangePanel', None), ('forceContent:embeddedQuipEditor', None), ('forceContent:embeddedQuipEditorOption', None), ('forceContent:embeddedQuipFieldEditor', None), ('forceContent:embeddedQuipSharingEditor', None), ('forceContent:embeddedQuipUrlEditor', None), ('forceContent:feedActionOpenExternalFile', None), ('forceContent:feedActionsDropDown', None), ('forceContent:feedAttachmentAction', None), ('forceContent:fileBadge', None), ('forceContent:fileCard', None), ('forceContent:fileDataManager', None), ('forceContent:fileDataProvider', None), ('forceContent:fileDroppableZone', None), ('forceContent:fileInfoPopover', None), ('forceContent:fileLinkShare', None), ('forceContent:fileLinkShareAction', None), ('forceContent:fileList', None), ('forceContent:fileListDesktop', None), ('forceContent:fileListSorterDataProvider', None), ('forceContent:fileListViewDataManager', None), ('forceContent:filePicker', None), ('forceContent:filePickerDesktop', None), ('forceContent:filePickerMobile', None), ('forceContent:filePreview', None), ('forceContent:fileSearchPanel', None), ('forceContent:fileShareConfirmationModalBody', None), ('forceContent:fileShareDataProvider', None), ('forceContent:fileShareGrid', None), ('forceContent:fileShareGridRemoveColumn', None), ('forceContent:fileShareGridShareTypeColumn', None), ('forceContent:fileShareGridTitleColumn', None), ('forceContent:fileShareGridVisibilityCheckboxColumn', None), ('forceContent:fileSharePanel', None), ('forceContent:fileShareRecommendation', None), ('forceContent:fileSourceListItem', None), ('forceContent:fileSourceMenu', None), ('forceContent:fileSourceMenuDesktop', None), ('forceContent:fileSourceMenuItem', None), ('forceContent:fileSourceMenuItemDesktop', None), ('forceContent:fileSourceMenuSeparator', None), ('forceContent:fileTestingUtil', None), ('forceContent:fileTitle', None), ('forceContent:fileUpload', None), ('forceContent:fileUploadAction', None), ('forceContent:fileUploaderPanel', None), ('forceContent:filesHomeBreadcrumbs', None), ('forceContent:filesHomeDesktop', None), ('forceContent:filesHomeDesktopHeader', None), ('forceContent:filesListDesktop', None), ('forceContent:filesListMobile', None), ('forceContent:filesManager', None), ('forceContent:folderCreateAndEditPanel', None), ('forceContent:folderDeletePanel', None), ('forceContent:folderLinkShareAction', None), ('forceContent:folderManager', None), ('forceContent:folderSelectorPanel', None), ('forceContent:folderizeActionPanel', None), ('forceContent:folderizeButton', None), ('forceContent:inlineSpinner', None), ('forceContent:latestVersionDetailPanel', None), ('forceContent:librariesHomeDesktop', None), ('forceContent:librariesHomeMobile', None), ('forceContent:listLoadingTemplate', None), ('forceContent:listRecord', None), ('forceContent:listUploadFileAction', None), ('forceContent:listViewTitleRenderer', None), ('forceContent:manageWorkspaceMembersAction', None), ('forceContent:manageWorkspaceMembersPanel', None), ('forceContent:mobilePreviewPlayer', None), ('forceContent:mobilePreviewPlayerPageToolbar', None), ('forceContent:mobilePreviewPlayerTopToolbar', None), ('forceContent:modalFileUploader', None), ('forceContent:modalPreviewManager', None), ('forceContent:modalPreviewPlayer', None), ('forceContent:moveFilePanel', None), ('forceContent:multiFileUploader', None), ('forceContent:openExternalFileAction', None), ('forceContent:outputEntityName', None), ('forceContent:outputReasonForChange', None), ('forceContent:outputSourceTitle', None), ('forceContent:outputTitle', None), ('forceContent:panelFooter', None), ('forceContent:panelHeader', None), ('forceContent:previewInfoProvider', None), ('forceContent:previewPanel', None), ('forceContent:previewPlayer', None), ('forceContent:previewPlayerPagingToolbar', None), ('forceContent:previewPlayerTopToolbar', None), ('forceContent:previewStatus', None), ('forceContent:previewerAction', None), ('forceContent:previewerActionNewVersion', None), ('forceContent:previewerActionOpenExternalFile', None), ('forceContent:previewerActionsBar', None), ('forceContent:quipActionMenu', None), ('forceContent:quipActionMenuAloha', None), ('forceContent:quipActionMenuBase', None), ('forceContent:quipCard', None), ('forceContent:quipCardAloha', None), ('forceContent:quipCardLightning', None), ('forceContent:quipChooseDocumentPanel', None), ('forceContent:quipContentHubAuthPanel', None), ('forceContent:quipContentHubErrorAloha', None), ('forceContent:quipCreatePanel', None), ('forceContent:quipItem', None), ('forceContent:quipItemDropdown', None), ('forceContent:quipItemDropdownAloha', None), ('forceContent:quipItemsAloha', None), ('forceContent:quipMarketingBlock', None), ('forceContent:quipMassActionCreatePanel', None), ('forceContent:quipPreview', None), ('forceContent:quipSearchAutocompleteOption', None), ('forceContent:quipSearchBox', None), ('forceContent:quipSearchDataProvider', None), ('forceContent:quipSearchPanel', None), ('forceContent:quipSetupAssistant', None), ('forceContent:quipSheetIframe', None), ('forceContent:quipSheetMassAction', None), ('forceContent:quipSummaryBlock', None), ('forceContent:quipSupportTextDesignInfo', None), ('forceContent:quipTemplateButton', None), ('forceContent:relatedListPreviewFileList', None), ('forceContent:relatedQuipItemsActionMenu', None), ('forceContent:relatedQuipItemsView', None), ('forceContent:searchCompoundFieldsTitleRenderer', None), ('forceContent:searchStencil', None), ('forceContent:selectFileFromSalesforce', None), ('forceContent:shareExternalFileAction', None), ('forceContent:shareFileAction', None), ('forceContent:singleFileUploader', None), ('forceContent:statsPanel', None), ('forceContent:suggestedFile', None), ('forceContent:suggestedFilesCard', None), ('forceContent:suggestedFilesConfirmationPanel', None), ('forceContent:svgPreview', None), ('forceContent:tempDepend', None), ('forceContent:thumbnailPreview', None), ('forceContent:unshareQuipItemPanel', None), ('forceContent:uploadAssetAction', None), ('forceContent:uploadPanel', None), ('forceContent:uploadPanelFooter', None), ('forceContent:videoPreview', None), ('forceContent:virtualRelatedListStencil', None), ('forceContent:workspaceMemberDeleteColumn', None), ('forceContent:workspaceMembersDataProvider', None), ('forceContent:workspaceMembersGrid', None), ('forceContent:workspaceMembersPermissionColumn', None), ('forceContent:workspaceMembersTitleColumn', None), ('forceDiscovery:knowledgeablePeople', None), ('forceDiscovery:knowledgeablePeopleDataProvider', None), ('forceDiscovery:knowledgeablePeopleRow', None), ('forceDiscovery:userProfileKnowledgeableAbout', None), ('forceDiscovery:userProfileKnowledgeableAboutDataProvider', None), ('forceDiscovery:userProfileKnowledgeableAboutModal', None), ('forceDiscovery:userProfileKnowledgeableAboutTopic', None), ('forceHelp:contentSearch', None), ('forceHelp:contentSearchDataProvider', None), ('forceKnowledge:KnowledgeArticleVersionArchiveMassAction', None), ('forceKnowledge:KnowledgeArticleVersionAttachArticleAction', None), ('forceKnowledge:KnowledgeArticleVersionInsertContentToChannelAction', None), ('forceKnowledge:KnowledgeArticleVersionInsertContentToConversationAction', None), ('forceKnowledge:KnowledgeArticleVersionInsertUrlToChannelAction', None), ('forceKnowledge:KnowledgeArticleVersionPreviewPanel', None), ('forceKnowledge:KnowledgeArticleVersionPrintAction', None), ('forceKnowledge:articleDataCategoryChooser', None), ('forceKnowledge:articleDataCategoryChooserTester', None), ('forceKnowledge:articleDataCategoryViewer', None), ('forceKnowledge:articleDataCategoryViewerTester', None), ('forceKnowledge:articleInputDesktopDataProvider', None), ('forceKnowledge:articleMasterVersion', None), ('forceKnowledge:articleRedirect', None), ('forceKnowledge:articleSearchDesktop', None), ('forceKnowledge:articleSearchInputDesktop', None), ('forceKnowledge:articleSearchPrefilter', None), ('forceKnowledge:articleSearchResult', None), ('forceKnowledge:articleSearchSortMenu', None), ('forceKnowledge:articleStars', None), ('forceKnowledge:articleThumbVote', None), ('forceKnowledge:articleTitlePrintableView', None), ('forceKnowledge:articleVersionCompare', None), ('forceKnowledge:articleVersionHistory', None), ('forceKnowledge:articleVersionHistoryDataProvider', None), ('forceKnowledge:articleVersionSelector', None), ('forceKnowledge:articlesObjectHomeTablet', None), ('forceKnowledge:articlesSearch', None), ('forceKnowledge:assignArticle', None), ('forceKnowledge:blockSection', None), ('forceKnowledge:createCodeBlockPanel', None), ('forceKnowledge:highlightedOutputText', None), ('forceKnowledge:inputRichText', None), ('forceKnowledge:kbResultFieldTitle', None), ('forceKnowledge:kbResultStencil', None), ('forceKnowledge:kbResultStencilDesktop', None), ('forceKnowledge:kbResultStencilWithHover', None), ('forceKnowledge:knowledgeArchiveOptionDialog', None), ('forceKnowledge:knowledgeArticleVersionActionsCommon', None), ('forceKnowledge:knowledgeArticleVersionArchiveAction', None), ('forceKnowledge:knowledgeArticleVersionCreateDraftFromOnlineAction', None), ('forceKnowledge:knowledgeArticleVersionDeleteAction', None), ('forceKnowledge:knowledgeArticleVersionDeleteMassAction', None), ('forceKnowledge:knowledgeArticleVersionFollowAction', None), ('forceKnowledge:knowledgeArticleVersionHighlightsPreviewStencil', None), ('forceKnowledge:knowledgeArticleVersionMassAssignAction', None), ('forceKnowledge:knowledgeArticleVersionMassSubmitForTranslationAction', None), ('forceKnowledge:knowledgeArticleVersionPublishAction', None), ('forceKnowledge:knowledgeArticleVersionPublishMassAction', None), ('forceKnowledge:knowledgeArticleVersionRestoreAction', None), ('forceKnowledge:knowledgeArticleVersionRestoreMassAction', None), ('forceKnowledge:knowledgeArticleVersionShareSites', None), ('forceKnowledge:knowledgeArticleVersionShareSitesConversation', None), ('forceKnowledge:knowledgeArticleVersionShareSitesEmail', None), ('forceKnowledge:knowledgeArticleVersionShareSitesSocial', None), ('forceKnowledge:knowledgeArticleVersionTranslationPublishAction', None), ('forceKnowledge:knowledgeDeleteCreateOptionDialog', None), ('forceKnowledge:knowledgeDeleteOptionDialog', None), ('forceKnowledge:knowledgeEditCompletedTranslation', None), ('forceKnowledge:knowledgeMassArchiveOptionDialog', None), ('forceKnowledge:knowledgeMassAssignArticle', None), ('forceKnowledge:knowledgeMassPublishOptionDialog', None), ('forceKnowledge:knowledgeMassRestoreOptionDialog', None), ('forceKnowledge:knowledgeMassSubmitForTranslationOptionDialog', None), ('forceKnowledge:knowledgeMigrationFieldsMappingTab', None), ('forceKnowledge:knowledgeMigrationFieldsMappingTabInputSelect', None), ('forceKnowledge:knowledgeMigrationFlow', None), ('forceKnowledge:knowledgeMigrationFlowEndStep', None), ('forceKnowledge:knowledgeMigrationFlowFieldsMappingStep', None), ('forceKnowledge:knowledgeMigrationFlowFilesMigrationStep', None), ('forceKnowledge:knowledgeMigrationFlowStartStep', None), ('forceKnowledge:knowledgeMigrationForSingleArticleTypeFlow', None), ('forceKnowledge:knowledgeMigrationForSingleArticleTypeFlowEndStep', None), ('forceKnowledge:knowledgeMigrationForSingleArticleTypeFlowStartStep', None), ('forceKnowledge:knowledgeMigrationSetup', None), ('forceKnowledge:knowledgeMigrationSetupNonUiAction', None), ('forceKnowledge:knowledgePublishOptionDialog', None), ('forceKnowledge:knowledgeRestoreOptionDialog', None), ('forceKnowledge:multiSelectTable', None), ('forceKnowledge:multiSelectTree', None), ('forceKnowledge:multiSelectTreeNode', None), ('forceKnowledge:optionDialogFooter', None), ('forceKnowledge:outputPublishStatus', None), ('forceKnowledge:outputRichTextForKnowledge', None), ('forceKnowledge:pillListSection', None), ('forceKnowledge:pillListViewer', None), ('forceKnowledge:recordHomeLanguageSwitcher', None), ('forceKnowledge:submitKnowledgeArticleVersionForTranslation', None), ('forceKnowledge:suggestedArticle', None), ('forceKnowledge:tempDepend', None), ('forceKnowledge:titleInput', None), ('forceKnowledge:urlNameInput', None), ('forceSearch:actionDataProvider', None), ('forceSearch:assistant', None), ('forceSearch:assistantDialog', None), ('forceSearch:assistantDialogContainer', None), ('forceSearch:assistantListViewPreview', None), ('forceSearch:assistantRecordPreview', None), ('forceSearch:assistantSecondaryPanel', None), ('forceSearch:assistantSuggestionItem', None), ('forceSearch:assistantSuggestionsDataProvider', None), ('forceSearch:assistantSuggestionsList', None), ('forceSearch:assistantTip', None), ('forceSearch:baseSearch', None), ('forceSearch:baseSearchInput', None), ('forceSearch:baseSearchPage', None), ('forceSearch:bestResult', None), ('forceSearch:bestResultFooter', None), ('forceSearch:customPreviewWrapper', None), ('forceSearch:desktopHeader', None), ('forceSearch:desktopHeaderManager', None), ('forceSearch:entityMenuItem', None), ('forceSearch:entitySelectorMenu', None), ('forceSearch:experimentContextInitializer', None), ('forceSearch:feedback', None), ('forceSearch:filterInput', None), ('forceSearch:filterInputPicklist', None), ('forceSearch:filterInputRadio', None), ('forceSearch:filterInputRange', None), ('forceSearch:filterInputText', None), ('forceSearch:filterPanel', None), ('forceSearch:globalSearchLauncher', None), ('forceSearch:groupContainer', None), ('forceSearch:headerSearchInput', None), ('forceSearch:input', None), ('forceSearch:inputDataProvider', None), ('forceSearch:inputDesktop', None), ('forceSearch:inputDesktopDataProvider', None), ('forceSearch:inputDesktopListFooter', None), ('forceSearch:inputDesktopOption', None), ('forceSearch:inputDesktopPillWrapper', None), ('forceSearch:inputEntitySelector', None), ('forceSearch:inputEntitySelectorDataProvider', None), ('forceSearch:inputLookupDesktop', None), ('forceSearch:inputLookupDesktopActionItem', None), ('forceSearch:inputLookupDesktopDataProvider', None), ('forceSearch:inputLookupDesktopOption', None), ('forceSearch:inputMobile', None), ('forceSearch:intentQueryMessage', None), ('forceSearch:lookupAdvanced', None), ('forceSearch:lookupAdvancedFooter', None), ('forceSearch:mouseTrap', None), ('forceSearch:mru', None), ('forceSearch:mruDataProvider', None), ('forceSearch:mruMobile', None), ('forceSearch:mruMobileItem', None), ('forceSearch:multiScopesDataProvider', None), ('forceSearch:noResults', None), ('forceSearch:optionDataProvider', None), ('forceSearch:predictedResults', None), ('forceSearch:predictedResultsAppChart', None), ('forceSearch:predictedResultsDataProvider', None), ('forceSearch:queryExpansionMessage', None), ('forceSearch:queryFeedback', None), ('forceSearch:queryFeedbackMessage', None), ('forceSearch:queryMessage', None), ('forceSearch:queryRecourseMessage', None), ('forceSearch:queryRemediationMessage', None), ('forceSearch:queryRemediationMessagePanel', None), ('forceSearch:recordPicker', None), ('forceSearch:recordPickerOption', None), ('forceSearch:recordPickerOptionCard', None), ('forceSearch:recordPickerOptionInline', None), ('forceSearch:recordPreview', None), ('forceSearch:recordPreviewActions', None), ('forceSearch:recordPreviewBody', None), ('forceSearch:recordPreviewFields', None), ('forceSearch:recordPreviewHeader', None), ('forceSearch:recordPreviewRelatedList', None), ('forceSearch:recordPreviewTitle', None), ('forceSearch:reportPreview', None), ('forceSearch:results', None), ('forceSearch:resultsCardView', None), ('forceSearch:resultsCompact', None), ('forceSearch:resultsDataProvider', None), ('forceSearch:resultsFeed', None), ('forceSearch:resultsFeedMouseTrap', None), ('forceSearch:resultsFeedback', None), ('forceSearch:resultsFilters', None), ('forceSearch:resultsGridLVM', None), ('forceSearch:resultsGridLVMDataManager', None), ('forceSearch:resultsGridView', None), ('forceSearch:resultsGridViewMouseTrap', None), ('forceSearch:resultsHeaderFilters', None), ('forceSearch:resultsList', None), ('forceSearch:resultsListDataManager', None), ('forceSearch:resultsListItem', None), ('forceSearch:resultsListMouseTrap', None), ('forceSearch:resultsMultiScope', None), ('forceSearch:resultsMultiScopeCompact', None), ('forceSearch:resultsRegion', None), ('forceSearch:resultsRegionDesktop', None), ('forceSearch:resultsRegionMobile', None), ('forceSearch:resultsTopResults', None), ('forceSearch:resultsTopResultsDataProvider', None), ('forceSearch:scopeItem', None), ('forceSearch:scopeOverflow', None), ('forceSearch:scopeOverflowList', None), ('forceSearch:scopes', None), ('forceSearch:scopesDataProvider', None), ('forceSearch:scopesList', None), ('forceSearch:scopesListContainer', None), ('forceSearch:scopesListDataProvider', None), ('forceSearch:scopesListPlaceholder', None), ('forceSearch:scopesListSection', None), ('forceSearch:scopesRibbon', None), ('forceSearch:scopesRibbonDataProvider', None), ('forceSearch:search', None), ('forceSearch:searchDataProvider', None), ('forceSearch:searchFor', None), ('forceSearch:searchGDP', None), ('forceSearch:searchGDPCache', None), ('forceSearch:searchGDPCacheActivity', None), ('forceSearch:searchGDPCacheMrus', None), ('forceSearch:searchGDPCachePermsAndPrefs', None), ('forceSearch:searchGDPCacheResultsFilters', None), ('forceSearch:searchGDPCacheScopes', None), ('forceSearch:searchInputListHeader', None), ('forceSearch:searchMoreBox', None), ('forceSearch:searchPage', None), ('forceSearch:searchPageAssistant', None), ('forceSearch:searchPageAssistantDesktop', None), ('forceSearch:searchPageAssistantMobile', None), ('forceSearch:searchPageDesktop', None), ('forceSearch:searchResultsGridHeader', None), ('forceSearch:searchResultsSummary', None), ('forceSearch:searchScopeHeader', None), ('forceSearch:setupSearchLayouts', None), ('forceSearch:setupSearchSettings', None), ('forceSearch:setupSearchSettingsItem', None), ('forceSearch:test', None), ('forceSearch:testMockDataProvider', None), ('forceSearch:typeAheadDataProvider', None), ('forceTopic:featuredTopicItem', None), ('forceTopic:featuredTopics', None), ('forceTopic:featuredTopicsDataProvider', None), ('forceTopic:featuredTopicsDesignInfo', None), ('forceTopic:navigationTopicsMenu', None), ('forceTopic:placeholder', None), ('forceTopic:publisherTopicsWidget', None), ('forceTopic:simpleTopicAssignmentItem', None), ('forceTopic:simpleTopicAssignments', None), ('forceTopic:subTopicNavigation', None), ('forceTopic:subTopicNavigationDropDown', None), ('forceTopic:topicBreadcrumbs', None), ('forceTopic:topicLink', None), ('forceTopic:topicList', None), ('forceTopic:topicNavigationMenu', None), ('forceTopic:topicNavigationMenuLink', None), ('forceTopic:topicTriggerLink', None), ('formula:formulaContainer', None), ('formula:serverDataLib', None), ('frameworkEditor:arrangementEditor', None), ('frameworkEditor:baseEditorCanvasConfig', None), ('frameworkEditor:baseInvalidComponent', None), ('frameworkEditor:canvas', None), ('frameworkEditor:canvasContainer', None), ('frameworkEditor:canvasElement', None), ('frameworkEditor:canvasNode', None), ('frameworkEditor:canvasPanel', None), ('frameworkEditor:componentPlaceholder', None), ('frameworkEditor:errorComponent', None), ('frameworkEditor:modelRemoteData', None), ('frameworkEditor:noUserAccessPlaceholder', None), ('frameworkEditor:palettePanel', None), ('frameworkEditor:propertyPanel', None), ('frameworkEditor:surfaceTemplate', None), ('frameworkEditor:unsupportedFormFactorComponent', None), ('frameworkEditor:warningComponent', None), ('googleConnector:emailTransportServiceSetting', None), ('googleConnector:emailTransportServiceSetupPage', None), ('hammerSetup:hammerResultStatus', None), ('hammerSetup:isvHammerSubscriberOptOut', None), ('hammerSetup:progressPie', None), ('healthcloud:careProgramConsentForms', None), ('healthcloud:careProgramProductSelection', None), ('healthcloud:careProgramProviderSelection', None), ('healthcloud:careProgramSelector', None), ('healthcloud:careProgramSetup', None), ('healthcloud:careProviderSearchFieldsEditor', None), ('healthcloud:careProviderSearchFieldsItemEditor', None), ('healthcloud:consentFormListView', None), ('healthcloud:logger', None), ('healthcloud:medicalDevicesSetup', None), ('healthcloud:multiSelectDropDownMenu', None), ('healthcloud:productsProvidersReview', None), ('healthcloud:providerSearch', None), ('healthcloud:providerSearchCommunity', None), ('healthcloud:providerSearchContainer', None), ('healthcloud:providerSearchField', None), ('healthcloud:providerSearchSetup', None), ('healthcloud:resultCardFieldsEditor', None), ('healthcloud:searchPanel', None), ('home:activateActionOverrideAppAssignmentDataProvider', None), ('home:activateActionOverrideAppAssignmentStep', None), ('home:activateActionOverrideModeSelectionStep', None), ('home:activateActionOverrideReviewAssignmentDataProvider', None), ('home:activateActionOverrideReviewAssignmentStep', None), ('home:activateActionOverrideSelectedAppList', None), ('home:activateAppProfileReviewStep', None), ('home:activateAppProfileReviewStepDataProvider', None), ('home:activateHomeHierarchy', None), ('home:activateHomePage', None), ('home:activateProfileOverrideProfileStep', None), ('home:activateProfileOverrideProfileStepDataProvider', None), ('home:activateSelectedAppProfileList', None), ('home:activateSelectedAppProfileListDataProvider', None), ('home:assistant', None), ('home:assistantActionsContainer', None), ('home:assistantCardExpandedPanel', None), ('home:assistantCardList', None), ('home:assistantCardStencil', None), ('home:assistantCollapsedCard', None), ('home:assistantSmallActionButton', None), ('home:baseCollapsedCard', None), ('home:defaultPageAssignment', None), ('home:desktopTemplate', None), ('home:desktopTemplateHeaderThreeColumns', None), ('home:eventCardDataManager', None), ('home:eventCardStencil', None), ('home:eventContainer', None), ('home:goalEditor', None), ('home:goalSetting', None), ('home:heroChart', None), ('home:heroChartHeader', None), ('home:heroChartLegend', None), ('home:heroChartOpptyContainer', None), ('home:heroChartOverlay', None), ('home:heroChartTable', None), ('home:homeCard', None), ('home:landing', None), ('home:myDayHeroChart', None), ('home:newsPanel', None), ('home:outputLookup', None), ('home:outputLookupWithPreviewWithoutProfilePic', None), ('home:pageAssignmentByProfileReviewStep', None), ('home:pageAssignmentDefaultAssignmentReviewStep', None), ('home:pageAssignmentList', None), ('home:pageAssignmentListByApp', None), ('home:pageAssignmentListByAppDataProvider', None), ('home:pageAssignmentListDataProvider', None), ('home:pageAssignmentPagePickerStep', None), ('home:pageAssignmentPagePickerStepDataProvider', None), ('home:pageAssignmentProfilePickerStep', None), ('home:pageAssignmentReviewStepDataProvider', None), ('home:pageAssignmentSetDefaultOrAssignStep', None), ('home:pageAssignmentsSetupPage', None), ('home:productivityMetrics', None), ('home:productivityMetricsCard', None), ('home:productivityMetricsEditor', None), ('home:productivityMetricsEditorRow', None), ('home:productivityMetricsHeader', None), ('home:recentRecordContainer', None), ('home:recentRecordListRow', None), ('home:recentsItemStencil', None), ('home:recentsRecordListView', None), ('home:removeSelectedAppProfileStep', None), ('home:setupActionMenu', None), ('home:tempDepend', None), ('home:topDealsCardDataProvider', None), ('home:topDealsContainer', None), ('home:topDealsListStencil', None), ('home:workQueueSummary', None), ('hvcc:hvccPlaceholder', None), ('industries_common:entityPickerDataWrapper', None), ('industries_common:relationshipCardCommunity', None), ('industries_common:relationshipCardContainer', None), ('industries_manufacturing:actualsCalculationModeRenderer', None), ('industries_manufacturing:agreementCancelAction', None), ('industries_manufacturing:agreementRenewAction', None), ('industries_manufacturing:agreementSettings', None), ('industries_manufacturing:agreementTerms', None), ('industries_manufacturing:agreementTermsContainer', None), ('industries_manufacturing:agreementTermsDataGrid', None), ('industries_manufacturing:mfgCardStencil', None), ('industries_manufacturing:mfgHomeFavIcon', None), ('industries_manufacturing:mfgTemplateHome', None), ('industries_manufacturing:statusRenderer', None), ('industries_manufacturing:totalAgreementAmount', None), ('industries_manufacturing:updateContact', None), ('industries_manufacturing:updateContactFooterActions', None), ('industries_mfg_common:bulkUpdateModalWrapper', None), ('industries_mfg_common:filterAndSearchPanelWrapper', None), ('industries_mfg_forecast:addProductModal', None), ('industries_mfg_forecast:forecastContainer', None), ('industries_mfg_forecast:forecastModals', None), ('industries_mfg_forecast:forecastSettings', None), ('industries_mfg_forecast:formulaBuilderModal', None), ('industries_mfg_forecast:generateForecast', None), ('industries_mfg_forecast:growthMetricsModal', None), ('industries_mfg_forecast:recalculateForecastModal', None), ('industries_mfg_targets:assignAcctMgrTarget', None), ('industries_mfg_targets:fiscalYearFieldRendererEdit', None), ('industries_mfg_targets:fiscalYearFieldRendererView', None), ('industries_mfg_targets:targetHierarchy', None), ('industries_mfg_targets:targetSettings', None), ('instrumentation:accessLocatorEngine', None), ('instrumentation:avroValidator', None), ('instrumentation:beacon', None), ('instrumentation:chart', None), ('instrumentation:dockingContent', None), ('instrumentation:dynamicChartWrapper', None), ('instrumentation:lightningUsage', None), ('instrumentation:lightningUsageChatterFeedback', None), ('instrumentation:lightningUsageSetup', None), ('instrumentation:locatorEngine', None), ('instrumentation:locatorViewer', None), ('instrumentation:mainTemplate', None), ('instrumentation:transactionViewer', None), ('instrumentation:transactionsDefault', None), ('instrumentation:transactionsLtnginteraction', None), ('instrumentation:transactionsLtngpageView', None), ('instrumentation:transactionsProvider', None), ('instrumentation:uiManager', None), ('instrumentation:usageAppHeader', None), ('instrumentation:usageBody', None), ('instrumentation:usageChartGroup', None), ('instrumentation:usageNavBar', None), ('instrumentation:usageOptimizer', None), ('instrumentation:usageTab', None), ('instrumentation:viewerDockingPanel', None), ('instrumentation:viewerSeparateWindow', None), ('instrumentation:viewerSharedWindow', None), ('instrumentation:viewerWaterfall', None), ('instrumentation:waterfall', None), ('iot:activityLog', None), ('iot:context', None), ('iot:dataProviderOrchestrationContext', None), ('iot:dataproviderActivityLog', None), ('iot:dataproviderDataset', None), ('iot:dataproviderOrchestration', None), ('iot:dataproviderOrchestrationUsage', None), ('iot:embedded', None), ('iot:enablePanel', None), ('iot:insightsMetricsEditor', None), ('iot:insightsSourcePicklistEditor', None), ('iot:iotBasicSetup', None), ('iot:iotui', None), ('iot:multiselectEditor', None), ('iot:orchestration', None), ('iot:usage', None), ('iot:webtemplate', None), ('isotope:headerButton', None), ('isotope:serviceAPI', None), ('isotope:tester', None), ('jsonxform:jsonXformApi', None), ('knowledgeone:articleActions', None), ('knowledgeone:dialog', None), ('knowledgeone:knowledgeentitydetail', None), ('knowledgeone:message', None), ('laf:appLayoutHost', None), ('laf:baseLayoutContainer', None), ('laf:baseRouter', None), ('laf:directCmpReferenceRouter', None), ('laf:layoutContainer', None), ('laf:mobileWebLayoutContainer', None), ('laf:navEventManager', None), ('laf:navigationServiceAPI', None), ('laf:pageHost', None), ('laf:pageTransactionProcessor', None), ('laf:platformPageResolver', None), ('laf:platformRouter', None), ('laf:sObjectRouter', None), ('laf:singlePaneWindowManager', None), ('laf:standardLayoutContainer', None), ('laf:standardLayoutContentSelector', None), ('laf:windowedLayoutContainer', None), ('lbpm:actionHistoryList', None), ('lbpm:actionHistoryListDataProvider', None), ('lbpm:actionHistoryListItem', None), ('lbpm:actionHistoryTab', None), ('lbpm:actionList', None), ('lbpm:actionListChannelsEditor', None), ('lbpm:actionListDesignInfo', None), ('lbpm:actionListFlow', None), ('lbpm:actionListModalHeader', None), ('lbpm:actionListTab', None), ('lbpm:actionPicker', None), ('lbpm:actionPickerDataProvider', None), ('lbpm:actionSettingsEditor', None), ('lbpm:availableEntitiesDataProvider', None), ('lbpm:flowBody', None), ('lbpm:flowRuntimeForRecordAction', None), ('lbpm:flowScript', None), ('lbpm:lsfActionSettings', None), ('lbpm:lsfChannelSettings', None), ('lbpm:lsfChannelSettingsStep', None), ('lbpm:lsfChannelSettingsTab', None), ('lbpm:lsfDefaultFlow', None), ('lbpm:lsfDefaultFlowDropZone', None), ('lbpm:lsfDefaultFlowsSelector', None), ('lbpm:lsfEditDeployment', None), ('lbpm:lsfEntitySelectionStep', None), ('lbpm:lsfFilterStep', None), ('lbpm:lsfIntroStep', None), ('lbpm:lsfNameStep', None), ('lbpm:lsfNewDeployment', None), ('lbpm:lsfRecommendationsStep', None), ('lbpm:lsfSaveStep', None), ('lbpm:lsfSuccessStep', None), ('lbpm:nbaPanel', None), ('lbpm:pausedFlow', None), ('lbpm:pausedFlowsSection', None), ('lbpm:recordActionDeployment', None), ('lbpm:recordActionDeploymentList', None), ('lbpm:recordActionManager', None), ('lcwizard:dataLoaderSetupPage', None), ('lcwizard:lcGuidedSetupAuthProviderStep', None), ('lcwizard:lcGuidedSetupAuthStep', None), ('lcwizard:lcGuidedSetupDialog', None), ('lcwizard:lcGuidedSetupHome', None), ('lcwizard:lcGuidedSetupNewXdsStep', None), ('lcwizard:lcGuidedSetupObjectRelDialog', None), ('lcwizard:lcGuidedSetupParametersStep', None), ('lcwizard:lcGuidedSetupPrereqStep', None), ('lcwizard:lcGuidedSetupRelChooseObjectStep', None), ('lcwizard:lcGuidedSetupRelFLSStep', None), ('lcwizard:lcGuidedSetupRelFieldDetailStep', None), ('lcwizard:lcGuidedSetupRelPageLayoutStep', None), ('lcwizard:lcGuidedSetupRelRelatedListStep', None), ('lcwizard:lcGuidedSetupSearchLayoutStep', None), ('lcwizard:lcGuidedSetupTabNextStep', None), ('lcwizard:lcGuidedSetupTabStep', None), ('lcwizard:lcGuidedSetupValidateAndSyncStep', None), ('lightning:accordion', None), ('lightning:accordionSection', None), ('lightning:breadcrumbs', None), ('lightning:button', None), ('lightning:buttonGroup', None), ('lightning:buttonIcon', None), ('lightning:buttonMenu', None), ('lightning:buttonStateful', None), ('lightning:card', None), ('lightning:carousel', None), ('lightning:container', None), ('lightning:conversationToolkitAPI', None), ('lightning:deprecatedButtonIcon', None), ('lightning:deprecatedFormattedTime', None), ('lightning:deprecatedIcon', None), ('lightning:deprecatedPrimitiveIcon', None), ('lightning:fileCard', None), ('lightning:flexipageRegionInfo', None), ('lightning:flow', None), ('lightning:formElement', None), ('lightning:inputRichText', None), ('lightning:inputRichTextButtonBase', None), ('lightning:inputRichTextButtonSimple', None), ('lightning:insertImageButton', None), ('lightning:layout', None), ('lightning:layoutItem', None), ('lightning:listView', None), ('lightning:menuItem', None), ('lightning:messageChannel', None), ('lightning:navigation', None), ('lightning:navigationItemAPI', None), ('lightning:nextBestActions', None), ('lightning:notificationsLibrary', None), ('lightning:omniToolkitAPI', None), ('lightning:overlayInteropWrapper', None), ('lightning:overlayLibrary', None), ('lightning:path', None), ('lightning:picklistPath', None), ('lightning:pill', None), ('lightning:primitiveFileDroppableZone', None), ('lightning:primitiveIconTest', None), ('lightning:primitiveTextOrComponent', None), ('lightning:progressIndicator', None), ('lightning:quickActionAPI', None), ('lightning:quipCard', None), ('lightning:recordEditForm', None), ('lightning:recordViewForm', None), ('lightning:select', None), ('lightning:tab', None), ('lightning:tabset', None), ('lightning:test', None), ('lightning:tile', None), ('lightning:tooltip', None), ('lightning:unsavedChanges', None), ('lightning:utilityBarAPI', None), ('lightning:verticalNavigation', None), ('lightning:verticalNavigationOverflow', None), ('lightning:verticalNavigationSection', None), ('lightning:workspaceAPI', None), ('lightningInbox:associateButton', None), ('lightningInbox:consentMessageWrapper', None), ('lightningInbox:contextualTrackingContainer', None), ('lightningInbox:contextualTrackingDesignInfo', None), ('lightningInbox:contextualTrackingDesignSubstitute', None), ('lightningInbox:eacWidgetContainer', None), ('lightningInbox:emailTemplatesFooter', None), ('lightningInbox:emailTemplatesInsert', None), ('lightningInbox:emailTemplatesSave', None), ('lightningInbox:engagementTracking', None), ('lightningInbox:exchangeConnectivity', None), ('lightningInbox:fuelGaugeHeader', None), ('lightningInbox:genericPopoverWrapper', None), ('lightningInbox:globalsManager', None), ('lightningInbox:gmailAfterSendManager', None), ('lightningInbox:insertFreeTimeWidgetContainer', None), ('lightningInbox:insertFreeTimeWidgetDesignInfo', None), ('lightningInbox:logItemButtonContainer', None), ('lightningInbox:logItemButtonDesignInfo', None), ('lightningInbox:logItemCardHeader', None), ('lightningInbox:logItemFlowContainer', None), ('lightningInbox:logItemFlowContainerFooter', None), ('lightningInbox:logItemInfoBanner', None), ('lightningInbox:logItemInviteeListRowStencil', None), ('lightningInbox:logItemNoneRow', None), ('lightningInbox:logItemPeopleListCard', None), ('lightningInbox:logItemRelatedRecordListCard', None), ('lightningInbox:logItemRelatedRecordListCardStencil', None), ('lightningInbox:logItemRelatedRecordViewMoreListCardStencil', None), ('lightningInbox:logItemSearchBar', None), ('lightningInbox:manageLinksContainer', None), ('lightningInbox:pinnedComponentToggle', None), ('lightningInbox:placeholder', None), ('lightningInbox:readReceiptListContainer', None), ('lightningInbox:readReceiptListContainerDesignInfo', None), ('lightningInbox:readReceiptListContainerSubstitute', None), ('lightningInbox:readReceiptWidgetDesignInfo', None), ('lightningInbox:recordSelectButton', None), ('lightningInbox:sendLaterListContainer', None), ('lightningInbox:sendLaterListDesignInfo', None), ('lightningInbox:sendLaterListDesignSubstitute', None), ('lightningInbox:sendLaterTimePickerWrapper', None), ('lightningInbox:sendLaterWidgetDesignInfo', None), ('lightningInbox:snippetsActionContainer', None), ('lightningInbox:snippetsActionContainerDesignSubstitute', None), ('lightningInbox:snippetsDesignInfo', None), ('lightningInbox:virtualConsentIndicator', None), ('lightningInbox:welcomeMatContainer', None), ('lightningInbox:whatEntityMatchingManager', None), ('lightningcommunity:backButton', None), ('lightningcomponentdemo:exampleAccordionBasic', None), ('lightningcomponentdemo:exampleAccordionConditional', None), ('lightningcomponentdemo:exampleAccordionMultiple', None), ('lightningcomponentdemo:exampleAccordionSection', None), ('lightningcomponentdemo:exampleAvatarBasic', None), ('lightningcomponentdemo:exampleAvatarIcons', None), ('lightningcomponentdemo:exampleAvatarInitials', None), ('lightningcomponentdemo:exampleAvatarSizes', None), ('lightningcomponentdemo:exampleAvatarVariants', None), ('lightningcomponentdemo:exampleBadge', None), ('lightningcomponentdemo:exampleBaseBreadcrumbs', None), ('lightningcomponentdemo:exampleBreadcrumbsWithIteration', None), ('lightningcomponentdemo:exampleBreadcrumbsWithOnClick', None), ('lightningcomponentdemo:exampleButtonGroup', None), ('lightningcomponentdemo:exampleButtonGroupDisabled', None), ('lightningcomponentdemo:exampleButtonGroupInverse', None), ('lightningcomponentdemo:exampleButtonGroupWithButtonMenu', None), ('lightningcomponentdemo:exampleButtonGroupWithButtonMenuDisabled', None), ('lightningcomponentdemo:exampleButtonIconStateful', None), ('lightningcomponentdemo:exampleButtonIconStatefulBorderFilled', None), ('lightningcomponentdemo:exampleButtonIconStatefulInverse', None), ('lightningcomponentdemo:exampleButtonIconStatefulSelected', None), ('lightningcomponentdemo:exampleButtonMenu', None), ('lightningcomponentdemo:exampleButtonMenuDoubleIcon', None), ('lightningcomponentdemo:exampleButtonMenuItemStyling', None), ('lightningcomponentdemo:exampleButtonMenuSingleIcon', None), ('lightningcomponentdemo:exampleButtonMenuVariants', None), ('lightningcomponentdemo:exampleButtonMenuWithIcon', None), ('lightningcomponentdemo:exampleButtonStateful', None), ('lightningcomponentdemo:exampleButtonStatefulBrand', None), ('lightningcomponentdemo:exampleButtonStatefulInverse', None), ('lightningcomponentdemo:exampleButtonStatefulText', None), ('lightningcomponentdemo:exampleButtonsAccessibility', None), ('lightningcomponentdemo:exampleButtonsDisabled', None), ('lightningcomponentdemo:exampleButtonsIcon', None), ('lightningcomponentdemo:exampleButtonsIconInverse', None), ('lightningcomponentdemo:exampleButtonsIconSizes', None), ('lightningcomponentdemo:exampleButtonsInverse', None), ('lightningcomponentdemo:exampleCardBase', None), ('lightningcomponentdemo:exampleCardCustom', None), ('lightningcomponentdemo:exampleCardNarrow', None), ('lightningcomponentdemo:exampleCarousel', None), ('lightningcomponentdemo:exampleCarouselAutoScrollOff', None), ('lightningcomponentdemo:exampleCheckboxGroup', None), ('lightningcomponentdemo:exampleCheckboxGroupDisabled', None), ('lightningcomponentdemo:exampleCheckboxGroupRequired', None), ('lightningcomponentdemo:exampleClickToDial', None), ('lightningcomponentdemo:exampleClickToDialPlain', None), ('lightningcomponentdemo:exampleColorPicker', None), ('lightningcomponentdemo:exampleCombobox', None), ('lightningcomponentdemo:exampleComboboxDisabled', None), ('lightningcomponentdemo:exampleComboboxLong', None), ('lightningcomponentdemo:exampleComboboxMultiSelectedOptions', None), ('lightningcomponentdemo:exampleComboboxRequired', None), ('lightningcomponentdemo:exampleCurrencyFormatting', None), ('lightningcomponentdemo:exampleDatatableBase', None), ('lightningcomponentdemo:exampleDatatableDynamicRowActions', None), ('lightningcomponentdemo:exampleDatatableInAction', None), ('lightningcomponentdemo:exampleDatatableInfiniteLoading', None), ('lightningcomponentdemo:exampleDatatableInlineEdit', None), ('lightningcomponentdemo:exampleDatatableMaxRowSelection', None), ('lightningcomponentdemo:exampleDatatableRowSelection', None), ('lightningcomponentdemo:exampleDatatableSorting', None), ('lightningcomponentdemo:exampleDatatableStaticRowActions', None), ('lightningcomponentdemo:exampleDatatableWithoutCheckboxes', None), ('lightningcomponentdemo:exampleDateFormatting', None), ('lightningcomponentdemo:exampleDateTimeFormatting', None), ('lightningcomponentdemo:exampleDecimalFormatting', None), ('lightningcomponentdemo:exampleDualListbox', None), ('lightningcomponentdemo:exampleDualListboxDefaultValues', None), ('lightningcomponentdemo:exampleDualListboxMinMaxValues', None), ('lightningcomponentdemo:exampleDualListboxRequiredValues', None), ('lightningcomponentdemo:exampleDynamicIconEQ', None), ('lightningcomponentdemo:exampleDynamicIconEllie', None), ('lightningcomponentdemo:exampleDynamicIconScore', None), ('lightningcomponentdemo:exampleDynamicIconStrength', None), ('lightningcomponentdemo:exampleDynamicIconTrend', None), ('lightningcomponentdemo:exampleDynamicIconWaffle', None), ('lightningcomponentdemo:exampleFileSelectorDisabled', None), ('lightningcomponentdemo:exampleFileUpload', None), ('lightningcomponentdemo:exampleFormattedAddress', None), ('lightningcomponentdemo:exampleFormattedAddressLatLong', None), ('lightningcomponentdemo:exampleFormattedEmail', None), ('lightningcomponentdemo:exampleFormattedEmailOnclick', None), ('lightningcomponentdemo:exampleFormattedLocation', None), ('lightningcomponentdemo:exampleFormattedName', None), ('lightningcomponentdemo:exampleFormattedRichText', None), ('lightningcomponentdemo:exampleFormattedText', None), ('lightningcomponentdemo:exampleFormattedUrl', None), ('lightningcomponentdemo:exampleGroupedCombobox', None), ('lightningcomponentdemo:exampleHelptextBasic', None), ('lightningcomponentdemo:exampleHelptextIcon', None), ('lightningcomponentdemo:exampleIcon', None), ('lightningcomponentdemo:exampleIconVariants', None), ('lightningcomponentdemo:exampleInputAddress', None), ('lightningcomponentdemo:exampleInputAddressWithList', None), ('lightningcomponentdemo:exampleInputCheckbox', None), ('lightningcomponentdemo:exampleInputCheckboxButton', None), ('lightningcomponentdemo:exampleInputColor', None), ('lightningcomponentdemo:exampleInputDate', None), ('lightningcomponentdemo:exampleInputDateTime', None), ('lightningcomponentdemo:exampleInputEmail', None), ('lightningcomponentdemo:exampleInputFile', None), ('lightningcomponentdemo:exampleInputLocation', None), ('lightningcomponentdemo:exampleInputLocationDefaultValues', None), ('lightningcomponentdemo:exampleInputLocationDisabled', None), ('lightningcomponentdemo:exampleInputLocationFieldLevelHelp', None), ('lightningcomponentdemo:exampleInputLocationReadonly', None), ('lightningcomponentdemo:exampleInputLocationRequired', None), ('lightningcomponentdemo:exampleInputMaxlength', None), ('lightningcomponentdemo:exampleInputName', None), ('lightningcomponentdemo:exampleInputNameDisabled', None), ('lightningcomponentdemo:exampleInputNameFieldLevelHelp', None), ('lightningcomponentdemo:exampleInputNameFieldsToDisplay', None), ('lightningcomponentdemo:exampleInputNameReadOnly', None), ('lightningcomponentdemo:exampleInputNameRequired', None), ('lightningcomponentdemo:exampleInputNumber', None), ('lightningcomponentdemo:exampleInputPassword', None), ('lightningcomponentdemo:exampleInputRadio', None), ('lightningcomponentdemo:exampleInputRichTextButtonImage', None), ('lightningcomponentdemo:exampleInputRichTextButtonLink', None), ('lightningcomponentdemo:exampleInputSearch', None), ('lightningcomponentdemo:exampleInputSearchHiddenLabel', None), ('lightningcomponentdemo:exampleInputSearchWithSpinner', None), ('lightningcomponentdemo:exampleInputTel', None), ('lightningcomponentdemo:exampleInputText', None), ('lightningcomponentdemo:exampleInputTime', None), ('lightningcomponentdemo:exampleInputToggle', None), ('lightningcomponentdemo:exampleInputUrl', None), ('lightningcomponentdemo:exampleInputValidation', None), ('lightningcomponentdemo:exampleLayoutHorizontalSpace', None), ('lightningcomponentdemo:exampleLayoutHorizontalSpread', None), ('lightningcomponentdemo:exampleLayoutItems', None), ('lightningcomponentdemo:exampleLayoutItemsAlignmentBump', None), ('lightningcomponentdemo:exampleLayoutItemsBase', None), ('lightningcomponentdemo:exampleLayoutItemsDefaultSize', None), ('lightningcomponentdemo:exampleLayoutItemsFlexNoGrow', None), ('lightningcomponentdemo:exampleLayoutItemsFlexible', None), ('lightningcomponentdemo:exampleLayoutItemsMediumSizeOverride', None), ('lightningcomponentdemo:exampleLayoutItemsPadding', None), ('lightningcomponentdemo:exampleLayoutItemsSizeOverrides', None), ('lightningcomponentdemo:exampleLayoutPage', None), ('lightningcomponentdemo:exampleLayoutPullToBoundary', None), ('lightningcomponentdemo:exampleLayoutSimple', None), ('lightningcomponentdemo:exampleLayoutVerticalCenter', None), ('lightningcomponentdemo:exampleLayoutVerticalStretch', None), ('lightningcomponentdemo:exampleMapAttributes', None), ('lightningcomponentdemo:exampleMapMultipleMarkers', None), ('lightningcomponentdemo:exampleMapSingleMarker', None), ('lightningcomponentdemo:exampleMultiPicklist', None), ('lightningcomponentdemo:exampleOpenFiles', None), ('lightningcomponentdemo:exampleOutputField', None), ('lightningcomponentdemo:exampleOutputFieldDisplay', None), ('lightningcomponentdemo:exampleOutputFieldVariants', None), ('lightningcomponentdemo:exampleOutputFieldVariantsDisplay', None), ('lightningcomponentdemo:examplePercentFormatting', None), ('lightningcomponentdemo:examplePicklist', None), ('lightningcomponentdemo:examplePillAvatar', None), ('lightningcomponentdemo:examplePillBase', None), ('lightningcomponentdemo:examplePillContainer', None), ('lightningcomponentdemo:examplePillIcon', None), ('lightningcomponentdemo:examplePillWithError', None), ('lightningcomponentdemo:exampleProgressBar', None), ('lightningcomponentdemo:exampleProgressBarInAction', None), ('lightningcomponentdemo:exampleProgressIndicator', None), ('lightningcomponentdemo:exampleProgressIndicatorPath', None), ('lightningcomponentdemo:exampleProgressIndicatorWithIfCondition', None), ('lightningcomponentdemo:exampleProgressIndicatorWithIteration', None), ('lightningcomponentdemo:exampleProgressRing', None), ('lightningcomponentdemo:exampleProgressRingDirection', None), ('lightningcomponentdemo:exampleProgressRingInteractive', None), ('lightningcomponentdemo:exampleProgressRingSize', None), ('lightningcomponentdemo:exampleProgressRingVariant', None), ('lightningcomponentdemo:exampleRadioButtonGroup', None), ('lightningcomponentdemo:exampleRadioButtonGroupDisabled', None), ('lightningcomponentdemo:exampleRadioButtonGroupRequired', None), ('lightningcomponentdemo:exampleRadioGroup', None), ('lightningcomponentdemo:exampleRadioGroupDisabled', None), ('lightningcomponentdemo:exampleRadioGroupRequired', None), ('lightningcomponentdemo:exampleRecordCreate', None), ('lightningcomponentdemo:exampleRecordEdit', None), ('lightningcomponentdemo:exampleRegularButtons', None), ('lightningcomponentdemo:exampleRegularButtonsIcon', None), ('lightningcomponentdemo:exampleRelativeDateTime', None), ('lightningcomponentdemo:exampleRichTextBottomToolbar', None), ('lightningcomponentdemo:exampleRichTextButton', None), ('lightningcomponentdemo:exampleRichTextEditor', None), ('lightningcomponentdemo:exampleRichTextEditorWithButton', None), ('lightningcomponentdemo:exampleSelect', None), ('lightningcomponentdemo:exampleSelectChange', None), ('lightningcomponentdemo:exampleSelectDynamic', None), ('lightningcomponentdemo:exampleSelectIteration', None), ('lightningcomponentdemo:exampleSlider', None), ('lightningcomponentdemo:exampleSliderBasic', None), ('lightningcomponentdemo:exampleSliderSizes', None), ('lightningcomponentdemo:exampleSliderType', None), ('lightningcomponentdemo:exampleSliderVariant', None), ('lightningcomponentdemo:exampleSpinnerIf', None), ('lightningcomponentdemo:exampleSpinnerInverse', None), ('lightningcomponentdemo:exampleSpinnerSizes', None), ('lightningcomponentdemo:exampleTabsActive', None), ('lightningcomponentdemo:exampleTabsAuraIf', None), ('lightningcomponentdemo:exampleTabsDefault', None), ('lightningcomponentdemo:exampleTabsScoped', None), ('lightningcomponentdemo:exampleTabsVertical', None), ('lightningcomponentdemo:exampleTabset', None), ('lightningcomponentdemo:exampleTabsetOverflow', None), ('lightningcomponentdemo:exampleTabsetSelect', None), ('lightningcomponentdemo:exampleTextarea', None), ('lightningcomponentdemo:exampleTile', None), ('lightningcomponentdemo:exampleTileWithAvatar', None), ('lightningcomponentdemo:exampleTileWithIcon', None), ('lightningcomponentdemo:exampleTimeFormatting', None), ('lightningcomponentdemo:exampleTooltipAuto', None), ('lightningcomponentdemo:exampleTooltipButton', None), ('lightningcomponentdemo:exampleTooltipSimple', None), ('lightningcomponentdemo:exampleTree', None), ('lightningcomponentdemo:exampleTreeAddition', None), ('lightningcomponentdemo:exampleTreeGridAsyncExpand', None), ('lightningcomponentdemo:exampleTreeGridBase', None), ('lightningcomponentdemo:exampleTreeGridWithExpandedStateQuery', None), ('lightningcomponentdemo:exampleTreeNavigation', None), ('lightningcomponentdemo:exampleTreeNested', None), ('lightningcomponentdemo:exampleTreeSelect', None), ('lightningcomponentdemo:exampleTreeWithMetatext', None), ('lightningcomponentdemo:exampleVerticalNavAdvanced', None), ('lightningcomponentdemo:exampleVerticalNavBadge', None), ('lightningcomponentdemo:exampleVerticalNavBasic', None), ('lightningcomponentdemo:exampleVerticalNavCompact', None), ('lightningcomponentdemo:exampleVerticalNavHref', None), ('lightningcomponentdemo:exampleVerticalNavIcon', None), ('lightningcomponentdemo:exampleVerticalNavIteration', None), ('lightningcomponentdemo:exampleVerticalNavOverflow', None), ('lightningcomponentdemo:exampleVerticalNavSelected', None), ('lightningcomponentdemo:exampleVerticalNavShaded', None), ('lightningcomponentdemo:exampleVerticalNavValidation', None), ('lightningcomponentdemo:fileItem', None), ('lightningcomponentdemo:fileSelector', None), ('lightningcomponentdemo:filesList', None), ('lightningcomponentdemo:iconGenerator', None), ('lightningcomponentdemo:iconItem', None), ('lightningcomponentdemo:iconLibrary', None), ('lightningcomponentdemo:iconList', None), ('lightningcomponentdemo:layoutGenerator', None), ('lightningdocs:avatar', None), ('lightningdocs:badge', None), ('lightningdocs:breadcrumb', None), ('lightningdocs:buttonIconStateful', None), ('lightningdocs:checkboxGroup', None), ('lightningdocs:clickToDial', None), ('lightningdocs:combobox', None), ('lightningdocs:datatable', None), ('lightningdocs:dualListbox', None), ('lightningdocs:dynamicIcon', None), ('lightningdocs:empApi', None), ('lightningdocs:fileUpload', None), ('lightningdocs:formattedAddress', None), ('lightningdocs:formattedDateTime', None), ('lightningdocs:formattedEmail', None), ('lightningdocs:formattedLocation', None), ('lightningdocs:formattedName', None), ('lightningdocs:formattedNumber', None), ('lightningdocs:formattedPhone', None), ('lightningdocs:formattedRichText', None), ('lightningdocs:formattedText', None), ('lightningdocs:formattedTime', None), ('lightningdocs:formattedUrl', None), ('lightningdocs:helptext', None), ('lightningdocs:icon', None), ('lightningdocs:input', None), ('lightningdocs:inputAddress', None), ('lightningdocs:inputField', None), ('lightningdocs:inputLocation', None), ('lightningdocs:inputName', None), ('lightningdocs:map', None), ('lightningdocs:outputField', None), ('lightningdocs:pageReferenceUtils', None), ('lightningdocs:pillContainer', None), ('lightningdocs:progressBar', None), ('lightningdocs:progressRing', None), ('lightningdocs:radioGroup', None), ('lightningdocs:recordForm', None), ('lightningdocs:relativeDateTime', None), ('lightningdocs:slider', None), ('lightningdocs:spinner', None), ('lightningdocs:textarea', None), ('lightningdocs:tree', None), ('lightningdocs:treeGrid', None), ('lightningdocs:verticalNavigationItem', None), ('lightningdocs:verticalNavigationItemBadge', None), ('lightningdocs:verticalNavigationItemIcon', None), ('lightningsnapin:minimizedAPI', None), ('lightningsnapin:prechatAPI', None), ('lightningsnapin:settingsAPI', None), ('liveAgent:abstractPushedRequest', None), ('liveAgent:chatWidgetWork', None), ('liveAgent:liveChatButton', None), ('liveAgent:presenceStatus', None), ('liveAgent:presenceStatusMenuLink', None), ('liveAgent:presenceStatusTester', None), ('liveAgent:presenceStatusTesterData', None), ('liveAgent:presenceWidget', None), ('liveAgent:presenceWidgetTester', None), ('liveAgent:presenceWidgetTesterData', None), ('liveAgent:pushedEntityRequest', None), ('liveAgent:pushedEntityRequestTester', None), ('liveAgent:pushedEntityRequestTesterData', None), ('loyalty:loyaltyLVMDataProvider', None), ('loyalty:loyaltyProgramMemberList', None), ('loyalty:loyaltyProgramPartnerList', None), ('loyalty:loyaltyProgramProductList', None), ('loyalty:programDetailsBody', None), ('lst:listViewAutoCompleteWrapper', None), ('lst:listViewManagerDataTableWrapper', None), ('lst:listViewManagerMetadataConfiguration', None), ('lst:listViewRowLevelAuraAction', None), ('lst:relatedListContainerMobile', None), ('lst:relatedListQuickLinksContainerMobile', None), ('lst:relatedListQuickLinksMobile', None), ('lst:relatedListSingleContainerMobile', None), ('lsttest:listViewRowLevelAuraActionTest', None), ('ltng:developerError', None), ('ltng:outAppTemplate', None), ('ltng:require', None), ('ltngtools:dataProvider', None), ('macros:browser', None), ('macros:browserPanel', None), ('macros:browserPanelList', None), ('macros:browserPanelListDataProvider', None), ('macros:browserPanelListFolderItem', None), ('macros:browserPanelListItem', None), ('macros:browserPanelListRecordItem', None), ('macros:browserPanelNavigationBreadCrumbItem', None), ('macros:browserPanelNavigationBreadCrumbs', None), ('macros:browserPanelOverlay', None), ('macros:canvas', None), ('macros:dialog', None), ('macros:editor', None), ('macros:emailTemplatePillList', None), ('macros:engine', None), ('macros:executionPanel', None), ('macros:expressionContainer', None), ('macros:expressionGroup', None), ('macros:expressionGroupContainer', None), ('macros:header', None), ('macros:helpDropdown', None), ('macros:instructionsPanel', None), ('macros:keyboardHelpDialog', None), ('macros:lazyTargetManager', None), ('macros:lightningAdapter', None), ('macros:lightningMacroSetup', None), ('macros:macroDetail', None), ('macros:macroInstructions', None), ('macros:macroList', None), ('macros:macroListItem', None), ('macros:macroUtilityItem', None), ('macros:openBuilderAction', None), ('macros:outputEntityIcon', None), ('macros:progressDialog', None), ('macros:readOnlyValueDisplay', None), ('macros:relativeDateTime', None), ('macros:rightPanel', None), ('macros:rightPanelInstruction', None), ('macros:rightPanelInstructionList', None), ('macros:rightPanelSubInstruction', None), ('macros:searchInput', None), ('macros:serverSideBulkMacroResultsHandler', None), ('macros:serverSideEngineAdapter', None), ('macros:serverSideSingleMacroResultsHandler', None), ('macros:surfaceTemplate', None), ('macros:targetAdapter', None), ('macros:topToolbar', None), ('macros:widget', None), ('myday:landing', None), ('myday:myDay', None), ('native:layoutContainer', None), ('native:navigateToComponentShim', None), ('native:tempDepend', None), ('native:template', None), ('notes:contentNoteObjectHomeListStencil', None), ('notes:contentNoteRelatedListStencil', None), ('notes:editPanel', None), ('notes:editPanelManager', None), ('notes:editPanelStencil', None), ('notes:noteAutoCompleteOption', None), ('notes:noteDeleteRunnable', None), ('notes:noteEditor', None), ('notes:noteEditorDesktop', None), ('notes:noteEditorDesktopQuill', None), ('notes:noteEditorMobile', None), ('notes:noteEditorMobileQuill', None), ('notes:noteEditorPicker', None), ('notes:noteList', None), ('notes:noteListItem', None), ('notes:notePreviewPanel', None), ('notes:noteRecord', None), ('notes:noteVersionList', None), ('notes:noteVersionListDataProvider', None), ('notes:notesAbstractPanel', None), ('notes:notesDetail', None), ('notes:notesLandingPage', None), ('notes:notesListDesktop', None), ('notes:notesListViewHeader', None), ('notes:notesObjectHome', None), ('notes:notesTaskList', None), ('notes:notesTaskListDataProvider', None), ('notes:notesTaskListPanel', None), ('notes:notesTaskRowStencil', None), ('notes:outputFileType', None), ('notes:placeholder', None), ('notes:publisherCreatePanel', None), ('notes:quillAccessButton', None), ('notes:quillAddTaskButton', None), ('notes:quillInsertImageButton', None), ('notes:relateMruList', None), ('notes:relatePanel', None), ('notes:relateRecordsPanel', None), ('notes:relateSelectionItem', None), ('notes:relatedRecordPill', None), ('notes:relatedRecordsGrid', None), ('notes:relatedRecordsGridRemoveColumn', None), ('notes:relatedRecordsGridTitleColumn', None), ('notes:relatedRecordsList', None), ('notes:relatedRecordsListDesktop', None), ('notes:relatedRecordsListMobile', None), ('notes:sharingPrivacyIconLabel', None), ('notes:title', None), ('notes:utilityBarNoteList', None), ('objectManager:actionsMenu', None), ('objectManager:actionsMenuItem', None), ('objectManager:addImplementors', None), ('objectManager:apexTriggerDetail', None), ('objectManager:apexTriggerDetailList', None), ('objectManager:buttonsLinksActionsDetailList', None), ('objectManager:byOn', None), ('objectManager:cellToDisplayFormFactorDetails', None), ('objectManager:cellToDisplayPageLinkBasedOnFormFactor', None), ('objectManager:clientArrayDataProvider', None), ('objectManager:collapsible', None), ('objectManager:commChannelLayoutDetailList', None), ('objectManager:compactLayoutDetail', None), ('objectManager:compactLayoutDetailList', None), ('objectManager:customFieldDeleteWarning', None), ('objectManager:customObjectDeleteWarning', None), ('objectManager:dataTable', None), ('objectManager:detailCard', None), ('objectManager:detailLink', None), ('objectManager:detailRow', None), ('objectManager:detailRowDualField', None), ('objectManager:detailRowSingleField', None), ('objectManager:detailTable', None), ('objectManager:externalLink', None), ('objectManager:fieldMappingScreenContainer', None), ('objectManager:fieldSetDetailList', None), ('objectManager:fieldsAndRelationshipsDetailList', None), ('objectManager:fixableHeader', None), ('objectManager:flexiPagesDetailList', None), ('objectManager:globalSearchBox', None), ('objectManager:hierarchyColumnDetailList', None), ('objectManager:implementorActions', None), ('objectManager:implementorsDetailList', None), ('objectManager:leftNav', None), ('objectManager:limitDetailList', None), ('objectManager:lookupEntityByApiName', None), ('objectManager:lookupLayoutIdByRecordId', None), ('objectManager:lookupRedirect', None), ('objectManager:mappingContainer', None), ('objectManager:mappingDropdownContainer', None), ('objectManager:mySearchLayoutDetailList', None), ('objectManager:objectDataProvider', None), ('objectManager:objectDetail', None), ('objectManager:objectDetailComponent', None), ('objectManager:objectDetailPage', None), ('objectManager:objectEditLink', None), ('objectManager:objectLink', None), ('objectManager:objectList', None), ('objectManager:objectManagerAlohaPage', None), ('objectManager:objectManagerRouter', None), ('objectManager:outputCheckbox', None), ('objectManager:pageAssignment', None), ('objectManager:pageLayoutDetailList', None), ('objectManager:recordTypeDetail', None), ('objectManager:recordTypeDetailList', None), ('objectManager:relatedListCardButton', None), ('objectManager:relatedListCardDataProvider', None), ('objectManager:relatedLookupFilterDetail', None), ('objectManager:relatedLookupFilterDetailList', None), ('objectManager:schemaBuilderLink', None), ('objectManager:searchLayoutDetailList', None), ('objectManager:setupAlohaPage', None), ('objectManager:setupComponent', None), ('objectManager:spannableDataTableColumn', None), ('objectManager:style', None), ('objectManager:validationRuleDetail', None), ('objectManager:validationRuleDetailList', None), ('objectManager:virtualActionMenu', None), ('objectManager:virtualRelatedListCard', None), ('offline:banner', None), ('offline:conflictResolution', None), ('offline:draftRunnable', None), ('offline:offlineDraftActionHelper', None), ('offline:offlineDraftDataProvider', None), ('offline:offlineDraftList', None), ('offline:offlineDraftListItem', None), ('offline:offlineDrafts', None), ('offline:recordGvpTestTemplate', None), ('offline:recordsComparison', None), ('offline:sash', None), ('offline:smartStoreAdapter', None), ('offline:smartStoreAdapterEventListener', None), ('offline:syncManager', None), ('offline:tempDepend', None), ('omni:abstractDataProvider', None), ('omni:actionsMenu', None), ('omni:agentCurrentWorkDataProvider', None), ('omni:agentCurrentWorkList', None), ('omni:agentCurrentWorkListHeader', None), ('omni:agentCurrentWorkRow', None), ('omni:agentDataProvider', None), ('omni:agentDetailActivity', None), ('omni:agentDetailConfigurations', None), ('omni:agentDetailTabs', None), ('omni:agentDetailTabsTester', None), ('omni:agentDetailTabsTesterData', None), ('omni:agentDetailTimeLine', None), ('omni:agentDetailTimelineTester', None), ('omni:agentList', None), ('omni:agentListHeader', None), ('omni:agentRow', None), ('omni:agentRowTester', None), ('omni:agentTimeLineStatus', None), ('omni:agentTimeLineWork', None), ('omni:agentsByQueueDataProvider', None), ('omni:agentsByQueueList', None), ('omni:agentsByQueueListHeader', None), ('omni:agentsByQueueRow', None), ('omni:agentsTab', None), ('omni:backlogList', None), ('omni:backlogListDataProvider', None), ('omni:backlogListHeader', None), ('omni:backlogListRow', None), ('omni:backlogListTester', None), ('omni:backlogListTesterData', None), ('omni:backlogView', None), ('omni:backlogViewHeader', None), ('omni:chatMonitor', None), ('omni:chatPreview', None), ('omni:chatPreviewTester', None), ('omni:chatPreviewTesterData', None), ('omni:detailView', None), ('omni:loadingDots', None), ('omni:omniIcon', None), ('omni:omniIcons', None), ('omni:pager', None), ('omni:panelManager', None), ('omni:popupAgentRow', None), ('omni:popupChangeQueues', None), ('omni:popupChangeSkills', None), ('omni:popupFooter', None), ('omni:popupHeader', None), ('omni:popupQueueRow', None), ('omni:popupSkillRow', None), ('omni:queueDetails', None), ('omni:queueDetailsTester', None), ('omni:queueDetailsTesterData', None), ('omni:queueItemRow', None), ('omni:queueItemsDataProvider', None), ('omni:queueItemsHeader', None), ('omni:queueItemsList', None), ('omni:queueRow', None), ('omni:queuesDataProvider', None), ('omni:queuesList', None), ('omni:queuesListHeader', None), ('omni:queuesView', None), ('omni:scrtLibTester', None), ('omni:skillDetails', None), ('omni:supervisorComponentsTest', None), ('omni:supervisorComponentsTestTemplate', None), ('omni:supervisorConsole', None), ('omni:supervisorHeaderColumn', None), ('omni:supervisorHeaderFilterMenuList', None), ('omni:supervisorList', None), ('omni:supervisorPanel', None), ('omni:supervisorTabTester', None), ('omni:targetEntityCompactLayoutNoImage', None), ('omni:targetEntityCompactLayoutNoImageTester', None), ('omni:timestamp', None), ('omni:toast', None), ('omni:workAction', None), ('omni:workQueueDetails', None), ('omni:workQueueDetailsTester', None), ('omni:workQueueDetailsTesterData', None), ('omni:workQueueItemRow', None), ('omni:workQueueItemsDataProvider', None), ('omni:workQueueItemsHeader', None), ('omni:workQueueItemsList', None), ('omni:workQueueView', None), ('omni:worksByQueueDataProvider', None), ('omni:worksByQueueList', None), ('omni:worksByQueueListHeader', None), ('omni:worksByQueueRow', None), ('onboarding:analytics', None), ('onboarding:linkLabel', None), ('onboarding:onboardingComponent', None), ('onboarding:questionSet', None), ('onboarding:smartWelcomeMat', None), ('onboarding:template', None), ('onboardingTest:customStep', None), ('onboardingTest:customSummaryBlock', None), ('onboardingTest:opportunityStage', None), ('onboardingTest:pathProgress', None), ('onboardingTest:setupAssistantWelcomeMatContainer', None), ('onboardingTest:template', None), ('onboardingTest:welcomeMatService', None), ('onboardingTest:wizardSample1', None), ('onboardingTest:wizardStepCustomAction', None), ('onboardingTest:wizardStepCustomFinish', None), ('one:actionBar', None), ('one:actionBarPlugin', None), ('one:actionButtonIcon', None), ('one:actionCard', None), ('one:actionCardContent', None), ('one:actionCardPhone', None), ('one:actionOverflow', None), ('one:actionOverflowMenuItem', None), ('one:actionSimpleContainer', None), ('one:actionsComposer', None), ('one:actionsDropDown', None), ('one:actionsManager', None), ('one:actionsRibbon', None), ('one:addressableModalManager', None), ('one:adoptionComposer', None), ('one:adoptionContent', None), ('one:alohaPage', None), ('one:alohaPageCard', None), ('one:alohaPageDeprecated', None), ('one:anchorHeader', None), ('one:apiHandler', None), ('one:appAnalytics', None), ('one:appDetail', None), ('one:appLauncherItem', None), ('one:appLauncherItemList', None), ('one:appLauncherMenuContainer', None), ('one:appNavAddItemsBaseDataProvider', None), ('one:appNavAddItemsFavoritesDataProvider', None), ('one:appNavAddItemsTabsDataProvider', None), ('one:appNavBackButton', None), ('one:appNavBarItem', None), ('one:appNavBarOverflowMenuItem', None), ('one:appNavButtons', None), ('one:appNavContainer', None), ('one:appNavItems', None), ('one:appNavMenu', None), ('one:appNavMenuPanel', None), ('one:appNavMenuPopupTarget', None), ('one:appNavPromptContent', None), ('one:appNavTabsets', None), ('one:appNavToggle', None), ('one:applicationError', None), ('one:auraContainer', None), ('one:auraCustomerErrorHandler', None), ('one:auraSystemErrorHandler', None), ('one:baseComponentDepend', None), ('one:branding', None), ('one:celebrationManager', None), ('one:centerStage', None), ('one:chatter', None), ('one:closeTabsConfirmationModal', None), ('one:consoleApiBootstrapTester', None), ('one:consoleAppCustomizationDefault', None), ('one:consoleAppCustomizationSetup', None), ('one:consoleCmpInitApiTester', None), ('one:consoleEventBroker', None), ('one:consoleInlinePanel', None), ('one:consoleLayoutContainer2', None), ('one:consoleLi', None), ('one:consoleNav', None), ('one:consoleObjectHome', None), ('one:consoleOverflowItem', None), ('one:consolePersistenceForceLogoutPlugin', None), ('one:consolePersistenceManager', None), ('one:consoleTab', None), ('one:consoleTabContainer', None), ('one:consoleTabCustomizationPanel', None), ('one:consoleTabItem', None), ('one:consoleTabScrollManager', None), ('one:consoleTabset', None), ('one:consoleToolkitTestUtility', None), ('one:consoleVFOverridesTester', None), ('one:content', None), ('one:contentLoadedPlugin', None), ('one:contentRegionNavContainer', None), ('one:cryptoLibraryManager', None), ('one:customizeInterface', None), ('one:darkModeUserSettings', None), ('one:declarativeDockedContent', None), ('one:declarativePromptSetup', None), ('one:densitySetup', None), ('one:densityUserSettings', None), ('one:densityUserSettingsConfirmationDialog', None), ('one:desktopLayoutContainer', None), ('one:dialog', None), ('one:dockingPanelManager', None), ('one:dragAndDropEditItem', None), ('one:dragAndDropEditList', None), ('one:editMyNav', None), ('one:editMyNavListHandler', None), ('one:editSortOrderPanel', None), ('one:editSortOrderPanelDragAndDropEditListHandler', None), ('one:editablePagePlugin', None), ('one:empAPILoader', None), ('one:emptyPerfUtility', None), ('one:ept', None), ('one:establishVFSessionComponent', None), ('one:externalRedirect', None), ('one:favorites', None), ('one:favoritesDragAndDropEditListHandler', None), ('one:favoritesEditPanel', None), ('one:favoritesPicker', None), ('one:favoritesPickerDataProvider', None), ('one:featureDiscoveryModal', None), ('one:feedbackFormContainer', None), ('one:feedbackNextProvider', None), ('one:flexipage', None), ('one:floatingPanelPrompt', None), ('one:footer', None), ('one:globalCreate', None), ('one:globalCreateIcon', None), ('one:globalCreateItem', None), ('one:globalNav', None), ('one:header', None), ('one:headerRegionNavContainer', None), ('one:helpAndTrainingExperience', None), ('one:helpAndTrainingFeedback', None), ('one:helpAndTrainingKeyboardShortcuts', None), ('one:helpMenu', None), ('one:helpMenuDataProvider', None), ('one:helpMenuSectionsContainer', None), ('one:helpMenuSetup', None), ('one:hiddenRegion', None), ('one:homeCardListPhone', None), ('one:homeCardSeparator', None), ('one:iframeComposer', None), ('one:iframeContentPlugin', None), ('one:iframeMessageManager', None), ('one:inAppChat', None), ('one:inAppGuidanceBuilderTemplate', None), ('one:inAppGuidanceDataProvider', None), ('one:keyboardShortcutList', None), ('one:keyboardShortcutListFooter', None), ('one:keyboardShortcutListener', None), ('one:ladybugTrigger', None), ('one:leftContentWrapper', None), ('one:lexOnIpadSetup', None), ('one:listRow', None), ('one:liveChatPreview', None), ('one:lwcGvpClient', None), ('one:moreCard', None), ('one:multiTabList', None), ('one:multiTabListItem', None), ('one:multiTabListTab', None), ('one:navItemDropdown', None), ('one:navItemDropdownMenuItem', None), ('one:navItemDropdownMenuItemSeparator', None), ('one:navigationItemAPILoader', None), ('one:networkSwitcher', None), ('one:networkSwitcherMenuTrigger', None), ('one:networkSwitcherRadioMenuItem', None), ('one:noNavItems', None), ('one:npsContainer', None), ('one:objectHomeFlexipage', None), ('one:onboardingAssistanceSetup', None), ('one:onboardingManager', None), ('one:onboardingManagerWrapper', None), ('one:panelManager', None), ('one:panelManagerMobile', None), ('one:panelManagerScoped', None), ('one:panelService', None), ('one:persistenceTestComponent', None), ('one:pocketGuide', None), ('one:pocketGuidePrompt', None), ('one:preloadLayout', None), ('one:promptAuthoringContainer', None), ('one:promptAuthoringDialog', None), ('one:promptDisplaySettingsDialog', None), ('one:promptLsfFlow', None), ('one:promptLsfMilestoneContent', None), ('one:promptLsfMilestoneDetails', None), ('one:promptLsfMilestoneFrequency', None), ('one:promptLsfMilestonePermissions', None), ('one:promptLsfMilestonePosition', None), ('one:promptLsfMilestoneProfiles', None), ('one:promptLsfMilestoneType', None), ('one:publicGroupLookupDataProvider', None), ('one:pushChatWindowProvider', None), ('one:recordActionFlexipageWrapper', None), ('one:recordActionWrapper', None), ('one:recordHomeFlexipage', None), ('one:recordHomeFlexipage2Wrapper', None), ('one:recordLoadError', None), ('one:recycleBinActions', None), ('one:recycleBinHome', None), ('one:rrhTempDepend', None), ('one:searchContentPlugin', None), ('one:sessionManager', None), ('one:shortcutLibLazyLoader', None), ('one:singlePaneWindowManagerWrapper', None), ('one:splitViewWrapper', None), ('one:stageLeft', None), ('one:storagePrime', None), ('one:storagePrimeNative', None), ('one:storagePrimePerf', None), ('one:switchIdentityDialog', None), ('one:systemMessage', None), ('one:tempDepend', None), ('one:template', None), ('one:themeImageCrop', None), ('one:themeImageUpload', None), ('one:themeList', None), ('one:themeManager', None), ('one:themeSetup', None), ('one:trialExperience', None), ('one:trialHeader', None), ('one:twoColumnLayout', None), ('one:uncacheableContentPlugin', None), ('one:unsavedChangesAPILoader', None), ('one:unsupported', None), ('one:unsupportedContainer', None), ('one:unsupportedDetectorIpad', None), ('one:unsupportedDetectorIpadOS', None), ('one:unsupportedDetectorUiWebView', None), ('one:unsupportedHome', None), ('one:unsupportedMessage', None), ('one:userProfileCard', None), ('one:userProfileCardData', None), ('one:userProfileCardTrigger', None), ('one:userSwitcher', None), ('one:userSwitcherIdentity', None), ('one:utilPanelManager', None), ('one:utilityBar', None), ('one:utilityBarAPILoader', None), ('one:utilityBarContainer', None), ('one:utilityBarContent', None), ('one:utilityBarItem', None), ('one:utilityBarPanel', None), ('one:utilityBarPopoutWrapper', None), ('one:utilityBarTemplateDesktop', None), ('one:utilityBarTestComponent', None), ('one:visualforceOverride', None), ('one:webTab', None), ('one:webtemplate', None), ('one:workspace', None), ('one:workspace2', None), ('one:workspaceAPILoader', None), ('one:workspaceCollection', None), ('one:workspaceTabWrapper', None), ('onesetup:addUserModal', None), ('onesetup:addUsers', None), ('onesetup:allHome', None), ('onesetup:baseHomePage', None), ('onesetup:breadcrumb', None), ('onesetup:breadcrumbs', None), ('onesetup:chatRuleModal', None), ('onesetup:chatRuleModalFooter', None), ('onesetup:createMenu', None), ('onesetup:helpBanner', None), ('onesetup:helpTile', None), ('onesetup:homeCreateMenu', None), ('onesetup:lexEnableUsersStep', None), ('onesetup:lexEnablementFlow', None), ('onesetup:lexMultiAdd', None), ('onesetup:lexMultiAddTable', None), ('onesetup:lexSearchDataProvider', None), ('onesetup:lexSuccessStep', None), ('onesetup:lexUsersDataProvider', None), ('onesetup:liveAgentSettings', None), ('onesetup:liveAgentSettingsBasic', None), ('onesetup:liveAgentSettingsContainer', None), ('onesetup:liveAgentSettingsErrorPage', None), ('onesetup:liveAgentSettingsQueueing', None), ('onesetup:liveAgentSettingsSecurity', None), ('onesetup:liveAgentSettingsTimeouts', None), ('onesetup:module', None), ('onesetup:mruLink', None), ('onesetup:navTree', None), ('onesetup:navTreeFilter', None), ('onesetup:navTreeKeyboardNavigator', None), ('onesetup:navTreeNode', None), ('onesetup:outOfLicensesModal', None), ('onesetup:pageNotFound', None), ('onesetup:progressBar', None), ('onesetup:recentItems', None), ('onesetup:setupAlohaPage', None), ('onesetup:setupAssistantTile', None), ('onesetup:setupCarouselPage', None), ('onesetup:setupComponent', None), ('onesetup:setupFlow', None), ('onesetup:setupFlowAbstractEditableStep', None), ('onesetup:setupFlowAbstractStep', None), ('onesetup:setupFlowConfirmDialog', None), ('onesetup:setupFlowConfirmMessage', None), ('onesetup:setupFlowEditor', None), ('onesetup:setupFlowEditorFooter', None), ('onesetup:setupFlowEndStep', None), ('onesetup:setupFlowFooter', None), ('onesetup:setupFlowIterator', None), ('onesetup:setupFlowProgress', None), ('onesetup:setupFlowTab', None), ('onesetup:setupFlowTabset', None), ('onesetup:setupHeader', None), ('onesetup:setupLink', None), ('onesetup:setupMenuItem', None), ('onesetup:setupNavTree', None), ('onesetup:setupNavTreeAppManager', None), ('onesetup:setupPageLink', None), ('onesetup:setupSearchInputDataProvider', None), ('onesetup:setupSearchInputDesktop', None), ('onesetup:unsupported', None), ('onesetup:usersContainer', None), ('onesetup:usersResources', None), ('onesetup:virtualGridSetupPageLink', None), ('opencti:clickToDialApiHandler', None), ('opencti:embeddedTelephonyConnector', None), ('opencti:embeddedTelephonyTab', None), ('opencti:openCtiApiHandler', None), ('opencti:outputPhone', None), ('opencti:recordPhoneCallControlsDesignSubstitute', None), ('opencti:softPhone', None), ('opencti:testCrossCuttingOutputPhoneOverride', None), ('packagingSetupUI:deleteModeConfirmationDialog', None), ('packagingSetupUI:iframe', None), ('packagingSetupUI:inputCheckbox', None), ('packagingSetupUI:installKeyDialog', None), ('packagingSetupUI:ipErrorCmp', None), ('packagingSetupUI:ipLandingCmp', None), ('packagingSetupUI:ipSuccessCmp', None), ('packagingSetupUI:ipTemplate', None), ('packagingSetupUI:ipTooLongCmp', None), ('packagingSetupUI:profileMapping', None), ('packagingSetupUI:rssDialog', None), ('packagingSetupUI:rssDialogFooter', None), ('packagingSetupUI:subscriberQueryRequests', None), ('packagingSetupUI:template', None), ('platformencryption:advancedsettingsPage', None), ('platformencryption:advancedsettingsPageWrapper', None), ('platformencryption:esfPage', None), ('process_home:flowListView', None), ('process_home:openFlow', None), ('process_home:pausedFlowListView', None), ('process_home:processHome', None), ('process_home:processHomeCard', None), ('process_home:processHomeChart', None), ('process_home:processHomeCreateMenu', None), ('processui:header', None), ('processui:layout', None), ('processui:template', None), ('processuiappr:helloWorld', None), ('processuicommon:actionPanel', None), ('processuicommon:actionTypeApex', None), ('processuicommon:actionTypeBase', None), ('processuicommon:actionTypeChatterPost', None), ('processuicommon:actionTypeCustomNotification', None), ('processuicommon:actionTypeEmailAlert', None), ('processuicommon:actionTypeFlow', None), ('processuicommon:actionTypeIsotope', None), ('processuicommon:actionTypeLiveMessageNotification', None), ('processuicommon:actionTypeQuickAction', None), ('processuicommon:actionTypeQuip', None), ('processuicommon:actionTypeRecordCreate', None), ('processuicommon:actionTypeRecordUpdate', None), ('processuicommon:actionTypeSendSurveyInvitation', None), ('processuicommon:actionTypeSubmit', None), ('processuicommon:actionTypeThunder', None), ('processuicommon:actionTypes', None), ('processuicommon:advancedSection', None), ('processuicommon:apexFields', None), ('processuicommon:apexFieldsDataProvider', None), ('processuicommon:apexParameterList', None), ('processuicommon:apexParameterListRow', None), ('processuicommon:apexTypes', None), ('processuicommon:apexTypesDataProvider', None), ('processuicommon:arrow', None), ('processuicommon:autocomplete', None), ('processuicommon:baseItemListRow', None), ('processuicommon:canvasAddElement', None), ('processuicommon:canvasEditableElement', None), ('processuicommon:canvasElement', None), ('processuicommon:chatterActionTopics', None), ('processuicommon:chatterInput', None), ('processuicommon:chatterMentionsDataProvider', None), ('processuicommon:chatterTopicsDataProvider', None), ('processuicommon:conditionList', None), ('processuicommon:conditionListRow', None), ('processuicommon:conditionLogicTypes', None), ('processuicommon:confirmationModalBody', None), ('processuicommon:confirmationModalFooter', None), ('processuicommon:createableFieldDataProvider', None), ('processuicommon:createableFields', None), ('processuicommon:createableObjectTypes', None), ('processuicommon:createableObjectTypesDataProvider', None), ('processuicommon:customEventTypes', None), ('processuicommon:customEventTypesDataProvider', None), ('processuicommon:customLabel', None), ('processuicommon:customNotificationTypes', None), ('processuicommon:decisionArrow', None), ('processuicommon:dialog', None), ('processuicommon:duelingList', None), ('processuicommon:duelingListItem', None), ('processuicommon:duelingListS1', None), ('processuicommon:duelingListsS1', None), ('processuicommon:emailAlertObjectTypes', None), ('processuicommon:emailAlertObjectTypesDataProvider', None), ('processuicommon:entityFieldDataProvider', None), ('processuicommon:entityFieldDialog', None), ('processuicommon:entityFieldsByTypeDataProvider', None), ('processuicommon:entityOrEventFieldDialog', None), ('processuicommon:entityReferenceDialog', None), ('processuicommon:flowFields', None), ('processuicommon:flowFieldsDataProvider', None), ('processuicommon:flowParameterList', None), ('processuicommon:flowParameterListRow', None), ('processuicommon:flowTypes', None), ('processuicommon:flowTypesDataProvider', None), ('processuicommon:formulaBuilder', None), ('processuicommon:formulaFunctionDataProvider', None), ('processuicommon:formulaFunctionDialog', None), ('processuicommon:formulaGlobalVariableDataProvider', None), ('processuicommon:formulaGlobalVariableDialog', None), ('processuicommon:formulaOperator', None), ('processuicommon:help', None), ('processuicommon:helpPanelBody', None), ('processuicommon:inlineFormulaBuilder', None), ('processuicommon:input', None), ('processuicommon:inputBoolean', None), ('processuicommon:inputCheckbox', None), ('processuicommon:inputCurrency', None), ('processuicommon:inputDate', None), ('processuicommon:inputDateTime', None), ('processuicommon:inputError', None), ('processuicommon:inputEventParameter', None), ('processuicommon:inputFormula', None), ('processuicommon:inputGlobalConstant', None), ('processuicommon:inputJson', None), ('processuicommon:inputNumber', None), ('processuicommon:inputNumberHack', None), ('processuicommon:inputProcessValue', None), ('processuicommon:inputSelect', None), ('processuicommon:inputSourceTypes', None), ('processuicommon:inputString', None), ('processuicommon:inputSystemVariable', None), ('processuicommon:inputText', None), ('processuicommon:inputTextArea', None), ('processuicommon:inputTraverser', None), ('processuicommon:instructions', None), ('processuicommon:isotopeNotificationAction', None), ('processuicommon:isotopePicklist', None), ('processuicommon:liveMessageNotificationChannel', None), ('processuicommon:liveMessageNotificationChannelDataProvider', None), ('processuicommon:liveMessageNotificationRecipientFieldsDataProvider', None), ('processuicommon:liveMessageNotificationRecipientReferenceDialog', None), ('processuicommon:liveMessageNotificationTargetTypes', None), ('processuicommon:liveMessageNotificationTemplate', None), ('processuicommon:liveMessageNotificationTemplateDataProvider', None), ('processuicommon:messageModalFooter', None), ('processuicommon:messagingEndUserFieldsDataProvider', None), ('processuicommon:messagingEndUserReferenceDialog', None), ('processuicommon:multiPicklistButton', None), ('processuicommon:multiPicklistModalBody', None), ('processuicommon:multiPicklistModalFooter', None), ('processuicommon:notificationRecipientCategories', None), ('processuicommon:notificationRecipientTypes', None), ('processuicommon:notificationTargetInput', None), ('processuicommon:notificationTextInput', None), ('processuicommon:operatorTypes', None), ('processuicommon:outcomeGoToNext', None), ('processuicommon:outcomeGoToNextOptions', None), ('processuicommon:outcomeGoToNextPanel', None), ('processuicommon:outcomePanel', None), ('processuicommon:outcomeTypes', None), ('processuicommon:outcomeUpdateOnce', None), ('processuicommon:outputText', None), ('processuicommon:panel', None), ('processuicommon:parameterList', None), ('processuicommon:parameterListRow', None), ('processuicommon:phoneFieldsDataProvider', None), ('processuicommon:phoneReferenceDialog', None), ('processuicommon:picklistField', None), ('processuicommon:postTargetTypes', None), ('processuicommon:postTargetUserTypes', None), ('processuicommon:postTargetsPerType', None), ('processuicommon:processPerTriggerObjectType', None), ('processuicommon:queryableFields', None), ('processuicommon:queryableFieldsDataProvider', None), ('processuicommon:queueOrGroupList', None), ('processuicommon:queueOrGroupListDataProvider', None), ('processuicommon:quickActionActionTypes', None), ('processuicommon:quickActionActions', None), ('processuicommon:quickActionActionsDataProvider', None), ('processuicommon:quickActionActionsOption', None), ('processuicommon:quickActionFields', None), ('processuicommon:quickActionFieldsDataProvider', None), ('processuicommon:quickActionFilterTypes', None), ('processuicommon:quickActionObjectTypes', None), ('processuicommon:quickActionObjectTypesDataProvider', None), ('processuicommon:quickActionParameterList', None), ('processuicommon:quickActionParameterListRow', None), ('processuicommon:quipAddDocumentToFolderAction', None), ('processuicommon:quipAddMessageToChatAction', None), ('processuicommon:quipAddMessageToDocumentAction', None), ('processuicommon:quipAddUsersToChatAction', None), ('processuicommon:quipAddUsersToThreadAction', None), ('processuicommon:quipAttachDocumentToRecordAction', None), ('processuicommon:quipBaseSubActionType', None), ('processuicommon:quipChangeImageSlideAction', None), ('processuicommon:quipCopyContentAction', None), ('processuicommon:quipCopyDocumentAction', None), ('processuicommon:quipCreateChatAction', None), ('processuicommon:quipCreateDocumentAction', None), ('processuicommon:quipCreateFolderAction', None), ('processuicommon:quipEditDocumentAction', None), ('processuicommon:quipEditDocumentSubAction', None), ('processuicommon:quipEditSlideSubAction', None), ('processuicommon:quipEditSpreadsheetSubAction', None), ('processuicommon:quipInputParameter', None), ('processuicommon:quipInsertLiveAppAction', None), ('processuicommon:quipInsertNewSlideAction', None), ('processuicommon:quipInsertRelatedListAction', None), ('processuicommon:quipInsertSalesforceListAction', None), ('processuicommon:quipInsertSalesforceLiveRecordAction', None), ('processuicommon:quipLockDocumentAction', None), ('processuicommon:quipPicklist', None), ('processuicommon:quipRecordFieldPicklist', None), ('processuicommon:quipRemoveDocumentFromFolderAction', None), ('processuicommon:quipRemoveUsersFromThreadAction', None), ('processuicommon:radioButtons', None), ('processuicommon:recordCreateParameterList', None), ('processuicommon:recordCreateParameterListRow', None), ('processuicommon:recordFilterList', None), ('processuicommon:recordFilterListRow', None), ('processuicommon:recordUpdateEvaluationTypes', None), ('processuicommon:recordUpdateParameterList', None), ('processuicommon:recordUpdateParameterListRow', None), ('processuicommon:relationshipFieldDataProvider', None), ('processuicommon:relationshipFieldDialog', None), ('processuicommon:spinner', None), ('processuicommon:startOrStop', None), ('processuicommon:submitActionApprovals', None), ('processuicommon:submitActionApprovalsDataProvider', None), ('processuicommon:submitActionSelectionTypes', None), ('processuicommon:submitActionSubmitterTypes', None), ('processuicommon:summaryRenderer', None), ('processuicommon:surveyInvitationFieldDataProvider', None), ('processuicommon:surveyInvitationTargetTypes', None), ('processuicommon:textPostRecipients', None), ('processuicommon:toolbar', None), ('processuicommon:traverser', None), ('processuicommon:traverserModalBody', None), ('processuicommon:traverserModalFooter', None), ('processuicommon:traverserNode', None), ('processuicommon:traverserNodeAutocomplete', None), ('processuicommon:traverserNodeChild', None), ('processuicommon:traverserNodeDataProvider', None), ('processuicommon:triggerEnableRecursion', None), ('processuicommon:triggerObjectDataProvider', None), ('processuicommon:triggerObjectTypes', None), ('processuicommon:triggerPanel', None), ('processuicommon:triggerTypes', None), ('processuicommon:typedEntityFieldDataProvider', None), ('processuicommon:typedEntityFieldDialog', None), ('processuicommon:typedFieldOption', None), ('processuicommon:updateableFields', None), ('processuicommon:updateableFieldsDataProvider', None), ('processuicommon:userAndGroupAutocompleteOption', None), ('processuicommon:userFieldsDataProvider', None), ('processuicommon:userList', None), ('processuicommon:userListDataProvider', None), ('processuicommon:userReferenceDialog', None), ('processuicommon:valueTypes', None), ('processuicommon:waitEventDate', None), ('processuicommon:waitEventDateDataProvider', None), ('processuicommon:waitEventOperatorTypes', None), ('processuicommon:waitEventPanel', None), ('processuicommon:waitEventPanelRadio', None), ('processuicommon:waitEventTimeUnitTypes', None), ('processuimgnt:console', None), ('processuimgnt:consoleListRow', None), ('processuimgnt:consoleToolbar', None), ('processuimgnt:landingPage', None), ('processuimgnt:versionListRow', None), ('processuimgnt:versionTable', None), ('processuirule:actionAddElement', None), ('processuirule:actionContainer', None), ('processuirule:actionContainerGroup', None), ('processuirule:actionElement', None), ('processuirule:canvasToolbar', None), ('processuirule:eventTypeTrigger', None), ('processuirule:invocableSettings', None), ('processuirule:modalManager', None), ('processuirule:outcomeAddElement', None), ('processuirule:outcomeAddGroup', None), ('processuirule:outcomeElement', None), ('processuirule:outcomeGroup', None), ('processuirule:panelManager', None), ('processuirule:processPropertiesModalBody', None), ('processuirule:processPropertiesModalFooter', None), ('processuirule:ruleCanvas', None), ('processuirule:triggerAddElement', None), ('processuirule:triggerElement', None), ('processuirule:triggerSourceTypes', None), ('processuirule:waitEventActionContainer', None), ('processuirule:waitEventAddElement', None), ('processuirule:waitEventElement', None), ('processuirule:workflowTypeTrigger', None), ('processuitest:actionContainer_wrapper', None), ('processuitest:actionPanelApex_wrapper', None), ('processuitest:actionPanelChatterPost_wrapper', None), ('processuitest:actionPanelCustomNotification_wrapper', None), ('processuitest:actionPanelEmail_wrapper', None), ('processuitest:actionPanelFlow_wrapper', None), ('processuitest:actionPanelQuickAction_wrapper', None), ('processuitest:actionPanelRecordCreate_wrapper', None), ('processuitest:actionPanelRecordUpdate_wrapper', None), ('processuitest:actionPanelSubmit_wrapper', None), ('processuitest:actionPanelThunder_wrapper', None), ('processuitest:actionPanel_wrapper', None), ('processuitest:actionTypeApex_wrapper', None), ('processuitest:actionTypeChatterPost_wrapper', None), ('processuitest:actionTypeCustomNotification_wrapper', None), ('processuitest:actionTypeEmailAlert_wrapper', None), ('processuitest:actionTypeFlow_wrapper', None), ('processuitest:actionTypeQuickAction_wrapper', None), ('processuitest:actionTypeRecordCreate_wrapper', None), ('processuitest:actionTypeRecordUpdate_wrapper', None), ('processuitest:actionTypeSendSurveyInvitation_Wrapper', None), ('processuitest:actionTypeSubmit_wrapper', None), ('processuitest:autocomplete_wrapper', None), ('processuitest:canvasToolbar_wrapper', None), ('processuitest:conditionListSingleRow_wrapper', None), ('processuitest:conditionList_wrapper', None), ('processuitest:entityFieldDialog_wrapper', None), ('processuitest:eventTypeTrigger_wrapper', None), ('processuitest:flowParameterList_wrapper', None), ('processuitest:help_wrapper', None), ('processuitest:inputSelect_wrapper', None), ('processuitest:input_wrapper', None), ('processuitest:invocableSettings_wrapper', None), ('processuitest:layout_wrapper', None), ('processuitest:outcomePanel_wrapper', None), ('processuitest:panelManager_wrapper', None), ('processuitest:panel_wrapper', None), ('processuitest:processPropertiesModalBody_wrapper', None), ('processuitest:quickActionParameterList_wrapper', None), ('processuitest:recordCreateParameterList_wrapper', None), ('processuitest:recordUpdateParameterListSingleRow_wrapper', None), ('processuitest:recordUpdateParameterList_wrapper', None), ('processuitest:relationshipFieldDialog_wrapper', None), ('processuitest:stubDataProvider', None), ('processuitest:testAutoCompleteOption', None), ('processuitest:toolbar_wrapper', None), ('processuitest:traverserSummaryRenderer_wrapper', None), ('processuitest:workflowTypeTrigger_wrapper', None), ('reports:buttonGroup', None), ('reports:dataGrid', None), ('reports:eclairChart', None), ('reports:eclairConfigurer', None), ('reports:eclairPaletteSelector', None), ('reports:eclairReportChart', None), ('reports:errorPanel', None), ('reports:exportDialog', None), ('reports:exportDialogFooter', None), ('reports:exportVisualPickerOption', None), ('reports:feedPanel', None), ('reports:filterBooleanWidget', None), ('reports:filterCard', None), ('reports:filterCardCommon', None), ('reports:filterCardStandardDate', None), ('reports:filterDateWidget', None), ('reports:filterMultiSelectPicklistWidget', None), ('reports:filterNumberWidget', None), ('reports:filterPanel', None), ('reports:filterPanelFooter', None), ('reports:filterPanelTest', None), ('reports:filterRoleHierarchyCard', None), ('reports:filterRoleHierarchyWidget', None), ('reports:filterSelection', None), ('reports:filterSingleSelectPicklistWidget', None), ('reports:filterStandardDateWidget', None), ('reports:filterStringWidget', None), ('reports:filterWidget', None), ('reports:folderDialog', None), ('reports:folderDialogFooter', None), ('reports:highlight', None), ('reports:instancePoller', None), ('reports:lightningReportsChartingTest', None), ('reports:lockedFilterCard', None), ('reports:metricsHeader', None), ('reports:multiSelectDropDownMenu', None), ('reports:passiveFilterGroup', None), ('reports:reportBase', None), ('reports:reportBaseAura', None), ('reports:reportBuilder', None), ('reports:reportFilterPanel', None), ('reports:reportInstancePage', None), ('reports:reportPage', None), ('reports:reportSidebar', None), ('reports:roleHierarchyTree', None), ('reports:roleHierarchyTreeBaseButton', None), ('reports:roleHierarchyTreeLeaf', None), ('reports:roleHierarchyTreeLoadButton', None), ('reports:roleHierarchyTreeNode', None), ('reports:settingsPanel', None), ('reports:stopTrendingDialogFooter', None), ('reports:subscriptionUserLookupDataProvider', None), ('reports:tempDepend', None), ('reports:trendDialog', None), ('reports:trendDialogFooter', None), ('reports:trendReportDetailsDialog', None), ('reports:trendReportDetailsDialogFooter', None), ('reports:trendScheduleSelector', None), ('reports:warningPanel', None), ('reports:webtemplate', None), ('runtime_all_walkthroughs:orchestrationPlayerPrompt', None), ('runtime_all_walkthroughs:player', None), ('runtime_all_walkthroughs:playerCallout', None), ('runtime_all_walkthroughs:playerDynamic', None), ('runtime_all_walkthroughsTest:customAction', None), ('runtime_all_walkthroughsTest:locatorizedSubComponent', None), ('runtime_all_walkthroughsTest:playerEnvironment', None), ('runtime_appointmentbooking:appointmentCardExpandedPanel', None), ('runtime_appointmentbooking:appointmentCollapsedCard', None), ('runtime_appointmentbooking:appointmentsBookedCard', None), ('runtime_appointmentbooking:appointmentsBookedCardDesign', None), ('runtime_appointmentbooking:cancelApp', None), ('runtime_appointmentbooking:createOperatingHours', None), ('runtime_appointmentbooking:flowApptType', None), ('runtime_appointmentbooking:flowCandidate', None), ('runtime_appointmentbooking:flowConfirm', None), ('runtime_appointmentbooking:flowLocation', None), ('runtime_appointmentbooking:flowReview', None), ('runtime_appointmentbooking:flowReviewTester', None), ('runtime_appointmentbooking:flowTimeslot', None), ('runtime_appointmentbooking:flowTimeslotTester', None), ('runtime_appointmentbooking:flowTriage', None), ('runtime_appointmentbooking:flowWorkType', None), ('runtime_appointmentbooking:lightningSchedulerLookupDataProvider', None), ('runtime_appointmentbooking:lightningSchedulerSetup', None), ('runtime_appointmentbooking:lightningSchedulerSetupAssistant', None), ('runtime_appointmentbooking:lightningSchedulerTrailhead', None), ('runtime_appointmentbooking:massAssignmentDateTime', None), ('runtime_appointmentbooking:modalFooter', None), ('runtime_appointmentbooking:operatingHours', None), ('runtime_appointmentbooking:operatingHoursDesign', None), ('runtime_appointmentbooking:operatingHoursDisplayTable', None), ('runtime_appointmentbooking:resourceList', None), ('runtime_appointmentbooking:resourceSlot', None), ('runtime_appointmentbooking:resourceSlotTester', None), ('runtime_appointmentbooking:schedulerImageSlider', None), ('runtime_appointmentbooking:setupAssistantStep', None), ('runtime_appointmentbooking:setupAssistantStepsSection', None), ('runtime_appointmentbooking:suggestedResources', None), ('runtime_appointmentbooking:timeSlotsCalendar', None), ('runtime_appointmentbooking:userCard', None), ('runtime_appointmentbooking:visualPicker', None), ('runtime_appointmentbooking:visualPickerCard', None), ('runtime_approval_process:action', None), ('runtime_approval_process:actionContent', None), ('runtime_approval_process:basePanel', None), ('runtime_approval_process:commentsCard', None), ('runtime_approval_process:navigateToPendingApprovalList', None), ('runtime_approval_process:outputLookup', None), ('runtime_approval_process:outputName', None), ('runtime_approval_process:outputNameAndStatus', None), ('runtime_approval_process:outputStatus', None), ('runtime_approval_process:pendingApprovalCard', None), ('runtime_approval_process:pendingApprovalCardRow', None), ('runtime_approval_process:viewComments', None), ('runtime_cdp:activationPartnerProfileWizardLanding', None), ('runtime_cdp:activationTargetEditAction', None), ('runtime_cdp:dataConnectorDetails', None), ('runtime_cdp:dataMappingDetails', None), ('runtime_cdp:dataModelTab', None), ('runtime_cdp:dataSourceConfig', None), ('runtime_cdp:dataStreamDataModelStats', None), ('runtime_cdp:dataStreamDataSourceProperties', None), ('runtime_cdp:dataStreamExtendedDataPackage', None), ('runtime_cdp:dataStreamMappingContainer', None), ('runtime_cdp:dataStreamMassDeleteComponent', None), ('runtime_cdp:dataStreamRefreshDayOfMonth', None), ('runtime_cdp:dataStreamRefreshDayOfWeek', None), ('runtime_cdp:dataStreamSetupDialog', None), ('runtime_cdp:dataStreamSetupWizard', None), ('runtime_cdp:dataStreamSourceWizard', None), ('runtime_cdp:dataStreamStandardDataPackage', None), ('runtime_cdp:dataStreamStatus', None), ('runtime_cdp:dataStreamTaggingScreen', None), ('runtime_cdp:errorModal', None), ('runtime_cdp:homepageActivations', None), ('runtime_cdp:homepageDemographicInsights', None), ('runtime_cdp:homepageSegments', None), ('runtime_cdp:homepagedataStreams', None), ('runtime_cdp:individualDemoTab', None), ('runtime_cdp:inputRefreshScheduleEndDate', None), ('runtime_cdp:inputRefreshScheduleInterval', None), ('runtime_cdp:inputRefreshScheduleStartDateTime', None), ('runtime_cdp:inputSegmentTarget', None), ('runtime_cdp:insightsDemographicsPopulationChart', None), ('runtime_cdp:marketSegmentDisableAction', None), ('runtime_cdp:marketSegmentDisableModal', None), ('runtime_cdp:marketSegmentEditRulesAction', None), ('runtime_cdp:marketSegmentPublishAction', None), ('runtime_cdp:newActivationPartnerProfileAction', None), ('runtime_cdp:outputSegmentTarget', None), ('runtime_cdp:processAction', None), ('runtime_cdp:recordHomeNameField', None), ('runtime_cdp:segmentWizardLanding', None), ('runtime_commerce_entitlements:entitlementTypeEnabledCheckbox', None), ('runtime_commerce_entitlements:entitlementTypeEnabledToggle', None), ('runtime_commerce_entitlements:massAssignRecords', None), ('runtime_commerce_oms:changesWrapper', None), ('runtime_commerce_oms:deliveryGroup', None), ('runtime_commerce_oms:flowFooter', None), ('runtime_commerce_oms:fulfillmentOrderListView', None), ('runtime_commerce_oms:navigateToOrderDeliveryGroupSummary', None), ('runtime_commerce_oms:navigateToOrderItemSummary', None), ('runtime_commerce_oms:noDataMessage', None), ('runtime_commerce_oms:orderManagementSetup', None), ('runtime_commerce_oms:orderPaymentSummaryListView', None), ('runtime_commerce_oms:orderSummary', None), ('runtime_commerce_oms:orderSummaryListView', None), ('runtime_commerce_oms:productSelection', None), ('runtime_commerce_oms:reviewWrapper', None), ('runtime_commerce_pricing:associatePriceAdjustmentSchedule', None), ('runtime_commerce_pricing:associatePriceAdjustmentScheduleFooter', None), ('runtime_commerce_pricing:createPriceAdjustmentScheduleAction', None), ('runtime_commerce_pricing:editPriceAdjustmentScheduleAction', None), ('runtime_commerce_pricing:priceAdjustmentFlow', None), ('runtime_commerce_pricing:priceAdjustmentScheduleEditStep', None), ('runtime_commerce_pricing:priceAdjustmentTiersEditStep', None), ('runtime_commerce_store:assistantStep', None), ('runtime_commerce_store:buyerAccess', None), ('runtime_commerce_store:createCommerceStore', None), ('runtime_commerce_store:createStoreAndNetwork', None), ('runtime_commerce_store:defaultCurrencyFieldRenderer', None), ('runtime_commerce_store:defaultLanguageFieldRenderer', None), ('runtime_commerce_store:setupStorePage', None), ('runtime_commerce_store:storeActivation', None), ('runtime_commerce_store:storeDetail', None), ('runtime_commerce_store:storeList', None), ('runtime_commerce_store:storeSettings', None), ('runtime_commerce_store:storeSetupAssistant', None), ('runtime_commerce_store:supportedCurrenciesFieldRenderer', None), ('runtime_commerce_store:supportedCurrenciesViewFieldRenderer', None), ('runtime_commerce_store:supportedLanguageFieldRenderer', None), ('runtime_commerce_store:supportedLanguageViewFieldRenderer', None), ('runtime_commerce_store:webstoresInAlohaRouter', None), ('runtime_communities_nba:builderNbaWidget', None), ('runtime_communities_nba:flowScreenNbaWidget', None), ('runtime_communities_nba:nbaCard', None), ('runtime_communities_nba:nbaWidget', None), ('runtime_communities_nba:propositionActionReferenceEdit', None), ('runtime_communities_nba:propositionActionReferenceView', None), ('runtime_communities_nba:propositionImage', None), ('runtime_communities_nba:propositionImageEdit', None), ('runtime_communities_nba:propositionImageView', None), ('runtime_communities_nba:setupStrategy', None), ('runtime_einstein_discovery:einsteinDiscoveryPanel', None), ('runtime_essential_checkout:addOnAddUnits', None), ('runtime_essential_checkout:addOnChooseLicenses', None), ('runtime_essential_checkout:addOnConfirmOrder', None), ('runtime_essential_checkout:addOnDescription', None), ('runtime_essential_checkout:addOnFlow', None), ('runtime_essential_checkout:addOnLoading', None), ('runtime_essential_checkout:buyNowPromptDisplay', None), ('runtime_essential_checkout:cancellationFlow', None), ('runtime_essential_checkout:cancellationInfo', None), ('runtime_essential_checkout:cancellationSuccess', None), ('runtime_essential_checkout:checkoutBillingInfo', None), ('runtime_essential_checkout:checkoutConfirmOrder', None), ('runtime_essential_checkout:checkoutEnterBilling', None), ('runtime_essential_checkout:checkoutEnterUsers', None), ('runtime_essential_checkout:checkoutError', None), ('runtime_essential_checkout:checkoutFlow', None), ('runtime_essential_checkout:checkoutLoading', None), ('runtime_essential_checkout:checkoutSelectPlan', None), ('runtime_essential_checkout:checkoutSubscription', None), ('runtime_essential_checkout:checkoutSuccess', None), ('runtime_essential_checkout:classicCheckoutPage', None), ('runtime_essential_checkout:classicCheckoutPageWrapper', None), ('runtime_essential_checkout:creditCard', None), ('runtime_essential_checkout:cybersource', None), ('runtime_essential_checkout:holdStatusPromptDisplay', None), ('runtime_essential_checkout:holdStatusPromptWrapper', None), ('runtime_essential_checkout:inAppCheckoutPage', None), ('runtime_essential_checkout:inputNumber', None), ('runtime_essential_checkout:manageLicensesConfirmOrder', None), ('runtime_essential_checkout:manageLicensesDeactivateUsers', None), ('runtime_essential_checkout:manageLicensesEnterUsers', None), ('runtime_essential_checkout:manageLicensesFlow', None), ('runtime_essential_checkout:manageLicensesLoading', None), ('runtime_essential_checkout:manageSubscriptionError', None), ('runtime_essential_checkout:manageSubscriptionPage', None), ('runtime_essential_checkout:mastercardDiscountLoading', None), ('runtime_essential_checkout:modifyAddOnConfirmOrder', None), ('runtime_essential_checkout:modifyAddOnFlow', None), ('runtime_essential_checkout:modifyAddOnLoading', None), ('runtime_essential_checkout:modifyAddOnUnits', None), ('runtime_essential_checkout:setupManageLicensesFlow', None), ('runtime_essential_checkout:setupManageLicensesLoadData', None), ('runtime_essential_checkout:subscriptionDetail', None), ('runtime_essential_checkout:updatePaymentInfo', None), ('runtime_essential_checkout:updatePaymentInfoFlow', None), ('runtime_essential_checkout:updatePaymentInfoLoading', None), ('runtime_essential_checkout:upgradePlanDetail', None), ('runtime_essential_checkout:upgradePlanFlow', None), ('runtime_essential_checkout:upgradePlanLoading', None), ('runtime_essentials_marketing:labelDataService', None), ('runtime_essentials_next:CRUDObjectActionsService', None), ('runtime_essentials_next:actionService', None), ('runtime_essentials_next:activityTimelineDataService', None), ('runtime_essentials_next:chatProviderService', None), ('runtime_essentials_next:dataBusServiceWrapper', None), ('runtime_essentials_next:desktopPageWrapper', None), ('runtime_essentials_next:helpMenuService', None), ('runtime_essentials_next:listViewDataService', None), ('runtime_essentials_next:navBadgeService', None), ('runtime_essentials_next:ownerLookupService', None), ('runtime_essentials_next:relatedDealsService', None), ('runtime_essentials_next:rightSideWrapper', None), ('runtime_essentials_next:subscriptionOverviewService', None), ('runtime_essentials_next:systemMessageService', None), ('runtime_essentials_next:trialHeaderService', None), ('runtime_essentials_next:walkthroughPlayer', None), ('runtime_essentials_next:walkthroughPlayerCallout', None), ('runtime_essentials_next:walkthroughPlayerDynamic', None), ('runtime_essentials_next:walkthroughTestCustomAction', None), ('runtime_essentials_next:walkthroughTestLocatorizedSubComponent', None), ('runtime_essentials_next:walkthroughTestPlayerEnvironment', None), ('runtime_industries_actionplan:actionPlanPanel', None), ('runtime_industries_actionplan:addDocumentChecklistItemModal', None), ('runtime_industries_actionplan:addReusableTask', None), ('runtime_industries_actionplan:addTaskModal', None), ('runtime_industries_actionplan:assessmentTaskAddTaskModal', None), ('runtime_industries_actionplan:assessmentTaskItemListCardRecord', None), ('runtime_industries_actionplan:baseItemListCard', None), ('runtime_industries_actionplan:checklistItemList', None), ('runtime_industries_actionplan:checklistItemManager', None), ('runtime_industries_actionplan:highlightsPanel', None), ('runtime_industries_actionplan:highlightsPanelDesign', None), ('runtime_industries_actionplan:itemListCard', None), ('runtime_industries_actionplan:itemListCardDCI', None), ('runtime_industries_actionplan:itemListCardDesign', None), ('runtime_industries_actionplan:itemListCardRecord', None), ('runtime_industries_actionplan:itemListCardRecordDocumentChecklistItem', None), ('runtime_industries_actionplan:itemListCardRecordTask', None), ('runtime_industries_actionplan:listCard', None), ('runtime_industries_actionplan:listCardDesign', None), ('runtime_industries_actionplan:listCardRecord', None), ('runtime_industries_actionplan:taskList', None), ('runtime_industries_actionplan:taskManager', None), ('runtime_industries_actionplan:templateItemManagerDesign', None), ('runtime_industries_actionplan:versionDataManager', None), ('runtime_industries_fsc:relationshipVisualizer', None), ('runtime_industries_healthcare:associationCard', None), ('runtime_industries_healthcare:associationCardGrid', None), ('runtime_industries_healthcare:associationCardTask', None), ('runtime_industries_healthcare:associationList', None), ('runtime_industries_healthcare:associationRelatedRecords', None), ('runtime_industries_healthcare:careProgramGrid', None), ('runtime_industries_healthcare:consentListViewSection', None), ('runtime_industries_healthcare:consentListViewSectionItem', None), ('runtime_industries_healthcare:createAndViewTasks', None), ('runtime_industries_healthcare:createAssociation', None), ('runtime_industries_healthcare:documentViewer', None), ('runtime_industries_healthcare:documentViewerToolbar', None), ('runtime_industries_healthcare:emptyState', None), ('runtime_industries_healthcare:entityLookup', None), ('runtime_industries_healthcare:entitySelector', None), ('runtime_industries_healthcare:flowFooter', None), ('runtime_industries_healthcare:programCard', None), ('runtime_industries_healthcare:selectAssociation', None), ('runtime_industries_insurance:claimAdjusterContainer', None), ('runtime_industries_insurance:emptyState', None), ('runtime_industries_insurance:genericOutputField', None), ('runtime_industries_insurance:hoverListPanel', None), ('runtime_industries_insurance:keyMetric', None), ('runtime_industries_insurance:keyMetricsDesignInfo', None), ('runtime_industries_insurance:lifeEvent', None), ('runtime_industries_insurance:lifeEventsDesignInfo', None), ('runtime_industries_insurance:message', None), ('runtime_industries_insurance:performanceCharts', None), ('runtime_industries_insurance:policies', None), ('runtime_industries_insurance:policiesKPI', None), ('runtime_industries_insurance:policiesKPIElement', None), ('runtime_industries_insurance:policyTypeAccordion', None), ('runtime_industries_insurance:policyTypesContainer', None), ('runtime_industries_insurance:popover', None), ('runtime_industries_insurance:quickActionPanel', None), ('runtime_industries_lending:flowButton', None), ('runtime_industries_lending:flowCheckbox', None), ('runtime_industries_lending:flowFooter', None), ('runtime_industries_lending:flowPickArray', None), ('runtime_industries_lending:flowPickEnum', None), ('runtime_industries_loyalty:addPartner', None), ('runtime_industries_loyalty:addProgramCurrency', None), ('runtime_industries_loyalty:addProgramTier', None), ('runtime_industries_loyalty:addProgramTierGroup', None), ('runtime_industries_loyalty:assignProductCategories', None), ('runtime_industries_loyalty:assignProductPopup', None), ('runtime_industries_loyalty:assignProducts', None), ('runtime_industries_loyalty:associatePartnerPopup', None), ('runtime_industries_loyalty:associatePartnerProduct', None), ('runtime_industries_loyalty:currencyListView', None), ('runtime_industries_loyalty:loyaltyLVMDataProvider', None), ('runtime_industries_loyalty:loyaltyMemberHome', None), ('runtime_industries_loyalty:loyaltyMemberHomeNav', None), ('runtime_industries_loyalty:loyaltyPartnerHome', None), ('runtime_industries_loyalty:loyaltyPartnerHomeNav', None), ('runtime_industries_loyalty:loyaltyPartnerProductList', None), ('runtime_industries_loyalty:loyaltyProgram', None), ('runtime_industries_loyalty:loyaltyProgramMemberList', None), ('runtime_industries_loyalty:loyaltyProgramPartnerList', None), ('runtime_industries_loyalty:loyaltyProgramProductList', None), ('runtime_industries_loyalty:loyaltyTierGroupView', None), ('runtime_industries_loyalty:loyaltyUtil', None), ('runtime_industries_loyalty:newLoyaltyProgramCurrency', None), ('runtime_industries_loyalty:partnerDetailsBody', None), ('runtime_industries_loyalty:partnerHeaderContainer', None), ('runtime_industries_loyalty:programDetails', None), ('runtime_industries_loyalty:programDetailsBody', None), ('runtime_industries_loyalty:programTierGroupList', None), ('runtime_industries_loyalty:tierListView', None), ('runtime_industries_publicsector:deleteMeFirst', None), ('runtime_industries_publicsector:viewInspectionHistoryContainer', None), ('runtime_industries_referralscoring:emptyState', None), ('runtime_industries_referralscoring:topReferralHeader', None), ('runtime_industries_referralscoring:topReferralItem', None), ('runtime_industries_referralscoring:topReferralList', None), ('runtime_industries_referralscoring:topReferralSelection', None), ('runtime_industries_referralscoring:topReferrals', None), ('runtime_industries_retailexecution:retailExecutionContainer', None), ('runtime_industries_retailexecution:retailExecutionSettings', None), ('runtime_industries_retailexecution:visitRecommendation', None), ('runtime_industries_utilizationmanagement:careRequestDetailPanelWrapper', None), ('runtime_industries_utilizationmanagement:careRequestFormSection', None), ('runtime_industries_utilizationmanagement:createCareRequestForm', None), ('runtime_industries_visit:attachmentListManager', None), ('runtime_industries_visit:notesListManager', None), ('runtime_industries_visit:questionsManager', None), ('runtime_industries_visit:searchManager', None), ('runtime_industries_visit:visitActionManager', None), ('runtime_industries_visit:visitDummy', None), ('runtime_industries_visit:visitOverviewManager', None), ('runtime_industries_visit:visitTaskListManager', None), ('runtime_industries_visit:visitsListManager', None), ('runtime_industries_visit:visitsMapDataManager', None), ('runtime_ladybug:ladybug', None), ('runtime_ladybug:ladybugContent', None), ('runtime_ladybug:ladybugContentTrigger', None), ('runtime_marketing_btobma:addToSegment', None), ('runtime_marketing_btobma:b2bma_container', None), ('runtime_marketing_btobma:b2bma_home', None), ('runtime_marketing_btobma:embeddedCampaignDashboard', None), ('runtime_marketing_btobma:engagementProgramView', None), ('runtime_marketing_btobma:engagementProgramViewSubstitute', None), ('runtime_marketing_btobma:iframe', None), ('runtime_marketing_btobma:marketingLinkContentTargetUrlInput', None), ('runtime_marketing_btobma:nav', None), ('runtime_marketing_btobma:navItem', None), ('runtime_marketing_btobma:objectHome', None), ('runtime_marketing_btobma:piFrame', None), ('runtime_marketing_btobma:publishPardotContentDialog', None), ('runtime_marketing_btobma:snippetDeveloperNameField', None), ('runtime_marketing_btobma:snippetInputRichText', None), ('runtime_marketing_btobma:snippetNameField', None), ('runtime_mc2:auraPlaceholder', None), ('runtime_mobilesapp:businessCardReader', None), ('runtime_mobilesapp:businessCardReaderInfoComponent', None), ('runtime_platform_actions:actionListEditor', None), ('runtime_platform_actions:actionListEditorItemEditor', None), ('runtime_platform_actions:quickActionWrapper', None), ('runtime_platform_optimizer:govCloudPrompt', None), ('runtime_platform_optimizer:orgMetricObjectHome', None), ('runtime_platform_optimizer:orgMetricRecordHome', None), ('runtime_platform_optimizer:runOptimizerAction', None), ('runtime_platform_sfdx:linkNamespace', None), ('runtime_platform_sfdx:modalPanel', None), ('runtime_platform_testhistory:apexTestExecutionPage', None), ('runtime_platform_testhistory:fieldGrouper', None), ('runtime_platform_testhistory:outputDuration', None), ('runtime_platform_testhistory:selectApexJob', None), ('runtime_platformservices_condBuilder:conditionList', None), ('runtime_platformservices_condBuilder:conditionListRow', None), ('runtime_platformservices_condBuilder:inputOperator', None), ('runtime_platformservices_condBuilder:inputValue', None), ('runtime_platformservices_transactionSecurity:alohaRouter', None), ('runtime_platformservices_transactionSecurity:conditionLogicInput', None), ('runtime_platformservices_transactionSecurity:enableTransactionSecurity', None), ('runtime_platformservices_transactionSecurity:home', None), ('runtime_platformservices_transactionSecurity:homeContainer', None), ('runtime_platformservices_transactionSecurity:policyApexSetupFlowEditor', None), ('runtime_platformservices_transactionSecurity:policyConditionBuilderSetupFlowEditor', None), ('runtime_platformservices_transactionSecurity:policyDetail', None), ('runtime_platformservices_transactionSecurity:policyDetailCard', None), ('runtime_platformservices_transactionSecurity:policyEventNameInput', None), ('runtime_platformservices_transactionSecurity:policyFlowActionNamingStep', None), ('runtime_platformservices_transactionSecurity:policyFlowEventApexChooserStep', None), ('runtime_platformservices_transactionSecurity:policyFlowEventNameConditionBuilderStep', None), ('runtime_platformservices_transactionSecurity:policyLegacyAndRealTimeEventsSetupFlow', None), ('runtime_platformservices_transactionSecurity:policyLegacySetupFlow', None), ('runtime_platformservices_transactionSecurity:policyList', None), ('runtime_platformservices_transactionSecurity:policyNameDescriptionInput', None), ('runtime_platformservices_transactionSecurity:policyTypeChooserStep', None), ('runtime_platformservices_transactionSecurity:policyTypeOption', None), ('runtime_platformservices_transactionSecurity:preferencePage', None), ('runtime_platformservices_transactionSecurity:transactionSecurityModal', None), ('runtime_platformservices_transactionSecurity:welcomeMat', None), ('runtime_quip:enableIsotope', None), ('runtime_quip:isotopeConfiguration', None), ('runtime_quip:isotopeCopyableLinkTile', None), ('runtime_quip:isotopeEmailTemplatePanelContent', None), ('runtime_quip:isotopeEmailTemplateTile', None), ('runtime_quip:isotopeSetupPage', None), ('runtime_quip:isotopeSetupTile', None), ('runtime_quip:outputQuipDocumentType', None), ('runtime_quip:quipAuthPanel', None), ('runtime_quip:quipCardLightning', None), ('runtime_quip:quipCardLightningMobile', None), ('runtime_quip:quipCardRecommendations', None), ('runtime_quip:quipItemSuggested', None), ('runtime_quip:quipItemsContainer', None), ('runtime_quip:quipNotifications', None), ('runtime_quip:quipSetupAppBuilderStep', None), ('runtime_quip:quipSetupConfigurePermissionsPanel', None), ('runtime_quip:quipSetupConfigurePermissionsStep', None), ('runtime_quip:quipSetupConfigureXdsStep', None), ('runtime_quip:quipSetupEnableQuipPanel', None), ('runtime_quip:quipSetupHome', None), ('runtime_quip:quipSetupNotComplete', None), ('runtime_quip:quipSetupOptionalSettingsPanel', None), ('runtime_quip:quipSetupProvisioningStep', None), ('runtime_quip:quipSetupStartTrialPanel', None), ('runtime_quip:quipSetupStatusItem', None), ('runtime_quip:relatedQuipItems', None), ('runtime_quip:rollupActions', None), ('runtime_quip:suggestedQuipDocuments', None), ('runtime_quip:viewAllLinkedQuipItems', None), ('runtime_quip:viewAllRollupQuipItems', None), ('runtime_quip:viewAllTabContent', None), ('runtime_retail_runtime:baseDashboardTemplate', None), ('runtime_retail_runtime:createRecordButton', None), ('runtime_retail_runtime:customerProfileActionMenu', None), ('runtime_retail_runtime:customerProfileSearch', None), ('runtime_retail_runtime:customerSearchResults', None), ('runtime_retail_runtime:emptyState', None), ('runtime_retail_runtime:retailCustomerProfile', None), ('runtime_retail_runtime:retailOrderList', None), ('runtime_retail_runtime:retailOrderListLVMDataManager', None), ('runtime_retail_runtime:retailOrderListLink', None), ('runtime_retail_runtime:retailOrderPayments', None), ('runtime_retail_runtime:retailOrderShipments', None), ('runtime_retail_runtime:retailOrderSummary', None), ('runtime_retail_runtime:retailOrderTimeStamp', None), ('runtime_retail_runtime:retailOrderTotals', None), ('runtime_retail_runtime:retailServiceAgentContainer', None), ('runtime_retail_runtime:template', None), ('runtime_rtc:actions', None), ('runtime_rtc:googleSetupPage', None), ('runtime_rtc:googleSheetsUserSettings', None), ('runtime_rtc:googleSheetsUserSettingsPage', None), ('runtime_rtc:launchRtc', None), ('runtime_rtc:mobilePresence', None), ('runtime_rtc:mobileRtcContainer', None), ('runtime_rtc:oauthRedirect', None), ('runtime_rtc:presenceStatus', None), ('runtime_rtc:recordChatRoomCreate', None), ('runtime_rtc:rtcConversation', None), ('runtime_rtc:rtcDiscoveryBanner', None), ('runtime_rtc:rtcGlobalSignIn', None), ('runtime_rtc:rtcPreferenceCommon', None), ('runtime_rtc:rtcPreferenceSetup', None), ('runtime_rtc:rtcPresenceBase', None), ('runtime_rtc:rtcPresenceDesignInfo', None), ('runtime_rtc:rtcPresenceDesignSubstitute', None), ('runtime_rtc:rtcUserSettingsPage', None), ('runtime_rtc:signin', None), ('runtime_rtc:signout', None), ('runtime_rtc_spark:recentConversation', None), ('runtime_rtc_spark:signin', None), ('runtime_rtc_spark:signout', None), ('runtime_rtc_spark:spaceRow', None), ('runtime_rtc_spark:spaceStation', None), ('runtime_rtc_spark:spacesAutocompleteDataProvider', None), ('runtime_rtc_spark:sparkConversation', None), ('runtime_rtc_spark:sparkConversationSetup', None), ('runtime_rtc_spark:sparkDiscoveryBanner', None), ('runtime_rtc_spark:sparkForSalesforce', None), ('runtime_rtc_spark:sparkGlobalSignIn', None), ('runtime_rtc_spark:sparkPresence', None), ('runtime_rtc_spark:sparkPresenceDesignInfo', None), ('runtime_rtc_spark:sparkPresenceDesignSubstitute', None), ('runtime_rtc_spark:sparkRoom', None), ('runtime_rtc_spark:sparkSetupPage', None), ('runtime_rtc_spark:sparkSpaces', None), ('runtime_rtc_spark:sparkSpacesDesignSubstitute', None), ('runtime_rtc_spark:sparkUserSettings', None), ('runtime_rtc_spark:webExMeetingView', None), ('runtime_rtc_spark:webexComposer', None), ('runtime_rtc_spark:webexComposerDesignSubstitute', None), ('runtime_rtc_spark:webexDesignInfo', None), ('runtime_sales_activities:activityPanel', None), ('runtime_sales_activities:activityPanelDesignInfo', None), ('runtime_sales_activities:activityRecommendedConnections', None), ('runtime_sales_activities:activityRecommendedConnectionsDesignSubstitute', None), ('runtime_sales_activities:activityRecommendedConnectionsEntry', None), ('runtime_sales_activities:activityRecommendedConnectionsListCard', None), ('runtime_sales_activities:activityRecommendedConnectionsListView', None), ('runtime_sales_activities:activityRecommendedConnectionsWidget', None), ('runtime_sales_activities:activityRecurrenceDayOfWeek', None), ('runtime_sales_activities:activityRecurrenceDayOfYear', None), ('runtime_sales_activities:activityRecurrenceDayOfYearTest', None), ('runtime_sales_activities:activityRecurrenceDaysMonthlyMenu', None), ('runtime_sales_activities:activityRecurrenceDaysMonthlyMenuTest', None), ('runtime_sales_activities:activityRecurrenceIntervalMenu', None), ('runtime_sales_activities:activityRecurrenceIntervalMenuTest', None), ('runtime_sales_activities:activityRelatedListRow', None), ('runtime_sales_activities:activityRelatedListStencil', None), ('runtime_sales_activities:activityReminderSettings', None), ('runtime_sales_activities:activitySubject', None), ('runtime_sales_activities:activitySubjectListView', None), ('runtime_sales_activities:activityTime', None), ('runtime_sales_activities:activityTimeline2EmailStreamDetail', None), ('runtime_sales_activities:activityTimeline2FilterMenu', None), ('runtime_sales_activities:activityTimeline2InsightPopover', None), ('runtime_sales_activities:activityTimelineActivityGroup', None), ('runtime_sales_activities:activityTimelineBaseRow', None), ('runtime_sales_activities:activityTimelineEACPopover', None), ('runtime_sales_activities:activityTimelineEmailTracking', None), ('runtime_sales_activities:activityTimelineEventStreamAttendees', None), ('runtime_sales_activities:activityTimelineEventStreamDetail', None), ('runtime_sales_activities:activityTimelineEventStreamDetailStencil', None), ('runtime_sales_activities:activityTimelineEventStreamTime', None), ('runtime_sales_activities:activityTimelineFixedLayout', None), ('runtime_sales_activities:activityTimelineFixedLayoutExpandedSiqEmail', None), ('runtime_sales_activities:activityTimelineFixedLayoutExpandedSiqEvent', None), ('runtime_sales_activities:activityTimelineFixedLayoutExpandedTaskEventStencil', None), ('runtime_sales_activities:activityTimelineFixedStencil', None), ('runtime_sales_activities:activityTimelineInsightLabel', None), ('runtime_sales_activities:activityTimelineInsights', None), ('runtime_sales_activities:activityTimelineLabel', None), ('runtime_sales_activities:activityTimelineRowExpand', None), ('runtime_sales_activities:activityTimelineVirtualList', None), ('runtime_sales_activities:activityViewAllContainer', None), ('runtime_sales_activities:activityViewAllError', None), ('runtime_sales_activities:activityViewAllList', None), ('runtime_sales_activities:activityViewAllTemplate', None), ('runtime_sales_activities:baseActivityRecurringCreate', None), ('runtime_sales_activities:baseActivityReminderView', None), ('runtime_sales_activities:baseTaskStatus', None), ('runtime_sales_activities:composerPageBlockSectionEdit', None), ('runtime_sales_activities:emailStreamDetailInsights', None), ('runtime_sales_activities:emailStreamReplyActions', None), ('runtime_sales_activities:eventRecurrenceDayOfWeek', None), ('runtime_sales_activities:eventRecurrenceDayOfYear', None), ('runtime_sales_activities:eventRecurrenceDaysMonthlyMenu', None), ('runtime_sales_activities:eventRecurrenceIntervalMenu', None), ('runtime_sales_activities:eventRecurrenceStartEnd', None), ('runtime_sales_activities:eventRecurring2PatternEdit', None), ('runtime_sales_activities:eventRecurring2PatternView', None), ('runtime_sales_activities:eventRecurringLegacyPatternView', None), ('runtime_sales_activities:eventRecurringPatternEdit', None), ('runtime_sales_activities:eventRecurringPatternView', None), ('runtime_sales_activities:eventReminderCreate', None), ('runtime_sales_activities:eventReminderView', None), ('runtime_sales_activities:followUpHandler', None), ('runtime_sales_activities:manyWhoInputLookup', None), ('runtime_sales_activities:manyWhoName', None), ('runtime_sales_activities:manyWhoNameCompact', None), ('runtime_sales_activities:multipleOwners', None), ('runtime_sales_activities:outputActivityDateTime', None), ('runtime_sales_activities:outputLookupWithAlternateDetailId', None), ('runtime_sales_activities:requestAccessSIQ', None), ('runtime_sales_activities:requestAccessSIQFixedLayout', None), ('runtime_sales_activities:singleOwner', None), ('runtime_sales_activities:siqCherrypickingLink', None), ('runtime_sales_activities:siqCherrypickingSettings', None), ('runtime_sales_activities:siqCherrypickingSettingsConfirmationBody', None), ('runtime_sales_activities:siqCherrypickingSettingsConfirmationFooter', None), ('runtime_sales_activities:statelessTaskStatus', None), ('runtime_sales_activities:taskActivityDateOverride', None), ('runtime_sales_activities:taskActivityDateOverrideMobile', None), ('runtime_sales_activities:taskBorderLayout', None), ('runtime_sales_activities:taskCommon', None), ('runtime_sales_activities:taskCompactStencil', None), ('runtime_sales_activities:taskContent', None), ('runtime_sales_activities:taskContentFields', None), ('runtime_sales_activities:taskContentInner', None), ('runtime_sales_activities:taskDetailPanelWrapper', None), ('runtime_sales_activities:taskDetails', None), ('runtime_sales_activities:taskDueDate', None), ('runtime_sales_activities:taskFilterMenuDesktop', None), ('runtime_sales_activities:taskHighlights', None), ('runtime_sales_activities:taskListDataManager', None), ('runtime_sales_activities:taskListHeader', None), ('runtime_sales_activities:taskListHeaderBase', None), ('runtime_sales_activities:taskListHeaderPhone', None), ('runtime_sales_activities:taskListViewsPopover', None), ('runtime_sales_activities:taskNewButton', None), ('runtime_sales_activities:taskOverdue', None), ('runtime_sales_activities:taskQuickClose', None), ('runtime_sales_activities:taskQuickCreateManager', None), ('runtime_sales_activities:taskRecurrenceDayOfWeek', None), ('runtime_sales_activities:taskRecurrenceDayOfYear', None), ('runtime_sales_activities:taskRecurrenceDaysMonthlyMenu', None), ('runtime_sales_activities:taskRecurrenceIntervalMenu', None), ('runtime_sales_activities:taskRecurrenceStartEnd', None), ('runtime_sales_activities:taskRecurringCreate', None), ('runtime_sales_activities:taskRecurringCreateLatestEndDateCalculator', None), ('runtime_sales_activities:taskRecurringView', None), ('runtime_sales_activities:taskReminderCreate', None), ('runtime_sales_activities:taskReminderView', None), ('runtime_sales_activities:taskRow', None), ('runtime_sales_activities:taskSplitList', None), ('runtime_sales_activities:taskSplitViewListRecord', None), ('runtime_sales_activities:taskStatus', None), ('runtime_sales_activities:taskStatusAction', None), ('runtime_sales_activities:taskStatusBroker', None), ('runtime_sales_activities:taskStatusButton', None), ('runtime_sales_activities:taskStatusModal', None), ('runtime_sales_activities:tempDepend', None), ('runtime_sales_activities:timelineFixedStencilWrapper', None), ('runtime_sales_activities:todayTaskContainer', None), ('runtime_sales_activities:todayTasksCardDataManager', None), ('runtime_sales_activities:todayTasksCardDataProvider', None), ('runtime_sales_activities:todayTasksFilter', None), ('runtime_sales_activities:todayTasksList', None), ('runtime_sales_ade:acceptSuggestion', None), ('runtime_sales_ade:rejectSuggestion', None), ('runtime_sales_ade:reviewSuggestion', None), ('runtime_sales_billingpayments:cardPaymentMethod', None), ('runtime_sales_cadence:addToCadence', None), ('runtime_sales_cadence:cadenceStepsCard', None), ('runtime_sales_cadence:cadenceStepsCardStepList', None), ('runtime_sales_cadence:cadenceStepsCardStepListItem', None), ('runtime_sales_cadence:cloneCadence', None), ('runtime_sales_cadence:createCadence', None), ('runtime_sales_cadence:deleteCadence', None), ('runtime_sales_cadence:openCadenceBuilder', None), ('runtime_sales_cadence:removeAllTargetsFromCadence', None), ('runtime_sales_cadence:removeFromCadence', None), ('runtime_sales_cadencebuilder:cadenceBuilder', None), ('runtime_sales_campaign:addMember', None), ('runtime_sales_campaign:addMemberStatus', None), ('runtime_sales_campaign:changeDefaultStatus', None), ('runtime_sales_campaign:influenceRelatedList', None), ('runtime_sales_campaign:massAddMember', None), ('runtime_sales_campaign:massRemoveMembers', None), ('runtime_sales_campaign:massUpdateMemberStatus', None), ('runtime_sales_campaign:memberRecordType', None), ('runtime_sales_campaign:memberRelatedList', None), ('runtime_sales_campaign:memberStatus', None), ('runtime_sales_campaign:metricsPanel', None), ('runtime_sales_campaign:percentageMetricsCard', None), ('runtime_sales_campaign:rawNumMetricsCard', None), ('runtime_sales_campaign:relatedAddMember', None), ('runtime_sales_commerce:activateDeactivateTerminateCommerceEntities', None), ('runtime_sales_commerce:activateOrderEntity', None), ('runtime_sales_commerce:busopEntityNameLookup', None), ('runtime_sales_commerce:createBillingScheduleFromOrderItem', None), ('runtime_sales_dedupe:bulkDedupeJobLink', None), ('runtime_sales_dedupe:bulkDedupeJobList', None), ('runtime_sales_dedupe:bulkDedupeJobListDataProvider', None), ('runtime_sales_dedupe:bulkDedupeJobListView', None), ('runtime_sales_dedupe:bulkDedupeJobResult', None), ('runtime_sales_dedupe:bulkDedupeJobRunnable', None), ('runtime_sales_dedupe:drsParentLink', None), ('runtime_sales_dedupe:initiateBulkJobPanel', None), ('runtime_sales_dedupe:initiateBulkJobSection', None), ('runtime_sales_dedupe:matchedLead', None), ('runtime_sales_dedupe:matchedLeadField', None), ('runtime_sales_dedupe:matchedLeadsDesignInfo', None), ('runtime_sales_dedupe:matchedLeadsDesignSubstitute', None), ('runtime_sales_dedupe:matchedLeadsList', None), ('runtime_sales_dedupe:matchedLeadsPanel', None), ('runtime_sales_dedupe:matchedLeadsWrapper', None), ('runtime_sales_emailtemplateui:basePublisher', None), ('runtime_sales_emailtemplateui:emailTemplateListDataManager', None), ('runtime_sales_emailtemplateui:emailTemplateMergeFieldModal', None), ('runtime_sales_emailtemplateui:emailTemplateObjectHome', None), ('runtime_sales_emailtemplateui:emailToolbar', None), ('runtime_sales_emailtemplateui:enhancedEmailTemplateListDataManager', None), ('runtime_sales_emailtemplateui:enhancedEmailTemplateMergeFieldModal', None), ('runtime_sales_emailtemplateui:enhancedEmailTemplateObjectHome', None), ('runtime_sales_emailtemplateui:enhancedMergeFieldRowTemplate', None), ('runtime_sales_emailtemplateui:inputEmailTemplateBody', None), ('runtime_sales_emailtemplateui:inputEnhancedEmailTemplateBody', None), ('runtime_sales_emailtemplateui:inputEnhancedLetterheadHeaderFooter', None), ('runtime_sales_emailtemplateui:insertEmailTemplateFieldsDialog', None), ('runtime_sales_emailtemplateui:insertEmailTemplateFieldsRecordHomeDialog', None), ('runtime_sales_emailtemplateui:insertEnhancedEmailTemplateFieldsDialog', None), ('runtime_sales_emailtemplateui:mergeFieldModal', None), ('runtime_sales_emailtemplateui:mergeFieldRowTemplate', None), ('runtime_sales_emailtemplateui:mergeableEntityTemplate', None), ('runtime_sales_emailtemplateui:outputEmailTemplateBody', None), ('runtime_sales_emailtemplateui:outputEnhancedEmailTemplateBody', None), ('runtime_sales_emailtemplateui:publisherMergeField', None), ('runtime_sales_emailtemplateui:publisherTemplateInsertDialog', None), ('runtime_sales_emailtemplateui:publisherTemplateQuickLink', None), ('runtime_sales_emailtemplateui:publisherTemplateSaveDialog', None), ('runtime_sales_emailtemplateui:publisherTemplateUpdateDialog', None), ('runtime_sales_emailtemplateui:recordHomeFolder', None), ('runtime_sales_emailtemplateui:recordHomeFolderPicklist', None), ('runtime_sales_emailtemplateui:recordHomeRelatedEntityPicklist', None), ('runtime_sales_emailtemplateui:templateDataProvider', None), ('runtime_sales_emailtemplateui:templateErrors', None), ('runtime_sales_emailtemplateui:templateInsertDialog', None), ('runtime_sales_emailtemplateui:templateInsertDialogFooter', None), ('runtime_sales_emailtemplateui:templateItem', None), ('runtime_sales_emailtemplateui:templateSaveDialog', None), ('runtime_sales_emailtemplateui:templateSaveDialogFooter', None), ('runtime_sales_emailtemplateui:templateSaveDialogHeader', None), ('runtime_sales_emailtemplateui:templateSetup', None), ('runtime_sales_emailtemplateui:templateWarningBanner', None), ('runtime_sales_forecasting:forecastingAdjustmentDialog', None), ('runtime_sales_forecasting:forecastingAdjustmentErrorDialog', None), ('runtime_sales_forecasting:forecastingAdjustmentPopup', None), ('runtime_sales_forecasting:forecastingBellCurve', None), ('runtime_sales_forecasting:forecastingCellCurrency', None), ('runtime_sales_forecasting:forecastingCellNumber', None), ('runtime_sales_forecasting:forecastingCellPredictionCurrency', None), ('runtime_sales_forecasting:forecastingCellQuotaCurrency', None), ('runtime_sales_forecasting:forecastingCellQuotaNumber', None), ('runtime_sales_forecasting:forecastingCellText', None), ('runtime_sales_forecasting:forecastingCurrencyRecordCollection', None), ('runtime_sales_forecasting:forecastingCustomColumnHeader', None), ('runtime_sales_forecasting:forecastingDisplayAsMenu', None), ('runtime_sales_forecasting:forecastingDisplayedFamilyRecordCollection', None), ('runtime_sales_forecasting:forecastingDropdownMenu', None), ('runtime_sales_forecasting:forecastingGenericFeedback', None), ('runtime_sales_forecasting:forecastingGraphPopup', None), ('runtime_sales_forecasting:forecastingGraphView', None), ('runtime_sales_forecasting:forecastingHeader', None), ('runtime_sales_forecasting:forecastingHeroShotChart', None), ('runtime_sales_forecasting:forecastingHeroShotChartGraph', None), ('runtime_sales_forecasting:forecastingHeroShotChartHeader', None), ('runtime_sales_forecasting:forecastingHeroShotChartKPIs', None), ('runtime_sales_forecasting:forecastingHierarchyBreadcrumb', None), ('runtime_sales_forecasting:forecastingHierarchyBreadcrumbNode', None), ('runtime_sales_forecasting:forecastingHierarchyBreadcrumbOverflowNode', None), ('runtime_sales_forecasting:forecastingJumpToListProvider', None), ('runtime_sales_forecasting:forecastingListView', None), ('runtime_sales_forecasting:forecastingListViewProvider', None), ('runtime_sales_forecasting:forecastingMassEditQuotaPanel', None), ('runtime_sales_forecasting:forecastingMyTerritoriesOrForecasts', None), ('runtime_sales_forecasting:forecastingNoAccessSplashMessage', None), ('runtime_sales_forecasting:forecastingNoTerritoryFoundSplashMessage', None), ('runtime_sales_forecasting:forecastingNotEnabledSplashMessage', None), ('runtime_sales_forecasting:forecastingOppLVMDataManager', None), ('runtime_sales_forecasting:forecastingOppListContainer', None), ('runtime_sales_forecasting:forecastingOppListSummary', None), ('runtime_sales_forecasting:forecastingOppListViewManager', None), ('runtime_sales_forecasting:forecastingOrgShapeSplashPage', None), ('runtime_sales_forecasting:forecastingPeriodRange', None), ('runtime_sales_forecasting:forecastingPeriodRecord', None), ('runtime_sales_forecasting:forecastingPredictionColumnHeader', None), ('runtime_sales_forecasting:forecastingPredictionPanel', None), ('runtime_sales_forecasting:forecastingRecordCollection', None), ('runtime_sales_forecasting:forecastingSettingsMenu', None), ('runtime_sales_forecasting:forecastingSharePanel', None), ('runtime_sales_forecasting:forecastingSharePanelSharedGrid', None), ('runtime_sales_forecasting:forecastingTab', None), ('runtime_sales_forecasting:forecastingTreeView', None), ('runtime_sales_forecasting:forecastingTreeViewDataManager', None), ('runtime_sales_forecasting:forecastingTypeRecordCollection', None), ('runtime_sales_forecasting:forecastingTypesNotActiveQuotaSettingsSplashMessage', None), ('runtime_sales_forecasting:forecastingUserRecord', None), ('runtime_sales_forecasting:forecastingUserRoleOrTerritoryRecord', None), ('runtime_sales_forecasting:forecastingUserRolePermNotEnabledMessage', None), ('runtime_sales_hvs:baseHvsListGroupData', None), ('runtime_sales_hvs:callCategoryDispositionFeature', None), ('runtime_sales_hvs:callCategoryDispositionList', None), ('runtime_sales_hvs:callCategoryDispositionListItem', None), ('runtime_sales_hvs:createMyList', None), ('runtime_sales_hvs:highVelocitySalesExpandedSetup', None), ('runtime_sales_hvs:highVelocitySalesSetup', None), ('runtime_sales_hvs:highVelocitySalesSetupFeatureSection', None), ('runtime_sales_hvs:highVelocitySalesSetupPreferenceToggleRow', None), ('runtime_sales_hvs:highVelocitySalesSetupRow', None), ('runtime_sales_hvs:hvsCustomScoreCombobox', None), ('runtime_sales_hvs:hvsFeatureSetupContact', None), ('runtime_sales_hvs:hvsFeatureSetupDialer', None), ('runtime_sales_hvs:hvsFeatureSetupLead', None), ('runtime_sales_hvs:hvsFeatureSetupPersonAccount', None), ('runtime_sales_hvs:hvsFeatureSetupWorkQueue', None), ('runtime_sales_hvs:hvsLearningPath', None), ('runtime_sales_hvs:hvsLearningPathSection', None), ('runtime_sales_hvs:hvsLearningPathStep', None), ('runtime_sales_hvs:hvsOnboardingStepTopic', None), ('runtime_sales_hvs:hvsWelcomeMat', None), ('runtime_sales_hvs:hvsWelcomeMatHeader', None), ('runtime_sales_hvs:hvsWelcomeMatPrompt', None), ('runtime_sales_hvs:hvsWelcomeMatTile', None), ('runtime_sales_hvs:myFeedContainer', None), ('runtime_sales_hvs:myListGroupsContainer', None), ('runtime_sales_hvs:salesAlertManager', None), ('runtime_sales_hvs:viewDetailsDockedPanel', None), ('runtime_sales_hvs:workQueueActionsContainer', None), ('runtime_sales_hvs:workQueueContainer', None), ('runtime_sales_hvs:workQueueFilterContainer', None), ('runtime_sales_hvs:workQueueFilterMenu', None), ('runtime_sales_hvs:workQueueList', None), ('runtime_sales_hvs:workQueueListGroupsContainer', None), ('runtime_sales_insights:accountInsightsContainer', None), ('runtime_sales_insights:accountInsightsDataProvider', None), ('runtime_sales_insights:accountRationaleContainer', None), ('runtime_sales_insights:accountRationaleNewsArticle', None), ('runtime_sales_insights:alohaInsightsContainer', None), ('runtime_sales_insights:beginFreemiumButton', None), ('runtime_sales_insights:campaignInsightsContainer', None), ('runtime_sales_insights:campaignInsightsContainerInfo', None), ('runtime_sales_insights:campaignInsightsRationale', None), ('runtime_sales_insights:contactInsightsContainer', None), ('runtime_sales_insights:contactInsightsContainerInfo', None), ('runtime_sales_insights:contactSuggestionRationaleContainer', None), ('runtime_sales_insights:einsteinHeader', None), ('runtime_sales_insights:einsteinIcon', None), ('runtime_sales_insights:freemiumAdoptionBanner', None), ('runtime_sales_insights:freemiumAdoptionBannerAlohaWrapper', None), ('runtime_sales_insights:freemiumOptInOutPanel', None), ('runtime_sales_insights:genericInsightsDataProvider', None), ('runtime_sales_insights:highlightsPanelScoreRenderer', None), ('runtime_sales_insights:insightActionBeforeExecution', None), ('runtime_sales_insights:insightActivityDetails', None), ('runtime_sales_insights:insightActivityRequestAccess', None), ('runtime_sales_insights:insightsActionButton', None), ('runtime_sales_insights:insightsActionButtonBase', None), ('runtime_sales_insights:insightsActionManager', None), ('runtime_sales_insights:insightsActions', None), ('runtime_sales_insights:insightsBucket', None), ('runtime_sales_insights:insightsCard', None), ('runtime_sales_insights:insightsCardHeader', None), ('runtime_sales_insights:insightsCardHeaderTrigger', None), ('runtime_sales_insights:insightsCards', None), ('runtime_sales_insights:insightsCardsDataProvider', None), ('runtime_sales_insights:insightsContainer', None), ('runtime_sales_insights:insightsContainerInfo', None), ('runtime_sales_insights:insightsDataProvider', None), ('runtime_sales_insights:insightsDetailButtonMobile', None), ('runtime_sales_insights:insightsDetailWrapper', None), ('runtime_sales_insights:insightsEllieButton', None), ('runtime_sales_insights:insightsEllieIcon', None), ('runtime_sales_insights:insightsEmailCard', None), ('runtime_sales_insights:insightsFeedbackDropdown', None), ('runtime_sales_insights:insightsGenericFeedback', None), ('runtime_sales_insights:insightsMessage', None), ('runtime_sales_insights:insightsNewsChatterShare', None), ('runtime_sales_insights:insightsPanelBody', None), ('runtime_sales_insights:insightsPlatformActionSmall', None), ('runtime_sales_insights:insightsRationaleContainer', None), ('runtime_sales_insights:insightsRelevantLatestActivity', None), ('runtime_sales_insights:insightsSFDCEventCard', None), ('runtime_sales_insights:insightsSIQEventCard', None), ('runtime_sales_insights:insightsTaskCard', None), ('runtime_sales_insights:insightsTitleContainer', None), ('runtime_sales_insights:insightsTrendingIcon', None), ('runtime_sales_insights:insightsVoiceCard', None), ('runtime_sales_insights:listViewBehaviorInsightsContainer', None), ('runtime_sales_insights:listViewBehaviorScoreRenderer', None), ('runtime_sales_insights:listViewInsightsContainer', None), ('runtime_sales_insights:listViewScoreRenderer', None), ('runtime_sales_insights:opportunityIQInsightsDataProvider', None), ('runtime_sales_insights:scoreDial', None), ('runtime_sales_insights:topInsight', None), ('runtime_sales_lead:accept', None), ('runtime_sales_lead:convert', None), ('runtime_sales_lead:convertAccountSearchDataProvider', None), ('runtime_sales_lead:convertCreatePanelDesktop', None), ('runtime_sales_lead:convertDesktop', None), ('runtime_sales_lead:convertDesktopConsole', None), ('runtime_sales_lead:convertDupePanelDesktop', None), ('runtime_sales_lead:convertMatchPanelDesktop', None), ('runtime_sales_lead:convertMatchPanelDesktopSearchDataProvider', None), ('runtime_sales_lead:convertModal', None), ('runtime_sales_lead:convertModalFooter', None), ('runtime_sales_lead:convertOpportunityCheckBox', None), ('runtime_sales_lead:convertSectionDesktop', None), ('runtime_sales_lead:convertedCardStencilDesktop', None), ('runtime_sales_lead:convertedConfirmation', None), ('runtime_sales_lead:convertedConfirmationDesktop', None), ('runtime_sales_lead:convertedConfirmationFooter', None), ('runtime_sales_lead:convertedConfirmationFooterDesktop', None), ('runtime_sales_lead:dupePanelCardStencil', None), ('runtime_sales_lead:dupePanelCardStencilTester', None), ('runtime_sales_lead:leadConvertSettingsLoadingError', None), ('runtime_sales_lead:leadConvertSettingsPanel', None), ('runtime_sales_lead:linkedInLeadGen', None), ('runtime_sales_lead:linkedInLeadGenAdAccounts', None), ('runtime_sales_lead:linkedInLeadGenFieldMapping', None), ('runtime_sales_lead:linkedInLeadGenFieldMappingAutocomplete', None), ('runtime_sales_lead:linkedInLeadGenFieldMappingBasic', None), ('runtime_sales_lead:linkedInLeadGenFieldMappingDataProvider', None), ('runtime_sales_lead:linkedInLeadGenMapping', None), ('runtime_sales_lead:linkedInLeadGenMappingSection', None), ('runtime_sales_lead:linkedInLeadGenSetup', None), ('runtime_sales_lead:notConvertedToastMessage', None), ('runtime_sales_lead:pathAssistant', None), ('runtime_sales_lead:pillContainerAutoComplete', None), ('runtime_sales_lead:recordTypeOutputText', None), ('runtime_sales_leadiq:alohaInsightsContainer', None), ('runtime_sales_leadiq:engagementScoreDataProvider', None), ('runtime_sales_leadiq:leadInsights', None), ('runtime_sales_leadiq:leadInsightsAccordionItem', None), ('runtime_sales_leadiq:leadInsightsDataProvider', None), ('runtime_sales_leadiq:leadScoreDial', None), ('runtime_sales_leadiq:leadScoreInfo', None), ('runtime_sales_leadiq:listViewInsightsContainer', None), ('runtime_sales_leadiq:listViewScoreRenderer', None), ('runtime_sales_leadiq:recordHomeInsightsContainer', None), ('runtime_sales_leadiq:recordHomeInsightsContainerInfo', None), ('runtime_sales_merge:findDup', None), ('runtime_sales_merge:manualMergeFlow', None), ('runtime_sales_merge:manualMergeFlowLauncher', None), ('runtime_sales_merge:massManualMergeFlow', None), ('runtime_sales_merge:massManualMergeFlowLauncher', None), ('runtime_sales_merge:mergeCandidatesACRelErrorPage', None), ('runtime_sales_merge:mergeCandidatesList', None), ('runtime_sales_merge:mergeCandidatesListDataProvider', None), ('runtime_sales_merge:mergeCandidatesListPanel', None), ('runtime_sales_merge:mergeCandidatesListSection', None), ('runtime_sales_merge:mergeCandidatesPreviewCard', None), ('runtime_sales_merge:mergeCandidatesPreviewCardDesignInfo', None), ('runtime_sales_merge:mergeCandidatesPreviewCardSubstitute', None), ('runtime_sales_merge:mergeComparison', None), ('runtime_sales_merge:mergeConfirm', None), ('runtime_sales_merge:mergeDesktopConsole', None), ('runtime_sales_merge:mergeFlow', None), ('runtime_sales_merge:mergeFlowBroker', None), ('runtime_sales_merge:mergePanel', None), ('runtime_sales_merge:mergeSearch', None), ('runtime_sales_merge:mergeSearchFlow', None), ('runtime_sales_merge:mergeSearchLauncher', None), ('runtime_sales_merge:multiAddCandidates', None), ('runtime_sales_multiaddedit:filteredSearchDataProvider', None), ('runtime_sales_pathassistant:collapsibleDrawer', None), ('runtime_sales_pathassistant:daysInStage', None), ('runtime_sales_pathassistant:defaultTabHover', None), ('runtime_sales_pathassistant:desktopScroller', None), ('runtime_sales_pathassistant:pathAssistant', None), ('runtime_sales_pathassistant:pathAssistantBody', None), ('runtime_sales_pathassistant:pathAssistantCard', None), ('runtime_sales_pathassistant:pathAssistantCardDesktop', None), ('runtime_sales_pathassistant:pathAssistantCardMobile', None), ('runtime_sales_pathassistant:pathAssistantContainer', None), ('runtime_sales_pathassistant:pathAssistantDesignInfo', None), ('runtime_sales_pathassistant:pathAssistantDesignInfoDialogContent', None), ('runtime_sales_pathassistant:pathAssistantDesignSubstitute', None), ('runtime_sales_pathassistant:pathAssistantErrorOnLoad', None), ('runtime_sales_pathassistant:pathAssistantFields', None), ('runtime_sales_pathassistant:pathAssistantHeader', None), ('runtime_sales_pathassistant:pathAssistantInfo', None), ('runtime_sales_pathassistant:pathAssistantStepClosed', None), ('runtime_sales_pathassistant:pathAssistantTab', None), ('runtime_sales_pathassistant:pathAssistantTabSet', None), ('runtime_sales_pathassistant:tempDepend', None), ('runtime_sales_pathassistant:uiTabBar', None), ('runtime_sales_pathassistant:uiTabItem', None), ('runtime_sales_pipelineboard:genericPipelineDataProvider', None), ('runtime_sales_pipelineboard:pipelineColumnDataProvider', None), ('runtime_sales_pipelineboard:pipelineDataProvider', None), ('runtime_sales_pipelineboard:pipelineView', None), ('runtime_sales_pipelineboard:pipelineViewActionsList', None), ('runtime_sales_pipelineboard:pipelineViewAlertModal', None), ('runtime_sales_pipelineboard:pipelineViewCardItemStencil', None), ('runtime_sales_pipelineboard:pipelineViewCardItemStencilOutputText', None), ('runtime_sales_pipelineboard:pipelineViewCardItemStencilOutputTextArea', None), ('runtime_sales_pipelineboard:pipelineViewCardStencil', None), ('runtime_sales_pipelineboard:pipelineViewCloseConfirmModal', None), ('runtime_sales_pipelineboard:pipelineViewCloseLostTarget', None), ('runtime_sales_pipelineboard:pipelineViewColumn', None), ('runtime_sales_pipelineboard:pipelineViewColumnHeader', None), ('runtime_sales_pipelineboard:pipelineViewColumnModal', None), ('runtime_sales_pipelineboard:pipelineViewConfigurationModal', None), ('runtime_sales_pipelineboard:pipelineViewMultipleRecordTypeTabSet', None), ('runtime_sales_pipelineboard:tempDepend', None), ('runtime_sales_quotes:createPDF', None), ('runtime_sales_quotes:createQuote', None), ('runtime_sales_quotes:quotePDFPreview', None), ('runtime_sales_quotes:quotePDFViewer', None), ('runtime_sales_quotes:quotesSetup', None), ('runtime_sales_quotes:quotesSetupPage', None), ('runtime_sales_quotes:syncQuote', None), ('runtime_sales_quotes:templatePicker', None), ('runtime_sales_see:itemEditorContainer', None), ('runtime_sales_see:productListContainer', None), ('runtime_sales_skype:frameParent', None), ('runtime_sales_skype:signin', None), ('runtime_sales_skype:signout', None), ('runtime_sales_skype:skypeConversation', None), ('runtime_sales_skype:skypeForSalesforce', None), ('runtime_sales_skype:skypeGlobalSignIn', None), ('runtime_sales_skype:skypePresence', None), ('runtime_sales_skype:skypePresenceDesignInfo', None), ('runtime_sales_skype:skypePresenceDesignSubstitute', None), ('runtime_sales_skype:skypeSetup', None), ('runtime_sales_skype:skypeSetupPage', None), ('runtime_sales_skype:skypeUserSettings', None), ('runtime_sales_skype:skypeUserSettingsPage', None), ('runtime_sales_social:socialActionsMenu', None), ('runtime_sales_social:socialConnections', None), ('runtime_sales_social:socialConnectionsList', None), ('runtime_sales_social:socialConnectionsListProvider', None), ('runtime_sales_social:socialFeedItem', None), ('runtime_sales_social:socialList', None), ('runtime_sales_social:socialLoggingManager', None), ('runtime_sales_social:socialPanel', None), ('runtime_sales_social:socialPanelCard', None), ('runtime_sales_social:socialProfilePanel', None), ('runtime_sales_social:socialSearchButtonCard', None), ('runtime_sales_social:socialSearchPanel', None), ('runtime_sales_social:socialSearchPanelProvider', None), ('runtime_sales_social:socialSignInPanel', None), ('runtime_sales_social:tempDepend', None), ('runtime_sales_templatebuilder:baseColumnRow', None), ('runtime_sales_templatebuilder:breadcrumb', None), ('runtime_sales_templatebuilder:builderAppLaunch', None), ('runtime_sales_templatebuilder:button', None), ('runtime_sales_templatebuilder:column', None), ('runtime_sales_templatebuilder:editor', None), ('runtime_sales_templatebuilder:emailComponent', None), ('runtime_sales_templatebuilder:emailHtmlGen', None), ('runtime_sales_templatebuilder:emailRegion', None), ('runtime_sales_templatebuilder:emailTemplate', None), ('runtime_sales_templatebuilder:emailTemplateBuilderTemplate', None), ('runtime_sales_templatebuilder:emailTemplateCanvasConfig', None), ('runtime_sales_templatebuilder:emailTemplateEditorUi', None), ('runtime_sales_templatebuilder:fourColumnRow', None), ('runtime_sales_templatebuilder:header', None), ('runtime_sales_templatebuilder:htmlEditor', None), ('runtime_sales_templatebuilder:image', None), ('runtime_sales_templatebuilder:imageEditor', None), ('runtime_sales_templatebuilder:leftPanel', None), ('runtime_sales_templatebuilder:middlePanel', None), ('runtime_sales_templatebuilder:oneColumnRow', None), ('runtime_sales_templatebuilder:richText', None), ('runtime_sales_templatebuilder:richTextCkEditor', None), ('runtime_sales_templatebuilder:rightPanel', None), ('runtime_sales_templatebuilder:surfaceTemplate', None), ('runtime_sales_templatebuilder:threeColumnRow', None), ('runtime_sales_templatebuilder:topToolbar', None), ('runtime_sales_templatebuilder:twoColumnRow', None), ('runtime_sales_xclean:advancedSearchLauncher', None), ('runtime_sales_xclean:advancedSearchModal', None), ('runtime_sales_xclean:advancedSearchRow', None), ('runtime_sales_xclean:dataAssessment', None), ('runtime_sales_xclean:dataAssessmentConfig', None), ('runtime_sales_xclean:dataAssessmentConfigListView', None), ('runtime_sales_xclean:dataAssessmentConfigProvider', None), ('runtime_sales_xclean:dataAssessmentCustomerSegmentation', None), ('runtime_sales_xclean:dataAssessmentDataQuality', None), ('runtime_sales_xclean:dataAssessmentHealthOverview', None), ('runtime_sales_xclean:dataAssessmentMatchAnalysis', None), ('runtime_sales_xclean:dataAssessmentPrompt', None), ('runtime_sales_xclean:dataAssessmentUpgradePanel', None), ('runtime_sales_xclean:dataPreviewDashboard', None), ('runtime_sales_xclean:dataPreviewImproveMatchRate', None), ('runtime_sales_xclean:dataPreviewQuality', None), ('runtime_sales_xclean:dataPreviewReport', None), ('runtime_sales_xclean:dataPreviewReportTest', None), ('runtime_sales_xclean:discoveryAccountsTabHome', None), ('runtime_sales_xclean:discoveryUserLicenseSetup', None), ('runtime_sales_xclean:dummyListDataProvider', None), ('runtime_sales_xclean:dummyRangeFacets', None), ('runtime_sales_xclean:externalRecordsListDataProvider', None), ('runtime_sales_xclean:externalRecordsRangeFacets', None), ('runtime_sales_xclean:externalRecordsTab', None), ('runtime_sales_xclean:fieldMappingError', None), ('runtime_sales_xclean:fieldMappingPanel', None), ('runtime_sales_xclean:fieldMappingPanelTest', None), ('runtime_sales_xclean:fieldMappingRadioColumn', None), ('runtime_sales_xclean:fieldMappingTabs', None), ('runtime_sales_xclean:recommendationsFacetsPlaceholder', None), ('runtime_sales_xclean:recommendationsListDataProvider', None), ('runtime_sales_xclean:recommendationsRangeFacets', None), ('runtime_sales_xclean:search', None), ('runtime_sales_xclean:searchAccountsPlugin', None), ('runtime_sales_xclean:searchBar', None), ('runtime_sales_xclean:searchCommaSeparatedCell', None), ('runtime_sales_xclean:searchConcatenatedCell', None), ('runtime_sales_xclean:searchContactsPlugin', None), ('runtime_sales_xclean:searchContainer', None), ('runtime_sales_xclean:searchContractExpirationDate', None), ('runtime_sales_xclean:searchCreditMetrics', None), ('runtime_sales_xclean:searchCreditMetricsInvalidPackage', None), ('runtime_sales_xclean:searchCreditMetricsKnownError', None), ('runtime_sales_xclean:searchCreditMetricsTile', None), ('runtime_sales_xclean:searchCreditsAvailable', None), ('runtime_sales_xclean:searchFacetsPanel', None), ('runtime_sales_xclean:searchFilterPanel', None), ('runtime_sales_xclean:searchList', None), ('runtime_sales_xclean:searchListDataProvider', None), ('runtime_sales_xclean:searchPlugin', None), ('runtime_sales_xclean:searchPreviewCompanyPanel', None), ('runtime_sales_xclean:searchPreviewContainer', None), ('runtime_sales_xclean:searchPreviewableCell', None), ('runtime_sales_xclean:searchRangeFacets', None), ('runtime_sales_xclean:searchRemainingCredits', None), ('runtime_sales_xclean:searchSelectForImportCell', None), ('runtime_sales_xclean:searchStatusCell', None), ('runtime_sales_xclean:searchTotalCredits', None), ('runtime_sales_xclean:searchUserLicenseDataSource', None), ('runtime_sales_xclean:searchUserLicenseIsActive', None), ('runtime_sales_xclean:searchUserLicensesUsageLimit', None), ('runtime_sales_xclean:selectMatch', None), ('runtime_sales_xclean:selectMatchContainer', None), ('runtime_sales_xclean:selectMatchDetailPane', None), ('runtime_sales_xclean:selectMatchDetailPart', None), ('runtime_sales_xclean:selectMatchHighLightsStencil', None), ('runtime_sales_xclean:selectionContainer', None), ('runtime_sales_xclean:singleLineAddress', None), ('runtime_sales_xclean:stareAndCompare', None), ('runtime_sales_xclean:stareAndCompareComparison', None), ('runtime_sales_xclean:stareAndCompareHeader', None), ('runtime_sales_xclean:swiftFacet', None), ('runtime_sales_xclean:xCleanMetrics', None), ('runtime_sales_xclean:xCleanMetricsGenericError', None), ('runtime_sales_xclean:xCleanMetricsHeader', None), ('runtime_sales_xclean:xCleanMetricsItem', None), ('runtime_sales_xclean:xCleanRecordsComparison', None), ('runtime_sales_xclean:xCleanSimpleCompoundField', None), ('runtime_sales_xclean:xCleanStareAndCompareModal', None), ('runtime_sales_xclean:xCleanThisRecordModal', None), ('runtime_sales_xclean:xcleanHighlights', None), ('runtime_search_federated:externalOutputUrl', None), ('runtime_search_federated:externalResultsGridView', None), ('runtime_search_federated:externalScopes', None), ('runtime_search_federated:externalScopesList', None), ('runtime_search_federated:externalScopesListDataProvider', None), ('runtime_service_fieldservice:createServiceReportPDF', None), ('runtime_service_fieldservice:generateWorkOrders', None), ('runtime_service_fieldservice:languagePicker', None), ('runtime_service_fieldservice:objectHierarchy', None), ('runtime_service_fieldservice:objectHierarchyMessage', None), ('runtime_service_fieldservice:objectHomeShiftGridView', None), ('runtime_service_fieldservice:serviceReportPdfViewer', None), ('runtime_service_fieldservice:serviceReportTemplatePicker', None), ('runtime_service_liveagent:baseChat', None), ('runtime_service_liveagent:baseNotification', None), ('runtime_service_liveagent:basePanelFooter', None), ('runtime_service_liveagent:baseToolbar', None), ('runtime_service_liveagent:blockVisitorFooter', None), ('runtime_service_liveagent:blockVisitorPanel', None), ('runtime_service_liveagent:chat', None), ('runtime_service_liveagent:chatApi', None), ('runtime_service_liveagent:chatBody', None), ('runtime_service_liveagent:chatEndNotification', None), ('runtime_service_liveagent:chatHover', None), ('runtime_service_liveagent:chatInput', None), ('runtime_service_liveagent:chatMessage', None), ('runtime_service_liveagent:chatMessenger', None), ('runtime_service_liveagent:chatNotification', None), ('runtime_service_liveagent:chatSlice', None), ('runtime_service_liveagent:chatSneakPeekIndicator', None), ('runtime_service_liveagent:chatStartNotification', None), ('runtime_service_liveagent:chatUnavailableMessage', None), ('runtime_service_liveagent:conferenceButton', None), ('runtime_service_liveagent:conferenceFooter', None), ('runtime_service_liveagent:conferencePanel', None), ('runtime_service_liveagent:conversationData', None), ('runtime_service_liveagent:conversationLog', None), ('runtime_service_liveagent:conversationToolkitAPI', None), ('runtime_service_liveagent:embeddedAlohaPage', None), ('runtime_service_liveagent:embeddedLiveChatButton', None), ('runtime_service_liveagent:embeddedLiveChatDeployment', None), ('runtime_service_liveagent:embeddedLiveChatSkill', None), ('runtime_service_liveagent:endChatFooter', None), ('runtime_service_liveagent:endChatPanel', None), ('runtime_service_liveagent:engagedChat', None), ('runtime_service_liveagent:fileTransferButton', None), ('runtime_service_liveagent:fileTransferFooter', None), ('runtime_service_liveagent:fileTransferPanel', None), ('runtime_service_liveagent:liveChatTranscriptHighlightsStencil', None), ('runtime_service_liveagent:liveagentToolbar', None), ('runtime_service_liveagent:lowerFlagFooter', None), ('runtime_service_liveagent:lowerFlagPanel', None), ('runtime_service_liveagent:panelCloseButton', None), ('runtime_service_liveagent:pastChats', None), ('runtime_service_liveagent:pastChatsDesignInfo', None), ('runtime_service_liveagent:raiseFlagFooter', None), ('runtime_service_liveagent:raiseFlagPanel', None), ('runtime_service_liveagent:scopedNotification', None), ('runtime_service_liveagent:toolkitMessenger', None), ('runtime_service_liveagent:transferButton', None), ('runtime_service_liveagent:transferFooter', None), ('runtime_service_liveagent:transferPanel', None), ('runtime_service_livemessage:appleBusinessChatInfoCard', None), ('runtime_service_livemessage:chatBody', None), ('runtime_service_livemessage:chatFileCard', None), ('runtime_service_livemessage:chatHover', None), ('runtime_service_livemessage:conversationLog', None), ('runtime_service_livemessage:linkObject', None), ('runtime_service_livemessage:linkObjectsNotification', None), ('runtime_service_livemessage:livemessageChat', None), ('runtime_service_livemessage:livemessageInput', None), ('runtime_service_livemessage:livemessageToolbar', None), ('runtime_service_livemessage:messagingSessionForceCloseAction', None), ('runtime_service_livemessage:messagingSessionHighlightsStencil', None), ('runtime_service_livemessage:messagingSessionLinkedRecords', None), ('runtime_service_livemessage:relatedRecords', None), ('runtime_service_livemessage:selectFileButton', None), ('runtime_service_livemessage:startOutboundConversationAction', None), ('runtime_service_livemessage:startOutboundConversationModal', None), ('runtime_service_objectlinking:conversationParticipantCard', None), ('runtime_service_objectlinking:linkObjectsNotification', None), ('runtime_service_objectlinking:linkRecord', None), ('runtime_service_objectlinking:messagingEndUserCard', None), ('runtime_service_objectlinking:objectLinkingBackgroundUtility', None), ('runtime_service_objectlinking:relatedRecords', None), ('runtime_service_omnichannel:abstractPushedRequest', None), ('runtime_service_omnichannel:currentWork', None), ('runtime_service_omnichannel:currentWorkList', None), ('runtime_service_omnichannel:currentWorkTransfer', None), ('runtime_service_omnichannel:message', None), ('runtime_service_omnichannel:omniAPILoader', None), ('runtime_service_omnichannel:omniAPITester', None), ('runtime_service_omnichannel:omniWidget', None), ('runtime_service_omnichannel:omniWidgetPublicEventsTester', None), ('runtime_service_omnichannel:pushedEntityRequest', None), ('runtime_service_omnichannel:pushedEntityRequestTester', None), ('runtime_service_omnichannel:pushedEntityRequestTesterData', None), ('runtime_service_omnichannel:status', None), ('runtime_service_omnichannel:statusTester', None), ('runtime_service_omnichannel:statusTesterData', None), ('runtime_service_omnichannel:toolkitTester', None), ('runtime_service_predictions:einsteinArticleSuggestion', None), ('runtime_service_predictions:einsteinArticleSuggestionCardStatusHeader', None), ('runtime_service_predictions:einsteinArticleSuggestionFeedbackComponent', None), ('runtime_service_predictions:einsteinArticleSuggestionRecordObserver', None), ('runtime_service_predictions:einsteinArticleSuggestionsCard', None), ('runtime_service_predictions:einsteinItemWrapper', None), ('runtime_service_predictions:einsteinSuggestedResponse', None), ('runtime_service_predictions:einsteinSuggestionsCard', None), ('runtime_service_predictions:einsteinSuggestionsCardContainer', None), ('runtime_service_predictions:fieldPredictionsLauncher', None), ('runtime_service_predictions:pilotRecommendationsManager', None), ('runtime_service_predictions:predictionInputCheckbox', None), ('runtime_service_predictions:predictionInputPicklist', None), ('runtime_service_predictions:predictionsEllieIcon', None), ('runtime_service_predictions:predictionsManager', None), ('runtime_service_predictions:predictionsStrengthIcon', None), ('runtime_service_predictions:recommendationInputLookup', None), ('runtime_service_predictions:recommendationInputLookupDataProvider', None), ('runtime_service_predictions:recommendationInputLookupDesktop', None), ('runtime_service_predictions:recommendationLookupOption', None), ('runtime_service_predictions:replyTextStatusChange', None), ('runtime_service_predictions:standalonePredictionsManager', None), ('runtime_service_predictions:standaloneRecordRecommendations', None), ('runtime_service_scs:attachments', None), ('runtime_service_scs:conversationCaseDetail', None), ('runtime_service_scs:conversationCaseDetailTester', None), ('runtime_service_scs:conversationCaseList', None), ('runtime_service_scs:conversationSocialPostDetail', None), ('runtime_service_scs:conversationSocialPostDetailFooter', None), ('runtime_service_scs:conversationSocialPostDetailTester', None), ('runtime_service_scs:conversationSocialPostList', None), ('runtime_service_scs:conversations', None), ('runtime_service_scs:conversationsPersona', None), ('runtime_service_scs:conversationsPersonaTester', None), ('runtime_service_scs:inputSocialPostAccount', None), ('runtime_service_scs:inputSocialPostContent', None), ('runtime_service_scs:inputSocialPostMessageType', None), ('runtime_service_scs:inputSocialPostProvider', None), ('runtime_service_scs:inputSocialPostReplyTo', None), ('runtime_service_scs:link', None), ('runtime_service_scs:publisherQuickSocialPost', None), ('runtime_service_scs:sfxCreateCase', None), ('runtime_service_scs:sfxIgnore', None), ('runtime_service_scs:sfxMassApproveSocialPosts', None), ('runtime_service_scs:sfxMassCreateCase', None), ('runtime_service_scs:sfxMassIgnore', None), ('runtime_service_scs:sfxMassRejectSocialPosts', None), ('runtime_service_scs:socialOutputLookup', None), ('runtime_service_scs:socialPersona', None), ('runtime_service_scs:socialPostContent', None), ('runtime_service_scs:socialPostContentLink', None), ('runtime_service_scs:socialPostContentListView', None), ('runtime_service_scs:socialPostFeedItem', None), ('runtime_service_scs:socialPostMessage', None), ('runtime_service_scs:socialPostPreamble', None), ('runtime_service_scs:socialPostProvider', None), ('runtime_service_scs:socialPostQuickAction', None), ('runtime_service_scs:socialPostYouTubeLinkPreview', None), ('runtime_service_scs:truncatedText', None), ('runtime_service_trials:essentialsPromoCode', None), ('runtime_service_trials:expandedWelcomeMat', None), ('runtime_service_trials:expandedWelcomeMatPrompt', None), ('runtime_service_trials:miniSetup', None), ('runtime_service_trials:momentOfCelebration', None), ('runtime_service_trials:setupSocialFlow', None), ('runtime_service_trials:setupSocialSelectProvider', None), ('runtime_service_trials:surveyUserInterestInfoPrompt', None), ('runtime_service_trials:surveyUserInterestInfoWrapper', None), ('runtime_service_trials:welcomeMatTile', None), ('s1wizard:actionCard', None), ('s1wizard:actionListPicker', None), ('s1wizard:actions', None), ('s1wizard:actionsPreview', None), ('s1wizard:arrangeActions', None), ('s1wizard:comicText', None), ('s1wizard:compactLayout', None), ('s1wizard:compactLayoutPreview', None), ('s1wizard:createContactLayout', None), ('s1wizard:createGlobalAction', None), ('s1wizard:dndDragSource', None), ('s1wizard:dndDropTarget', None), ('s1wizard:duelingList', None), ('s1wizard:duelingListItem', None), ('s1wizard:duelingLists', None), ('s1wizard:iPhone', None), ('s1wizard:navMenuPreview', None), ('s1wizard:navigation', None), ('s1wizard:preview', None), ('s1wizard:review', None), ('s1wizard:share', None), ('s1wizard:shareDataProvider', None), ('s1wizard:shareFeedback', None), ('s1wizard:shareListOption', None), ('s1wizard:shareSelectedOption', None), ('s1wizard:template', None), ('s1wizard:welcome', None), ('salesforceIdentity:accountSettings', None), ('salesforceIdentity:appLauncher', None), ('salesforceIdentity:appLauncherDesktop', None), ('salesforceIdentity:appLauncherDesktopContainer', None), ('salesforceIdentity:appLauncherDesktopInternal', None), ('salesforceIdentity:appLauncherDesktopInternalTester', None), ('salesforceIdentity:appLauncherDesktopTester', None), ('salesforceIdentity:appLauncherHeader', None), ('salesforceIdentity:appLauncherManager', None), ('salesforceIdentity:appLauncherModal', None), ('salesforceIdentity:appLauncherSetupDesktop', None), ('salesforceIdentity:appLauncherSetupReorderer', None), ('salesforceIdentity:appLauncherSetupTile', None), ('salesforceIdentity:appLauncherTile', None), ('salesforceIdentity:changePassword', None), ('salesforceIdentity:changePassword2', None), ('salesforceIdentity:communityLogo', None), ('salesforceIdentity:communityLogo2', None), ('salesforceIdentity:employeeLoginLink', None), ('salesforceIdentity:employeeLoginLink2', None), ('salesforceIdentity:forgotPassword', None), ('salesforceIdentity:forgotPassword2', None), ('salesforceIdentity:identityBody', None), ('salesforceIdentity:identityCustomHomeLayout', None), ('salesforceIdentity:identityHeader', None), ('salesforceIdentity:identityTemplate', None), ('salesforceIdentity:identityVerification', None), ('salesforceIdentity:lightningLoginFlow', None), ('salesforceIdentity:loginBody', None), ('salesforceIdentity:loginBody2', None), ('salesforceIdentity:loginForm', None), ('salesforceIdentity:loginForm2', None), ('salesforceIdentity:loginTemplate', None), ('salesforceIdentity:loginTemplate2', None), ('salesforceIdentity:searchInput', None), ('salesforceIdentity:selfRegister', None), ('salesforceIdentity:selfRegister2', None), ('salesforceIdentity:sessionTimeoutWarn', None), ('salesforceIdentity:sessionTimeoutWatcher', None), ('salesforceIdentity:socialLogin', None), ('salesforceIdentity:socialLogin2', None), ('salesforceIdentity:tempDepend', None), ('securityHealth:alohaContainer', None), ('securityHealth:alohaMessage', None), ('securityHealth:fixItConfirmModal', None), ('securityHealth:fixItModal', None), ('securityHealth:fixItModalFooter', None), ('securityHealth:fixItRiskComponent', None), ('securityHealth:fixItSearch', None), ('securityHealth:genericRiskComponent', None), ('securityHealth:importBaselineModal', None), ('securityHealth:missingSettings', None), ('securityHealth:relatedListCard', None), ('securityHealth:securityHealthSetupComponent', None), ('securityHealth:urlSwitcher', None), ('securityHub:dashboard', None), ('securityHub:header', None), ('securityHub:healthCheck', None), ('securityHub:metricDetailHome', None), ('securityHub:metricDrillDownBarChart', None), ('securityHub:metricDrillDownDetail', None), ('securityHub:metricDrillDownGraph', None), ('securityHub:metricDrilldownDataTable', None), ('securityHub:metricDrilldownDetailDataTable', None), ('securityHub:metricDrilldownLoginDataTable', None), ('securityHub:metricDrilldownUserDataTable', None), ('securityHub:orgManagement', None), ('securityHub:securityHubHome', None), ('securitycentral:appsList', None), ('securitycentral:module', None), ('securitycentral:scList', None), ('securitycentral:tabs', None), ('securitycentral:terminateSessionAction', None), ('selfService:articleHeaderDetail', None), ('selfService:articleLayout', None), ('selfService:articleList', None), ('selfService:articleListDataProvider', None), ('selfService:articleListItem', None), ('selfService:articleReCaptchaFlipView', None), ('selfService:articleTopicList', None), ('selfService:articleTypeDataProvider', None), ('selfService:articleTypeFilter', None), ('selfService:articleView', None), ('selfService:articleVoting', None), ('selfService:articleVotingIcon', None), ('selfService:autoSuggest', None), ('selfService:autoSuggestDataProvider', None), ('selfService:autoSuggestOption', None), ('selfService:backButton', None), ('selfService:baseArticleList', None), ('selfService:baseCaseCreation', None), ('selfService:baseNavItem', None), ('selfService:baseNavList', None), ('selfService:baseNavigation', None), ('selfService:baseSimpleItem', None), ('selfService:baseSimpleItems', None), ('selfService:breadCrumb', None), ('selfService:breadCrumbBase', None), ('selfService:breadCrumbItem', None), ('selfService:breadCrumbProvider', None), ('selfService:caseArticleDeflection', None), ('selfService:caseArticleDeflectionItem', None), ('selfService:caseArticleDeflectionProvider', None), ('selfService:caseAttachment', None), ('selfService:caseAttachments', None), ('selfService:caseAttachmentsDataProvider', None), ('selfService:caseComment', None), ('selfService:caseComments', None), ('selfService:caseCommentsDataProvider', None), ('selfService:caseConfirmation', None), ('selfService:caseCreate', None), ('selfService:caseCreateAttachments', None), ('selfService:caseDescription', None), ('selfService:caseDetails', None), ('selfService:caseHighlights', None), ('selfService:caseListView', None), ('selfService:casePublisher', None), ('selfService:casePublisherFileInput', None), ('selfService:caseStatusButton', None), ('selfService:caseSubject', None), ('selfService:caseVirtualGrid', None), ('selfService:categoryFilter', None), ('selfService:categoryNavigation', None), ('selfService:categoryProvider', None), ('selfService:contactSupport', None), ('selfService:expandedCategoryNav', None), ('selfService:expandedCategoryNavItem', None), ('selfService:expandedTrendingArticleItem', None), ('selfService:expandedTrendingArticleSection', None), ('selfService:expandedTrendingArticleSectionProvider', None), ('selfService:expandedTrendingArticles', None), ('selfService:expandedTrendingArticlesProvider', None), ('selfService:featuredDataCategories', None), ('selfService:featuredDataCategoryProvider', None), ('selfService:featuredItem', None), ('selfService:featuredItemList', None), ('selfService:featuredSearch', None), ('selfService:filter', None), ('selfService:filterItem', None), ('selfService:inputEmail', None), ('selfService:inputText', None), ('selfService:inputTextArea', None), ('selfService:koaHeaderCompanyName', None), ('selfService:loadingSpinner', None), ('selfService:logout', None), ('selfService:miniSearch', None), ('selfService:myCaseList', None), ('selfService:outputRichTextWithSmartLinks', None), ('selfService:pageWrapper', None), ('selfService:postToCase', None), ('selfService:profileHome', None), ('selfService:profileMenu', None), ('selfService:profileMenuAPI', None), ('selfService:profileMenuTrigger', None), ('selfService:profileNavigation', None), ('selfService:profilePanel', None), ('selfService:reCaptchaCarouselView', None), ('selfService:searchWrapper', None), ('selfService:similarArticleItem', None), ('selfService:similarArticles', None), ('selfService:similarArticles42', None), ('selfService:similarArticles42DesignSubstitute', None), ('selfService:similarArticlesDataProvider', None), ('selfService:similarArticlesDesignSubstitute', None), ('selfService:similarFeedItem', None), ('selfService:similarItemWithViewCount', None), ('selfService:similarQuestions', None), ('selfService:similarQuestionsDataProvider', None), ('selfService:simpleArticleItem', None), ('selfService:singleArticleView', None), ('selfService:subCategoryItem', None), ('selfService:supportQuickActionField', None), ('selfService:supportQuickActionLayout', None), ('selfService:tempDepend', None), ('selfService:template', None), ('selfService:toggleButton', None), ('selfService:topicArticleList', None), ('selfService:topicArticleListDataProvider', None), ('selfService:topicBreadCrumb', None), ('selfService:topicBreadCrumbDataProvider', None), ('selfService:topicRelatedArticle', None), ('selfService:topicTrendingArticles', None), ('selfService:topicTrendingArticles42', None), ('selfService:topicTrendingArticles42DesignSubstitute', None), ('selfService:topicTrendingArticlesDataProvider', None), ('selfService:topicTrendingArticlesDesignInfo', None), ('selfService:topicTrendingArticlesDesignSubstitute', None), ('selfService:trendingArticles', None), ('selfService:trendingArticlesDataProvider', None), ('selfService:twoColumnFilterLayout', None), ('selfService:unsupported', None), ('selfService:userProfileMenu', None), ('serviceCommunity:askWidget', None), ('serviceCommunity:deflectionActions', None), ('serviceCommunity:searchAskWidgetMain', None), ('serviceCommunity:searchBox', None), ('serviceCommunity:searchDeflection', None), ('serviceCommunity:searchResult', None), ('serviceCommunity:searchResultsList', None), ('serviceCommunity:signInBox', None), ('serviceCommunity:zonedropdownoption', None), ('serviceCommunity:zoneswitcher', None), ('setup:assistantActionButtonLink', None), ('setup:assistantActionLSF', None), ('setup:assistantActionRPC', None), ('setup:assistantActionStep', None), ('setup:assistantActionToggle', None), ('setup:assistantActionVideoLink', None), ('setup:assistantDiscoverStepAlign', None), ('setup:assistantDiscoverStepEvaluate', None), ('setup:assistantDiscoverStepLearn', None), ('setup:assistantDiscoverStepPlan', None), ('setup:assistantModelService', None), ('setup:assistantNonTrackableSubStep', None), ('setup:assistantOptimizeStepIterate', None), ('setup:assistantOptimizeStepMeasure', None), ('setup:assistantOptimizeStepMotivate', None), ('setup:assistantOptimizeStepTurnOff', None), ('setup:assistantPage', None), ('setup:assistantPageDiscover', None), ('setup:assistantPageOptimize', None), ('setup:assistantPageOverview', None), ('setup:assistantPageRollout', None), ('setup:assistantRolloutStepAdapt', None), ('setup:assistantRolloutStepImplement', None), ('setup:assistantRolloutStepLaunch', None), ('setup:assistantRolloutStepPlan', None), ('setup:assistantStep', None), ('setup:assistantSubStep', None), ('setup:assistantSummaryCard', None), ('setup:autoTransitionOptOutAgreement', None), ('setup:autoTransitionOptOutConfirmation', None), ('setup:autoTransitionOptOutErrorPage', None), ('setup:autoTransitionOptOutLanding', None), ('setup:customProfilesEditable', None), ('setup:customProfilesOptOutLanding', None), ('setup:customProfilesReadOnly', None), ('setup:enableConsentManagement', None), ('setup:enableEinsteinDataDiscovery', None), ('setup:enableLightningExperience', None), ('setup:enableLightningExperienceSetupComponent', None), ('setup:enableLightningExperienceTab', None), ('setup:enableLightningExperienceToggle', None), ('setup:enableLightningExperienceWrapper', None), ('setup:enableLightningModalBody', None), ('setup:enablePowerInsights', None), ('setup:eventMonitoring', None), ('setup:externalAppsSettingsPage', None), ('setup:externalAppsSettingsPageLex', None), ('setup:fieldService', None), ('setup:fieldServiceSetup', None), ('setup:flexList', None), ('setup:gear', None), ('setup:hoverHelp', None), ('setup:lightningExtensionAccessControl', None), ('setup:lightningExtensionHome', None), ('setup:lightningOnMobileAppMigration', None), ('setup:lightningOnMobileButtonLink', None), ('setup:lightningOnMobileInfoSection', None), ('setup:lightningOnMobileMigrationEmptyState', None), ('setup:lightningOnMobileMigrationErrorState', None), ('setup:lightningOnMobileMigrationStatus', None), ('setup:lightningOnMobileMigrationStep', None), ('setup:lightningOnMobileOverridesMigration', None), ('setup:lightningOnMobileQuickStart', None), ('setup:lightningOnMobileQuickStartWrapper', None), ('setup:lightningOnMobileSetupComponent', None), ('setup:placeholder', None), ('setup:progressCircle', None), ('setup:s1SetupHomePage', None), ('setup:s1SetupSection', None), ('setup:s1SetupSectionItem', None), ('setup:sfxSearchResultsGrid', None), ('setup:ssDataProvider', None), ('setup:ssResultsFilters', None), ('setup:ssResultsPage', None), ('setup:ssResultsTable', None), ('setup:statelessAssistantStep', None), ('setup:statelessAssistantSubStep', None), ('setup:walkthroughs', None), ('setup:wtSetupPage', None), ('setupAssistant:setupAssistantProgress', None), ('setupAssistant:setupAssistantProgressComponent', None), ('setupAssistant:setupAssistantWelcomeMat', None), ('setupAssistant:setupAssistantWelcomeMatModal', None), ('setupAssistant:sfxWelcomeMat', None), ('setup_cdp:cdpEnablementScreen', None), ('setup_cdp:cdpMcSetup', None), ('setup_cdp:cdpSetupHome', None), ('setup_data_translation:dataTranslationSupportedEntitiesSettings', None), ('setup_data_translation:dataTranslationSupportedEntityLink', None), ('setup_data_translation:dataTranslationSupportedFieldsSettings', None), ('setup_document_checklist:documentChecklistSetup', None), ('setup_einstein_assistant:assistantSetup', None), ('setup_einstein_assistant:createDefinition', None), ('setup_einstein_assistant:setupBuilderFlow', None), ('setup_einstein_assistant:welcomeScreen', None), ('setup_einstein_shared:assessorItem', None), ('setup_einstein_shared:fieldsTable', None), ('setup_einstein_shared:guidePanel', None), ('setup_einstein_shared:ignoredfields', None), ('setup_einstein_shared:info', None), ('setup_einstein_shared:inputRadio', None), ('setup_einstein_shared:layoutSplit', None), ('setup_einstein_shared:stepLayoutEinstein', None), ('setup_einstein_shared:stepLayoutOneColumn', None), ('setup_einstein_shared:stepLayoutSplit', None), ('setup_industries_common:relationshipCardTypeFieldsListContainer', None), ('setup_industries_common:relationshipCardTypeFieldsSetup', None), ('setup_industries_common:relationshipCardTypeList', None), ('setup_industries_common:relationshipCardTypeManagerHome', None), ('setup_industries_common:relationshipCardTypeSetup', None), ('setup_industries_common:relationshipOptions', None), ('setup_industries_common:relationshipTypeCardFieldsEditor', None), ('setup_industries_insurance:iconEdit', None), ('setup_industries_insurance:iconList', None), ('setup_industries_insurance:iconManager', None), ('setup_industries_insurance:insuranceSettings', None), ('setup_industries_insurance:policiesIconManager', None), ('setup_industries_objectdetection:datasetTrainAction', None), ('setup_industries_objectdetection:datasetTrainModal', None), ('setup_industries_objectdetection:modelDisableAction', None), ('setup_industries_objectdetection:modelEnableAction', None), ('setup_industries_objectdetection:modelRetrainAction', None), ('setup_industries_objectdetection:objectDetectionHome', None), ('setup_industries_objectdetection:setupReviewTerms', None), ('setup_industries_objectdetection:setupReviewTermsFlow', None), ('setup_industries_referralscoring:fscReferralScoringHome', None), ('setup_industries_referralscoring:hcReferralScoringHome', None), ('setup_industries_referralscoring:hcReferralScoringModelFlow', None), ('setup_industries_referralscoring:predictionSettings', None), ('setup_industries_referralscoring:referralScoringAdditionalFields', None), ('setup_industries_referralscoring:referralScoringConfirmSettings', None), ('setup_industries_referralscoring:referralScoringExclusionFields', None), ('setup_industries_referralscoring:referralScoringHome', None), ('setup_industries_referralscoring:referralScoringModelFlow', None), ('setup_industries_referralscoring:referralScoringRecordType', None), ('setup_industries_referralscoring:referralScoringSegmentationScreen', None), ('setup_industries_referralscoring:referralScoringTargetFieldAndTrainingFilters', None), ('setup_industries_smartselling:einsteinVisitsHome', None), ('setup_lightning_visualforce:apexPageList', None), ('setup_lightning_visualforce:vfEditPage', None), ('setup_mc2:marketingSetupHome', None), ('setup_mobile_appclone:addDistributionAccountModal', None), ('setup_mobile_appclone:androidFeatureGraphicSection', None), ('setup_mobile_appclone:androidIconsSection', None), ('setup_mobile_appclone:androidMetadataDraft', None), ('setup_mobile_appclone:androidMetadataReadOnly', None), ('setup_mobile_appclone:androidPlayStoreSection', None), ('setup_mobile_appclone:androidPromoVideoSection', None), ('setup_mobile_appclone:androidPushSection', None), ('setup_mobile_appclone:androidScreenshotsSection', None), ('setup_mobile_appclone:appAvailabilityDataProvider', None), ('setup_mobile_appclone:appAvailabilityModal', None), ('setup_mobile_appclone:appAvailabilitySection', None), ('setup_mobile_appclone:appAvailabilitySelection', None), ('setup_mobile_appclone:appAvailabilitySelectionColumnCountry', None), ('setup_mobile_appclone:appAvailabilitySelectionColumnSelect', None), ('setup_mobile_appclone:appCloneCreationModal', None), ('setup_mobile_appclone:appCloneEmptyState', None), ('setup_mobile_appclone:appCloneResourceCard', None), ('setup_mobile_appclone:appCloneTableView', None), ('setup_mobile_appclone:appCloneVideo', None), ('setup_mobile_appclone:appDistributionDelegateConfigStep', None), ('setup_mobile_appclone:appDistributionEditFlow', None), ('setup_mobile_appclone:appDistributionSection', None), ('setup_mobile_appclone:appDistributionSelectionStep', None), ('setup_mobile_appclone:appTemplatePickerModal', None), ('setup_mobile_appclone:approveAppConfirmationFlowStep', None), ('setup_mobile_appclone:approveAppFlow', None), ('setup_mobile_appclone:approveAppFlowStep', None), ('setup_mobile_appclone:approveRejectStep', None), ('setup_mobile_appclone:asset', None), ('setup_mobile_appclone:assetMetadataSection', None), ('setup_mobile_appclone:assetUploader', None), ('setup_mobile_appclone:assetViewer', None), ('setup_mobile_appclone:authorizedDomainRow', None), ('setup_mobile_appclone:authorizedDomainsSection', None), ('setup_mobile_appclone:baseMetadataDraft', None), ('setup_mobile_appclone:baseMetadataReadOnly', None), ('setup_mobile_appclone:betaTesterSection', None), ('setup_mobile_appclone:collapsibleSection', None), ('setup_mobile_appclone:combobox', None), ('setup_mobile_appclone:communitySection', None), ('setup_mobile_appclone:confirmationModal', None), ('setup_mobile_appclone:connectedAppSection', None), ('setup_mobile_appclone:deepLinkRow', None), ('setup_mobile_appclone:deepLinksSection', None), ('setup_mobile_appclone:delegateAccountSection', None), ('setup_mobile_appclone:delegatedConfigurationSection', None), ('setup_mobile_appclone:disableIconSetConfirmationModal', None), ('setup_mobile_appclone:fileUploader', None), ('setup_mobile_appclone:fixedBanner', None), ('setup_mobile_appclone:generalMessaging', None), ('setup_mobile_appclone:headerColorSection', None), ('setup_mobile_appclone:iconSet', None), ('setup_mobile_appclone:inputFile', None), ('setup_mobile_appclone:installPackageModalPanel', None), ('setup_mobile_appclone:installPackageStep', None), ('setup_mobile_appclone:iosAppStoreSection', None), ('setup_mobile_appclone:iosIconsSection', None), ('setup_mobile_appclone:iosMetadataDraft', None), ('setup_mobile_appclone:iosMetadataReadOnly', None), ('setup_mobile_appclone:iosScreenshotsSection', None), ('setup_mobile_appclone:languageList', None), ('setup_mobile_appclone:lifecycle', None), ('setup_mobile_appclone:lifecycleStep', None), ('setup_mobile_appclone:lifecycle_TestLifecycle_General', None), ('setup_mobile_appclone:loadingScreenSection', None), ('setup_mobile_appclone:makeChangesModalFooter', None), ('setup_mobile_appclone:metadataAttribute', None), ('setup_mobile_appclone:metadataHeader', None), ('setup_mobile_appclone:metadataSection', None), ('setup_mobile_appclone:myS1Home', None), ('setup_mobile_appclone:myS1MetadataDetail', None), ('setup_mobile_appclone:myS1WarningModal', None), ('setup_mobile_appclone:mys1Lifecycle', None), ('setup_mobile_appclone:mys1LifecycleModalFooter', None), ('setup_mobile_appclone:mys1LifecycleStep', None), ('setup_mobile_appclone:mys1ModalPanel', None), ('setup_mobile_appclone:noAccess', None), ('setup_mobile_appclone:popover', None), ('setup_mobile_appclone:privateDistributionSection', None), ('setup_mobile_appclone:requestActionStep', None), ('setup_mobile_appclone:requestBetaModalPanel', None), ('setup_mobile_appclone:requestPackagePanel', None), ('setup_mobile_appclone:screenshotSet', None), ('setup_mobile_appclone:screenshotsSection', None), ('setup_mobile_appclone:setupTile', None), ('setup_mobile_appclone:stateMapRefreshModal', None), ('setup_mobile_appclone:submitConfirmationModal', None), ('setup_mobile_appclone:tmpLifecycleTriggers', None), ('setup_mobile_appclone:translationStateMapSection', None), ('setup_mobile_appclone:updatePackagePanel', None), ('setup_mobile_appclone:verticalImagePanel', None), ('setup_osl:oslSetupHome', None), ('setup_platformServices_eventManager:alohaRouter', None), ('setup_platformServices_eventManager:eventManagerDetail', None), ('setup_platformServices_eventManager:eventManagerHome', None), ('setup_platformServices_eventManager:eventManagerList', None), ('setup_platform_a2:banner', None), ('setup_platform_a2:customProfilesBanner', None), ('setup_platform_a2:lexEndUsersNoSwitchSetup', None), ('setup_platform_a2:scheduledSwitcherSetup', None), ('setup_platform_adoptionapps:adoptionAppOpener', None), ('setup_platform_adoptionapps:govCloudConfirmDialogBody', None), ('setup_platform_adoptionapps:govCloudDisallowedDialogBody', None), ('setup_platform_adoptionapps:govCloudOptInCard', None), ('setup_platform_api_wsdl:webservicesSetupPage', None), ('setup_platform_cdc:availableCdcEntitiesProvider', None), ('setup_platform_cdc:cdcObjectEnablement', None), ('setup_platform_integration:dataloaderIoSetup', None), ('setup_platform_ltngbolt:abstractBoltTile', None), ('setup_platform_ltngbolt:boltDetail', None), ('setup_platform_ltngbolt:boltDetailAccordion', None), ('setup_platform_ltngbolt:boltDetailHome', None), ('setup_platform_ltngbolt:boltFeature', None), ('setup_platform_ltngbolt:boltGetStarted', None), ('setup_platform_ltngbolt:boltHomeBodyCard', None), ('setup_platform_ltngbolt:boltItemList', None), ('setup_platform_ltngbolt:boltSearchDataProvider', None), ('setup_platform_ltngbolt:boltTableDataProvider', None), ('setup_platform_ltngbolt:boltTile', None), ('setup_platform_ltngbolt:boltTiles', None), ('setup_platform_ltngbolt:createBoltButton', None), ('setup_platform_ltngbolt:errorBoltTile', None), ('setup_platform_ltngbolt:flowCategoryDetail', None), ('setup_platform_ltngbolt:flowCategoryInAlohaRouter', None), ('setup_platform_ltngbolt:flowCategorySetupHome', None), ('setup_platform_ltngbolt:flowDataProvider', None), ('setup_platform_ltngbolt:lightningBoltHome', None), ('setup_platform_ltngbolt:lightningBoltSetupHome', None), ('setup_platform_ltngbolt:lsfMilestoneCreate', None), ('setup_platform_ltngbolt:lsfMilestoneFlowCategory', None), ('setup_platform_ltngbolt:lsfMilestoneItems', None), ('setup_platform_ltngbolt:lsfMilestoneSummary', None), ('setup_platform_ltngbolt:lsfNewBolt', None), ('setup_platform_ltngbolt:lsfNewFlowCategory', None), ('setup_platform_notifications:collapsibleSection', None), ('setup_platform_notifications:customNotificationTypeActionMenu', None), ('setup_platform_notifications:customNotificationTypeEdit', None), ('setup_platform_notifications:customNotificationTypeList', None), ('setup_platform_notifications:customNotificationTypeSettings', None), ('setup_platform_notifications:customNotificationTypes', None), ('setup_platform_notifications:customNotificationTypesDataProvider', None), ('setup_platform_notifications:customNotifications', None), ('setup_platform_notifications:editNotificationDeliverySettingsModalContent', None), ('setup_platform_notifications:editNotificationDeliverySettingsModalFooter', None), ('setup_platform_notifications:notificationTypeSettingsList', None), ('setup_platform_notifications:notificationTypesManager', None), ('setup_platform_notifications:standardNotificationTypeSettings', None), ('setup_platform_optimizer:allowAccessModal', None), ('setup_platform_optimizer:optimizerSetupPage', None), ('setup_platform_optimizer:optimizerSetupPageLEX', None), ('setup_platform_optimizer:revokeAccessModalBody', None), ('setup_platform_perms:createPsgFooter', None), ('setup_platform_perms:createPsgModal', None), ('setup_platform_perms:permissionSetGroupsBaseSetupPage', None), ('setup_platform_perms:permissionSetGroupsDetailPage', None), ('setup_platform_perms:permissionSetGroupsOutputLookup', None), ('setup_platform_perms:permissionSetGroupsSetup', None), ('setup_platform_perms:permissionSetGroupsSetupPage', None), ('setup_platform_perms:permissionSetGroupsWelcomeScreen', None), ('setup_platform_perms:userManagementSettings', None), ('setup_platform_sfdx:cannotExpire', None), ('setup_platform_sfdx:cannotExpireWrapper', None), ('setup_platform_sfdx:einsteinReviewTerms', None), ('setup_platform_sfdx:einsteinReviewTermsFlow', None), ('setup_platform_sfdx:einsteinTermsSetup', None), ('setup_platform_sfdx:expireOrganization', None), ('setup_platform_sfdx:expireOrganizationWrapper', None), ('setup_platform_sfdx:shapeSetupPage', None), ('setup_platform_sfdx:shapeSubscriberSetup', None), ('setup_platform_sfdx:somaPreferenceSetup', None), ('setup_platform_sfdx:somaSetupPage', None), ('setup_platform_sfdx:test', None), ('setup_platform_sfdx:unexpireOrganization', None), ('setup_platform_sfdx:unexpireOrganizationWrapper', None), ('setup_platformservices_customplatform:schemaSettingsPage', None), ('setup_platformservices_customplatform:schemaSettingsSecurityPrompt', None), ('setup_platformservices_customplatform:schemaSettingsSecurityPromptFooter', None), ('setup_platformservices_customplatform:test', None), ('setup_sales_einsteinForecasting:tuner', None), ('setup_sales_einsteinForecasting:tunerFieldExclusionChoice', None), ('setup_sales_einsteinForecasting:tunerFieldFiltersSelection', None), ('setup_sales_einsteinForecasting:tunerSegmentationChoice', None), ('setup_sales_einsteinForecasting:tunerSegmentationDefinition', None), ('setup_sales_einsteinForecasting:tunerSegmentationDefinitionRow', None), ('setup_sales_einsteinForecasting:tunerSetupFlow', None), ('setup_sales_einsteinForecasting:tunerSetupFlowComplete', None), ('setup_sales_einsteinForecasting:tunerWelcomeMat', None), ('setup_sales_forecasting:forecastingPredictionEnablement', None), ('setup_sales_forecasting:forecastingPredictionSetup', None), ('setup_sales_forecasting:forecastingPredictionSetupStatus', None), ('setup_sales_forecasting:forecastingPredictionSetupStatusContainer', None), ('setup_sales_forecasting:forecastingPredictionVerifyHomepage', None), ('setup_sales_forecasting:forecastingQuotaSettings', None), ('setup_sales_insights:AifeSetupModalReviewTerms', None), ('setup_sales_insights:AifeSetupModalReviewTermsFooter', None), ('setup_sales_insights:accountIqSetup', None), ('setup_sales_insights:autoDataEntrySetup', None), ('setup_sales_insights:campaignInsightsSetup', None), ('setup_sales_insights:engagementScoreSetup', None), ('setup_sales_insights:freemiumActionsAlohaWrapper', None), ('setup_sales_insights:freemiumModalFooter', None), ('setup_sales_insights:freemiumOptOutSetupStep', None), ('setup_sales_insights:freemiumSetupStepIcon', None), ('setup_sales_insights:insightsFreemiumSetupAssistantStep', None), ('setup_sales_insights:insightsSetupCustomizeBox', None), ('setup_sales_insights:insightsSetupStatus', None), ('setup_sales_insights:opportunityIqSetup', None), ('setup_sales_insights:opportunityScoreSetup', None), ('setup_sales_insights:readinessCheck', None), ('setup_sales_insights:readinessCheckFilesDataProvider', None), ('setup_sales_insights:readinessCheckFilesList', None), ('setup_sales_insights:readinessCheckFrame', None), ('setup_sales_insights:readinessCheckPardot', None), ('setup_sales_leadiq:assessor', None), ('setup_sales_leadiq:confirmationModal', None), ('setup_sales_leadiq:fieldFilter', None), ('setup_sales_leadiq:filterList', None), ('setup_sales_leadiq:filterOption', None), ('setup_sales_leadiq:filterRow', None), ('setup_sales_leadiq:filterRowValue', None), ('setup_sales_leadiq:leadScoreSetupFlow', None), ('setup_sales_leadiq:leadiqsettingpage2', None), ('setup_sales_leadiq:leadiqsetup', None), ('setup_sales_leadiq:leadiqsetupconfigs', None), ('setup_sales_leadiq:leadiqsetupdeploymentstatus', None), ('setup_sales_leadiq:milestone', None), ('setup_sales_leadiq:quickAssessment', None), ('setup_sales_leadiq:rowFilter', None), ('setup_sales_leadiq:rowFilterBoolean', None), ('setup_sales_leadiq:rowFilterPicklist', None), ('setup_sales_leadiq:settingsModal', None), ('setup_sales_leadiq:welcomeMat', None), ('setup_sales_pardot:b2bMarketingAnalyticsSetup', None), ('setup_sales_pardot:b2bMarketingAnalyticsSetupStepLink', None), ('setup_sales_pardot:b2bMarketingAnalyticsSetupSummaryBlock', None), ('setup_sales_pardot:einsteinAnalyticsSetup', None), ('setup_sales_pardot:enablePanel', None), ('setup_sales_pardot:enablePardotTabs', None), ('setup_sales_pardot:engagementHistorySetup', None), ('setup_sales_pardot:engagementHistorySetupCustomStep', None), ('setup_sales_pardot:engagementHistorySetupStepLink', None), ('setup_sales_pardot:engagementHistorySetupSummaryBlock', None), ('setup_sales_pardot:pardotAccountSetup', None), ('setup_sales_pardot:pardotTenantRow', None), ('setup_sales_pardot:pardotTenantSetup', None), ('setup_sales_pardot:prospectActivityB2BMarketingAnalyticsSetup', None), ('setup_sales_pardot:searchableCombobox', None), ('setup_sales_pathassistant:paSetupDuelingListsDialog', None), ('setup_sales_pathassistant:paSetupHome', None), ('setup_sales_pathassistant:paSetupInputRichText', None), ('setup_sales_pathassistant:paSetupPAStep', None), ('setup_sales_pathassistant:paSetupStep1Definition', None), ('setup_sales_pathassistant:paSetupStep2Configure', None), ('setup_sales_pathassistant:paSetupStep3Finish', None), ('setup_sales_pathassistant:paSetupWizardTemplate', None), ('setup_sales_spark:customFieldCheckbox', None), ('setup_sales_spark:customFieldCurrency', None), ('setup_sales_spark:customFieldDate', None), ('setup_sales_spark:customFieldDateTime', None), ('setup_sales_spark:customFieldEmail', None), ('setup_sales_spark:customFieldEntityStep', None), ('setup_sales_spark:customFieldForm', None), ('setup_sales_spark:customFieldFormStep', None), ('setup_sales_spark:customFieldLongTextArea', None), ('setup_sales_spark:customFieldNumber', None), ('setup_sales_spark:customFieldPercent', None), ('setup_sales_spark:customFieldPhone', None), ('setup_sales_spark:customFieldPreviewStep', None), ('setup_sales_spark:customFieldSetupFlow', None), ('setup_sales_spark:customFieldText', None), ('setup_sales_spark:customFieldUrl', None), ('setup_sales_spark:eacAgreeToTerms', None), ('setup_sales_spark:eacLSF', None), ('setup_sales_spark:eacLSFPrompt', None), ('setup_sales_spark:eacLandingStep', None), ('setup_sales_spark:eacReviewTermsAndConnectEmailStep', None), ('setup_sales_spark:eacSendEmailStep', None), ('setup_sales_spark:essentialsAssistantPage', None), ('setup_sales_spark:essentialsSetupHome', None), ('setup_sales_spark:essentialsSetupHomeCarousel', None), ('setup_sales_spark:finishEacStep', None), ('setup_sales_spark:leadStatusesCustomizeRow', None), ('setup_sales_spark:opportunityStagesCustomizeRow', None), ('setup_sales_spark:opportunityStagesCustomizeStep', None), ('setup_sales_spark:opportunityStagesInfoStep', None), ('setup_sales_spark:opportunityStagesSetupFlow', None), ('setup_sales_spark:opportunityStagesTemplateStep', None), ('setup_sales_spark:setupAppExchangeTile', None), ('setup_sales_spark:setupLifetimePerformance', None), ('setup_sales_spark:setupOnboardingAssistant', None), ('setup_sales_spark:setupWeeklyPerformance', None), ('setup_sales_spark:sparkOnboarding', None), ('setup_service:allTiles', None), ('setup_service:commBranding', None), ('setup_service:commConfigTopic', None), ('setup_service:commContactForm', None), ('setup_service:commDomainName', None), ('setup_service:commExtension', None), ('setup_service:commExtensionWaiting', None), ('setup_service:commSetupFlow', None), ('setup_service:commStart', None), ('setup_service:commSuccess', None), ('setup_service:commUploader', None), ('setup_service:ctiActionItems', None), ('setup_service:ctiAddUsers', None), ('setup_service:ctiInstallingDependencies', None), ('setup_service:ctiProviderAdditionalDetails', None), ('setup_service:ctiProviderInfo', None), ('setup_service:ctiProviderPicklist', None), ('setup_service:ctiSelectProvider', None), ('setup_service:ctiSetupFlow', None), ('setup_service:ctiSetupSuccess', None), ('setup_service:ctiStart', None), ('setup_service:ctiTermsModal', None), ('setup_service:dataImporterContainer', None), ('setup_service:dataImporterSetupContainer', None), ('setup_service:dataImporterSetupFlow', None), ('setup_service:dataImporterSetupPage', None), ('setup_service:deleteSampleData', None), ('setup_service:deleteSampleDataLoading', None), ('setup_service:deleteSampleDataSetupFlow', None), ('setup_service:deleteSampleDataSuccessful', None), ('setup_service:diwB2bBranching', None), ('setup_service:diwChooseObject', None), ('setup_service:diwCsvExportGuide', None), ('setup_service:diwExportGuideBranching', None), ('setup_service:diwExportGuideColumn', None), ('setup_service:diwFinish', None), ('setup_service:diwIntroStep', None), ('setup_service:diwMapFields', None), ('setup_service:diwUploadData', None), ('setup_service:e2cConfigForward', None), ('setup_service:e2cEmailName', None), ('setup_service:e2cGmailAddForwardingAddress', None), ('setup_service:e2cGmailConnectorAuth', None), ('setup_service:e2cGmailForwardingConfirmation', None), ('setup_service:e2cGmailForwardingLinkLoader', None), ('setup_service:e2cGmailSave', None), ('setup_service:e2cGmailSetupFlow', None), ('setup_service:e2cGmailSetupPage', None), ('setup_service:e2cGmailSetupPageContainer', None), ('setup_service:e2cGmailSetupPageDeleteModal', None), ('setup_service:e2cGmailSetupPageEditModal', None), ('setup_service:e2cRoundtripVerification', None), ('setup_service:e2cSelectProvider', None), ('setup_service:e2cSetupFlow', None), ('setup_service:e2cStart', None), ('setup_service:e2cSuccess', None), ('setup_service:e2cVerifyRoutingAddress', None), ('setup_service:facebookSetupFlow', None), ('setup_service:inlineEditPopover', None), ('setup_service:kbAuthors', None), ('setup_service:kbDataCategoryGroup', None), ('setup_service:kbSetupFlow', None), ('setup_service:kbStart', None), ('setup_service:kbSuccess', None), ('setup_service:liveAgentCodeSnippet', None), ('setup_service:liveAgentDeployWaiting', None), ('setup_service:liveAgentEndpoints', None), ('setup_service:liveAgentOfflineSupport', None), ('setup_service:liveAgentOfflineSupportConfig', None), ('setup_service:liveAgentPrechat', None), ('setup_service:liveAgentQueueCreation', None), ('setup_service:liveAgentSetupFlow', None), ('setup_service:liveAgentStart', None), ('setup_service:liveAgentSuccess', None), ('setup_service:liveMessageAppleBusinessChat', None), ('setup_service:liveMessageAuth', None), ('setup_service:liveMessageBestPractice', None), ('setup_service:liveMessageDeployWaiting', None), ('setup_service:liveMessageProceedOmni', None), ('setup_service:liveMessageSelectChannel', None), ('setup_service:liveMessageSelectFacebookPage', None), ('setup_service:liveMessageSetupFlow', None), ('setup_service:liveMessageSms', None), ('setup_service:liveMessageStart', None), ('setup_service:liveMessageSuccess', None), ('setup_service:liveMessageWeChat', None), ('setup_service:liveMessageWeChatDetails', None), ('setup_service:liveMessageWhatsApp', None), ('setup_service:lsfConnect', None), ('setup_service:lsfContent', None), ('setup_service:lsfEndStep', None), ('setup_service:lsfStart', None), ('setup_service:lsfSuccess', None), ('setup_service:lshLifetimePerformanceCharts', None), ('setup_service:lshQueueCreation', None), ('setup_service:lshRecommendedTopCards', None), ('setup_service:lshTileServices', None), ('setup_service:lshTodaysPerformanceCharts', None), ('setup_service:multiAddWithFooter', None), ('setup_service:objectLinkingRuleChannelSelection', None), ('setup_service:objectLinkingRuleGeneralInfo', None), ('setup_service:objectLinkingRuleLinkingLogic', None), ('setup_service:objectLinkingRuleNoChannelsAvailable', None), ('setup_service:objectLinkingRuleObjectToLink', None), ('setup_service:objectLinkingRuleSetupFlow', None), ('setup_service:objectLinkingRuleStart', None), ('setup_service:objectLinkingRuleSuccess', None), ('setup_service:objectLinkingRuleWaiting', None), ('setup_service:omniDeployWaiting', None), ('setup_service:omniError', None), ('setup_service:omniQueueCreation', None), ('setup_service:omniRoutingConfig', None), ('setup_service:omniRoutingConfigTableRow', None), ('setup_service:omniSetupFlow', None), ('setup_service:omniStart', None), ('setup_service:omniSuccess', None), ('setup_service:omniWorkLoad', None), ('setup_service:orgShape', None), ('setup_service:packageInstaller', None), ('setup_service:queueRoutingConfigTableRow', None), ('setup_service:quickActionCustomizeFields', None), ('setup_service:quickActionCustomizeFieldsAddFieldPopover', None), ('setup_service:quickActionCustomizeFieldsRow', None), ('setup_service:quickActionCustomizeFieldsRowIconButton', None), ('setup_service:serviceCaseStatus', None), ('setup_service:serviceCaseStatusAddTemplate', None), ('setup_service:serviceSetupHome', None), ('setup_service:setupCaseStatusFlow', None), ('setup_service:setupFlowError', None), ('setup_service:setupMatTile', None), ('setup_service:setupMatTileWrapper', None), ('setup_service:socialAuth', None), ('setup_service:socialEnablePages', None), ('setup_service:socialStart', None), ('setup_service:socialSuccess', None), ('setup_service:socialTeamAccess', None), ('setup_service:socialWaiting', None), ('setup_service:treeGridSelectionTriggerCell', None), ('setup_service:twitterSetupFlow', None), ('setup_service_entityarchiving:entityArchivingSetup', None), ('setup_service_entityarchiving:entityArchivingSetupView', None), ('setup_service_fieldservice:baseTemplateAssignment', None), ('setup_service_fieldservice:createMobileExtensionModal', None), ('setup_service_fieldservice:emptyState', None), ('setup_service_fieldservice:fieldServiceSettings', None), ('setup_service_fieldservice:mobileExtensionGetStarted', None), ('setup_service_fieldservice:mobileExtensionList', None), ('setup_service_fieldservice:quickActionLinkedList', None), ('setup_service_fieldservice:setupEntityList', None), ('setup_service_fieldservice:timeSheetTemplate', None), ('setup_service_fieldservice:timeSheetTemplateAssignment', None), ('setup_service_fieldservice:timeSheetTemplateWizard', None), ('setup_service_fieldservice:timeSheetTemplateWizardDetailsStep', None), ('setup_service_fieldservice:timeSheetTemplateWizardFlow', None), ('setup_service_fieldservice:updateTemplateAssignmentModal', None), ('setup_service_fieldservice:viewLinksMobileExtensionModal', None), ('setup_service_fieldservice:visionPrediction', None), ('setup_service_intents:createIntentModal', None), ('setup_service_intents:domainList', None), ('setup_service_intents:domainListCard', None), ('setup_service_intents:domainQuickViewModal', None), ('setup_service_intents:intentListCard', None), ('setup_service_intents:intentRecord', None), ('setup_service_intents:intentSetRecord', None), ('setup_service_intents:intentSetup', None), ('setup_service_intents:slotClassListCard', None), ('setup_service_intents:slotClassRecord', None), ('setup_service_livemessage:channelsContainer', None), ('setup_service_livemessage:channelsGrid', None), ('setup_service_livemessage:errorType', None), ('setup_service_livemessage:messageType', None), ('setup_service_livemessage:messagingChannelEditAction', None), ('setup_service_livemessage:messagingChannelEditModal', None), ('setup_service_livemessage:messagingDeliveryErrorLogContainer', None), ('setup_service_livemessage:messagingDeliveryErrorMassDelete', None), ('setup_service_livemessage:messagingDeliveryErrorViewAction', None), ('setup_service_livemessage:messagingDeliveryErrorViewModal', None), ('setup_service_livemessage:messagingSensitiveDataRuleEditAction', None), ('setup_service_livemessage:messagingSensitiveDataRuleEditModal', None), ('setup_service_livemessage:messagingSensitiveDataRules', None), ('setup_service_livemessage:messagingTemplateDeveloperNameField', None), ('setup_service_livemessage:messagingTemplateMasterLabelField', None), ('setup_service_livemessage:messagingTemplateMessageField', None), ('setup_service_livemessage:messagingTemplateSettingsContainer', None), ('setup_service_livemessage:saveButton', None), ('setup_service_livemessage:sensitiveDataRuleActionTypeListField', None), ('setup_service_livemessage:sensitiveDataRuleEnforceOnListField', None), ('setup_service_livemessage:sensitiveDataRulePatternListField', None), ('setup_service_livemessage:settingsContainer', None), ('setup_service_messenger:messengerSettings', None), ('setup_service_messenger:messengerUsers', None), ('setup_service_objectlinking:channelSetupFlowTile', None), ('setup_service_objectlinking:channelType', None), ('setup_service_objectlinking:linkingRulesContainer', None), ('setup_service_objectlinking:rulesGrid', None), ('setup_service_objectlinking:settingsContainer', None), ('setup_service_omnichannel:attributeBasedRoutingCombobox', None), ('setup_service_omnichannel:attributeBasedRoutingSelectAttributeList', None), ('setup_service_omnichannel:attributeBasedRoutingSelectAttributeRow', None), ('setup_service_omnichannel:attributeBasedRoutingSetup', None), ('setup_service_omnichannel:attributeBasedRoutingSetupFooter', None), ('setup_service_omnichannel:attributeBasedRoutingSetupHeader', None), ('setup_service_omnichannel:attributeBasedRoutingSetupModal', None), ('setup_service_omnichannel:attributeBasedRoutingSetupSelectAttributes', None), ('setup_service_omnichannel:attributeBasedRoutingSetupSelectEntity', None), ('setup_service_omnichannel:attributeBasedRoutingSetupSelectFields', None), ('setup_service_omnichannel:attributeBasedSaveModalFooter', None), ('setup_service_omnichannel:errorPopover', None), ('setup_service_predictions:addFields', None), ('setup_service_predictions:addFieldsContent', None), ('setup_service_predictions:baseModal', None), ('setup_service_predictions:confirmationModal', None), ('setup_service_predictions:dataSummary', None), ('setup_service_predictions:dataSummaryCaseObjectCount', None), ('setup_service_predictions:dataSummaryReviewScreen', None), ('setup_service_predictions:einsteinCaseClassificationSegmentationScreen', None), ('setup_service_predictions:einsteinCaseClassificationSetup', None), ('setup_service_predictions:einsteinCaseClassificationSetupDataSegmentationBase', None), ('setup_service_predictions:einsteinCaseClassificationSetupDataSegmentationStart', None), ('setup_service_predictions:fieldList', None), ('setup_service_predictions:fieldListItem', None), ('setup_service_predictions:initialProgressBar', None), ('setup_service_predictions:modelConfigPage', None), ('setup_service_predictions:modelDetailHeader', None), ('setup_service_predictions:modelList', None), ('setup_service_predictions:modelListItem', None), ('setup_service_predictions:modelListItemContainer', None), ('setup_service_predictions:modelOverviewPage', None), ('setup_service_predictions:predictiveModelsCard', None), ('setup_service_predictions:progressBar', None), ('setup_service_predictions:report', None), ('setup_service_predictions:reportChart', None), ('setup_service_predictions:reviewBasics', None), ('setup_service_predictions:reviewFields', None), ('setup_service_predictions:reviewTerms', None), ('setup_service_predictions:reviewTermsFlow', None), ('setup_service_predictions:segmentationInfoSidebar', None), ('setup_service_predictions:selectFields', None), ('setup_service_predictions:settings', None), ('setup_service_predictions:setupModelPage', None), ('setup_service_predictions:setupReviewFields', None), ('setup_service_predictions:thresholdPicker', None), ('setup_service_scs:caseRulesTab', None), ('setup_service_scs:inboundSettingsTab', None), ('setup_service_scs:scopedNotification', None), ('setup_service_scs:socialBusinessRulesCaseSubject', None), ('setup_service_scs:socialBusinessRulesCaseSubjectAddField', None), ('setup_service_scs:socialBusinessRulesCaseSubjectCustomSubject', None), ('setup_service_scs:socialBusinessRulesContainer', None), ('setup_service_scs:socialBusinessRulesFooter', None), ('setup_service_scs:socialBusinessRulesTabs', None), ('setup_service_smb:audioUploader', None), ('setup_service_smb:createAgentQueue', None), ('setup_service_smb:hcCreateTopics', None), ('setup_service_smb:hcCreateTopicsRow', None), ('setup_service_smb:hcSetupFlow', None), ('setup_service_smb:hcStart', None), ('setup_service_smb:hcSuccess', None), ('setup_service_smb:helpCenterSetupPage', None), ('setup_service_smb:lsfGenericStep', None), ('setup_service_smb:lsfQueueCreation', None), ('setup_service_smb:voiceChannelBusinessHours', None), ('setup_service_smb:voiceChannelMessageUploader', None), ('setup_service_smb:voiceChannelName', None), ('setup_service_smb:voiceChannelSelectNumber', None), ('setup_service_smb:voiceChannelSetupFlow', None), ('setup_service_smb:voiceChannelStart', None), ('setup_service_smb:voiceChannelSuccess', None), ('setup_service_smb:voiceRouting', None), ('setup_service_smb:voiceRoutingSetupFlow', None), ('setup_service_smb:voiceSelectPhone', None), ('setup_suggested_articles:suggestedArticlesSetup', None), ('setup_suggested_articles:suggestedArticlesSetupBasicsStep', None), ('setup_suggested_articles:suggestedArticlesSetupConfigurationFlow', None), ('setup_suggested_articles:suggestedArticlesSetupFieldList', None), ('setup_suggested_articles:suggestedArticlesSetupHomePage', None), ('setup_suggested_articles:suggestedArticlesSetupInformBeforeBuild', None), ('setup_suggested_articles:suggestedArticlesSetupModal', None), ('setup_suggested_articles:suggestedArticlesSetupProgressBar', None), ('setup_suggested_articles:suggestedArticlesSetupReviewTerms', None), ('setup_suggested_articles:suggestedArticlesSetupReviewTermsFlow', None), ('setup_suggested_articles:suggestedArticlesSetupSelectFieldsStep', None), ('setup_suggested_articles:suggestedArticlesSetupStep', None), ('setup_suggested_articles:suggestedArticlesSetupWarnBeforeEdit', None), ('setup_suggested_response:initialProgressBarItem', None), ('setup_suggested_response:processIllustrationProgressBar', None), ('setup_suggested_response:replyRecommendationActivatePageInfo', None), ('setup_suggested_response:replyRecommendationBuildInfo', None), ('setup_suggested_response:replyTextListView', None), ('setup_suggested_response:rrProgressBar', None), ('setup_suggested_response:suggestedResponseSetup', None), ('setupnav:appImageUpload', None), ('setupnav:appLauncherPreview', None), ('setupnav:appManager', None), ('setupnav:availableProfilesDataProvider', None), ('setupnav:formFactorsCellRenderer', None), ('setupnav:iconPicker', None), ('setupnav:iconPickerListItem', None), ('setupnav:iconPickerModal', None), ('setupnav:infiniteDuelingListTestHarness', None), ('setupnav:lsfEditFlow', None), ('setupnav:lsfMilestone', None), ('setupnav:lsfMilestoneAppCapabilities', None), ('setupnav:lsfMilestoneAppNavigation', None), ('setupnav:lsfMilestoneCreate', None), ('setupnav:lsfMilestoneItems', None), ('setupnav:lsfMilestoneNavigationRules', None), ('setupnav:lsfMilestoneProfiles', None), ('setupnav:lsfMilestoneUtilityBar', None), ('setupnav:lsfNewFlow', None), ('setupnav:uitypeCellRenderer', None), ('setupnav:upgradeCustomApp', None), ('setupnav:utilityBarItemIconPicker', None), ('setupnav:utilityBarSetup', None), ('setupnav:utilityBarSetupPropertyEditor', None), ('setupnav:utilityBarSetupTab', None), ('setupnav:utilityBarSetupTabset', None), ('setupnav:utilityBarSetupVisualEditorPalette', None), ('setupwizard:alertBox', None), ('setupwizard:footer', None), ('setupwizard:header', None), ('setupwizard:milestoneMarker', None), ('setupwizard:milestoneTracker', None), ('setupwizard:overlay', None), ('setupwizard:stdMilestone', None), ('setupwizard:stdOverlay', None), ('setupwizard:stdSubstep', None), ('setupwizard:stepLevelMessage', None), ('setupwizard:testMilestone', None), ('setupwizard:wizard', None), ('sfa:accountLookupCard', None), ('sfa:addAccTeamOnOpp', None), ('sfa:addCustomPriceOnPricebook', None), ('sfa:addCustomPriceOnProduct', None), ('sfa:addCustomPriceOnProductFooter', None), ('sfa:addDefaultTeam', None), ('sfa:analyticsHome', None), ('sfa:assetDateFieldOverride', None), ('sfa:caseLookupCard', None), ('sfa:checkboxButton', None), ('sfa:checkboxToggle', None), ('sfa:chooseCurrencyFilter', None), ('sfa:choosePricebook', None), ('sfa:choosePricebookFooter', None), ('sfa:choosePricebookPostSaveRunnable', None), ('sfa:closableMessage', None), ('sfa:contactLookupCard', None), ('sfa:createPartnerContainer', None), ('sfa:datePicker', None), ('sfa:datePickerItem', None), ('sfa:datePickerScroller', None), ('sfa:datePickerWeek', None), ('sfa:deleteAllTeams', None), ('sfa:detailPanelWrapper', None), ('sfa:dialog', None), ('sfa:displayTeamEffectiveAccessContainer', None), ('sfa:duelingListBoxes', None), ('sfa:eventActivityDate', None), ('sfa:eventActivityDateTime', None), ('sfa:eventDateTime', None), ('sfa:eventDurationInMinutes', None), ('sfa:eventIsAllDayEvent', None), ('sfa:eventOwnerPreventEntityChange', None), ('sfa:filterMenu', None), ('sfa:folderHome', None), ('sfa:forecasting', None), ('sfa:hierarchyDataManager', None), ('sfa:hierarchyFullView', None), ('sfa:hierarchyListViewAction', None), ('sfa:hierarchyListViewCard', None), ('sfa:hierarchyListViewDetails', None), ('sfa:hierarchyPrompt', None), ('sfa:hierarchyTriggerCell', None), ('sfa:importButton', None), ('sfa:importContact', None), ('sfa:launchPhone', None), ('sfa:lightningConversionWelcomeMat', None), ('sfa:linkedInSalesNavigatorPage', None), ('sfa:navigateToHierarchyButton', None), ('sfa:objTerrAssociationCreate', None), ('sfa:objTerrAssociationCreateFooter', None), ('sfa:ocrMultiEdit', None), ('sfa:ocrRelatedListPrimaryField', None), ('sfa:opportunityContactRoleIsPrimary', None), ('sfa:opportunityFieldOverride', None), ('sfa:opportunityLineItemFieldOverride', None), ('sfa:opportunityLineItemMultiEdit', None), ('sfa:opportunityLineItemScheduleMultiEdit', None), ('sfa:opportunityLineItemScheduleSubtotalsFooter', None), ('sfa:opportunityLookupCard', None), ('sfa:opportunitySplitMultiEdit', None), ('sfa:opportunitySplitSubtotalsFooter', None), ('sfa:opportunitySplitUser', None), ('sfa:outputCompoundPhotoUserName', None), ('sfa:outputLookupForContactPoint', None), ('sfa:outputLookupNoNavigation', None), ('sfa:outputLookupWithHierarchyIcon', None), ('sfa:outputNameWithHierarchyIcon', None), ('sfa:outputYearQuarter', None), ('sfa:placeholder', None), ('sfa:productNameOutputLookup', None), ('sfa:productScheduleDeleteAll', None), ('sfa:productScheduleEstablish', None), ('sfa:productScheduleEstablishInputFields', None), ('sfa:saveAndNewEventEntity', None), ('sfa:saveEventEntityAction', None), ('sfa:sfdcEventList', None), ('sfa:sfdcEventListDataManager', None), ('sfa:sfdcEventListStencil', None), ('sfa:sortLineItems', None), ('sfa:stageNameService', None), ('sfa:stageNameServiceForMDP', None), ('sfa:stageNameServiceForecastCategoryWrapper', None), ('sfa:stageNameServiceProbabilityWrapper', None), ('sfa:taskList', None), ('sfa:teamAccessLevel', None), ('sfa:teamDetailPanel', None), ('sfa:teamDetailPanelInfoMessage', None), ('sfa:teamMiniRelatedStencil', None), ('sfa:teamMiniRelatedStencilMobile', None), ('sfa:tempDepend', None), ('sfa:useStandardPrice', None), ('sfa:useStandardPriceUnitPriceWrapper', None), ('siteforce:b2bBody', None), ('siteforce:baseInvalidComponent', None), ('siteforce:baseScopedSldsTemplate', None), ('siteforce:baseSldsTemplate', None), ('siteforce:baseTemplate', None), ('siteforce:cmsConnectManager', None), ('siteforce:cmsConnectProvider', None), ('siteforce:communityTemplate', None), ('siteforce:conditional', None), ('siteforce:contentArea', None), ('siteforce:cptBody', None), ('siteforce:cptThemeCss', None), ('siteforce:designTimeCmpLoader', None), ('siteforce:designTimeCmpLoaderWrapper', None), ('siteforce:designTimeComponent', None), ('siteforce:designTimeEmptyRegion', None), ('siteforce:designTimeLabelLoader', None), ('siteforce:designTimeMode', None), ('siteforce:designTimeModeLoader', None), ('siteforce:designTimeRegion', None), ('siteforce:designTimeSection', None), ('siteforce:dialogMessage', None), ('siteforce:dialogModal', None), ('siteforce:dialogOfflineMessage', None), ('siteforce:dialogPanel', None), ('siteforce:dialogService', None), ('siteforce:dynamicLayout', None), ('siteforce:fontContainer', None), ('siteforce:fontStyle', None), ('siteforce:helpCenterBody', None), ('siteforce:hiddenRegion', None), ('siteforce:hybridAppManager', None), ('siteforce:insuranceBody', None), ('siteforce:integrationServiceAppTemplate', None), ('siteforce:koaBody', None), ('siteforce:koaTemplate', None), ('siteforce:kokuaBody', None), ('siteforce:kokuaTemplate', None), ('siteforce:loadingBalls', None), ('siteforce:napiliBody', None), ('siteforce:napiliFooter', None), ('siteforce:napiliFooterDesignInfo', None), ('siteforce:napiliStyle', None), ('siteforce:napiliTemplate', None), ('siteforce:navigationProvider', None), ('siteforce:networkTracking', None), ('siteforce:oneColumnLayout', None), ('siteforce:pageLoader', None), ('siteforce:panelManager', None), ('siteforce:panelsContainer', None), ('siteforce:placeholderComponent', None), ('siteforce:prmBody', None), ('siteforce:prmThemeCss', None), ('siteforce:publiclyCacheableComponentLoader', None), ('siteforce:qb', None), ('siteforce:quarterback', None), ('siteforce:recordServiceComponent', None), ('siteforce:regionLoader', None), ('siteforce:regionLoaderWrapper', None), ('siteforce:routerInitializer', None), ('siteforce:runtimeComponent', None), ('siteforce:runtimeMode', None), ('siteforce:runtimeRegion', None), ('siteforce:serviceBody', None), ('siteforce:serviceThemeCss', None), ('siteforce:sfdcPage', None), ('siteforce:sldsOneColLayout', None), ('siteforce:sldsThreeCol336Layout', None), ('siteforce:sldsThreeCol363Layout', None), ('siteforce:sldsThreeCol444Layout', None), ('siteforce:sldsThreeCol633Layout', None), ('siteforce:sldsTwoCol48Layout', None), ('siteforce:sldsTwoCol66Layout', None), ('siteforce:sldsTwoCol84Layout', None), ('siteforce:sldsTwoCol84SidebarFeaturedLayout', None), ('siteforce:spinnerManager', None), ('siteforce:starterBody', None), ('siteforce:style', None), ('siteforce:themeLayoutStarter', None), ('siteforce:toast', None), ('siteforce:twoCol74Layout', None), ('siteforce:twoColumnLayout', None), ('siteforce:warningComponent', None), ('siteforce:warningComponentNoData', None), ('siteforceBuilder:cmcHubMenuWrapper', None), ('siteforceBuilder:communityBuilderComponentPalettePanel', None), ('siteforceBuilder:communityBuilderComponentPropertyPanel', None), ('siteforceBuilder:communityBuilderLibraryLoader', None), ('siteforceBuilder:communityBuilderPanelManager', None), ('siteforceBuilder:communityBuilderTemplate', None), ('siteforceBuilder:dropdown', None), ('siteforceBuilder:paletteSectionDisabledMessage', None), ('siteforceBuilder:setupFlowLibraryWrapper', None), ('siteforceBuilder:siteLinkDropdown', None), ('support:caseCommentIsNotificationSelectedField', None), ('support:caseCommentIsPublishedField', None), ('support:caseCommentOutputText', None), ('support:caseHighlightsPreviewStencil', None), ('support:caseHoverDescription', None), ('support:caseMergeSetup', None), ('support:caseTeamActions', None), ('support:changeVisibilityAction', None), ('support:compactClumpItem', None), ('support:compactClumpItemForPreview', None), ('support:compactFeedItem', None), ('support:compactFeedItemArticleContent', None), ('support:compactFeedItemCaseCommentContent', None), ('support:compactFeedItemChatTranscriptContent', None), ('support:compactFeedItemContent', None), ('support:compactFeedItemDefaultContent', None), ('support:compactFeedItemEmailMessageContent', None), ('support:compactFeedItemFieldChangeContent', None), ('support:compactFeedItemForPreview', None), ('support:compactFeedItemHeader', None), ('support:compactFeedItemLogCallContent', None), ('support:compactFeedItemRecordSummaryContent', None), ('support:compactFeedItemSocialPostContent', None), ('support:compactFeedOverflowActionMenu', None), ('support:compactRecordFeedContainerDesktop', None), ('support:contactRequestButton', None), ('support:contactRequestButtonDesignInfo', None), ('support:contactRequestFlow', None), ('support:contactRequestFlowAvailableChannelsDataProvider', None), ('support:contactRequestFlowAvailableReasonsDataProvider', None), ('support:contactRequestFlowChannelSelection', None), ('support:contactRequestFlowDetails', None), ('support:contactRequestFlowError', None), ('support:contactRequestFlowOwnerSelection', None), ('support:contactRequestFlowReasonSelection', None), ('support:contactRequestFlowSuccess', None), ('support:contactRequestFlowsListView', None), ('support:contactRequestFlowsSetup', None), ('support:contactRequestWhatIdLookup', None), ('support:contactRequestWhoIdLookup', None), ('support:crossFrameApiManager', None), ('support:draftOverwriteWarningModal', None), ('support:emailAddress', None), ('support:emailAddresses', None), ('support:emailApproval', None), ('support:emailApprovalNotification', None), ('support:emailAutosaver', None), ('support:emailBody', None), ('support:emailHeader', None), ('support:emailMessageDropdown', None), ('support:emailMessageDropdownButton', None), ('support:emailMessageMergeFieldOverride', None), ('support:emailMessageSubjectFieldLinkOverride', None), ('support:emailRecipientLookup', None), ('support:emailReplyActionLink', None), ('support:enhancedOutputURL', None), ('support:feedContainerForPreview', None), ('support:feedFilters', None), ('support:feedItemAction', None), ('support:inputCaseMergedStatus', None), ('support:inputCaseStatus', None), ('support:inputEmailAttachmentIds', None), ('support:inputEmailRecipients', None), ('support:inputFolderField', None), ('support:inputTextArea', None), ('support:label', None), ('support:lightningQuickTextSetup', None), ('support:likeAction', None), ('support:milestoneItem', None), ('support:milestoneTimer', None), ('support:milestones', None), ('support:milestonesDesignInfo', None), ('support:milestonesList', None), ('support:outputCaseSubjectFieldWrapper', None), ('support:outputFolderField', None), ('support:outputLookupWithPreviewForSubject', None), ('support:outputPhoneManager', None), ('support:outputTextArea', None), ('support:ownerAssignmentForContactRequest', None), ('support:progressRing', None), ('support:publisherQuickSendEmail', None), ('support:quickActionLink', None), ('support:quickActionLinkManager', None), ('support:quickActionRunnable', None), ('support:quickText', None), ('support:quickTextBrowserContainer', None), ('support:quickTextChannelField', None), ('support:quickTextChannelRowTransformer', None), ('support:quickTextChannelViewField', None), ('support:quickTextFloater', None), ('support:quickTextMessageField', None), ('support:quickTextPreview', None), ('support:quickTextToolbarButton', None), ('support:sendEmailQuickAction', None), ('support:toInputEmailRecipients', None), ('support:toggleObjectHomeView', None), ('support:urlImageSelector', None), ('support:voiceCallParticipantOverride', None), ('survey:advanceFeatures', None), ('survey:analytics', None), ('survey:analyticsPublished', None), ('survey:analyticsPublishedv2', None), ('survey:analyticsUnpublished', None), ('survey:answerCsat', None), ('survey:answerDateNew', None), ('survey:answerInputTemplate', None), ('survey:answerMultiChoice', None), ('survey:answerNps', None), ('survey:answerPicklist', None), ('survey:answerRadio', None), ('survey:answerRating', None), ('survey:answerRuntimeBase', None), ('survey:answerSlider', None), ('survey:answerStackRank', None), ('survey:answerStackRankItem', None), ('survey:answerStackRankWeight', None), ('survey:answerTextarea', None), ('survey:baseTemplate', None), ('survey:build', None), ('survey:builder', None), ('survey:builderAddImage', None), ('survey:builderLeftPanel', None), ('survey:builderLeftPanelSurveyItem', None), ('survey:builderRichText', None), ('survey:builderRichTextButtonImage', None), ('survey:builderStylePanel', None), ('survey:builderToolbar', None), ('survey:cloneNewSurveyModal', None), ('survey:cmpInputRuntimeCsat', None), ('survey:cmpInputRuntimeSlider', None), ('survey:cmpInputRuntimeStackRank', None), ('survey:colorPicker', None), ('survey:conditionBuilder', None), ('survey:conditionEntry', None), ('survey:confirmActiveOverrideModal', None), ('survey:createInvitationAction', None), ('survey:dataMapperEditor', None), ('survey:dataMapperWrapper', None), ('survey:defaultNavigationRule', None), ('survey:displayLogicModal', None), ('survey:emailPreviewModal', None), ('survey:emailPreviewPublisher', None), ('survey:emptyState', None), ('survey:expireInvitation', None), ('survey:exportDialog', None), ('survey:exportDialogFooter', None), ('survey:exportDialogHeader', None), ('survey:feedbackScore', None), ('survey:feedbackScoreCommon', None), ('survey:feedbackScoreDesignInfo', None), ('survey:feedbackScoreDesignSubstitute', None), ('survey:feedbackScoreResponse', None), ('survey:fileSelector', None), ('survey:getSharableLinkModal', None), ('survey:header', None), ('survey:logicLabel', None), ('survey:logicModal', None), ('survey:logicRuleList', None), ('survey:logicRuleListItem', None), ('survey:modal', None), ('survey:network', None), ('survey:newSurveyVersionModal', None), ('survey:notDeleteableSurveyItemModal', None), ('survey:pageHeader', None), ('survey:picklistDataProvider', None), ('survey:questionCreatorPanel', None), ('survey:questionEditor', None), ('survey:questionList', None), ('survey:questionOptions', None), ('survey:questionTypePanelItem', None), ('survey:ruleBuilder', None), ('survey:ruleView', None), ('survey:runtimeActionBar', None), ('survey:runtimeAnswerTextarea', None), ('survey:runtimeBaseAnswer', None), ('survey:runtimeCsat', None), ('survey:runtimeDate', None), ('survey:runtimeMultiChoice', None), ('survey:runtimeNps', None), ('survey:runtimeOutputText', None), ('survey:runtimePicklist', None), ('survey:runtimeQuestionDescription', None), ('survey:runtimeQuestionImage', None), ('survey:runtimeQuestionLabel', None), ('survey:runtimeRadioButton', None), ('survey:runtimeRating', None), ('survey:runtimeScreen', None), ('survey:runtimeScreenActionButtons', None), ('survey:runtimeSlider', None), ('survey:runtimeStackRank', None), ('survey:runtimeSurvey', None), ('survey:runtimeThankYou', None), ('survey:runtimeWelcome', None), ('survey:saveAsModal', None), ('survey:send', None), ('survey:sendPublished', None), ('survey:sendUnpublished', None), ('survey:slider', None), ('survey:survey', None), ('survey:surveyActivationModal', None), ('survey:surveyChoiceResponseChart', None), ('survey:surveyCustomSvgIcons', None), ('survey:surveyDesignInfo', None), ('survey:surveyDesignSubstitute', None), ('survey:surveyDetailsLocalization', None), ('survey:surveyEmailBranding', None), ('survey:surveyEmailEditor', None), ('survey:surveyEmailSummary', None), ('survey:surveyEmailWizard', None), ('survey:surveyEmailWizardFooter', None), ('survey:surveyFreeTextDateResponse', None), ('survey:surveyInsertResponseWizard', None), ('survey:surveyInsertResponseWizardFooter', None), ('survey:surveyLocalization', None), ('survey:surveyLocalizationEditor', None), ('survey:surveyLocalizationWizard', None), ('survey:surveyPageLocalization', None), ('survey:surveyQuestionLabelLocalization', None), ('survey:surveyQuestionResponse', None), ('survey:surveyQuestionResponseCharts', None), ('survey:surveyQuestionResponseChartsv2', None), ('survey:surveyResponseStatusCharts', None), ('survey:surveySubjectRLName', None), ('survey:tester_builderLeftPanel', None), ('survey:unsavedChangesWarningModal', None), ('survey:visualPickerInput', None), ('templatesetup:deployPage', None), ('templatesetup:deploymentNotification', None), ('templatesetup:historyPage', None), ('templatesetup:notificationToast', None), ('templatesetup:openNewBrowserTabLink', None), ('templatesetup:pageTitle', None), ('templatesetup:svgIcon', None), ('templatesetup:template', None), ('templatesetup:templateDesc', None), ('templatesetup:templateHistoryItems', None), ('templatesetup:templateItem', None), ('templatesetup:templateListPage', None), ('templatesetup:templatePrerequisites', None), ('templatesetup:templatePromptedValue', None), ('templatesetup:templatePromptedValues', None), ('templatesetup:templateSearch', None), ('templatesetup:templateSearchDataProvider', None), ('templatesetup:templateUninstallLink', None), ('templatesetup:templatesDataProvider', None), ('today:acceptanceStatusIcon', None), ('today:agendaCard', None), ('today:agendaRow', None), ('today:bridgeWrapper', None), ('today:calendar', None), ('today:card', None), ('today:cardLoader', None), ('today:cardLoaderFeeder', None), ('today:cardLoadingUI', None), ('today:clientSideDataProvider', None), ('today:conferenceCall', None), ('today:dashboardCardContainer', None), ('today:debugBox', None), ('today:deviceFeature', None), ('today:deviceManager', None), ('today:eventCard', None), ('today:eventContainer', None), ('today:eventDetailContainer', None), ('today:eventDetailSlide', None), ('today:eventNotesCard', None), ('today:eventRecordHome', None), ('today:eventRecordHomeContainer', None), ('today:eventsManager', None), ('today:geolocation', None), ('today:heroCardItemStencil', None), ('today:inviteeList', None), ('today:inviteeListCard', None), ('today:inviteeListDataProvider', None), ('today:inviteeListRow', None), ('today:inviteeListRowStencil', None), ('today:inviteeRecordHome', None), ('today:landingNew', None), ('today:newsContainer', None), ('today:pageActionManager', None), ('today:perfTools', None), ('today:quickMessage', None), ('today:recentRecordContainer', None), ('today:recentRecordList', None), ('today:recentsCard', None), ('today:recentsCardContainer', None), ('today:relatedRecordList', None), ('today:relatedRecordListAbstract', None), ('today:relatedRecordListCard', None), ('today:relatedRecordListCardStencil', None), ('today:relatedRecordListContainer', None), ('today:settings', None), ('today:settingsButton', None), ('today:settingsHeader', None), ('today:smartStore', None), ('today:taskContainer', None), ('today:tasksCard', None), ('today:tempDepend', None), ('today:template', None), ('today:timeContainer', None), ('ui:abstractDataGrid', None), ('ui:abstractList', None), ('ui:action', None), ('ui:actionButton', None), ('ui:actionCheckbox', None), ('ui:actionDelegate', None), ('ui:actionMenuItem', None), ('ui:asyncComponentManager', None), ('ui:asyncImage', None), ('ui:autocomplete', None), ('ui:autocompleteList', None), ('ui:autocompleteOption', None), ('ui:autocompletePanel', None), ('ui:block', None), ('ui:button', None), ('ui:calendar', None), ('ui:carousel', None), ('ui:carouselDeprecated', None), ('ui:carouselIndicator', None), ('ui:carouselPage', None), ('ui:carouselPageDeprecated', None), ('ui:carouselPageIndicator', None), ('ui:carouselPageIndicatorItem', None), ('ui:checkboxMenuItem', None), ('ui:containerManager', None), ('ui:dataGrid', None), ('ui:dataGridActionColumn', None), ('ui:dataGridColumn', None), ('ui:dataGridSelectionColumn', None), ('ui:dataGridSummaryCell', None), ('ui:dataProvider', None), ('ui:dataTable', None), ('ui:dataTableColumn', None), ('ui:dataTableHeader', None), ('ui:dataTableRow', None), ('ui:dataWriter', None), ('ui:datePicker', None), ('ui:datePickerGrid', None), ('ui:datePickerManager', None), ('ui:dayInMonthCell', None), ('ui:dialog', None), ('ui:dialogButtons', None), ('ui:dialogManager', None), ('ui:dragAndDropAccessibility', None), ('ui:dragAndDropAccessibilityMenu', None), ('ui:draggable', None), ('ui:dropzone', None), ('ui:fieldLabel', None), ('ui:format', None), ('ui:image', None), ('ui:infiniteList', None), ('ui:infiniteListRow', None), ('ui:inlineEditPanelBody', None), ('ui:inlinePanel', None), ('ui:input', None), ('ui:inputCheckbox', None), ('ui:inputCurrency', None), ('ui:inputDate', None), ('ui:inputDateHtml', None), ('ui:inputDateRange', None), ('ui:inputDateTime', None), ('ui:inputDateTimeHtml', None), ('ui:inputDateTrigger', None), ('ui:inputDefaultError', None), ('ui:inputEmail', None), ('ui:inputFile', None), ('ui:inputFileDroppableZone', None), ('ui:inputFileFilesList', None), ('ui:inputFileOpenBrowse', None), ('ui:inputNumber', None), ('ui:inputPercent', None), ('ui:inputPhone', None), ('ui:inputRadio', None), ('ui:inputRange', None), ('ui:inputRichText', None), ('ui:inputSearch', None), ('ui:inputSecret', None), ('ui:inputSelect', None), ('ui:inputSelectOption', None), ('ui:inputSelectOptionGroup', None), ('ui:inputSmartNumber', None), ('ui:inputText', None), ('ui:inputTextArea', None), ('ui:inputTextAreaForAutocomplete', None), ('ui:inputTextForAutocomplete', None), ('ui:inputTimePicker', None), ('ui:inputURL', None), ('ui:interactive', None), ('ui:label', None), ('ui:legend', None), ('ui:list', None), ('ui:listSorter', None), ('ui:manifest', None), ('ui:menu', None), ('ui:menuItem', None), ('ui:menuItemSeparator', None), ('ui:menuList', None), ('ui:menuTrigger', None), ('ui:menuTriggerLink', None), ('ui:message', None), ('ui:modal', None), ('ui:output', None), ('ui:outputCheckbox', None), ('ui:outputCurrency', None), ('ui:outputDate', None), ('ui:outputDateTime', None), ('ui:outputEmail', None), ('ui:outputLabel', None), ('ui:outputMultiSelect', None), ('ui:outputNumber', None), ('ui:outputPercent', None), ('ui:outputPhone', None), ('ui:outputRichText', None), ('ui:outputSelect', None), ('ui:outputText', None), ('ui:outputTextArea', None), ('ui:outputURL', None), ('ui:pager', None), ('ui:pagerJumpToPage', None), ('ui:pagerNextPrevious', None), ('ui:pagerPageInfo', None), ('ui:pagerPageSize', None), ('ui:panel', None), ('ui:panelManager2', None), ('ui:picklistLabel', None), ('ui:pill', None), ('ui:pillContainer', None), ('ui:pillContainerAutoComplete', None), ('ui:pillContainerAutoCompleteOption', None), ('ui:popup', None), ('ui:popupTarget', None), ('ui:popupTrigger', None), ('ui:radioMenuItem', None), ('ui:radioToggleMenuItem', None), ('ui:resizeObserver', None), ('ui:scroller', None), ('ui:scrollerDeprecated', None), ('ui:scrollerWrapper', None), ('ui:spinner', None), ('ui:stamp', None), ('ui:tab', None), ('ui:tabBar', None), ('ui:tabItem', None), ('ui:tabOverflowMenuItem', None), ('ui:tabset', None), ('ui:timePicker', None), ('ui:toolbar', None), ('ui:tooltip', None), ('ui:tooltipAdvanced', None), ('ui:tree', None), ('ui:treeNode', None), ('ui:vbox', None), ('ui:virtualDataGrid', None), ('ui:virtualDataTable', None), ('ui:virtualList', None), ('ui:virtualMenuWrapper', None), ('uiExamples:autocompleteDataProvider', None), ('uiExamples:autocompleteExample', None), ('uiExamples:autocompleteOptionExample', None), ('uiExamples:autocompleteOptionExampleExtended', None), ('uiExamples:buttonExample', None), ('uiExamples:carouselExample', None), ('uiExamples:checkbox', None), ('uiExamples:columnResizing', None), ('uiExamples:currency', None), ('uiExamples:dataGridDynamicColumns', None), ('uiExamples:dataGridKitchenSink', None), ('uiExamples:dataGridKitchenSinkDataProvider', None), ('uiExamples:dataProviderExample', None), ('uiExamples:date', None), ('uiExamples:datePicker', None), ('uiExamples:datetime', None), ('uiExamples:detailPopover', None), ('uiExamples:dragAndDropExample', None), ('uiExamples:dragAndDropProvider', None), ('uiExamples:email', None), ('uiExamples:gridActionCell', None), ('uiExamples:headerGridActionCell', None), ('uiExamples:iconCmp', None), ('uiExamples:infiniteDataProvider', None), ('uiExamples:infiniteList', None), ('uiExamples:infiniteListDataProvider', None), ('uiExamples:infiniteListRow', None), ('uiExamples:inputExample', None), ('uiExamples:inputNumberExample', None), ('uiExamples:inputTextExample', None), ('uiExamples:iterationExample', None), ('uiExamples:libraryExample', None), ('uiExamples:mobileViewport', None), ('uiExamples:modalContent', None), ('uiExamples:outputExample', None), ('uiExamples:panelContent', None), ('uiExamples:panelFooter', None), ('uiExamples:panelHeader', None), ('uiExamples:panelPositioningExample', None), ('uiExamples:phone', None), ('uiExamples:popupExample', None), ('uiExamples:radio', None), ('uiExamples:registerCustomPanel', None), ('uiExamples:renderIfExample', None), ('uiExamples:secret', None), ('uiExamples:tabsetExample', None), ('uiExamples:text', None), ('uiExamples:textarea', None), ('uiExamples:tooltipExample', None), ('uiExamples:url', None), ('uiExamples:virtualDataGridKitchenSink', None), ('uiExamples:virtualDataTable', None), ('uiExamples:virtualListExample', None), ('uns:activitiesCard', None), ('uns:activitiesManager', None), ('uns:cardQueue', None), ('uns:defaultNotificationManager', None), ('uns:eventsCard', None), ('uns:eventsManager', None), ('uns:notificationCardFrame', None), ('uns:notificationDefaultCard', None), ('uns:notifications', None), ('uns:notificationsCounter', None), ('uns:notificationsDataProvider', None), ('uns:notificationsListRow', None), ('uns:notificationsPanel', None), ('uns:notificationsVirtualList', None), ('uns:tasksCard', None), ('uns:tasksManager', None), ('userProvisioningUI:analyze', None), ('userProvisioningUI:approval', None), ('userProvisioningUI:break', None), ('userProvisioningUI:collect', None), ('userProvisioningUI:commit', None), ('userProvisioningUI:connector', None), ('userProvisioningUI:errorMessage', None), ('userProvisioningUI:linking', None), ('userProvisioningUI:operation', None), ('userProvisioningUI:summary', None), ('userProvisioningUI:welcome', None), ('visualEditor:accordionSectionsEditor', None), ('visualEditor:appBuilderProvider', None), ('visualEditor:assignmentTable', None), ('visualEditor:attributeDataProvider', None), ('visualEditor:baseBuilder', None), ('visualEditor:baseEditor', None), ('visualEditor:baseEditorPanel', None), ('visualEditor:booleanEditor', None), ('visualEditor:booleanEditorDataProvider', None), ('visualEditor:booleanPicklistEditor', None), ('visualEditor:clientAttributeTypeProvider', None), ('visualEditor:colorEditor', None), ('visualEditor:columnsEditor', None), ('visualEditor:componentPropertiesEditor', None), ('visualEditor:componentPropertiesEditorSection', None), ('visualEditor:containerComponentEditorItem', None), ('visualEditor:containerComponentEditorItemAttributesEditor', None), ('visualEditor:criteriaEditor', None), ('visualEditor:criteriaEditorPanelBody', None), ('visualEditor:dateTimeEditor', None), ('visualEditor:dialogErrors', None), ('visualEditor:doubleEditor', None), ('visualEditor:draggable', None), ('visualEditor:droppable', None), ('visualEditor:duelingList', None), ('visualEditor:duelingListItem', None), ('visualEditor:entityNameEditor', None), ('visualEditor:facetEditor', None), ('visualEditor:fieldEditor', None), ('visualEditor:fieldTraverser', None), ('visualEditor:flowArgumentsEditor', None), ('visualEditor:flowArgumentsRecordIdInput', None), ('visualEditor:focusablePanel', None), ('visualEditor:guardrailsContainer', None), ('visualEditor:highlightsPanelDesignInfo', None), ('visualEditor:highlightsPanelDesignInfoDialogContent', None), ('visualEditor:inboxTabsetEditor', None), ('visualEditor:infoComponent', None), ('visualEditor:infoHeader', None), ('visualEditor:infoList', None), ('visualEditor:integerEditor', None), ('visualEditor:itemList', None), ('visualEditor:itemListRow', None), ('visualEditor:jQueryUIInteraction', None), ('visualEditor:labelEditor', None), ('visualEditor:modal', None), ('visualEditor:modelData', None), ('visualEditor:modelHost', None), ('visualEditor:modelRemoteData', None), ('visualEditor:modelRemoteHost', None), ('visualEditor:motifPicker', None), ('visualEditor:motifPickerItem', None), ('visualEditor:motifPickerList', None), ('visualEditor:multiLineTextEditor', None), ('visualEditor:multiselectEditor', None), ('visualEditor:multiselectPicklistEditor', None), ('visualEditor:pageAssignmentBaseDataProvider', None), ('visualEditor:pageAssignmentBaseStep', None), ('visualEditor:pageAssignmentProfilePickerStepDataProvider', None), ('visualEditor:pageAssignmentWizard', None), ('visualEditor:pageAssignmentWizardFooter', None), ('visualEditor:palette', None), ('visualEditor:paletteItem', None), ('visualEditor:paletteItemRow', None), ('visualEditor:paletteSection', None), ('visualEditor:picklistAutocompleteDeprecated', None), ('visualEditor:picklistAutocompleteOption', None), ('visualEditor:picklistAutocompleteSpecialOption', None), ('visualEditor:picklistEditor', None), ('visualEditor:picklistEditorDataProvider', None), ('visualEditor:picklistEditorDataProviderDeprecated', None), ('visualEditor:picklistEditorDeprecated', None), ('visualEditor:postmessageManager', None), ('visualEditor:propertyEditor', None), ('visualEditor:propertyEditorItem', None), ('visualEditor:readOnlyEditor', None), ('visualEditor:recordHomeTabsDesignInfo', None), ('visualEditor:relatedFieldSummary', None), ('visualEditor:relatedFieldTraversalDialog', None), ('visualEditor:resizable', None), ('visualEditor:richTextCkEditor', None), ('visualEditor:richTextQuillEditor', None), ('visualEditor:ruleEditor', None), ('visualEditor:ruleInfo', None), ('visualEditor:ruleList', None), ('visualEditor:selectableTable', None), ('visualEditor:serverPaletteItemsProvider', None), ('visualEditor:serverPropertyEditorProvider', None), ('visualEditor:sortable', None), ('visualEditor:sortableList', None), ('visualEditor:sortableListItem', None), ('visualEditor:stringEditor', None), ('visualEditor:style', None), ('visualEditor:tableActionCell', None), ('visualEditor:tabsetEditor', None), ('visualEditor:template', None), ('voice:baseCallHandlerInConsole', None), ('voice:callAudioLevel', None), ('voice:callDisposition', None), ('voice:callDispositionList', None), ('voice:callDispositionListContainer', None), ('voice:callDispositionListItem', None), ('voice:callFeedback', None), ('voice:callHandlerContainer', None), ('voice:callHistoryList', None), ('voice:callListContainer', None), ('voice:callListItem', None), ('voice:callPanel', None), ('voice:callSavePanel', None), ('voice:callTemplateEditor', None), ('voice:callTemplatePanel', None), ('voice:coachingListContainer', None), ('voice:coachingPanel', None), ('voice:coachingRecord', None), ('voice:compactRecord', None), ('voice:connectedPanel', None), ('voice:createCallList', None), ('voice:dialPad', None), ('voice:durationRenderer', None), ('voice:feedbackPanel', None), ('voice:getVendorLine', None), ('voice:incomingPanel', None), ('voice:keyPad', None), ('voice:launchSms', None), ('voice:manageLogACall', None), ('voice:networkConnectivity', None), ('voice:numberManagement', None), ('voice:outputDuration', None), ('voice:outputPhone', None), ('voice:phoneNumberPanel', None), ('voice:phoneRenderer', None), ('voice:phoneRowEntry', None), ('voice:phoneSettings', None), ('voice:powerDialer', None), ('voice:profileCallLogQuickAction', None), ('voice:quickSetupButton', None), ('voice:recordingDurationRenderer', None), ('voice:recordingManagement', None), ('voice:recordingMassDelete', None), ('voice:recordingSettings', None), ('voice:releaseNumber', None), ('voice:replaceRecording', None), ('voice:replaceRecordingSetup', None), ('voice:selectPhone', None), ('voice:simpleActivityTimeline', None), ('voice:sliderCheckBox', None), ('voice:softphone', None), ('voice:talkChannelConfigSetup', None), ('voice:talkEditUsers', None), ('voice:talkEnabledSuccessModal', None), ('voice:talkNumberSetup', None), ('voice:talkSetupErrorHeader', None), ('voice:talkSetupErrorMessage', None), ('voice:talkSetupLogicDiagramPanel', None), ('voice:talkSetupPage', None), ('voice:trialTerms', None), ('voice:unknownContact', None), ('voice:usageRenderer', None), ('voice:usageReport', None), ('voice:voiceAudioPlayer', None), ('voice:voiceLocalPresencePage', None), ('voice:voiceMailItem', None), ('voice:voiceMailList', None), ('voice:voiceMailRecorder', None), ('voice:voiceMailSettings', None), ('voice:voiceSetupPage', None), ('voice:voicemailMessageListContainer', None), ('voice:voicemailMessageListItem', None), ('wave:analyticsGettingStartedSetup', None), ('wave:analyticsGettingStartedSetupAssistantPage', None), ('wave:analyticsGettingStartedSetupAssistantTileCollection', None), ('wave:analyticsGettingStartedSetupEnablementPanel', None), ('wave:annotationFeedControl', None), ('wave:annotationPanel', None), ('wave:annotationPublisher', None), ('wave:annotationPublisherControl', None), ('wave:appNameRenderer', None), ('wave:asset', None), ('wave:feedItemFullView', None), ('wave:filterEditor', None), ('wave:loadingSpinnerCard', None), ('wave:recordActions', None), ('wave:sdk', None), ('wave:sdkExample', None), ('wave:sharingInheritanceCoverage', None), ('wave:sharingInheritanceCoverageEmptyCard', None), ('wave:sharingInheritanceCoverageReportTable', None), ('wave:sharingInheritanceCoverageTypeTab', None), ('wave:stepTile', None), ('wave:tempDepend', None), ('wave:waveAddRecipients', None), ('wave:waveAssetRecordHome', None), ('wave:waveConnectToQuip', None), ('wave:waveDashboard', None), ('wave:waveHelpTrayWrapper', None), ('wave:waveHomeEacFreeTab', None), ('wave:waveHomeHvsTab', None), ('wave:waveHomeTab', None), ('wave:waveSubscriptionRecipientsLookup', None), ('wave:waveSubscriptionRecipientsLookupDataProvider', None), ('wave:waveTemplate', None), ('wave:waveVFPageWrapper', None), ('waveapps:clickableDatatable', None), ('waveapps:clientSegmentation', None), ('waveapps:color', None), ('waveapps:demoLearningAdventure', None), ('waveapps:demoSalesAnalytics', None), ('wfm:cpDeleteDialog', None), ('wfm:cpDeleteDialogFooter', None), ('wfm:cpSaveDialog', None), ('wfm:cpSaveDialogFooter', None), ('wfm:createWorkForecast', None), ('wfm:fcChooseConfigGroup', None), ('wfm:fcChooseField', None), ('wfm:fcChooseFieldValue', None), ('wfm:fcChooseInterval', None), ('wfm:fcExportDialog', None), ('wfm:fcExportDialogFooter', None), ('wfm:fcNameAndSave', None), ('wfm:fcNewForecastWizard', None), ('wfm:fcSaveSuccess', None), ('wfm:fcSelectDateRange', None), ('wfm:fcSetupAggFilter', None), ('wfm:fcSetupConfigGroups', None), ('wfm:fcSetupConfigGroupsListView', None), ('wfm:fcSetupNameAndSave', None), ('wfm:fcSetupNewForecastConfig', None), ('wfm:fcSetupSaveSuccess', None), ('wfm:fcSetupSelectEntity', None), ('wfm:fcSetupSelectFields', None), ('wfm:workForecastRecordHome', None), ('wits:execsTeamMember', None), ('wits:feedbackButton', None), ('wits:news', None), ('wits:newsActionsMenu', None), ('wits:newsArticleImage', None), ('wits:newsCardsContainer', None), ('wits:newsCarouselItem', None), ('wits:newsCategoryList', None), ('wits:newsItem', None), ('wits:newsLanding', None), ('wits:newsList', None), ('wits:newsListItem', None), ('wits:newsPanel', None), ('wits:newsReportDialog', None), ('wits:newsTeaserCard', None), ('wits:newsTweetCarouselItem', None), ('wits:newsTweetItem', None), ('wits:newsTweetListItem', None), ('wits:suggestedNameField', None), ('wits:suggestionsController', None), ('wits:suggestionsDataProvider', None), ('wits:suggestionsMatchProvider', None), ('wits:tempDepend', None), ('work:coachedByField', None), ('work:customMetricDueDateField', None), ('work:customMetricProgressField', None), ('work:goalImage', None), ('work:metricNameField', None), ('work:metricProgress', None), ('work:relatedMetricV2ListRecord', None), ('work:relatedWorkBadgeListRecord', None), ('workAloha:editMetricWeights', None), ('workAloha:metricWeightItem', None)], blank=True, null=True)
    render_component_enum_or_id = models.CharField(max_length=255, verbose_name='Lightning Definition Bundle ID', choices=[('adminui:adminTemplate', None), ('aloha_sales_forecasting:forecasting3OrgSettings', None), ('aloha_sales_forecasting:forecasting3TypeSettings', None), ('aloha_sales_forecasting:forecasting3settings', None), ('aloha_sales_opptysplit:multiLineEdit', None), ('aloha_sales_opptysplit:multiLineEditColumn', None), ('aloha_sales_opptysplit:multiLineEditExample', None), ('aloha_sales_opptysplit:multiLineEditItem', None), ('aloha_sales_opptysplit:multiLineEditRecordHeader', None), ('aloha_sales_opptysplit:multiLineEditSection', None), ('aloha_sales_opptysplit:multiLineEditSectionFooter', None), ('aloha_sales_opptysplit:multiLineEditWrapper', None), ('aloha_sales_opptysplit:opportunitySplitTabBody', None), ('aloha_sales_opptysplit:opportunitySplitTabHeader', None), ('aloha_sales_opptysplit:opportunitySplitTabSet', None), ('aloha_sales_opptysplit:opportunitySplitTypeMultiEditSection', None), ('aloha_sales_opptysplit:opportunitySplitsTypeSectionFooter', None), ('aloha_sales_tm2:territory2AsyncHelper', None), ('aloha_sales_tm2:territory2DialogAlert', None), ('aloha_sales_tm2:territory2ModelHeader', None), ('aloha_sales_tm2:territory2Settings', None), ('aloha_sales_tm2:territoryManagement2Enable', None), ('analytics:chart', None), ('analytics:componentError', None), ('analytics:cordaChart', None), ('analytics:csrPopChart', None), ('analytics:embeddedChart', None), ('analytics:embeddedReportChart', None), ('analytics:metric', None), ('analytics:pluginChart', None), ('analytics:reportChart', None), ('analytics:reportMetadata', None), ('analytics:scheduleSelectorBase', None), ('analytics:subscribeDialog', None), ('analytics:subscribeDialogFooter', None), ('analytics:table', None), ('analytics:urogFilterableList', None), ('analyticsHome:analyticsDataProvider', None), ('analyticsHome:analyticsVirtualAction', None), ('analyticsHome:createNewDashboard', None), ('analyticsHome:createNewReport', None), ('analyticsHome:deleteFolderErrorDialog', None), ('analyticsHome:deleteFolderErrorDialogFooter', None), ('analyticsHome:deleteShareConfirmationDialog', None), ('analyticsHome:deleteShareConfirmationDialogFooter', None), ('analyticsHome:folderNameDialog', None), ('analyticsHome:folderNameDialogFooter', None), ('analyticsHome:folderOutput', None), ('analyticsHome:folderShare', None), ('analyticsHome:folderShareEntityDataProvider', None), ('analyticsHome:folderShareGrid', None), ('analyticsHome:folderShareGridDataProvider', None), ('analyticsHome:folderShareGridEditAccessColumn', None), ('analyticsHome:folderShareGridEntityColumn', None), ('analyticsHome:folderShareGridRemoveShareColumn', None), ('analyticsHome:folderSharePanel', None), ('analyticsHome:folderSharePanelFooter', None), ('analyticsHome:folderShareWhoCanAccess', None), ('analyticsHome:subscribeCondition', None), ('analyticsHome:subscribeConditionSection', None), ('analyticsHome:subscribeConditionsList', None), ('analyticsHome:subscribeEmailOptionsSection', None), ('analyticsHome:subscriptionEditRecipientsDialog', None), ('analyticsHome:subscriptionRecipientsFilterableList', None), ('analyticsHome:subscriptionRecipientsFilterableListDataSource', None), ('analyticsHome:subscriptionRecipientsLookup', None), ('analyticsHome:subscriptionRecipientsLookupDataProvider', None), ('appexUi:appExchangeSetupOverlayOpener', None), ('appexUi:appexchangeOverlay', None), ('appexUi:appexchangeOverlayTest', None), ('appexUi:appexchangeOverlayWrapper', None), ('appexUi:appxBase', None), ('appexUi:bannersSide', None), ('appexUi:base', None), ('appexUi:breadcrumb', None), ('appexUi:carItem', None), ('appexUi:carousel', None), ('appexUi:category', None), ('appexUi:confirmInstallationDetails', None), ('appexUi:contentWrapper', None), ('appexUi:deleteReviewModal', None), ('appexUi:disabledOverlay', None), ('appexUi:dropdownFilter', None), ('appexUi:editUserProfile', None), ('appexUi:error', None), ('appexUi:filter', None), ('appexUi:filterActionButtons', None), ('appexUi:filterBox', None), ('appexUi:filterTooltip', None), ('appexUi:filterTrigger', None), ('appexUi:footer', None), ('appexUi:footerListingDetail', None), ('appexUi:genericExtraModal', None), ('appexUi:header', None), ('appexUi:history', None), ('appexUi:homeMenu', None), ('appexUi:landingPageTable', None), ('appexUi:landingPageTableSection', None), ('appexUi:landingPageTableSectionTitle', None), ('appexUi:linksList', None), ('appexUi:listingDetail', None), ('appexUi:listingDetailContent', None), ('appexUi:listingDetailContentTest', None), ('appexUi:listingDetailHeader', None), ('appexUi:listingDetailLeftSidePanel', None), ('appexUi:listingDetailLeftSidePanelTest', None), ('appexUi:listingDetailMenu', None), ('appexUi:listingDetailTest', None), ('appexUi:listingDetails', None), ('appexUi:listingDetailsTest', None), ('appexUi:listingInstallContent', None), ('appexUi:listingProvider', None), ('appexUi:listingReviews', None), ('appexUi:listingReviewsContent', None), ('appexUi:logInActions', None), ('appexUi:loginActionsModalHandler', None), ('appexUi:loginActionsModalHandlerTest', None), ('appexUi:loginActionsTest', None), ('appexUi:modalHandler', None), ('appexUi:modalHandlerTest', None), ('appexUi:mostHelpfulReviews', None), ('appexUi:navMenu', None), ('appexUi:pageBodyWrapper', None), ('appexUi:pageBodyWrapperTest', None), ('appexUi:pageHeaderWrapper', None), ('appexUi:popupMessage', None), ('appexUi:rating', None), ('appexUi:reportAbuseModal', None), ('appexUi:restAPI', None), ('appexUi:resultsMeta', None), ('appexUi:review', None), ('appexUi:reviewRating', None), ('appexUi:reviewsList', None), ('appexUi:reviewsModal', None), ('appexUi:richText', None), ('appexUi:searchInput', None), ('appexUi:searchResultText', None), ('appexUi:searchResults', None), ('appexUi:setupTile', None), ('appexUi:sort', None), ('appexUi:storeFilters', None), ('appexUi:storeFiltersTooltip', None), ('appexUi:svg', None), ('appexUi:tabsSearch', None), ('appexUi:template', None), ('appexUi:textAreaWithCounter', None), ('appexUi:tile', None), ('appexUi:tilesList', None), ('appexUi:userInfoReadOnly', None), ('appexUi:userInfoWriteProfile', None), ('assistantFramework:assistantBlock', None), ('assistantFramework:assistantBlockCompressed', None), ('assistantFramework:assistantPage', None), ('assistantFramework:header', None), ('assistantFramework:learningPathCustomStep', None), ('assistantFramework:learningPathList', None), ('assistantFramework:learningPathStepCompressedTemplate', None), ('assistantFramework:learningPathStepTemplate', None), ('assistantFramework:linkWithTooltip', None), ('assistantFramework:navigationComponent', None), ('assistantFramework:pathCompleteBlock', None), ('assistantFramework:pathSummaryBlock', None), ('assistantFramework:relatedContent', None), ('assistantFramework:setupAssistantProgress', None), ('assistantFramework:summaryBlock', None), ('assistantFramework:wizard', None), ('assistantFramework:wizardHeader', None), ('assistantFramework:wizardNavigator', None), ('assistantFramework:wizardStep', None), ('assistantFrameworkModules:addUsersInput', None), ('assistantFrameworkModules:addUsersInputStep', None), ('assistantFrameworkModules:addUsersList', None), ('assistantFrameworkModules:addUsersSuccess', None), ('assistantFrameworkModules:addUsersSuccessStep', None), ('assistantFrameworkModules:addUsersWizard', None), ('assistantFrameworkModules:dataImportContainer', None), ('assistantFrameworkModules:dragDropList', None), ('assistantFrameworkModules:eacConnectStep', None), ('assistantFrameworkModules:eacContactAdmin', None), ('assistantFrameworkModules:eacEnableStep', None), ('assistantFrameworkModules:eacLandingStep', None), ('assistantFrameworkModules:eacReviewTermsStep', None), ('assistantFrameworkModules:eacWizard', None), ('assistantFrameworkModules:inviteUsersInput', None), ('assistantFrameworkModules:inviteUsersInputStep', None), ('assistantFrameworkModules:inviteUsersWizard', None), ('assistantFrameworkModules:listItemMover', None), ('assistantFrameworkModules:opportunityStageAddTemplate', None), ('assistantFrameworkModules:opportunityStageConfigureTemplate', None), ('assistantFrameworkModules:opportunityStagesAdd', None), ('assistantFrameworkModules:opportunityStagesAddStep', None), ('assistantFrameworkModules:opportunityStagesConfigure', None), ('assistantFrameworkModules:opportunityStagesConfigureStep', None), ('assistantFrameworkModules:opportunityStagesReview', None), ('assistantFrameworkModules:opportunityStagesReviewStep', None), ('assistantFrameworkModules:opportunityStagesWizard', None), ('assistantFrameworkModules:resourceDownloadStep', None), ('assistantFrameworkModules:resourceDownloadWizard', None), ('assistantFrameworkModules:videoStep', None), ('assistantFrameworkModules:vidyardVideoWizard', None), ('aura:component', None), ('aura:debug', None), ('aura:embeddedTemplate', None), ('aura:expression', None), ('aura:html', None), ('aura:if', None), ('aura:include', None), ('aura:integrationServiceTemplate', None), ('aura:iteration', None), ('aura:label', None), ('aura:placeholder', None), ('aura:renderIf', None), ('aura:template', None), ('aura:text', None), ('aura:unescapedHtml', None), ('auraStorage:crypto', None), ('auraStorage:fuelGauge', None), ('auraStorage:init', None), ('auradev:blankTemplate', None), ('auradev:testDataProvider', None), ('auradev:testDataProvider2', None), ('auradocs:about', None), ('auradocs:api', None), ('auradocs:apiParam', None), ('auradocs:apiParams', None), ('auradocs:apiSymbol', None), ('auradocs:apiSymbols', None), ('auradocs:apiTopic', None), ('auradocs:codeblock', None), ('auradocs:def', None), ('auradocs:defDependencies', None), ('auradocs:defDescription', None), ('auradocs:defLayout', None), ('auradocs:defLink', None), ('auradocs:defMemberList', None), ('auradocs:defOverview', None), ('auradocs:demoAutocomplete', None), ('auradocs:demoAutocompleteProvider', None), ('auradocs:demoCarousel', None), ('auradocs:demoCss', None), ('auradocs:demoDataProvider', None), ('auradocs:demoDialog', None), ('auradocs:demoEvents', None), ('auradocs:demoForm', None), ('auradocs:demoFriendlyError', None), ('auradocs:demoLabel', None), ('auradocs:demoLabelDyn', None), ('auradocs:demoLangLocale', None), ('auradocs:demoList', None), ('auradocs:demoListTemplate', None), ('auradocs:demoLocale', None), ('auradocs:demoMenu', None), ('auradocs:demoMenuMeta', None), ('auradocs:demoMessage', None), ('auradocs:demoModal', None), ('auradocs:demoPanel', None), ('auradocs:demoScroller', None), ('auradocs:demoSelect', None), ('auradocs:demoSpinner', None), ('auradocs:demoStamp', None), ('auradocs:demoSubmitForm', None), ('auradocs:demoTab', None), ('auradocs:demoTable', None), ('auradocs:demoTodo', None), ('auradocs:demoToolbar', None), ('auradocs:demoTooltip', None), ('auradocs:demoVbox', None), ('auradocs:demoVdatagrid', None), ('auradocs:demos', None), ('auradocs:descriptorLink', None), ('auradocs:docTestRef', None), ('auradocs:doctabs', None), ('auradocs:download', None), ('auradocs:editorPanel', None), ('auradocs:empty', None), ('auradocs:error', None), ('auradocs:helloAttributes', None), ('auradocs:helpPanel', None), ('auradocs:home', None), ('auradocs:htmlTags', None), ('auradocs:htmlTagsTopic', None), ('auradocs:info', None), ('auradocs:nav', None), ('auradocs:navLink', None), ('auradocs:openTopicTree', None), ('auradocs:prefixerTopic', None), ('auradocs:referenceTabTopic', None), ('auradocs:referenceTopicLink', None), ('auradocs:referenceTree', None), ('auradocs:referenceTreeSection', None), ('auradocs:sampleUnescape', None), ('auradocs:searchFilterTree', None), ('auradocs:sidebar', None), ('auradocs:simpledragdrop', None), ('auradocs:spinnerTopic', None), ('auradocs:stretchEditorPanel', None), ('auradocs:stretchTab', None), ('auradocs:tableDemo', None), ('auradocs:template', None), ('auradocs:topic', None), ('auradocs:topicExample', None), ('auradocs:topicLink', None), ('auradocs:topicList', None), ('auradocs:topicPanel', None), ('auradocs:topics', None), ('auradocs:warning', None), ('auradocs:welcomeTopic', None), ('auraplat:defSource', None), ('auraplat:lockerServiceSetup', None), ('b2b_buyer_builder:addedToCartModal', None), ('b2b_buyer_builder:availableLists', None), ('b2b_buyer_builder:availableListsDesignInfo', None), ('b2b_buyer_builder:cartBadge', None), ('b2b_buyer_builder:cartContents', None), ('b2b_buyer_builder:cartSummary', None), ('b2b_buyer_builder:cartSummaryDesignInfo', None), ('b2b_buyer_builder:categoryBreadcrumbs', None), ('b2b_buyer_builder:categoryBreadcrumbsDesignInfo', None), ('b2b_buyer_builder:checkoutButtonWrapper', None), ('b2b_buyer_builder:checkoutButtonWrapperDesignInfo', None), ('b2b_buyer_builder:clearCartModalWrapper', None), ('b2b_buyer_builder:productDescription', None), ('b2b_buyer_builder:productDescriptionDesignInfo', None), ('b2b_buyer_builder:productDetailDataContentMapping', None), ('b2b_buyer_builder:productDetailDataContentMappingItemEditor', None), ('b2b_buyer_builder:productDetailsSummary', None), ('b2b_buyer_builder:productDetailsSummaryDesignInfo', None), ('b2b_buyer_builder:productDetailsTable', None), ('b2b_buyer_builder:productDetailsTableDesignInfo', None), ('b2b_buyer_builder:quickOrderPage', None), ('b2b_buyer_data:cartService', None), ('b2b_buyer_data:productCardFieldService', None), ('b2b_buyer_data:productCategoryService', None), ('b2b_buyer_data:productDetailsService', None), ('b2b_buyer_data:productPricingService', None), ('b2b_buyer_data:productSearchService', None), ('b2b_buyer_data:searchSettingsService', None), ('b2b_search_builder:contentMappingContainer', None), ('b2b_search_builder:contentMappingItemEditor', None), ('b2b_search_builder:resultsDisplay', None), ('b2b_search_builder:searchInput', None), ('b2b_search_management:commerceSearch', None), ('b2b_search_management:displaySettingsContainer', None), ('b2b_search_management:searchIndexContainer', None), ('b2b_search_management:searchableFieldsContainer', None), ('builder_communities_nba:editorPanelProxy', None), ('builder_communities_nba:nbaWidgetDesignInfo', None), ('builder_communities_nba:runPanel', None), ('builder_communities_nba:serverDataLibInit', None), ('builder_communities_nba:strategyBuilderBody', None), ('builder_communities_nba:strategyBuilderTemplate', None), ('builder_framework:auraControllerProvider', None), ('builder_framework:auraControllerProviderManager', None), ('builder_framework:auraErrorHandlerControllerProvider', None), ('builder_framework:designTimeComponentInfoControllerProvider', None), ('builder_framework:designTimeComponentPropertyInfoControllerProvider', None), ('builder_framework:emailHtmlGen', None), ('builder_framework:exampleExpandedEditor', None), ('builder_framework:exampleRichTextCkEditor', None), ('builder_framework:imagePanelManager', None), ('builder_framework:visualEditorBuilderControllerProvider', None), ('builder_framework:visualEditorExpressionService', None), ('builder_framework:visualEditorInfoComponentWrapper', None), ('builder_framework:visualEditorPaletteControllerProvider', None), ('builder_framework:visualEditorPropertyEditorWrapper', None), ('builder_industries_decisiontable:editor', None), ('builder_industries_fsc:fscRelationships', None), ('builder_industries_healthcare:careDeterminants', None), ('builder_industries_healthcare:careProgramsCommunity', None), ('builder_industries_insurance:communityIndustryMilestones', None), ('builder_industries_insurance:communityPolicy360', None), ('builder_industries_insurance:fscMultiTbl', None), ('builder_industries_insurance:fscSinglTbl', None), ('builder_industries_insurance:keyHomeMetrices', None), ('builder_industries_insurance:keyMetrics', None), ('builder_industries_insurance:lifeEvents', None), ('builder_industries_insurance:outlookperformance', None), ('builder_industries_insurance:policy360', None), ('builder_industries_insurance:summaryMetrics', None), ('builder_industries_publicsector:businessProfileContainer', None), ('builder_industries_publicsector:licensePermitList', None), ('builder_industries_publicsector:licensePermitLookupContainer', None), ('builder_industries_publicsector:reportBusinessContainer', None), ('builder_industries_survey:deleteSurvey', None), ('builder_industries_survey:surveySetup', None), ('builder_industries_utilizationmanagement:careRequestDetails', None), ('builder_industries_utilizationmanagement:createCareRequest', None), ('builder_industries_utilizationmanagement:createCareRequestCommunity', None), ('builder_industries_visit:visitInventorySettings', None), ('builder_industries_visit:visitsHome', None), ('builder_platform_blockchain:blockchainManager', None), ('builder_platform_blockchain:serverLibWrapper', None), ('builder_platform_interaction:container', None), ('builder_platform_interaction:flowBuilderTemplate', None), ('builder_platform_interaction:panelManagerWrapper', None), ('builder_platform_interaction:propertyEditor', None), ('builder_platform_interaction:propertyEditorFooter', None), ('builder_platform_interaction:propertyEditorHeader', None), ('builder_platform_interaction:serverDataLibInit', None), ('builder_platform_process:test', None), ('builder_platform_usage:serverDataLibInit', None), ('builder_platform_usage:usageEntitlementExplorer', None), ('builder_service_chatbots:analyticsState', None), ('builder_service_chatbots:appHeader', None), ('builder_service_chatbots:appNavigation', None), ('builder_service_chatbots:baseTemplate', None), ('builder_service_chatbots:botDetails', None), ('builder_service_chatbots:botDomainsListCard', None), ('builder_service_chatbots:botGlobalSettings', None), ('builder_service_chatbots:botList', None), ('builder_service_chatbots:botListItem', None), ('builder_service_chatbots:botLogFilter', None), ('builder_service_chatbots:botLogList', None), ('builder_service_chatbots:botLogPanel', None), ('builder_service_chatbots:botMetrics', None), ('builder_service_chatbots:botOverview', None), ('builder_service_chatbots:botPerformance', None), ('builder_service_chatbots:botReviewTerms', None), ('builder_service_chatbots:botReviewTermsFlow', None), ('builder_service_chatbots:botSessionFilter', None), ('builder_service_chatbots:botSessionList', None), ('builder_service_chatbots:botSetup', None), ('builder_service_chatbots:botSetupWizard', None), ('builder_service_chatbots:botSetupWizardAstro', None), ('builder_service_chatbots:botSetupWizardComplete', None), ('builder_service_chatbots:botSetupWizardDetails', None), ('builder_service_chatbots:botSetupWizardGreeting', None), ('builder_service_chatbots:botSetupWizardMainMenu', None), ('builder_service_chatbots:botSetupWizardWelcome', None), ('builder_service_chatbots:botState', None), ('builder_service_chatbots:botVersionListItem', None), ('builder_service_chatbots:botVersionSettings', None), ('builder_service_chatbots:botVersionSettingsDelay', None), ('builder_service_chatbots:botVersionSettingsLogCustomerData', None), ('builder_service_chatbots:botVersionSettingsNlp', None), ('builder_service_chatbots:botVersionSettingsUser', None), ('builder_service_chatbots:builderCanvas', None), ('builder_service_chatbots:builderHeader', None), ('builder_service_chatbots:builderNav', None), ('builder_service_chatbots:builderPage', None), ('builder_service_chatbots:channelProviders', None), ('builder_service_chatbots:combobox', None), ('builder_service_chatbots:confirmModal', None), ('builder_service_chatbots:dialogBuilder', None), ('builder_service_chatbots:dialogCanvas', None), ('builder_service_chatbots:dialogDetail', None), ('builder_service_chatbots:dialogElement', None), ('builder_service_chatbots:dialogIntent', None), ('builder_service_chatbots:dialogMap', None), ('builder_service_chatbots:dialogMapConnector', None), ('builder_service_chatbots:dialogMapNode', None), ('builder_service_chatbots:dialogMapNodePopover', None), ('builder_service_chatbots:dialogMapZoomPanel', None), ('builder_service_chatbots:dialogState', None), ('builder_service_chatbots:domainState', None), ('builder_service_chatbots:element', None), ('builder_service_chatbots:elementCollectInfoQuickReply', None), ('builder_service_chatbots:elementCollectVariableInfo', None), ('builder_service_chatbots:elementMenu', None), ('builder_service_chatbots:elementMenuItem', None), ('builder_service_chatbots:elementMessage', None), ('builder_service_chatbots:elementRoute', None), ('builder_service_chatbots:elementRules', None), ('builder_service_chatbots:elementScript', None), ('builder_service_chatbots:errorModal', None), ('builder_service_chatbots:filter', None), ('builder_service_chatbots:intentCanvas', None), ('builder_service_chatbots:intentExtensionList', None), ('builder_service_chatbots:intentExtensionListItem', None), ('builder_service_chatbots:intentExtensionsCard', None), ('builder_service_chatbots:intentState', None), ('builder_service_chatbots:intentStateIcon', None), ('builder_service_chatbots:intentTraining', None), ('builder_service_chatbots:intentTrainingGame', None), ('builder_service_chatbots:intentTrainingList', None), ('builder_service_chatbots:iteration', None), ('builder_service_chatbots:modal', None), ('builder_service_chatbots:modalManager', None), ('builder_service_chatbots:modelState', None), ('builder_service_chatbots:nluDashboard', None), ('builder_service_chatbots:nluDashboardDataManager', None), ('builder_service_chatbots:nluDashboardIntentDetails', None), ('builder_service_chatbots:nluModelManagement', None), ('builder_service_chatbots:nluTestInput', None), ('builder_service_chatbots:previewPanel', None), ('builder_service_chatbots:router', None), ('builder_service_chatbots:routerState', None), ('builder_service_chatbots:routerUrlManager', None), ('builder_service_chatbots:selectDialog', None), ('builder_service_chatbots:selectRecord', None), ('builder_service_chatbots:setupState', None), ('builder_service_chatbots:slotClassCanvas', None), ('builder_service_chatbots:slotClassList', None), ('builder_service_chatbots:slotClassRecord', None), ('builder_service_chatbots:slotClassRecords', None), ('builder_service_chatbots:slotClassRecordsHeader', None), ('builder_service_chatbots:slotClassValueList', None), ('builder_service_chatbots:stateManager', None), ('builder_service_chatbots:store', None), ('builder_service_chatbots:template', None), ('builder_service_chatbots:tooltip', None), ('builder_service_chatbots:utterancesCard', None), ('builder_service_chatbots:variableRecords', None), ('calendar:abstractEvent', None), ('calendar:attendee', None), ('calendar:attendeeComposer', None), ('calendar:attendeeComposerWrapper', None), ('calendar:attendees', None), ('calendar:calendarColorMenuItem', None), ('calendar:calendarShareConfirmationModalBody', None), ('calendar:calendarShareDataProvider', None), ('calendar:calendarShareGrid', None), ('calendar:calendarShareGridAccessLevelColumn', None), ('calendar:calendarShareGridRemoveColumn', None), ('calendar:calendarShareGridTitleColumn', None), ('calendar:calendarTextureBox', None), ('calendar:columnHeader', None), ('calendar:createCalendarModal', None), ('calendar:createCalendarModalHeader', None), ('calendar:createCalendarWizardStep1', None), ('calendar:createCalendarWizardStep2', None), ('calendar:customColor', None), ('calendar:deleteEventSeriesModal', None), ('calendar:deleteModal', None), ('calendar:discoveryModal', None), ('calendar:home', None), ('calendar:isPrivateCheckboxWithGdprText', None), ('calendar:listItem', None), ('calendar:listPanel', None), ('calendar:multiColumnDayView', None), ('calendar:pillContainer', None), ('calendar:resourceAttendeeDataProvider', None), ('calendar:sfdcCalendarDataProvider', None), ('calendar:shareModal', None), ('calendar:sharedEventDetailPage', None), ('calendar:sharedEventDetailStencil', None), ('calendar:sidebar', None), ('calendar:timeMarker', None), ('calendar:timedEvent', None), ('calendar:troughEvent', None), ('calendar:troughLayout', None), ('calendar:troughToggle', None), ('calendar:updateCalendarModal', None), ('cg_retail:retailSearch', None), ('cg_retail:retailTaskKPI', None), ('cg_retail:retailTaskList', None), ('cg_retail:retailVisitAction', None), ('cg_retail:retailVisitList', None), ('cg_retail:retailVisitMap', None), ('cg_retail:retailVisitOverview', None), ('cg_retail:tabbedTaskContainer', None), ('chatbots:movable', None), ('chatbots:movableContainer', None), ('chatbots:treeGrid', None), ('chatbots:treeGridColumn', None), ('chatbots:treeGridRow', None), ('clients:accountInsightsContainer', None), ('clients:actionContainer', None), ('clients:actionsRibbon', None), ('clients:activateMailAppPage', None), ('clients:associationContext', None), ('clients:associationSelectionManager', None), ('clients:attachment', None), ('clients:attachmentDownloadPanelBody', None), ('clients:attachmentsCard', None), ('clients:attachmentsDataProvider', None), ('clients:attachmentsDataProviderComposeMode', None), ('clients:attachmentsManager', None), ('clients:auraService', None), ('clients:authEpt', None), ('clients:autoFocusForceSearchInputDesktop', None), ('clients:bustOutButton', None), ('clients:cardMetrics', None), ('clients:clientServices', None), ('clients:consentManager', None), ('clients:defaultMailAppTemplate', None), ('clients:detailedErrorModal', None), ('clients:duplicatePersonCardStencil', None), ('clients:einsteinInline', None), ('clients:einsteinInsightsButton', None), ('clients:emailContextComponentDecorator', None), ('clients:emailTemplatesActionContainerFlex', None), ('clients:emailTemplatesContainer', None), ('clients:emailTemplatesDesignInfo', None), ('clients:emailToSalesforceSettings', None), ('clients:exchangeUserMappingList', None), ('clients:exchangeUserMappingListDataProvider', None), ('clients:exchangeUserMappingSettings', None), ('clients:header', None), ('clients:hidingListRecordItem', None), ('clients:highlightsStencil', None), ('clients:homeCard', None), ('clients:hvsManager', None), ('clients:insightAggregator', None), ('clients:inviteeAddRowStencil', None), ('clients:inviteeListRowStencil', None), ('clients:labelWithLink', None), ('clients:leadScoreInline', None), ('clients:mailAppAndS2XPreferenceToggle', None), ('clients:mailAppCommonSettings', None), ('clients:mailAppFlexiPageList', None), ('clients:mailAppFlexiPageListDataProvider', None), ('clients:mailAppFlexiPageSettings', None), ('clients:mailAppGmailAndS2XGoogleSettings', None), ('clients:mailAppGmailSettings', None), ('clients:mailAppLightningPageDataProvider', None), ('clients:mailAppOutlookAndS2XExchangeSettings', None), ('clients:mailAppOutlookSettings', None), ('clients:mailAppSettingsSection', None), ('clients:mailAppSettingsSubsection', None), ('clients:matchingManager', None), ('clients:msMailContainerFlex', None), ('clients:msMailFooter', None), ('clients:opportunityInsightsContainer', None), ('clients:opportunityScoreInline', None), ('clients:opportunityTopInsightInline', None), ('clients:outlookDiagnosticTool', None), ('clients:outlookPublisherLayoutTable', None), ('clients:outlookPublisherLayoutTableDataProvider', None), ('clients:outputEmail', None), ('clients:owaWhitelistDataProvider', None), ('clients:owaWhitelistDisplay', None), ('clients:owaWhitelistEditor', None), ('clients:owaWhitelistSettings', None), ('clients:pageActionMenu', None), ('clients:pageAssignmentByProfileReviewStep', None), ('clients:pageAssignmentDefaultAssignmentReviewStep', None), ('clients:pageAssignmentPickerStep', None), ('clients:pageAssignmentProfilePickerStep', None), ('clients:pageAssignmentReviewStepDataProvider', None), ('clients:pageAssignmentSetDefaultOrAssignStep', None), ('clients:pardotEngageContainer', None), ('clients:pardotEngagePersonSelector', None), ('clients:pardotEngageToggle', None), ('clients:peopleCardContainerFlex', None), ('clients:peopleCardContainerFlexDesignInfo', None), ('clients:peopleCardDesignSubstitute', None), ('clients:peopleDupeRadio', None), ('clients:peopleDuplicateButton', None), ('clients:peopleDuplicateList', None), ('clients:peopleListCard', None), ('clients:peopleListDataManager', None), ('clients:peopleListDesignDataManager', None), ('clients:peopleListing', None), ('clients:permanentlyDismissableDialog', None), ('clients:pre', None), ('clients:profilePageAssignment', None), ('clients:profilePageAssignmentDataProvider', None), ('clients:publisherLayoutSettings', None), ('clients:quickActionHeader', None), ('clients:quickActionLayout', None), ('clients:quickActionsLoader', None), ('clients:quickCreateButton', None), ('clients:quickCreateMenuItem', None), ('clients:recipientList', None), ('clients:recordDetail', None), ('clients:recordLayoutLoader', None), ('clients:recordList', None), ('clients:recordListing', None), ('clients:relatedCustomEntity', None), ('clients:relatedCustomEntityDesignInfo', None), ('clients:relatedCustomEntitySubstitute', None), ('clients:relatedRecordCollectionDataManager', None), ('clients:relatedRecordCollectionDesignDataManager', None), ('clients:relatedRecordEntityDesignInfo', None), ('clients:relatedRecordListCard', None), ('clients:relatedRecordListCardStencil', None), ('clients:relatedRecordStencilBase', None), ('clients:relatedRecordsPageDesignSubstitute', None), ('clients:relatedRecordsPageFlex', None), ('clients:relatedToLabelManager', None), ('clients:s2xCredentialFlowStepContainer', None), ('clients:s2xCredentialFlowStepIcon', None), ('clients:s2xCredentialsFlow', None), ('clients:s2xCredentialsTestUser', None), ('clients:s2xExchangeOAuthCredentials', None), ('clients:s2xExchangeServiceAccountCredentials', None), ('clients:s2xExchangeSettings', None), ('clients:s2xGoogleOAuthCredentials', None), ('clients:s2xGoogleSettings', None), ('clients:s2xServerTypeChangeModal', None), ('clients:s2xStatusSettings', None), ('clients:searchButton', None), ('clients:searchStencil', None), ('clients:selectiveAttachments', None), ('clients:sfoEndOfSale', None), ('clients:sidepanelAppDependenciesTemplate', None), ('clients:speedtest', None), ('clients:styledOutAppContainer', None), ('clients:styledOutAppTemplate', None), ('clients:tab', None), ('clients:tabset', None), ('clients:tabsetDesignInfo', None), ('clients:tasksActionContainerFlex', None), ('clients:tasksCardContainerFlex', None), ('clients:tasksContainerFlexDesignInfo', None), ('clients:tasksListFilter', None), ('clients:tasksListViewAll', None), ('clients:template', None), ('clients:unactionableRelatedRecordStencil', None), ('clients:userFeedbackManager', None), ('clients:userProfileCard', None), ('clients:virtualAction', None), ('clients:workQueueWidget', None), ('clients:workQueueWidgetDesignInfo', None), ('cmsAuthor:addPublishTargets', None), ('cmsAuthor:allExperiencesWrapper', None), ('cmsAuthor:allWorkspaces', None), ('cmsAuthor:cmsAuthorHome', None), ('cmsAuthor:cmsChannels', None), ('cmsAuthor:cmsRecordCompactLayout', None), ('cmsAuthor:cmsRichEditorCreateLinkPanel', None), ('cmsAuthor:cmsRichEditorCreateVideoPanel', None), ('cmsAuthor:cmsRichEditorHeaderSelect', None), ('cmsAuthor:cmsRichEditorLinkButton', None), ('cmsAuthor:cmsRichEditorVideoButton', None), ('cmsAuthor:cmsWelcomeMat', None), ('cmsAuthor:cmsWorkspaceHome', None), ('cmsAuthor:collaborators', None), ('cmsAuthor:contentDetail', None), ('cmsAuthor:contentPicker', None), ('cmsAuthor:contentPickerCreateMedia', None), ('cmsAuthor:contentSpaceCreateForm', None), ('cmsAuthor:contentSpaceCreateWizard', None), ('cmsAuthor:contentSpaceForm', None), ('cmsAuthor:contentSpaceSelectLanguages', None), ('cmsAuthor:contentSpaceSummary', None), ('cmsAuthor:contentTypeChooser', None), ('cmsAuthor:getStartedBanner', None), ('cmsAuthor:help', None), ('cmsAuthor:imageUploadWithPreview', None), ('cmsAuthor:importTranslationsPanel', None), ('cmsAuthor:inputDateNode', None), ('cmsAuthor:inputDateTimeNode', None), ('cmsAuthor:inputImgNode', None), ('cmsAuthor:inputMTextNode', None), ('cmsAuthor:inputMediaContentNode', None), ('cmsAuthor:inputRTENode', None), ('cmsAuthor:inputReferenceContentPickerNode', None), ('cmsAuthor:inputTextNode', None), ('cmsAuthor:inputTitleNode', None), ('cmsAuthor:inputURLNode', None), ('cmsAuthor:languagesPanelLauncher', None), ('cmsAuthor:managePublishTargets', None), ('cmsAuthor:managePublishTargetsDataProvider', None), ('cmsAuthor:managedContentChannelCreate', None), ('cmsAuthor:managedContentChannelEdit', None), ('cmsAuthor:managedContentEmptyState', None), ('cmsAuthor:managedContentForm', None), ('cmsAuthor:managedContentItemHeader', None), ('cmsAuthor:managedContentLayout', None), ('cmsAuthor:managedContentList', None), ('cmsAuthor:managedContentPage', None), ('cmsAuthor:managedContentTranslationView', None), ('cmsAuthor:managedContentVersionList', None), ('cmsAuthor:mcontentNavigationCMC', None), ('cmsAuthor:mcontentNavigationLEX', None), ('cmsAuthor:mcontentPermissionsProvider', None), ('cmsAuthor:mediaContentWithPreview', None), ('cmsAuthor:mediaFileCard', None), ('cmsAuthor:outputDateNode', None), ('cmsAuthor:outputDateTimeNode', None), ('cmsAuthor:outputImgNode', None), ('cmsAuthor:outputMTextNode', None), ('cmsAuthor:outputMediaContentNode', None), ('cmsAuthor:outputRTENode', None), ('cmsAuthor:outputURLNode', None), ('cmsAuthor:publishingTargets', None), ('cmsAuthor:referenceWithPreview', None), ('commerce:orderItemDataProvider', None), ('commerce:orderItemMultiLineEdit', None), ('commerce:orderItemMultiLineEditWrapper', None), ('commerce_catalog:categoryHierarchy', None), ('commerce_catalog:categoryHierarchyDataManager', None), ('commerce_catalog:categoryHierarchyTriggerCell', None), ('commerce_catalog:enrichmentFileInfo', None), ('commerce_catalog:enrichmentFileMetadataWrapper', None), ('commerce_catalog:enrichmentFileOrder', None), ('commerce_catalog:enrichmentFilePicker', None), ('commerce_catalog:enrichmentFilePreview', None), ('commerce_catalog:enrichmentFileProperties', None), ('commerce_catalog:enrichmentGallery', None), ('commerce_catalog:massActionToSetProductIsActive', None), ('commerce_catalog:massAddProductsToCategory', None), ('commerce_catalog:productEnrichment', None), ('commerce_catalog:setPrimaryCategory', None), ('commerce_console:compositeListContainer', None), ('commerce_console:emptyStateWrapper', None), ('commerce_console:outputBooleanBadge', None), ('commerce_console:productCompositeList', None), ('commerce_console:productTranslation', None), ('commerce_console:productWorkspace', None), ('commerce_console:translationListContainer', None), ('commerce_console:webStoreTileNavigation', None), ('communitySetup:actionMenuCMSConnection', None), ('communitySetup:addArticlesDialog', None), ('communitySetup:appLauncherManager', None), ('communitySetup:arsrSetupPage', None), ('communitySetup:arsrSetupPageLightning', None), ('communitySetup:articleCategoryFilterMenu', None), ('communitySetup:articleGroupFilterMenu', None), ('communitySetup:articleManagement', None), ('communitySetup:articleManagementRow', None), ('communitySetup:assistantCustomStep', None), ('communitySetup:assistantHelpAndTrailhead', None), ('communitySetup:assistantPage', None), ('communitySetup:assistantSubStepLink', None), ('communitySetup:audienceCriteriaAutoComplete', None), ('communitySetup:audienceCriteriaDataProvider', None), ('communitySetup:audienceCriteriaExpressionRow', None), ('communitySetup:audienceCriteriaFieldTraversal', None), ('communitySetup:audienceCriteriaGeoLocation', None), ('communitySetup:audienceCriteriaSection', None), ('communitySetup:audienceCustomEditor', None), ('communitySetup:audienceDeleteAction', None), ('communitySetup:audienceEditor', None), ('communitySetup:audienceSelector', None), ('communitySetup:audienceSummary', None), ('communitySetup:authorDetailCard', None), ('communitySetup:authorFeedInfo', None), ('communitySetup:authorList', None), ('communitySetup:authorModerationInfoIcon', None), ('communitySetup:badgeAccessListEditor', None), ('communitySetup:badgeAccessListItem', None), ('communitySetup:badgeAccessListItemContainer', None), ('communitySetup:badgeImageUpload', None), ('communitySetup:badgeTypeCheckBox', None), ('communitySetup:badgeUserRelatedListRecord', None), ('communitySetup:badgesList', None), ('communitySetup:baseCMCComponent', None), ('communitySetup:baseRecommendationRow', None), ('communitySetup:baseRecommendationRowEditMode', None), ('communitySetup:baseRecommendationRowViewMode', None), ('communitySetup:baseRecommendationSetup', None), ('communitySetup:baseTopicRow', None), ('communitySetup:baseTopics', None), ('communitySetup:borderStylePropertyEditor', None), ('communitySetup:borderStylePropertyEditorPanelBody', None), ('communitySetup:builderSortableListPropertyEditor', None), ('communitySetup:cbBackgroundImageEditor', None), ('communitySetup:cbBackgroundImagePositionDataProvider', None), ('communitySetup:cbBackgroundImageSizeOrRepeatDataProvider', None), ('communitySetup:cbColorEditor', None), ('communitySetup:cbColumnsEditor', None), ('communitySetup:cbCreateRecordEditor', None), ('communitySetup:cbHtmlContentEditor', None), ('communitySetup:cbIntegerSlider', None), ('communitySetup:cbOmniboxTypeaheadEditor', None), ('communitySetup:cbRichTextEditor', None), ('communitySetup:cbRichTextPicker', None), ('communitySetup:cbSearchResultsEditor', None), ('communitySetup:cbSelectComponentEditor', None), ('communitySetup:cbTabsetEditor', None), ('communitySetup:cbTabsetEditorItemEditor', None), ('communitySetup:cbTopArticleListEditor', None), ('communitySetup:cbUserProfileBannerEditor', None), ('communitySetup:cmcAppLayoutContainer', None), ('communitySetup:cmcButton', None), ('communitySetup:cmcErrorPage', None), ('communitySetup:cmcHeader', None), ('communitySetup:cmcHelpCenterUpgrade', None), ('communitySetup:cmcHelpLinkSection', None), ('communitySetup:cmcHelpLinks', None), ('communitySetup:cmcHelpMenu', None), ('communitySetup:cmcHome', None), ('communitySetup:cmcHomeHeader', None), ('communitySetup:cmcHubMenu', None), ('communitySetup:cmcHubMenuItem', None), ('communitySetup:cmcListButton', None), ('communitySetup:cmcNodeItem', None), ('communitySetup:cmcPageLayout', None), ('communitySetup:cmcProfileMenu', None), ('communitySetup:cmcQuickLinks', None), ('communitySetup:cmcReleaseNotes', None), ('communitySetup:cmcStyledList', None), ('communitySetup:cmcTemplate', None), ('communitySetup:cmcTrailhead', None), ('communitySetup:cmcWelcomePanel', None), ('communitySetup:cmcWelcomePanelWrapper', None), ('communitySetup:cmcWhatsNew', None), ('communitySetup:cmcWorkspaceChangeHandler', None), ('communitySetup:cmcWorkspaceLauncher', None), ('communitySetup:cmcWorkspaceTabs', None), ('communitySetup:cmcWorkspaceTile', None), ('communitySetup:cmsConnectEditor', None), ('communitySetup:cmsConnectScriptRow', None), ('communitySetup:cmsContentEditor', None), ('communitySetup:cmsContentEditorSection', None), ('communitySetup:cmsContentLayoutDesignAttribute', None), ('communitySetup:cmsContentLinkEditor', None), ('communitySetup:cmsContentParamRow', None), ('communitySetup:cmsJSONResourceDefintion', None), ('communitySetup:cmsJSONResourceTypes', None), ('communitySetup:cmsJSONSection', None), ('communitySetup:cmsLayoutDesignTimeSeparator', None), ('communitySetup:cmsLayoutLinkEditor', None), ('communitySetup:cmsLinksListPropertyEditor', None), ('communitySetup:cmsLinksOverridePropertyEditor', None), ('communitySetup:collaboratorsChangeRoleModal', None), ('communitySetup:collaboratorsListView', None), ('communitySetup:collaboratorsManager', None), ('communitySetup:collaboratorsSetupAddMembers', None), ('communitySetup:collaboratorsSetupDataProvider', None), ('communitySetup:collaboratorsSetupMultiSelectTable', None), ('communitySetup:collaboratorsSetupSelectRoles', None), ('communitySetup:collaboratorsSetupWizard', None), ('communitySetup:collapsibleSection', None), ('communitySetup:colorPicker', None), ('communitySetup:communityWorkspaceBanner', None), ('communitySetup:communityWorkspaceCollaboratorsManager', None), ('communitySetup:compoundFieldBadgeGivenBy', None), ('communitySetup:compoundFieldBadgeImageUrl', None), ('communitySetup:compoundFieldBadgeMessage', None), ('communitySetup:compoundFieldBadgeName', None), ('communitySetup:compoundFieldTimeAgo', None), ('communitySetup:compoundFieldsBadgeLastModifiedBy', None), ('communitySetup:compoundFieldsBadgeName', None), ('communitySetup:createCustomBadge', None), ('communitySetup:createMission', None), ('communitySetup:createRecordEditorItem', None), ('communitySetup:createRecordEditorItemEditor', None), ('communitySetup:crmContentHome', None), ('communitySetup:customBadgeAction', None), ('communitySetup:customMissionAction', None), ('communitySetup:customRecommendationDataProvider', None), ('communitySetup:customRecommendationRow', None), ('communitySetup:customRecommendationRowEditMode', None), ('communitySetup:customRecommendationRowViewMode', None), ('communitySetup:customRecommendationSetup', None), ('communitySetup:customRecommendationUploadFileButton', None), ('communitySetup:customTopicAction', None), ('communitySetup:cwBulkApprove', None), ('communitySetup:cwBulkDelete', None), ('communitySetup:cwBulkFlag', None), ('communitySetup:cwBulkFreezeUnfreeze', None), ('communitySetup:cwBulkPost', None), ('communitySetup:cwBulkUnflag', None), ('communitySetup:cwFlaggers', None), ('communitySetup:cwInsightActionsContainer', None), ('communitySetup:cwInsightQActionsManager', None), ('communitySetup:cwInsightQGrid', None), ('communitySetup:cwInsightQHeader', None), ('communitySetup:cwInsightQueue', None), ('communitySetup:cwModerationHomeMetrics', None), ('communitySetup:cwQContainer', None), ('communitySetup:cwReportDataProvider', None), ('communitySetup:cwSpinner', None), ('communitySetup:cwVFAction', None), ('communitySetup:cwVirtualActionColumn', None), ('communitySetup:cwVirtualColumn', None), ('communitySetup:cwVirtualSelectionColumn', None), ('communitySetup:dataCategoriesListDataProvider', None), ('communitySetup:dataCategoryListRow', None), ('communitySetup:datetimeBindablePropertyEditor', None), ('communitySetup:deleteCommunityBadge', None), ('communitySetup:deleteMission', None), ('communitySetup:dynamicCollectionEditor', None), ('communitySetup:enableTopicsForContent', None), ('communitySetup:engagementHomeSettings', None), ('communitySetup:errorMessage', None), ('communitySetup:extensionOverview', None), ('communitySetup:extensionTile', None), ('communitySetup:extensionsHome', None), ('communitySetup:extensionsHomeFeatureTiles', None), ('communitySetup:featureCMCPopover', None), ('communitySetup:featuredTopicRow', None), ('communitySetup:featuredTopics', None), ('communitySetup:filterMenu', None), ('communitySetup:flagQueue', None), ('communitySetup:flagReasonHolder', None), ('communitySetup:inlineBindablePropertyEditor', None), ('communitySetup:inputRadioGroup', None), ('communitySetup:inputSelectWrapper', None), ('communitySetup:installConfirmation', None), ('communitySetup:installPackage', None), ('communitySetup:installSetupPackage', None), ('communitySetup:listCMSConnection', None), ('communitySetup:localeMappingEditor', None), ('communitySetup:locationPicker', None), ('communitySetup:locationPill', None), ('communitySetup:lsfMilestoneSelectContentSource', None), ('communitySetup:manageCMSConnection', None), ('communitySetup:managedContentBindingEditor', None), ('communitySetup:managedContentBlockPropertyEditor', None), ('communitySetup:managedContentCollectionDataProviderEditor', None), ('communitySetup:managedContentCollectionDetail', None), ('communitySetup:managedContentCollectionItemLayoutPropertyEditor', None), ('communitySetup:managedContentCollectionLayoutPropertyEditor', None), ('communitySetup:managedContentCollectionPicker', None), ('communitySetup:managedContentCollectionsCMSEditModal', None), ('communitySetup:managedContentCollectionsDeleteDialog', None), ('communitySetup:managedContentCollectionsHome', None), ('communitySetup:managedContentCollectionsList', None), ('communitySetup:managedContentContentBlockLayoutPropertyEditor', None), ('communitySetup:managedContentDetailPropertyEditor', None), ('communitySetup:managedContentHome', None), ('communitySetup:managedContentItemCreatePage', None), ('communitySetup:managedContentItemVersionPage', None), ('communitySetup:managedContentItemsPicker', None), ('communitySetup:managedContentItemsPropertiesEditor', None), ('communitySetup:managedContentLayoutPropertyEditor', None), ('communitySetup:managedContentLayoutVisualPicker', None), ('communitySetup:managedContentMultiSelectTable', None), ('communitySetup:managedContentPicker', None), ('communitySetup:managedContentPropertiesPanelSection', None), ('communitySetup:managedContentQueryCriteria', None), ('communitySetup:managedContentQueryCriteriaList', None), ('communitySetup:managedContentQueryCriteriaListRow', None), ('communitySetup:managedContentQueryCriteriaWrapper', None), ('communitySetup:managedContentSchemaDataProvider', None), ('communitySetup:managedContentTopics', None), ('communitySetup:managedContentTypeList', None), ('communitySetup:managedContentTypeListDataProvider', None), ('communitySetup:managedContentTypeWhitelist', None), ('communitySetup:managedTopicsDataProvider', None), ('communitySetup:mcfManualCollectionDataProvider', None), ('communitySetup:mcfSetupCreateContentCollection', None), ('communitySetup:mcfSetupCreateManualCollection', None), ('communitySetup:mcfSetupEditCRMListView', None), ('communitySetup:mcfSetupEditManualCollection', None), ('communitySetup:mcfSetupSelectCRMListView', None), ('communitySetup:mcfSetupSelectCollectionType', None), ('communitySetup:mcfSetupSelectContentSource', None), ('communitySetup:mcfSetupVisualPicker', None), ('communitySetup:mcfSetupWizard', None), ('communitySetup:mergeTopicDialog', None), ('communitySetup:missionsList', None), ('communitySetup:moderationAppReportMetrics', None), ('communitySetup:moderationFeedItemDetail', None), ('communitySetup:moderationQueueFeedComment', None), ('communitySetup:moderationQueueFeedItem', None), ('communitySetup:moderationQueueFeedItemFooter', None), ('communitySetup:moderationQueueFeedItemHeader', None), ('communitySetup:moderationQueueFeedIterationElement', None), ('communitySetup:navigationBarCustomEditor', None), ('communitySetup:navigationBarEditorItem', None), ('communitySetup:navigationBarEditorItemPlaceholder', None), ('communitySetup:navigationBarEditorPropertiesPanel', None), ('communitySetup:navigationBarEditorPropertiesPanelV2', None), ('communitySetup:navigationMenuEditor', None), ('communitySetup:navigationMenuEditorDataProvider', None), ('communitySetup:navigationalTopicRow', None), ('communitySetup:navigationalTopics', None), ('communitySetup:navigationalTopicsPickList', None), ('communitySetup:nestedComponentPropertyPanel', None), ('communitySetup:networkDashboardWrapper', None), ('communitySetup:networkWorkspaceMetricDefaultPage', None), ('communitySetup:networkWorkspaceMetricEditorItem', None), ('communitySetup:networkWorkspaceMetricPropertiesPanel', None), ('communitySetup:networkWorkspaceMetricSetupEditor', None), ('communitySetup:networksWorkspaceErrorInfo', None), ('communitySetup:networksWorkspaceMetricsHolder', None), ('communitySetup:networksWorkspaceMetricsInstallPackage', None), ('communitySetup:networksWorkspaceMetricsTile', None), ('communitySetup:newTopicDialog', None), ('communitySetup:pageAssignmentAudienceSummary', None), ('communitySetup:pencilButton', None), ('communitySetup:personalizationAssignmentRow', None), ('communitySetup:personalizationModal', None), ('communitySetup:pillContainerAutoComplete', None), ('communitySetup:placeholderForTable', None), ('communitySetup:quillButtonWithPanel', None), ('communitySetup:quillPanel', None), ('communitySetup:recommendationAudienceDataProvider', None), ('communitySetup:recommendationAudienceRow', None), ('communitySetup:recommendationAudienceRowEditMode', None), ('communitySetup:recommendationAudienceRowViewMode', None), ('communitySetup:recommendationAudienceSetup', None), ('communitySetup:recommendationPreview', None), ('communitySetup:reorderArrows', None), ('communitySetup:resourceDefinitionEditor', None), ('communitySetup:searchResultsEditorItemEditor', None), ('communitySetup:secondaryNav', None), ('communitySetup:sectionHeaderCMSConnection', None), ('communitySetup:securityUpdateAssistantStep', None), ('communitySetup:securityUpdateConfirmation', None), ('communitySetup:securityUpdateDetail', None), ('communitySetup:securityUpdateHelpAndTraining', None), ('communitySetup:securityUpdateOverview', None), ('communitySetup:securityUpdateStatus', None), ('communitySetup:securityUpdateSummaryBlock', None), ('communitySetup:securityUpdateTile', None), ('communitySetup:securityUpdates', None), ('communitySetup:securityUpdatesRouter', None), ('communitySetup:sentiments', None), ('communitySetup:setupFeedback', None), ('communitySetup:summaryBlock', None), ('communitySetup:taskSummaryErrorHandler', None), ('communitySetup:taskSummaryHolder', None), ('communitySetup:textDecorationPropertyEditor', None), ('communitySetup:thanksButton', None), ('communitySetup:topicAssignmentRules', None), ('communitySetup:topicImageUpload', None), ('communitySetup:topicListView', None), ('communitySetup:topicRow', None), ('communitySetup:topics', None), ('communitySetup:topicsDataProvider', None), ('communitySetup:unearnedBadgeListRecord', None), ('communitySetup:userRecognitionBadgeItem', None), ('communitySetup:userRecognitionList', None), ('communitySetup:vFActionComponent', None), ('communitySetup:viewReportWrapper', None), ('componentReference:baseLayoutContainer', None), ('componentReference:bundle', None), ('componentReference:dataProvider', None), ('componentReference:dscFooter', None), ('componentReference:dscHeader', None), ('componentReference:examples', None), ('componentReference:highlightComponent', None), ('componentReference:offCoreTemplate', None), ('componentReference:template', None), ('console:bookmarkEntry', None), ('console:community360FilterMenu', None), ('console:componentManager', None), ('console:embeddedReportChart', None), ('console:history', None), ('console:lastViewedInCommunity', None), ('console:lastViewedInCommunityDataProvider', None), ('console:lastViewedInCommunityItem', None), ('console:lastViewedInCommunityWrapper', None), ('console:mruEntry', None), ('console:mruEntryMenuTrigger', None), ('console:mruSubEntry', None), ('console:mruWidget', None), ('console:relatedRecord', None), ('console:relatedRecordCompact', None), ('console:relatedRecordDescriptionDesignInfo', None), ('console:relatedRecordDesignInfo', None), ('console:tabIcon', None), ('contentPage:defaultEmailTemplatePageTemplate', None), ('conversation:home', None), ('conversation:mediaPlayerContainer', None), ('cooper:companyInsight', None), ('cooper:companyInsightCompetitors', None), ('cooper:companyInsightContacts', None), ('cooper:companyInsightFinancialDetails', None), ('cooper:companyInsightFullAddress', None), ('cooper:companyInsightHighlight', None), ('cooper:companyInsightIndustries', None), ('cooper:companyInsightRevenue', None), ('cooper:companyInsightSubcomponent', None), ('cooper:companyInsightSummary', None), ('cooper:companyInsightSummaryText', None), ('cooper:companyInsightTeaser', None), ('cooper:companyInsightTeaserCard', None), ('cooper:companyInsightTeaserDesignInfo', None), ('cooper:companyInsightText', None), ('cooper:insightCard', None), ('cooper:newsApp', None), ('cooper:tempDepend', None), ('cordaDashboards:component', None), ('cordaDashboards:dashboardComponent', None), ('cordaDashboards:dashboardSingleComponentView', None), ('cordaDashboards:feedAux', None), ('cordaDashboards:filterSlidePanel', None), ('cordaDashboards:primer', None), ('cordaDashboards:primerActionConnector', None), ('cordaDashboards:primerConfigConnector', None), ('cordaDashboards:primerTabConnector', None), ('cordaDashboards:slide', None), ('cordaDashboards:snapshot', None), ('cordaDashboards:snapshotPost', None), ('cordaDashboards:tempDepend', None), ('cordaDashboards:visualForcePageComponent', None), ('dashboards:actionBar', None), ('dashboards:actionProxy', None), ('dashboards:componentFiltersView', None), ('dashboards:dashboardLoader', None), ('dashboards:eclairChartTypeOption', None), ('dashboards:eclairChartTypeSwitcher', None), ('dashboards:eclairComponent', None), ('dashboards:eclairSingleComponentView', None), ('dashboards:eclairSlide', None), ('dashboards:eclairSnapshotPost', None), ('dashboards:filterPanel', None), ('dashboards:filterPanelRow', None), ('dashboards:highlightsStencilExtension', None), ('dashboards:linkCard', None), ('dashboards:pagedReportDetail', None), ('dashboards:refresher', None), ('dashboards:reportDetailContainer', None), ('dashboards:reportEntityLink', None), ('dashboards:runAsUserPanel', None), ('dashboards:slidingPanel', None), ('dashboards:tableChart', None), ('dashboards:tmpDepends', None), ('dataImporter:diActivityHeader', None), ('dataImporter:diAdvancedAccountContactOptions', None), ('dataImporter:diAdvancedCampaignMemberUpdateOptions', None), ('dataImporter:diAdvancedCustomOptions', None), ('dataImporter:diAdvancedGenericOptions', None), ('dataImporter:diAdvancedLeadOptions', None), ('dataImporter:diAdvancedLookupFieldOptions', None), ('dataImporter:diAdvancedOpportunityOptions', None), ('dataImporter:diAdvancedPersonAccountOptions', None), ('dataImporter:diAdvancedSolutionOptions', None), ('dataImporter:diButtonBar', None), ('dataImporter:diCsvFileDropzone', None), ('dataImporter:diCsvFileSelector', None), ('dataImporter:diCsvSelectionActivity', None), ('dataImporter:diErrorBlock', None), ('dataImporter:diErrorMessage', None), ('dataImporter:diFileSelectionBase', None), ('dataImporter:diFileUploadButton', None), ('dataImporter:diFutureActivity', None), ('dataImporter:diInitialStep', None), ('dataImporter:diInputFile', None), ('dataImporter:diInputFileDropzone', None), ('dataImporter:diInvisibleFileUploader', None), ('dataImporter:diLanding', None), ('dataImporter:diLegacy', None), ('dataImporter:diMappingFieldDataProvider', None), ('dataImporter:diMappingStep', None), ('dataImporter:diMappingStepSampleRow', None), ('dataImporter:diMatchingChoiceActivity', None), ('dataImporter:diOverlay', None), ('dataImporter:diProgressBar', None), ('dataImporter:diProgressMarker', None), ('dataImporter:diReviewStep', None), ('dataImporter:diSfdcObjectSelectionActivity', None), ('dataImporter:diSingleMapping', None), ('dataImporter:diSingleMappingEditor', None), ('dataImporter:diStep', None), ('dataImporter:diStepHeader', None), ('dataImporter:diTemplate', None), ('ddcProspector:accountPreview', None), ('ddcProspector:companyHierarchy', None), ('ddcProspector:companyHierarchyPreview', None), ('ddcProspector:companyHierarchyPreviewDesignInfo', None), ('ddcProspector:getAccountsMultiAddButton', None), ('ddcProspector:getAccountsMultiAddHeader', None), ('ddcProspector:getContactsMultiAddButton', None), ('ddcProspector:getContactsMultiAddHeader', None), ('ddcProspector:isInCrmIcon', None), ('ddcProspector:isOwnedIcon', None), ('ddcProspector:messageBlock', None), ('ddcProspector:tree', None), ('ddcProspector:treeNode', None), ('ddcProspector:treeNodeContent', None), ('ddcProspector:updatedDate', None), ('desktopDashboards:componentShareModalFooter', None), ('desktopDashboards:dashboard', None), ('desktopDashboards:embeddedDashboard', None), ('desktopDashboards:embeddedDashboardDataSourceInfo', None), ('desktopDashboards:embeddedDashboardDesignSubstitute', None), ('desktopDashboards:feedPanel', None), ('desktopDashboards:tempDepend', None), ('desktopDashboards:webtemplate', None), ('einstein_assistant:assistantContextItemDataProvider', None), ('einstein_assistant:assistantDefinitionControllerDataProvider', None), ('einstein_assistant:assistantDeleteServiceDataProvider', None), ('einstein_assistant:assistantProfilesControllerDataProvider', None), ('einstein_assistant:assistantQuickActionControllerDataProvider', None), ('einstein_assistant:assistantSObjectBuilderDataProvider', None), ('einstein_assistant:assistantTemplateObjectsListControllerDataProvider', None), ('einstein_assistant:assistantTemplatesListControllerDataProvider', None), ('einstein_assistant:builderTemplate', None), ('einsteinbuilder:advancedConditionPopover', None), ('einsteinbuilder:advancedFilterGroup', None), ('einsteinbuilder:advancedFilterRow', None), ('einsteinbuilder:assessor', None), ('einsteinbuilder:autocomplete', None), ('einsteinbuilder:banner', None), ('einsteinbuilder:binaryClassificationLabelDefinition', None), ('einsteinbuilder:conditionLogicTypes', None), ('einsteinbuilder:detailsSummaryCount', None), ('einsteinbuilder:dialogHeader', None), ('einsteinbuilder:einsteinBuilderHeader', None), ('einsteinbuilder:einsteinBuilderPredictions', None), ('einsteinbuilder:emptyState', None), ('einsteinbuilder:eplite', None), ('einsteinbuilder:exclusionFields', None), ('einsteinbuilder:fieldExistsSelection', None), ('einsteinbuilder:fieldSearchAndTrainingFilterSelection', None), ('einsteinbuilder:fieldSearchAutocomplete', None), ('einsteinbuilder:fieldSearchAutocompleteOption', None), ('einsteinbuilder:fieldSearchDataProvider', None), ('einsteinbuilder:fieldSelect', None), ('einsteinbuilder:globalFilterList', None), ('einsteinbuilder:globalFilterRowCondition', None), ('einsteinbuilder:guidePanel', None), ('einsteinbuilder:input', None), ('einsteinbuilder:inputBoolean', None), ('einsteinbuilder:inputCurrency', None), ('einsteinbuilder:inputDate', None), ('einsteinbuilder:inputDateTime', None), ('einsteinbuilder:inputError', None), ('einsteinbuilder:inputNumber', None), ('einsteinbuilder:inputPicklist', None), ('einsteinbuilder:inputSelect', None), ('einsteinbuilder:inputString', None), ('einsteinbuilder:inputText', None), ('einsteinbuilder:inputValueText', None), ('einsteinbuilder:logicTypesRadioButtons', None), ('einsteinbuilder:objectSearchAndGlobalFilterSelection', None), ('einsteinbuilder:objectSearchAutocomplete', None), ('einsteinbuilder:objectSearchAutocompleteOption', None), ('einsteinbuilder:objectSearchDataProvider', None), ('einsteinbuilder:operatorSelect', None), ('einsteinbuilder:popover', None), ('einsteinbuilder:predictionBuilderConfirmation', None), ('einsteinbuilder:predictionConfirmSettings', None), ('einsteinbuilder:predictionCsvDownload', None), ('einsteinbuilder:predictionQualityCard', None), ('einsteinbuilder:predictionSettings', None), ('einsteinbuilder:predictionTypeSelection', None), ('einsteinbuilder:pushbackCustomField', None), ('einsteinbuilder:pushbackFieldSelection', None), ('einsteinbuilder:reviewTerms', None), ('einsteinbuilder:reviewTermsFlow', None), ('einsteinbuilder:scorecard', None), ('einsteinbuilder:scorecardDetails', None), ('einsteinbuilder:scorecardOverview', None), ('einsteinbuilder:scorecardPredictorsOverview', None), ('einsteinbuilder:setupPredictionFlow', None), ('einsteinbuilder:setupTile', None), ('einsteinbuilder:splashScreen', None), ('einsteinbuilder:startScreen', None), ('einsteinbuilder:statusCount', None), ('einsteinbuilder:stepLayout', None), ('einsteinbuilder:stepLayoutFinish', None), ('einsteinbuilder:stepLayoutSplit', None), ('einsteinbuilder:tile', None), ('einsteinbuilder:topPredictorsCard', None), ('einsteinbuilder:visualPickerForm', None), ('einsteinbuilder:welcomeModal', None), ('einsteinconduit:commanderApi', None), ('einsteinconduit:commanderUi', None), ('einsteinconduit:datasetExplorer', None), ('emailStream:activityStorage', None), ('emailStream:activityStoragePage', None), ('emailStream:activitySyncEngineSetupMain', None), ('emailStream:activitySyncEngineSetupSplashScreen', None), ('emailStream:activitySyncEngineTabbed', None), ('emailStream:aseAdvancedSettingsTab', None), ('emailStream:aseEditConfiguration', None), ('emailStream:aseFilterRow', None), ('emailStream:aseModalToConfirmEmailCaptureOff', None), ('emailStream:aseSetupAssignUsers', None), ('emailStream:aseSetupConfigurations', None), ('emailStream:aseSetupExcludeAddresses', None), ('emailStream:aseSetupModalFinalize', None), ('emailStream:aseSetupModalFlowContainer', None), ('emailStream:aseSetupModalProgressIndicator', None), ('emailStream:aseSetupModalReviewTerms', None), ('emailStream:aseSetupModalStart', None), ('emailStream:aseSetupModalStep', None), ('emailStream:aseSetupSyncSettings', None), ('emailStream:aseTabHome', None), ('emailStream:aseTabSyncConfigurations', None), ('emailStream:automaticActivityCaptureSetup', None), ('emailStream:automaticActivityCaptureSetupAssistant', None), ('emailStream:automaticActivityCaptureSetupAssistantPage', None), ('emailStream:automaticActivityCaptureSetupPage', None), ('emailStream:automaticActivityCaptureSetupSplashScreen', None), ('emailStream:baseSetup', None), ('emailStream:chooseDataSourceType', None), ('emailStream:connectEmail', None), ('emailStream:connectEmailAgreement', None), ('emailStream:connectEmailWrapper', None), ('emailStream:customInsightCreate', None), ('emailStream:customInsightList', None), ('emailStream:customInsightSetupPage', None), ('emailStream:dataSourceStatus', None), ('emailStream:dataSourceStatusRow', None), ('emailStream:defaultOrgSharingSettingsPanel', None), ('emailStream:defaultOrgSharingSettingsPanelFooter', None), ('emailStream:defaultSharingSettings', None), ('emailStream:defaultSharingSettingsPanel', None), ('emailStream:defaultSharingSettingsPanelFooter', None), ('emailStream:emailIqSetup', None), ('emailStream:emailIqSetupPage', None), ('emailStream:emailIqSetupRow', None), ('emailStream:emailStreamSettings', None), ('emailStream:emailStreamSharingSettings', None), ('emailStream:emptyStateCard', None), ('emailStream:enabledEntities', None), ('emailStream:entitySelector', None), ('emailStream:iconLabel', None), ('emailStream:insightsEmailAgreement', None), ('emailStream:insightsOrgSettingSetupStep', None), ('emailStream:insightsPermissionSetSetupStep', None), ('emailStream:insightsSetupAssistant', None), ('emailStream:insightsSetupAssistantStep', None), ('emailStream:insightsSetupCheckmark', None), ('emailStream:launchpad', None), ('emailStream:launchpadMat', None), ('emailStream:oauthFlowContainer', None), ('emailStream:orgBlacklistModalFlowContainer', None), ('emailStream:orgBlacklistModalToConfirmInput', None), ('emailStream:orgBlacklistModalToEnterDetails', None), ('emailStream:orgBlacklistModalToSelectType', None), ('emailStream:reviewTerms', None), ('emailStream:reviewTermsFlow', None), ('emailStream:salesforceInboxDeleteEmailsAndEvents', None), ('emailStream:salesforceInboxDeleteEmailsAndEventsEmailTab', None), ('emailStream:salesforceInboxDeleteEmailsAndEventsUserTab', None), ('emailStream:salesforceInboxExchangeSetting', None), ('emailStream:salesforceInboxExchangeSettingDetails', None), ('emailStream:salesforceInboxExchangeSettingPage', None), ('emailStream:salesforceInboxExchangeSettingRowAction', None), ('emailStream:salesforceInboxExcludeFromML', None), ('emailStream:salesforceInboxOrgBlacklist', None), ('emailStream:salesforceInboxOrgBlacklistPage', None), ('emailStream:salesforceInboxOrgBlacklistRowAction', None), ('emailStream:salesforceInboxUserBlacklist', None), ('emailStream:salesforceInboxUserBlacklistPage', None), ('emailStream:salesforceInboxUserBlacklistRowAction', None), ('emailStream:sharingControl', None), ('emailStream:sharingPreview', None), ('emailStream:tempDepend', None), ('emailStream:updateSharing', None), ('emailStream:updateSharingBody', None), ('emailStream:userBlacklistModalToConfirmInput', None), ('emailStream:usersAndLicenses', None), ('emailStream:usersAndLicensesPage', None), ('emailStream:waveJobList', None), ('emailStream:welcomeMat', None), ('emailStream:whatIsIq', None), ('emailui:activityTimeline2EmailMessageAddressListOverride', None), ('emailui:activityTimeline2EmailMessageBccAddressFieldOverride', None), ('emailui:activityTimeline2EmailMessageCcAddressFieldOverride', None), ('emailui:activityTimeline2EmailMessageFromAddressFieldOverride', None), ('emailui:activityTimeline2EmailMessageToAddressFieldOverride', None), ('emailui:activityTimelineFixedLayoutEmailMessageStencil', None), ('emailui:addressContainer', None), ('emailui:addressListOutput', None), ('emailui:baseAddressContainer', None), ('emailui:baseEmailHighlightsStencil', None), ('emailui:consentManager', None), ('emailui:consentWarningModal', None), ('emailui:consentWarningModalFooter', None), ('emailui:emailAttachment', None), ('emailui:emailBaseReplyActions', None), ('emailui:emailMessage', None), ('emailui:emailMessageDetailDropdown', None), ('emailui:emailMessageEngagementSummary', None), ('emailui:emailMessageEngagementTab', None), ('emailui:emailMessageFromProfilePhoto', None), ('emailui:emailMessageHighlightsActionsContainer', None), ('emailui:emailMessageHighlightsStencil', None), ('emailui:emailMessageRecordHome', None), ('emailui:emailMessageReplyActions', None), ('emailui:emailRelatedToContainer', None), ('emailui:emailTemplateDataGrid', None), ('emailui:emailToolbarContainer', None), ('emailui:emailToolbarRelatedTo', None), ('emailui:enhancedEmailSetup', None), ('emailui:enhancedEmailSetupPage', None), ('emailui:externalEmailAuthenticator', None), ('emailui:formattedEmail', None), ('emailui:illustrationInlineText', None), ('emailui:integrationOrgSetup', None), ('emailui:listEmailCampaignDropDown', None), ('emailui:listEmailEngagementTab', None), ('emailui:listEmailHighlightsStencil', None), ('emailui:listEmailRecipientSuggestionDataProvider', None), ('emailui:listEmailRecordHome', None), ('emailui:listEmailRelatedListContainer', None), ('emailui:massEmailActionFooter', None), ('emailui:massEmailContentTab', None), ('emailui:massEmailList', None), ('emailui:massEmailReviewTab', None), ('emailui:massEmailTab', None), ('emailui:massEmailTabSet', None), ('emailui:oauthSplash', None), ('emailui:outboxActivity', None), ('emailui:outboxActivityTimeline', None), ('emailui:outputEmail', None), ('emailui:outputEmailPanel', None), ('emailui:outputRichText', None), ('emailui:pageError', None), ('emailui:pendingEmailActivity', None), ('emailui:pillContainer', None), ('emailui:pillContainerAutoComplete', None), ('emailui:placeholderEmailGenerator', None), ('emailui:placeholderLookup', None), ('emailui:previewModal', None), ('emailui:publisherAttachmentsMenuItem', None), ('emailui:publisherDiscardDraft', None), ('emailui:publisherPreview', None), ('emailui:publisherResetFields', None), ('emailui:publisherSpawnDocker', None), ('emailui:recipientAutocompleteOption', None), ('emailui:recipientListAutocomplete', None), ('emailui:recipientListAutocompleteOption', None), ('emailui:recipientSuggestionDataProvider', None), ('emailui:relatedOtherPeopleContainer', None), ('emailui:relatedPeople', None), ('emailui:relatedRecordContainer', None), ('emailui:resetDraftModal', None), ('emailui:resetDraftModalFooter', None), ('emailui:resetDraftModalHeader', None), ('emailui:salesEngagementRelatedList', None), ('emailui:salesforceFileWarningModal', None), ('emailui:salesforceInboxConnector', None), ('emailui:sendListEmailAction', None), ('emailui:warningModal', None), ('emailui:whatAndWhoOutput', None), ('embeddedService:activateEmbeddedServicePage', None), ('embeddedService:apiNameField', None), ('embeddedService:baseCustomLabelsTable', None), ('embeddedService:baseCustomLabelsTableRow', None), ('embeddedService:basePanel', None), ('embeddedService:channelMenuList', None), ('embeddedService:channelMenuSetup', None), ('embeddedService:channelMenuSetupCardCodeSnippet', None), ('embeddedService:channelMenuSetupPanelBranding', None), ('embeddedService:channelMenuSetupPanelCodeSnippet', None), ('embeddedService:channelMenuSetupPanelLabels', None), ('embeddedService:channelMenuSetupViewer', None), ('embeddedService:deploymentList', None), ('embeddedService:embeddedServicePageTemplateDefault', None), ('embeddedService:embeddedServiceSetup', None), ('embeddedService:esPageCanvasConfig', None), ('embeddedService:fieldServiceActionBar', None), ('embeddedService:fieldServiceAppointmentCard', None), ('embeddedService:fieldServicePageActivationSetupFlow', None), ('embeddedService:fieldServicePageActivationSetupFlowDeploymentSelection', None), ('embeddedService:fieldServicePageActivationSetupFlowNextSteps', None), ('embeddedService:fieldServicePageActivationSetupFlowStatusSelection', None), ('embeddedService:fieldServicePageActivationSetupFlowUpdateReview', None), ('embeddedService:fieldServiceScheduling', None), ('embeddedService:fieldServiceSelectionTabs', None), ('embeddedService:fieldServiceSidebarFeature', None), ('embeddedService:fieldServiceStateAppointmentDetail', None), ('embeddedService:fieldServiceStateAppointmentHome', None), ('embeddedService:fieldServiceStateAppointmentList', None), ('embeddedService:fieldServiceStateConfirmation', None), ('embeddedService:fieldServiceStateHome', None), ('embeddedService:fieldServiceStateSchedulingApexService', None), ('embeddedService:fieldServiceStateServiceResourceDetail', None), ('embeddedService:flowActionButton', None), ('embeddedService:flowInput', None), ('embeddedService:flowInputBaseCheckbox', None), ('embeddedService:flowInputCheckbox', None), ('embeddedService:flowInputCurrency', None), ('embeddedService:flowInputDate', None), ('embeddedService:flowInputDateTime', None), ('embeddedService:flowInputLongText', None), ('embeddedService:flowInputMultiCheckbox', None), ('embeddedService:flowInputMultiSelect', None), ('embeddedService:flowInputNumber', None), ('embeddedService:flowInputOptions', None), ('embeddedService:flowInputPassword', None), ('embeddedService:flowInputRadio', None), ('embeddedService:flowInputSelect', None), ('embeddedService:flowInputSimple', None), ('embeddedService:flowInputText', None), ('embeddedService:flowOutputDisplayText', None), ('embeddedService:flowSidebarFeature', None), ('embeddedService:flowStateViewer', None), ('embeddedService:icon', None), ('embeddedService:inputLookupSelector', None), ('embeddedService:keyValuePairList', None), ('embeddedService:liveAgentQueuePosition', None), ('embeddedService:liveAgentSidebar', None), ('embeddedService:liveAgentSidebarFeature', None), ('embeddedService:liveAgentStateChat', None), ('embeddedService:liveAgentStateChatAction', None), ('embeddedService:liveAgentStateChatAvatar', None), ('embeddedService:liveAgentStateChatBubble', None), ('embeddedService:liveAgentStateChatButtonItem', None), ('embeddedService:liveAgentStateChatButtonMessage', None), ('embeddedService:liveAgentStateChatEventMessage', None), ('embeddedService:liveAgentStateChatFileTransferMessage', None), ('embeddedService:liveAgentStateChatHeader', None), ('embeddedService:liveAgentStateChatHeaderAvatars', None), ('embeddedService:liveAgentStateChatHeaderOption', None), ('embeddedService:liveAgentStateChatInputFooter', None), ('embeddedService:liveAgentStateChatItem', None), ('embeddedService:liveAgentStateChatMenuMessage', None), ('embeddedService:liveAgentStateChatMessage', None), ('embeddedService:liveAgentStateChatPlaintextMessageDefaultUI', None), ('embeddedService:liveAgentStateChatRichItem', None), ('embeddedService:liveAgentStateChatRichMessage', None), ('embeddedService:liveAgentStateChatTypingIndicator', None), ('embeddedService:liveAgentStateChatUnreadMessageBanner', None), ('embeddedService:liveAgentStateOfflineSupport', None), ('embeddedService:liveAgentStateOfflineSupportDefaultUI', None), ('embeddedService:liveAgentStatePostchat', None), ('embeddedService:liveAgentStatePrechat', None), ('embeddedService:liveAgentStatePrechatDefaultUI', None), ('embeddedService:liveAgentStateSelfService', None), ('embeddedService:liveAgentStateSelfServiceArticleList', None), ('embeddedService:liveAgentStateSelfServiceArticleListItem', None), ('embeddedService:liveAgentStateSelfServiceArticleView', None), ('embeddedService:liveAgentStateWaiting', None), ('embeddedService:liveAgentStateWaitingHeader', None), ('embeddedService:loadingBalls', None), ('embeddedService:noAssignedResourceView', None), ('embeddedService:prechatSetupFlow', None), ('embeddedService:prechatSetupFlowCustomizeFields', None), ('embeddedService:prechatSetupFlowDefaultFields', None), ('embeddedService:prechatSetupFlowRecordAssociations', None), ('embeddedService:prechatSetupFlowRecordAssociationsRecordTypePicklist', None), ('embeddedService:serviceAppointmentFullView', None), ('embeddedService:serviceAppointmentRecordCard', None), ('embeddedService:serviceAppointmentReducedView', None), ('embeddedService:serviceResourceFullView', None), ('embeddedService:serviceResourceRecordCard', None), ('embeddedService:serviceResourceReducedView', None), ('embeddedService:setupBaseCard', None), ('embeddedService:setupBrandingStencil', None), ('embeddedService:setupBrandingStencilDialog', None), ('embeddedService:setupBrandingStencilFieldServiceAppointmentDetail', None), ('embeddedService:setupBrandingStencilFieldServiceAppointmentList', None), ('embeddedService:setupBrandingStencilFieldServiceAppointmentListEmpty', None), ('embeddedService:setupBrandingStencilFieldServiceAuthenticationFailure', None), ('embeddedService:setupBrandingStencilFieldServiceBase', None), ('embeddedService:setupBrandingStencilFieldServiceConfirmation', None), ('embeddedService:setupBrandingStencilFieldServiceDialog', None), ('embeddedService:setupBrandingStencilFieldServiceDialogWithFooter', None), ('embeddedService:setupBrandingStencilFieldServiceHome', None), ('embeddedService:setupBrandingStencilFieldServiceResourceDetail', None), ('embeddedService:setupBrandingStencilFieldServiceScheduling', None), ('embeddedService:setupBrandingStencilFieldServiceSchedulingWithError', None), ('embeddedService:setupBrandingStencilLiveAgentBase', None), ('embeddedService:setupBrandingStencilLiveAgentChat', None), ('embeddedService:setupBrandingStencilLiveAgentChatBotActions', None), ('embeddedService:setupBrandingStencilLiveAgentChatEnded', None), ('embeddedService:setupBrandingStencilLiveAgentChatExtendedHeader', None), ('embeddedService:setupBrandingStencilLiveAgentChatFileUpload', None), ('embeddedService:setupBrandingStencilLiveAgentChatMinimized', None), ('embeddedService:setupBrandingStencilLiveAgentChatReconnecting', None), ('embeddedService:setupBrandingStencilLiveAgentChatTimeout', None), ('embeddedService:setupBrandingStencilLiveAgentChatTransfer', None), ('embeddedService:setupBrandingStencilLiveAgentChatTransferQueuePosition', None), ('embeddedService:setupBrandingStencilLiveAgentChatUnseenMessages', None), ('embeddedService:setupBrandingStencilLiveAgentChatWithAttachment', None), ('embeddedService:setupBrandingStencilLiveAgentOfflineSupportMinimized', None), ('embeddedService:setupBrandingStencilLiveAgentPostchat', None), ('embeddedService:setupBrandingStencilLiveAgentPrechat', None), ('embeddedService:setupBrandingStencilLiveAgentWaiting', None), ('embeddedService:setupBrandingStencilLiveAgentWaitingMinimized', None), ('embeddedService:setupBrandingStencilLiveAgentWaitingQueuePosition', None), ('embeddedService:setupBrandingStencilMinimized', None), ('embeddedService:setupBrandingStencilMinimizedStack', None), ('embeddedService:setupBrandingStencilRegion', None), ('embeddedService:setupBrandingStencilViewer', None), ('embeddedService:setupCard', None), ('embeddedService:setupCardActionButton', None), ('embeddedService:setupCardActionButtonToggle', None), ('embeddedService:setupCardBranding', None), ('embeddedService:setupCardCodeSnippet', None), ('embeddedService:setupCardFieldServiceAppointmentHome', None), ('embeddedService:setupCardLiveAgentCustomization', None), ('embeddedService:setupCardLiveAgentOfflineCases', None), ('embeddedService:setupCardPrechat', None), ('embeddedService:setupCardWarning', None), ('embeddedService:setupChannelMenuChannelSpecificIcon', None), ('embeddedService:setupChannelMenuPanel', None), ('embeddedService:setupCustomLabels', None), ('embeddedService:setupCustomLabelsTable', None), ('embeddedService:setupCustomLabelsTableRow', None), ('embeddedService:setupCustomizationPicklist', None), ('embeddedService:setupFlexipageList', None), ('embeddedService:setupFlowBranding', None), ('embeddedService:setupFlowCard', None), ('embeddedService:setupFlowCustomizeFieldsTable', None), ('embeddedService:setupFlowCustomizeFieldsTableAddFieldPopover', None), ('embeddedService:setupFlowCustomizeFieldsTableRow', None), ('embeddedService:setupFlowCustomizeFieldsTableRowIconButton', None), ('embeddedService:setupFlowCustomizeFieldsTableTooltip', None), ('embeddedService:setupFlowLiveAgentOfflineCases', None), ('embeddedService:setupFlowLiveAgentOfflineCasesConfiguration', None), ('embeddedService:setupFlowRecordTypePicklist', None), ('embeddedService:setupFlowTooltip', None), ('embeddedService:setupHeaderCard', None), ('embeddedService:setupHeaderCardChannelMenu', None), ('embeddedService:setupHeaderCardSnapins', None), ('embeddedService:setupMenuItemLabelsTable', None), ('embeddedService:setupMenuItemLabelsTableRow', None), ('embeddedService:setupPage', None), ('embeddedService:setupPageCard', None), ('embeddedService:setupPageChannelMenu', None), ('embeddedService:setupPageFieldService', None), ('embeddedService:setupPageFlows', None), ('embeddedService:setupPageLiveAgent', None), ('embeddedService:setupPageSnapins', None), ('embeddedService:setupPageViewer', None), ('embeddedService:setupPanel', None), ('embeddedService:setupPanelBranding', None), ('embeddedService:setupPanelBrandingColorPicker', None), ('embeddedService:setupPanelCard', None), ('embeddedService:setupPanelChannelMenu', None), ('embeddedService:setupPanelCodeSnippet', None), ('embeddedService:setupPanelFieldService', None), ('embeddedService:setupPanelFieldServiceAuthentication', None), ('embeddedService:setupPanelFieldServiceBranding', None), ('embeddedService:setupPanelFieldServiceFlows', None), ('embeddedService:setupPanelFlows', None), ('embeddedService:setupPanelFlowsBranding', None), ('embeddedService:setupPanelInput', None), ('embeddedService:setupPanelInputCheckbox', None), ('embeddedService:setupPanelInputDropdown', None), ('embeddedService:setupPanelInputJunctionRecordPicklist', None), ('embeddedService:setupPanelInputNumber', None), ('embeddedService:setupPanelInputPicklist', None), ('embeddedService:setupPanelInputText', None), ('embeddedService:setupPanelLiveAgent', None), ('embeddedService:setupPanelLiveAgentBranding', None), ('embeddedService:setupPanelSnapins', None), ('embeddedService:setupPanelTab', None), ('embeddedService:setupTab', None), ('embeddedService:setupTabChannelMenuItem', None), ('embeddedService:setupTabCustomLabels', None), ('embeddedService:setupTabCustomLabelsHeader', None), ('embeddedService:setupTabCustomLabelsTableRow', None), ('embeddedService:setupTabCustomizeLabelsTable', None), ('embeddedService:setupTabFlow', None), ('embeddedService:setupTabFlowCard', None), ('embeddedService:setupTabFlowContents', None), ('embeddedService:sidebar', None), ('embeddedService:sidebarBaseFeature', None), ('embeddedService:sidebarButton', None), ('embeddedService:sidebarDialogState', None), ('embeddedService:sidebarExtendedHeader', None), ('embeddedService:sidebarFeature', None), ('embeddedService:sidebarForm', None), ('embeddedService:sidebarFormField', None), ('embeddedService:sidebarHeader', None), ('embeddedService:sidebarMinimizedContainer', None), ('embeddedService:sidebarMinimizedDefaultUI', None), ('embeddedService:sidebarMinimizedFabDefaultUI', None), ('embeddedService:sidebarScriptLoader', None), ('embeddedService:sidebarState', None), ('embeddedService:verticalTab', None), ('embeddedService:verticalTabsEditor', None), ('embeddedService:verticalTabset', None), ('environmenthub:connectOrganization', None), ('environmenthub:createOrganization', None), ('environmenthub:displayNameRenderer', None), ('environmenthub:errorHandlingDisplay', None), ('environmenthub:generateModal', None), ('environmenthub:isFedIdSsoMatchAllowedEditRenderer', None), ('environmenthub:isFedIdSsoMatchAllowedRenderer', None), ('environmenthub:logIntoOrganization', None), ('environmenthub:modalButtons', None), ('environmenthub:serviceProviderRenderer', None), ('environmenthub:ssoMappedUsersRenderer', None), ('environmenthub:ssoStatusFilter', None), ('environmenthub:ssoStatusFilterEdit', None), ('environmenthub:ssoUserMapping', None), ('environmenthub:ssoUsernameFormulaEditRenderer', None), ('environmenthub:ssoUsernameFormulaRenderer', None), ('environmenthub:toggleSso', None), ('environmenthub:validatingInput', None), ('environmenthub:validatingMyDomainInput', None), ('environmenthub:validatingTemplateIdInput', None), ('environmenthub:validatingUserNameInput', None), ('essentials:essentialsAppSwitcher', None), ('essentials:essentialsTemplate', None), ('essentials_trialassistant:badgeService', None), ('essentials_trialassistant:chatProviderService', None), ('essentials_trialassistant:contentSearchSandbox', None), ('essentials_trialassistant:feedbackNextService', None), ('essentials_trialassistant:feedbackWrapper', None), ('essentials_trialassistant:helpContentService', None), ('essentials_trialassistant:liveChatService', None), ('essentials_trialassistant:pocketGuideService', None), ('essentials_trialassistant:pocketGuideTrialLibrary', None), ('essentials_trialassistant:pocketGuideWrapper', None), ('essentials_trialassistant:pushChatWindowService', None), ('essentials_trialassistant:pushChatWindowWrapper', None), ('externalServicesSetup:actionExplorer', None), ('externalServicesSetup:actionLink', None), ('externalServicesSetup:actionMenuItem', None), ('externalServicesSetup:createLsf', None), ('externalServicesSetup:detailPage', None), ('externalServicesSetup:errorList', None), ('externalServicesSetup:externalServicesV2Toggle', None), ('externalServicesSetup:listPage', None), ('externalServicesSetup:milestoneRegistration', None), ('externalServicesSetup:milestoneSplashPage', None), ('externalServicesSetup:milestoneSyncActions', None), ('externalServicesSetup:setupComponent', None), ('flexipage:accordion', None), ('flexipage:accordionDesignInfo', None), ('flexipage:accordionDesignSubstitute', None), ('flexipage:accordionSection', None), ('flexipage:actionBar', None), ('flexipage:activeChild', None), ('flexipage:appHomeTemplateHeaderThreeColumns', None), ('flexipage:appHomeTemplateHeaderTwoColumns', None), ('flexipage:appHomeTemplateHeaderTwoColumnsEqualWidth', None), ('flexipage:appHomeTemplateHeaderTwoColumnsLeftSidebar', None), ('flexipage:appHomeTemplateThreeColumns', None), ('flexipage:appHomeTemplateTwoColumns', None), ('flexipage:appHomeTemplateTwoColumnsStacked', None), ('flexipage:backgroundComponentsWrapper', None), ('flexipage:baseFlexipageWithGlobalPublisherContext', None), ('flexipage:baseRecordHomeTemplateDesktop', None), ('flexipage:card', None), ('flexipage:clientError', None), ('flexipage:column', None), ('flexipage:component', None), ('flexipage:component3', None), ('flexipage:componentDecorator', None), ('flexipage:defaultAppHomeTemplate', None), ('flexipage:defaultObjectHomeTemplate', None), ('flexipage:defaultStandardTabTemplate', None), ('flexipage:fieldSection', None), ('flexipage:filterListCard', None), ('flexipage:filterListCardDesignInfo', None), ('flexipage:filterListCardDesignSubstitute', None), ('flexipage:listRecord', None), ('flexipage:objectHomeTemplateThreeColumns', None), ('flexipage:objectHomeTemplateTwoColumns', None), ('flexipage:objectHomeTemplateTwoColumnsStacked', None), ('flexipage:page', None), ('flexipage:pageDeprecated', None), ('flexipage:panelCollapseButton', None), ('flexipage:recentItemStencil', None), ('flexipage:recentItemTemplate', None), ('flexipage:recentItems', None), ('flexipage:recentItemsDesignSubstitute', None), ('flexipage:recordHomeLeftSidebarTemplateDesktop', None), ('flexipage:recordHomePinnedHeaderLeftSidebarTemplateDesktop', None), ('flexipage:recordHomePinnedHeaderLeftSidebarTwoColTemplateDesktop', None), ('flexipage:recordHomePinnedHeaderTemplateDesktop', None), ('flexipage:recordHomePinnedLeftRightSidebarsTemplateDesktop', None), ('flexipage:recordHomePinnedLeftSidebarCollapsibleRegionsTemplateDesktop', None), ('flexipage:recordHomePinnedLeftSidebarTemplateDesktop', None), ('flexipage:recordHomePinnedLeftSidebarTwoColTemplateDesktop', None), ('flexipage:recordHomeSimpleViewTemplate', None), ('flexipage:recordHomeSingleColNoHeaderTemplateDesktop', None), ('flexipage:recordHomeSingleColTemplateDesktop', None), ('flexipage:recordHomeTemplateDesktop', None), ('flexipage:recordHomeThreeColHeaderTemplateDesktop', None), ('flexipage:recordHomeThreeColTemplateDesktop', None), ('flexipage:recordHomeTwoColEqualHeaderTemplateDesktop', None), ('flexipage:recordHomeWithSubheaderLeftSidebarTemplateDesktop', None), ('flexipage:recordHomeWithSubheaderTemplateDesktop', None), ('flexipage:recordPrintableViewTemplate', None), ('flexipage:reportChart', None), ('flexipage:richText', None), ('flexipage:tab', None), ('flexipage:tabset', None), ('flexipage:tempDepend', None), ('flexipage:visualforcePage', None), ('flexipageEditor:activateActionOverrideAppAssignmentDataProvider', None), ('flexipageEditor:activateActionOverrideAppAssignmentStep', None), ('flexipageEditor:activateActionOverrideAppFormFactorSelectionStep', None), ('flexipageEditor:activateActionOverrideAppFormFactorSelectionStepDataProvider', None), ('flexipageEditor:activateActionOverrideFormFactorSelectionStep', None), ('flexipageEditor:activateActionOverrideModeSelectionStep', None), ('flexipageEditor:activateActionOverrideRemoveAppAssignmentWithFormFactorsStep', None), ('flexipageEditor:activateActionOverrideReviewAssignmentDataProvider', None), ('flexipageEditor:activateActionOverrideReviewAssignmentStep', None), ('flexipageEditor:activateActionOverrideReviewAssignmentStepWithFormFactor', None), ('flexipageEditor:activateActionOverrideReviewDefaultAssignmentStep', None), ('flexipageEditor:activateActionOverrideReviewDefaultWithFormFactorAssignmentStep', None), ('flexipageEditor:activateActionOverrideSelectedAppList', None), ('flexipageEditor:activateActionOverrideSelectedAppListWithFormFactor', None), ('flexipageEditor:activateAppPage', None), ('flexipageEditor:activateAppPageMenu', None), ('flexipageEditor:activateAppPageMultipleTabs', None), ('flexipageEditor:activateAppPageSettings', None), ('flexipageEditor:activateAppRecordTypeProfileFormFactorReviewStep', None), ('flexipageEditor:activateAppRecordTypeProfileReviewStep', None), ('flexipageEditor:activateAppRecordTypeProfileReviewStepDataProvider', None), ('flexipageEditor:activateAssignmentListHeaderActions', None), ('flexipageEditor:activateContainer', None), ('flexipageEditor:activateContent', None), ('flexipageEditor:activateOnFirstSaveDialog', None), ('flexipageEditor:activateProfileOverrideProfileStep', None), ('flexipageEditor:activateProfileOverrideProfileStepDataProvider', None), ('flexipageEditor:activateProfileOverrideRecordTypeStep', None), ('flexipageEditor:activateProfileOverrideRecordTypeStepDataProvider', None), ('flexipageEditor:activateRecordHomeHierarchy', None), ('flexipageEditor:activateRecordPage', None), ('flexipageEditor:activateSelectedAppRecordTypeProfileFormFactorList', None), ('flexipageEditor:activateSelectedAppRecordTypeProfileList', None), ('flexipageEditor:activateSelectedAppRecordTypeProfileListDataProvider', None), ('flexipageEditor:activateTabMenus', None), ('flexipageEditor:appBuilderExperience', None), ('flexipageEditor:appExchangeModal', None), ('flexipageEditor:appPageCanvasConfig', None), ('flexipageEditor:appSettings', None), ('flexipageEditor:appSettingsAppCapabilities', None), ('flexipageEditor:appSettingsAppCapabilitiesContainer', None), ('flexipageEditor:appSettingsAppCapabilitiesItem', None), ('flexipageEditor:appSettingsAppCapabilitiesSection', None), ('flexipageEditor:appSettingsAppNavigation', None), ('flexipageEditor:appSettingsAppNavigationContainer', None), ('flexipageEditor:appSettingsDetails', None), ('flexipageEditor:appSettingsDetailsContainer', None), ('flexipageEditor:appSettingsEditor', None), ('flexipageEditor:appSettingsHeader', None), ('flexipageEditor:appSettingsItem', None), ('flexipageEditor:appSettingsNavigationItems', None), ('flexipageEditor:appSettingsNavigationItemsContainer', None), ('flexipageEditor:appSettingsNavigationRules', None), ('flexipageEditor:appSettingsNavigationRulesContainer', None), ('flexipageEditor:appSettingsOptimizer', None), ('flexipageEditor:appSettingsUserProfiles', None), ('flexipageEditor:appSettingsUserProfilesContainer', None), ('flexipageEditor:appSettingsUtilityBarContainer', None), ('flexipageEditor:assignmentLookup', None), ('flexipageEditor:assignmentVisibilityBanner', None), ('flexipageEditor:availableNavItemsDataProvider', None), ('flexipageEditor:baseBuilder', None), ('flexipageEditor:baseFlexipageEditorCanvasConfig', None), ('flexipageEditor:baseFormInfo', None), ('flexipageEditor:breadcrumb', None), ('flexipageEditor:canvas', None), ('flexipageEditor:component', None), ('flexipageEditor:componentInstanceItemRow', None), ('flexipageEditor:confirm', None), ('flexipageEditor:consoleTabset', None), ('flexipageEditor:container', None), ('flexipageEditor:debugDialog', None), ('flexipageEditor:designLayout', None), ('flexipageEditor:dockingPanelManager', None), ('flexipageEditor:dynamicFormsPrompt', None), ('flexipageEditor:editor', None), ('flexipageEditor:element', None), ('flexipageEditor:errorListFlyout', None), ('flexipageEditor:errorListFlyoutBody', None), ('flexipageEditor:expressionsContextDataProvider', None), ('flexipageEditor:field', None), ('flexipageEditor:flexipageList', None), ('flexipageEditor:flexipageListDataProvider', None), ('flexipageEditor:formFactorSelectionActionCell', None), ('flexipageEditor:formItem', None), ('flexipageEditor:formPaletteSectionItemRow', None), ('flexipageEditor:guardrailsNotificationCount', None), ('flexipageEditor:header', None), ('flexipageEditor:helpDropdown', None), ('flexipageEditor:homePageCanvasConfig', None), ('flexipageEditor:keyboardHelpDialog', None), ('flexipageEditor:lastModifiedByOn', None), ('flexipageEditor:leftPanel', None), ('flexipageEditor:lightningOnMobileContentLAB', None), ('flexipageEditor:mailAppCanvasConfig', None), ('flexipageEditor:menu', None), ('flexipageEditor:menuItem', None), ('flexipageEditor:menuTrigger', None), ('flexipageEditor:message', None), ('flexipageEditor:middlePanel', None), ('flexipageEditor:migrationWizard', None), ('flexipageEditor:migrationWizardDescription', None), ('flexipageEditor:migrationWizardLayoutSource', None), ('flexipageEditor:multiselectEditorModal', None), ('flexipageEditor:newPageDialog', None), ('flexipageEditor:newPageWizardPageTypeStep', None), ('flexipageEditor:newPageWizardPropertiesStep', None), ('flexipageEditor:newPageWizardTemplateStep', None), ('flexipageEditor:node', None), ('flexipageEditor:objectManagerAppDefaultList', None), ('flexipageEditor:objectManagerAppDefaultListDataProvider', None), ('flexipageEditor:objectManagerAppDefaultListWithoutFormFactor', None), ('flexipageEditor:objectManagerAppRecTypeProfileAssignmentList', None), ('flexipageEditor:objectManagerAppRecTypeProfileAssignmentListDataProvider', None), ('flexipageEditor:objectManagerAppRecTypeProfileAssignmentListWithoutFormFactor', None), ('flexipageEditor:objectManagerRecordPageAssignmentList', None), ('flexipageEditor:openPageModal', None), ('flexipageEditor:openPageModalFooter', None), ('flexipageEditor:orgDefaultPageAssignment', None), ('flexipageEditor:page', None), ('flexipageEditor:pageBuilder', None), ('flexipageEditor:pageListing', None), ('flexipageEditor:pageSwitcherMenu', None), ('flexipageEditor:paletteContainer', None), ('flexipageEditor:paletteMyDomainMessage', None), ('flexipageEditor:paletteSettingsMenuItems', None), ('flexipageEditor:picker', None), ('flexipageEditor:pickerItem', None), ('flexipageEditor:pickerSection', None), ('flexipageEditor:readOnlyBanner', None), ('flexipageEditor:recordHomeCanvasConfig', None), ('flexipageEditor:recordPageAssignments', None), ('flexipageEditor:region', None), ('flexipageEditor:removeSelectedAppRecordTypeProfileFormFactorStep', None), ('flexipageEditor:removeSelectedAppRecordTypeProfileStep', None), ('flexipageEditor:resolvedPageInfo', None), ('flexipageEditor:rightPanel', None), ('flexipageEditor:routeCalculator', None), ('flexipageEditor:routeCalculatorDataProvider', None), ('flexipageEditor:routeCalculatorPickList', None), ('flexipageEditor:routeCalculatorTester', None), ('flexipageEditor:ruleDynamicTypeEditor', None), ('flexipageEditor:ruleLHSRelatedFieldDataProvider', None), ('flexipageEditor:rulePropertyEditorProvider', None), ('flexipageEditor:setupDetailPageLink', None), ('flexipageEditor:surfaceTemplate', None), ('flexipageEditor:templateEditor', None), ('flexipageEditor:templateMyDomainMessage', None), ('flexipageEditor:templateSwitchingRegionMappingRow', None), ('flexipageEditor:templateSwitchingWizard', None), ('flexipageEditor:templateSwitchingWizardRegionMapping', None), ('flexipageEditor:templateSwitchingWizardSelectTemplate', None), ('flexipageEditor:topToolbar', None), ('flexipageEditor:workspace', None), ('flowruntime:actionBar', None), ('flowruntime:actionBase', None), ('flowruntime:actionButton', None), ('flowruntime:address', None), ('flowruntime:body', None), ('flowruntime:cancelButton', None), ('flowruntime:checkboxInput', None), ('flowruntime:choiceUserInput', None), ('flowruntime:currencyInput', None), ('flowruntime:dateInput', None), ('flowruntime:dateTimeInput', None), ('flowruntime:debug', None), ('flowruntime:debugInput', None), ('flowruntime:debugOutput', None), ('flowruntime:dependentPicklists', None), ('flowruntime:displayText', None), ('flowruntime:dropDownInput', None), ('flowruntime:email', None), ('flowruntime:errorText', None), ('flowruntime:flowRuntime', None), ('flowruntime:flowRuntimeForFlexiPage', None), ('flowruntime:flowRuntimeForQuickAction', None), ('flowruntime:flowRuntimeForS1', None), ('flowruntime:flowRuntimeForS1Header', None), ('flowruntime:flowRuntimeHeaderForModal', None), ('flowruntime:flowRuntimeV1', None), ('flowruntime:flowRuntimeV2', None), ('flowruntime:flowruntimeForModal', None), ('flowruntime:header', None), ('flowruntime:helpIcon', None), ('flowruntime:helpText', None), ('flowruntime:image', None), ('flowruntime:inputWrapper', None), ('flowruntime:interview', None), ('flowruntime:interviewDesignInfo', None), ('flowruntime:interviewDesignSubstitute', None), ('flowruntime:longTextInput', None), ('flowruntime:modalManager', None), ('flowruntime:multiCheckbox', None), ('flowruntime:name', None), ('flowruntime:numberInput', None), ('flowruntime:oneColumn', None), ('flowruntime:passwordInput', None), ('flowruntime:pauseFinalizedMessage', None), ('flowruntime:pauseScreen', None), ('flowruntime:pausedInterviewCard', None), ('flowruntime:pausedInterviewCardRow', None), ('flowruntime:phone', None), ('flowruntime:picklistInput', None), ('flowruntime:radioButtonInput', None), ('flowruntime:richTextWrapper', None), ('flowruntime:runtime', None), ('flowruntime:slider', None), ('flowruntime:spinner', None), ('flowruntime:tempDepend', None), ('flowruntime:textInput', None), ('flowruntime:toggle', None), ('flowruntime:twoColumn', None), ('flowruntime:url', None), ('flowruntime:visibilityWrapper', None), ('flowruntime:visibilityWrapperV2', None), ('folder:actionBar', None), ('folder:analyticsIntegration', None), ('folder:baseIntegration', None), ('folder:breadcrumb', None), ('folder:breadcrumbItem', None), ('folder:configRetriever', None), ('folder:folderActionProcessor', None), ('folder:forceActionProxy', None), ('folder:listView', None), ('folder:listViewDataProvider', None), ('folder:navigator', None), ('folder:pickerDialog', None), ('folder:pickerDialogFooter', None), ('folder:pickerDialogPanel', None), ('folder:searchResult', None), ('folder:selectColumnPanelFooter', None), ('folder:sidebar', None), ('folder:sidebarItem', None), ('force:abstractBorderLayout', None), ('force:abstractBorderLayoutDataProvider', None), ('force:abstractComponent', None), ('force:access', None), ('force:action', None), ('force:actionAPILoader', None), ('force:actionButton', None), ('force:actionEventLink', None), ('force:actionIconMenuItem', None), ('force:actionLink', None), ('force:actionMenuItem', None), ('force:actionOverrideCallback', None), ('force:actionRow', None), ('force:actionWindowLink', None), ('force:actionsContainer', None), ('force:actionsDropDownMenuList', None), ('force:actionsText', None), ('force:addressAutocomplete', None), ('force:addressAutocompleteOption', None), ('force:addressCompletionDataProvider', None), ('force:alohaPageTemplate', None), ('force:alternateIdProvider', None), ('force:apiBridgeLoader', None), ('force:apiVersion', None), ('force:appMessageManager', None), ('force:applicationLayoutTemplateDesktop', None), ('force:asyncCarousel', None), ('force:asyncCarouselIndicator', None), ('force:asyncCarouselPage', None), ('force:badgeButton', None), ('force:baseCard', None), ('force:baseHome', None), ('force:baseListView', None), ('force:baseLookupCardTemplate', None), ('force:borderLayoutPageHost', None), ('force:brandBand', None), ('force:brandBandPageContainer', None), ('force:breadCrumbItem', None), ('force:breadCrumbs', None), ('force:browserTabTitleUtil', None), ('force:buttonBarDeprecated', None), ('force:buyerAccountDetailPanelWrapper', None), ('force:calendar', None), ('force:calendarButtonIconRefresh', None), ('force:calendarDay', None), ('force:calendarDayHeader', None), ('force:calendarDayWeekView', None), ('force:calendarEventIcons', None), ('force:calendarEventPopup', None), ('force:calendarExternalEventPopup', None), ('force:calendarExternalEventPreview', None), ('force:calendarHeader', None), ('force:calendarItemListPopup', None), ('force:calendarMonthView', None), ('force:calendarMonthWeek', None), ('force:calendarSidebar', None), ('force:calendarTimeRuler', None), ('force:callHandler', None), ('force:canvasApp', None), ('force:canvasAppCard', None), ('force:canvasAppTemplate', None), ('force:card', None), ('force:cardPayment', None), ('force:changeOwnerContent', None), ('force:changeRecordType', None), ('force:changeRecordTypeFooter', None), ('force:chartDataProvider', None), ('force:colorPicker', None), ('force:colorPickerTrigger', None), ('force:componentDeveloper', None), ('force:componentDeveloperInstance', None), ('force:componentDeveloperManager', None), ('force:componentSpinner', None), ('force:componentsText', None), ('force:confirmDialog', None), ('force:confirmationWindow', None), ('force:consoleActionOverrideCallback', None), ('force:containerMediator', None), ('force:copyToClipboardButton', None), ('force:createAnchorPanel', None), ('force:createLinkAdvancedPanel', None), ('force:createLinkPanel', None), ('force:createMediaEmbedPanel', None), ('force:createRecordTypeChecker', None), ('force:createSmartLinkPanel', None), ('force:createTablePanel', None), ('force:dashboardHome', None), ('force:dataManager', None), ('force:dataProviderLoadErrorMessage', None), ('force:dedupeManager', None), ('force:defenseHook', None), ('force:deferredDropDownAction', None), ('force:densityDiscoveryDockedContent', None), ('force:dependencyManagerAPI', None), ('force:dependentFieldContainer', None), ('force:detailPanel', None), ('force:detailPanelDesktop', None), ('force:detailPanelEventBroker', None), ('force:detailPanelMobile', None), ('force:detailPanelProgressive', None), ('force:detailViewPanelDesignInfo', None), ('force:detailViewPanelDesignInfoDialogContent', None), ('force:detailViewPanelMobileDesignInfo', None), ('force:dirtyStateManager', None), ('force:dockableActionRunnable', None), ('force:dockingPanel', None), ('force:dockingPanelOverflow', None), ('force:dockingPanelOverflowItem', None), ('force:dotsSpinner', None), ('force:downloadHandler', None), ('force:draggableResizablePanelManager', None), ('force:duelingLists', None), ('force:duplicateList', None), ('force:duplicateListDataManager', None), ('force:duplicateListStencil', None), ('force:duplicateTabs', None), ('force:dynamicLabel', None), ('force:dynamicLabelProvider', None), ('force:eclairChart', None), ('force:eclairChartListView', None), ('force:emailHandler', None), ('force:emailTemplateInfo', None), ('force:embeddedTemplate', None), ('force:empApi', None), ('force:empty', None), ('force:entityBannerPhotoDetail', None), ('force:entityIcon', None), ('force:entityShare', None), ('force:eventLink', None), ('force:featureDiscoveryDocked', None), ('force:featureDiscoveryDockedContent', None), ('force:fieldDependencyManager', None), ('force:fieldMapping', None), ('force:fieldMappingTabs', None), ('force:fileUpload', None), ('force:filterCriteria', None), ('force:filterCriteriaBlockSectionRow', None), ('force:filterCriteriaDataProvider', None), ('force:filterCriteriaInputField', None), ('force:filterCriteriaMenuItem', None), ('force:filterDataProvider', None), ('force:filterInfiniteScrollDataProvider', None), ('force:filterList', None), ('force:filterListDeprecated', None), ('force:filterMenu', None), ('force:filterMenuItem', None), ('force:filterPanel', None), ('force:filterPanelBooleanCriterionEditor', None), ('force:filterPanelCallout', None), ('force:filterPanelDateCriterionEditor', None), ('force:filterPanelFieldSelector', None), ('force:filterPanelFilterCriterion', None), ('force:filterPanelFilterEditor', None), ('force:filterPanelMultiPicklistCriterionEditor', None), ('force:filterPanelScope', None), ('force:filterPanelScopeEditor', None), ('force:filterPanelTextFieldEditor', None), ('force:fingerprint', None), ('force:fireEventAfterLogging', None), ('force:headerButton', None), ('force:headerButtonDeprecated', None), ('force:headerLayout', None), ('force:headerMenuTrigger', None), ('force:heightMemoizer', None), ('force:highlightText', None), ('force:highlights', None), ('force:highlightsActionWrapper', None), ('force:highlightsAttributeContainer', None), ('force:highlightsDesktopListRecordItem', None), ('force:highlightsMobileListRecordItem', None), ('force:highlightsPanel', None), ('force:highlightsPlaceholder', None), ('force:highlightsPreviewStencil', None), ('force:highlightsStencil', None), ('force:highlightsStencilDesktop', None), ('force:highlightsStencilDesktopVertical', None), ('force:highlightsStencilMobile', None), ('force:hostConfig', None), ('force:hoverPanel', None), ('force:hoverPrototype', None), ('force:hoverPrototypeManager', None), ('force:icon', None), ('force:iconDeprecated', None), ('force:iconTriggerLink', None), ('force:imageRelatedListStencil', None), ('force:infiniteDuelingList', None), ('force:infiniteDuelingListAvailableItems', None), ('force:infiniteDuelingListSelectableItems', None), ('force:infiniteDuelingListSelectedItems', None), ('force:inlineEdit', None), ('force:inlineEditCell', None), ('force:inlineEditComponent', None), ('force:inlineEditGrid', None), ('force:inlineEditGridStencil', None), ('force:inlineEditKeyNavCell', None), ('force:inlineEditPanelBody', None), ('force:inlineEditPanelFooter', None), ('force:inlineExpandableContainer', None), ('force:inlinePulsingSpinner', None), ('force:inlineRotatingSpinner', None), ('force:inlineSpinner', None), ('force:inputAddress', None), ('force:inputCompoundField', None), ('force:inputField', None), ('force:inputFieldInternal', None), ('force:inputLocation', None), ('force:inputLookup', None), ('force:inputLookupManager', None), ('force:inputLookupPanel', None), ('force:inputLookupPanelItem', None), ('force:inputLookupPanelSelector', None), ('force:inputLookupTrigger', None), ('force:inputMultiPicklist', None), ('force:inputName', None), ('force:inputPicklist', None), ('force:inputRadio', None), ('force:inputRichText', None), ('force:inputTextarea', None), ('force:inputTime', None), ('force:inputURL', None), ('force:ldsPushInvalidationManager', None), ('force:linkCard', None), ('force:linkTemplate', None), ('force:list', None), ('force:listLoadingTemplate', None), ('force:listRecord', None), ('force:listRecordItem', None), ('force:listSorterDataProvider', None), ('force:listTemplate', None), ('force:listView', None), ('force:listViewDataManager', None), ('force:listViewDataManagerAdapter', None), ('force:listViewEntityShareDataProvider', None), ('force:listViewManager', None), ('force:listViewManagerDisplayActionConfiguration', None), ('force:listViewManagerDisplayDataConfiguration', None), ('force:listViewManagerDisplayDependencyConfiguration', None), ('force:listViewManagerDisplayDependencyItem', None), ('force:listViewManagerDisplayInlineEditConfiguration', None), ('force:listViewManagerDisplaySwitcher', None), ('force:listViewManagerDisplayViewConfiguration', None), ('force:listViewManagerDisplaysConfiguration', None), ('force:listViewManagerGrid', None), ('force:listViewManagerGridColumnHeaderConfiguration', None), ('force:listViewManagerGridColumnHeaderMenu', None), ('force:listViewManagerGridFooter', None), ('force:listViewManagerGridWrapText', None), ('force:listViewManagerHeader', None), ('force:listViewManagerHeaderConfiguration', None), ('force:listViewManagerLayoutHandlingConfiguration', None), ('force:listViewManagerNavigateToObjectHome', None), ('force:listViewManagerPinnedListConfiguration', None), ('force:listViewManagerPrimaryDisplayManager', None), ('force:listViewManagerSecondaryDisplayManager', None), ('force:listViewManagerSettingsMenuConfiguration', None), ('force:listViewManagerSettingsMenuOptionConfiguration', None), ('force:listViewManagerSplitViewList', None), ('force:listViewManagerStateManager', None), ('force:listViewPicker', None), ('force:listViewPickerAutocomplete', None), ('force:listViewPickerAutocompleteList', None), ('force:listViewPickerAutocompleteOption', None), ('force:listViewPickerDataProvider', None), ('force:listViewPlaceholder', None), ('force:listViewSettingsDetail', None), ('force:listViewSettingsMenu', None), ('force:listViewStatusInfo', None), ('force:listViewStencil', None), ('force:listviewChartsSetupPage', None), ('force:liveRecordsDelegate', None), ('force:loaderBar', None), ('force:loading', None), ('force:loadingLaser', None), ('force:localRecordChangeObserver', None), ('force:logoutHandler', None), ('force:lookupCard', None), ('force:lookupCardTemplate', None), ('force:lookupCreateActionManager', None), ('force:managePortalUserPermSets', None), ('force:mask', None), ('force:maskOutputText', None), ('force:massChangeOwner', None), ('force:massChangeStatus', None), ('force:massErrorsManager', None), ('force:massErrorsPanel', None), ('force:massQuickActionRunnable', None), ('force:menuTriggerIcon', None), ('force:message', None), ('force:mobileActionModal', None), ('force:mobileOverlay', None), ('force:modal', None), ('force:modalActionContainer', None), ('force:modalListViewFooterAdapter', None), ('force:modalSpinner', None), ('force:mruDataProvider', None), ('force:multiAdd', None), ('force:multiAddDataManagerSwitcher', None), ('force:multiAddDefaultNextAction', None), ('force:multiAddMultiEditBackAction', None), ('force:multiAddMultiEditHeader', None), ('force:multiAddMultiEditNextAction', None), ('force:multiAddSearch', None), ('force:multiAddUsingLVM', None), ('force:multiEdit', None), ('force:multiEditDataManager', None), ('force:multiEditDataManagerConverter', None), ('force:multiEditDefaultNextAction', None), ('force:multiEditDependencyManager', None), ('force:multiTemplateVirtualList', None), ('force:navigateConfirmation', None), ('force:noRowActions', None), ('force:notesBaseListViewNonGrid', None), ('force:notesObjectHomeListViewNonGrid', None), ('force:objectHome', None), ('force:objectHomeChart', None), ('force:objectHomeDataProvider', None), ('force:objectHomeDesktop', None), ('force:objectHomePipelineView', None), ('force:outputAddress', None), ('force:outputAddressText', None), ('force:outputAnimatedNumber', None), ('force:outputAnytype', None), ('force:outputCurrency', None), ('force:outputCustomLinkUrl', None), ('force:outputEventDateTime', None), ('force:outputField', None), ('force:outputFieldInternal', None), ('force:outputFile', None), ('force:outputFormulaHtml', None), ('force:outputImage', None), ('force:outputLocation', None), ('force:outputLookup', None), ('force:outputLookupText', None), ('force:outputLookupWithPreview', None), ('force:outputModStamp', None), ('force:outputModStampWithPreview', None), ('force:outputName', None), ('force:outputNameForUser', None), ('force:outputNoteorAttachment', None), ('force:outputOwnerIdLookupWithChangeLink', None), ('force:outputOwnerLookup', None), ('force:outputPhone', None), ('force:outputPicklist', None), ('force:outputPlainText', None), ('force:outputRecordType', None), ('force:outputRecordTypeWithoutChangeLink', None), ('force:outputRichText', None), ('force:outputScheduleDateField', None), ('force:outputTime', None), ('force:outputURL', None), ('force:pageBlock', None), ('force:pageBlockItem', None), ('force:pageBlockItemEdit', None), ('force:pageBlockItemView', None), ('force:pageBlockSection', None), ('force:pageBlockSectionEdit', None), ('force:pageBlockSectionRow', None), ('force:pageBlockSectionView', None), ('force:pageError', None), ('force:pageInfo', None), ('force:panelCallbackAction', None), ('force:panelOverlay', None), ('force:panelSlider', None), ('force:personalSettingsPageRouter', None), ('force:photoCrop', None), ('force:photoCropDraggable', None), ('force:placeholder', None), ('force:pluginButton', None), ('force:pluginForm', None), ('force:pluginFormItem', None), ('force:pluginFormItemList', None), ('force:pluginItem', None), ('force:pluginItemList', None), ('force:pluginListDataProvider', None), ('force:popOutManagerAura', None), ('force:popover', None), ('force:previewPanel', None), ('force:printSetupPage', None), ('force:publisherQuickActionCollapser', None), ('force:quickActionHandler', None), ('force:quickActionLayout', None), ('force:quickActionManager', None), ('force:quickActionRecord', None), ('force:quickActionRecordCollection', None), ('force:quickActionRunnable', None), ('force:quickEdit', None), ('force:quickEditField', None), ('force:quill', None), ('force:quillButtonLink', None), ('force:quillInsertImageButton', None), ('force:readOnlyRelatedListStencil', None), ('force:record', None), ('force:recordCollection', None), ('force:recordContentPlugin', None), ('force:recordData', None), ('force:recordDetailPanelMobile', None), ('force:recordEdit', None), ('force:recordEditActions', None), ('force:recordGlobalValueProvider', None), ('force:recordHome', None), ('force:recordHomeInContext', None), ('force:recordLandingPage', None), ('force:recordLayout', None), ('force:recordLayoutBroker', None), ('force:recordLayoutList', None), ('force:recordLayoutTemplate', None), ('force:recordList', None), ('force:recordListDummyDataProvider', None), ('force:recordMergeLibraryTester', None), ('force:recordPageUserSettings', None), ('force:recordPageUserSettingsPage', None), ('force:recordPreviewItem', None), ('force:recordPreviewTemplateDesktop', None), ('force:recordRunnable', None), ('force:recordView', None), ('force:recordsComparison', None), ('force:recordsComparisonTemplate', None), ('force:regionHidden', None), ('force:relatedCardContainer', None), ('force:relatedContentContainer', None), ('force:relatedList', None), ('force:relatedListAdvancedGridInfo', None), ('force:relatedListAdvancedGridPrompt', None), ('force:relatedListCard', None), ('force:relatedListCardDesktop', None), ('force:relatedListCardHeader', None), ('force:relatedListContainer', None), ('force:relatedListContainerDataProvider', None), ('force:relatedListContainerDesignInfo', None), ('force:relatedListContainerDesignInfoDialogContent', None), ('force:relatedListContainerMetadataProvider', None), ('force:relatedListDataProvider', None), ('force:relatedListDesktop', None), ('force:relatedListHeader', None), ('force:relatedListHover', None), ('force:relatedListOffline', None), ('force:relatedListPreview', None), ('force:relatedListPreviewAdvancedGrid', None), ('force:relatedListPreviewDataProvider', None), ('force:relatedListPreviewGrid', None), ('force:relatedListPreviewRecordLayoutList', None), ('force:relatedListPreviewTransitionList', None), ('force:relatedListQuickLinksContainer', None), ('force:relatedListQuickLinksContainerDataProvider', None), ('force:relatedListQuickLinksContainerDesignInfo', None), ('force:relatedListRowsToDisplayEditor', None), ('force:relatedListShowActionBarEditor', None), ('force:relatedListSingleContainer', None), ('force:relatedListSingleContainerDesignInfo', None), ('force:relatedListSingleContainerDesignSubstitute', None), ('force:relatedListView', None), ('force:relatedListViewDataManager', None), ('force:relatedListViewManager', None), ('force:relatedListVisibilityEditor', None), ('force:relatedListsDataCollection', None), ('force:relatedListsOffline', None), ('force:requires', None), ('force:retryButton', None), ('force:retryPanel', None), ('force:routingRetryPanel', None), ('force:rrhVersionIndicator', None), ('force:saveOption', None), ('force:scopedActionModal', None), ('force:scopedModal', None), ('force:scopedSldsTemplate', None), ('force:scrollableContext', None), ('force:scrollablePanel', None), ('force:searchFilterHeader', None), ('force:selectableListDataProvider', None), ('force:selectableListDataProviderSwitcher', None), ('force:selectableListView', None), ('force:selectableListViewHeader', None), ('force:selectableListViewSelectionColumn', None), ('force:selectableTargetAdapter', None), ('force:setupRouter', None), ('force:showSelectedListDataProvider', None), ('force:simpleRecordHomeActivitiesToggle', None), ('force:simpleRecordHomePageAssignments', None), ('force:simpleRecordHomePrompt', None), ('force:simpleRecordHomeSetupPage', None), ('force:simpleRecordHomeToggle', None), ('force:singularPluralMany', None), ('force:skipLink', None), ('force:sldsTemplate', None), ('force:socialAction', None), ('force:socialImage', None), ('force:socialPhoto', None), ('force:socialPhotoActionDialog', None), ('force:socialPhotoController', None), ('force:socialPhotoWrapper', None), ('force:socialPhoto_v2', None), ('force:sortFilterMenuItem', None), ('force:splitViewListRecord', None), ('force:splitViewListRecordItem', None), ('force:stackedTab', None), ('force:stackedTabContent', None), ('force:stackedTabset', None), ('force:stackedTabsetContainer', None), ('force:standardContent', None), ('force:standardHeader', None), ('force:staticGoogleMap', None), ('force:statusIcon', None), ('force:statusIconSummary', None), ('force:storageIsolationKey', None), ('force:streamingConfiguration', None), ('force:style', None), ('force:switchToNetworkHandler', None), ('force:tabBar', None), ('force:tabBarItem', None), ('force:targetInteractionHandler', None), ('force:tempDepend', None), ('force:templateWorkspace', None), ('force:templateWorkspaceWrapper', None), ('force:textEnumLookup', None), ('force:themeCssVarLoader', None), ('force:themedTemplate', None), ('force:toast', None), ('force:toastManager', None), ('force:toastMessage', None), ('force:treeGridTriggerCell', None), ('force:userAssistanceDocPreview', None), ('force:userAssistanceLightbox', None), ('force:userAssistanceMenuItem', None), ('force:userAssistanceMenuItemNew', None), ('force:userAssistancePlatform', None), ('force:userAssistancePopovers', None), ('force:userAssistancePopoversManager', None), ('force:utilityBar', None), ('force:video', None), ('force:videoPreview', None), ('force:virtualAction', None), ('force:virtualAutocompleteMenu', None), ('force:virtualAutocompleteMenuDataProviderAdaptor', None), ('force:virtualAutocompleteMenuList', None), ('force:virtualAutocompleteMenuOption', None), ('force:virtualCheckbox', None), ('force:virtualGrid', None), ('force:virtualRecordList', None), ('force:virtualRecordsComparison', None), ('force:virtualRowAction', None), ('force:virtualRowActionColumn', None), ('force:virtualRowNumberCell', None), ('force:virtualSelectionColumn', None), ('force:virtualTreeGrid', None), ('force:visualMessageQueue', None), ('force:walkthrough', None), ('force:walkthroughApps', None), ('force:workspaceContent', None), ('force:workspaceHeader', None), ('forceChatter:abstractFeedItem', None), ('forceChatter:actionChatterContainer', None), ('forceChatter:actionLink', None), ('forceChatter:actionLinkButton', None), ('forceChatter:actionLinkGroup', None), ('forceChatter:actionLinkGroupStatus', None), ('forceChatter:addMemberCard', None), ('forceChatter:addMembers', None), ('forceChatter:addMembersTemplate', None), ('forceChatter:addParticipantDialog', None), ('forceChatter:addSkillToProfileAction', None), ('forceChatter:addToStreamAction', None), ('forceChatter:addToStreamPanel', None), ('forceChatter:addToStreamPopover', None), ('forceChatter:addToStreamPopoverFollowButton', None), ('forceChatter:alohaPagePost', None), ('forceChatter:anchor', None), ('forceChatter:announcementPost', None), ('forceChatter:askToJoinGroupAction', None), ('forceChatter:attachFileActionButton', None), ('forceChatter:attachFileButton', None), ('forceChatter:autocomplete', None), ('forceChatter:badgeFilterMenu', None), ('forceChatter:bannerPhotoCrop', None), ('forceChatter:basePublisher', None), ('forceChatter:bookmarkAction', None), ('forceChatter:canvasPost', None), ('forceChatter:changeFeedStatusAction', None), ('forceChatter:changeGroupType', None), ('forceChatter:chatterDisabledMessage', None), ('forceChatter:chatterExtensionButton', None), ('forceChatter:chatterExtensionsSetup', None), ('forceChatter:chatterFollow', None), ('forceChatter:chatterGenericRelatedListRecord', None), ('forceChatter:chatterGroupAnalytics', None), ('forceChatter:chatterGroupAnalyticsCountCard', None), ('forceChatter:chatterGroupAnalyticsFeedHistory', None), ('forceChatter:chatterGroupAnalyticsInAloha', None), ('forceChatter:chatterGroupAnalyticsNewMembers', None), ('forceChatter:chatterGroupAnalyticsTotals', None), ('forceChatter:chatterGroupCompactStencil', None), ('forceChatter:chatterGroupCompactStencilDesktop', None), ('forceChatter:chatterGroupMemberRequestRelatedListRecord', None), ('forceChatter:chatterGroupMemberRequestRelatedListRecordDesktop', None), ('forceChatter:chatterGroupMemberRequestRelatedListRecordMobile', None), ('forceChatter:chatterNotification', None), ('forceChatter:chatterUserRelatedListRecord', None), ('forceChatter:chatterUserRelatedListRecordDrillIn', None), ('forceChatter:closeAction', None), ('forceChatter:clumpHeader', None), ('forceChatter:clumpItem', None), ('forceChatter:clumpItemFullView', None), ('forceChatter:codeSnippetButton', None), ('forceChatter:codeSnippetModal', None), ('forceChatter:collatedUserPhotos', None), ('forceChatter:comment', None), ('forceChatter:commentRetrievalService', None), ('forceChatter:compactFeed', None), ('forceChatter:compactFeedDesignInfo', None), ('forceChatter:compactFeedItem', None), ('forceChatter:compactFeedItemBody', None), ('forceChatter:compactFeedMetric', None), ('forceChatter:compositeRecsDataProvider', None), ('forceChatter:compositionComponentContainer', None), ('forceChatter:compositionComponentContainerFooter', None), ('forceChatter:compoundFieldUserNameRenderer', None), ('forceChatter:compoundFieldsGroupName', None), ('forceChatter:compoundNameWithOutOfOffice', None), ('forceChatter:conditionalRichTextInputButton', None), ('forceChatter:contentFileSize', None), ('forceChatter:contentFolderItemTileTemplate', None), ('forceChatter:contentPost', None), ('forceChatter:contentVisibilityMonitor', None), ('forceChatter:crudStream', None), ('forceChatter:deleteBannerPhoto', None), ('forceChatter:deleteCommentAction', None), ('forceChatter:deleteFeedItemAction', None), ('forceChatter:deletePhoto', None), ('forceChatter:desktopChatter', None), ('forceChatter:desktopChatterContainer', None), ('forceChatter:desktopChatterFeedPanel', None), ('forceChatter:downVoteAction', None), ('forceChatter:editCommentAction', None), ('forceChatter:editGroupMembership', None), ('forceChatter:editGroupMembershipRequest', None), ('forceChatter:editGroupNotification', None), ('forceChatter:editGroupNotificationSettings', None), ('forceChatter:editManager', None), ('forceChatter:editPostAction', None), ('forceChatter:editTopicsAction', None), ('forceChatter:emailConfirmation', None), ('forceChatter:emojiButton', None), ('forceChatter:emojiPicker', None), ('forceChatter:endorseProfileSkillUserAction', None), ('forceChatter:enterGroupDetails', None), ('forceChatter:entityCard', None), ('forceChatter:entityLink', None), ('forceChatter:entityPhoto', None), ('forceChatter:entityPhotoDetail', None), ('forceChatter:exposedFeed', None), ('forceChatter:exposedFeedDesignInfo', None), ('forceChatter:exposedFeedDesktop', None), ('forceChatter:exposedFeedMobile', None), ('forceChatter:extensionInstanceRenderWrapper', None), ('forceChatter:facepilePreviewItem', None), ('forceChatter:feed', None), ('forceChatter:feedAnchor', None), ('forceChatter:feedAnchorSubMenu', None), ('forceChatter:feedAuxBody', None), ('forceChatter:feedAuxBodyCanvasPost', None), ('forceChatter:feedAuxBodyCaseComment', None), ('forceChatter:feedAuxBodyChatterExtensionInstance', None), ('forceChatter:feedAuxBodyChatterExtensionInstancesContainer', None), ('forceChatter:feedAuxBodyContentPost', None), ('forceChatter:feedAuxBodyEmailMessage', None), ('forceChatter:feedAuxBodyEmpty', None), ('forceChatter:feedAuxBodyEnhancedLink', None), ('forceChatter:feedAuxBodyLinkPost', None), ('forceChatter:feedAuxBodyMediaReferences', None), ('forceChatter:feedAuxBodyPollPost', None), ('forceChatter:feedAuxBodyPollPostResults', None), ('forceChatter:feedAuxBodyPollPostVote', None), ('forceChatter:feedAuxBodyQuestionPost', None), ('forceChatter:feedAuxBodyQuestionPostInner', None), ('forceChatter:feedAuxBodyRecordSummary', None), ('forceChatter:feedAuxBodySharedPost', None), ('forceChatter:feedAuxBodySharedRecord', None), ('forceChatter:feedAuxBodySocialPost', None), ('forceChatter:feedAuxBodyText', None), ('forceChatter:feedAuxBodyTrackedChange', None), ('forceChatter:feedBody', None), ('forceChatter:feedBodyBanner', None), ('forceChatter:feedBodyQuestionWithBestAnswer', None), ('forceChatter:feedBodyQuestionWithoutAnswer', None), ('forceChatter:feedBodySimple', None), ('forceChatter:feedBodyText', None), ('forceChatter:feedCommentInput', None), ('forceChatter:feedCommentInputDesktop', None), ('forceChatter:feedCommentInputMobile', None), ('forceChatter:feedContentAttachment', None), ('forceChatter:feedContentAttachmentPreview', None), ('forceChatter:feedContentFilePreview', None), ('forceChatter:feedElement', None), ('forceChatter:feedElementFullView', None), ('forceChatter:feedElementFullViewDefault', None), ('forceChatter:feedElementIteration', None), ('forceChatter:feedEventsProcessor', None), ('forceChatter:feedInner', None), ('forceChatter:feedItem', None), ('forceChatter:feedItemActionLinks', None), ('forceChatter:feedItemFullView', None), ('forceChatter:feedItemHeader', None), ('forceChatter:feedItemInteractions', None), ('forceChatter:feedPill', None), ('forceChatter:feedQbProxy', None), ('forceChatter:feedSorter', None), ('forceChatter:feedSwitcher', None), ('forceChatter:feedback', None), ('forceChatter:feeditemAttachments', None), ('forceChatter:fileIcon', None), ('forceChatter:fileSize', None), ('forceChatter:fileThumbnail', None), ('forceChatter:fileUploader', None), ('forceChatter:flagAction', None), ('forceChatter:flags', None), ('forceChatter:followAction', None), ('forceChatter:followInStreamAction', None), ('forceChatter:ftcList', None), ('forceChatter:ftcPreamble', None), ('forceChatter:fullFeed', None), ('forceChatter:genericFeedElement', None), ('forceChatter:groupAnnouncement', None), ('forceChatter:groupArchiveBanner', None), ('forceChatter:groupCreationWizard', None), ('forceChatter:groupDetailCard', None), ('forceChatter:groupMemberRoleSwitch', None), ('forceChatter:groupMembershipRequestButton', None), ('forceChatter:groupPreviewStencil', None), ('forceChatter:groupSearchDataProvider', None), ('forceChatter:groupTileMembershipButton', None), ('forceChatter:groupTileTemplate', None), ('forceChatter:headerPhotoCallout', None), ('forceChatter:highlightingScriptWrapper', None), ('forceChatter:inlineImageFileAction', None), ('forceChatter:inputInformationBody', None), ('forceChatter:invitePeople', None), ('forceChatter:joinGroupAction', None), ('forceChatter:knowledgeArticleHighlightsPreviewStencil', None), ('forceChatter:lazyFeedAuxBody', None), ('forceChatter:leaveGroupAction', None), ('forceChatter:lightningComponent', None), ('forceChatter:lightningFeedBodyText', None), ('forceChatter:likersCard', None), ('forceChatter:linkPost', None), ('forceChatter:mediaReferenceFullview', None), ('forceChatter:mediaReferencePreview', None), ('forceChatter:mediaReferences', None), ('forceChatter:mediaReferencesViewer', None), ('forceChatter:mentionAutocomplete', None), ('forceChatter:menuTriggerLinkWithTooltip', None), ('forceChatter:messageActivity', None), ('forceChatter:messageBodyInput', None), ('forceChatter:messageBodyInputPlainTextArea', None), ('forceChatter:messageBodyInputRichTextArea', None), ('forceChatter:messageBodyInputRichTextEditor', None), ('forceChatter:messageDetailView', None), ('forceChatter:messageDetailViewHeader', None), ('forceChatter:messageItem', None), ('forceChatter:messageListViewDataProvider', None), ('forceChatter:messagePublisher', None), ('forceChatter:messagePublisherDesktop', None), ('forceChatter:messageSegmentWrapper', None), ('forceChatter:messageSegments', None), ('forceChatter:messageSummary', None), ('forceChatter:messages', None), ('forceChatter:messagesListView', None), ('forceChatter:messagesListViewHeader', None), ('forceChatter:messagesManager', None), ('forceChatter:mobileChatter', None), ('forceChatter:moderationDialog', None), ('forceChatter:moveAction', None), ('forceChatter:moveExecution', None), ('forceChatter:muteAction', None), ('forceChatter:navigationalTopicDropdown', None), ('forceChatter:newContent', None), ('forceChatter:newContentButton', None), ('forceChatter:newMessageButton', None), ('forceChatter:newMessageNotification', None), ('forceChatter:notes', None), ('forceChatter:objectHomeTileView', None), ('forceChatter:outOfOfficeSettings', None), ('forceChatter:outputDescription', None), ('forceChatter:outputGroupCombinedType', None), ('forceChatter:outputGroupIsActivityGroup', None), ('forceChatter:outputGroupIsArchived', None), ('forceChatter:outputGroupIsBroadcast', None), ('forceChatter:outputGroupMemberCount', None), ('forceChatter:outputGroupMemberRole', None), ('forceChatter:outputInformationBody', None), ('forceChatter:outputRewardFundValue', None), ('forceChatter:outputShareType', None), ('forceChatter:outputSkillEndorsementCount', None), ('forceChatter:outputSkillUserCount', None), ('forceChatter:outputSkillUserName', None), ('forceChatter:outputUserAboutMe', None), ('forceChatter:outputUserCompanyName', None), ('forceChatter:outputUserIsActive', None), ('forceChatter:outputVersionNumber', None), ('forceChatter:overflowActionMenu', None), ('forceChatter:panelLauncherBadgeSelect', None), ('forceChatter:participantsInput', None), ('forceChatter:pill', None), ('forceChatter:pillBox', None), ('forceChatter:pillContainer', None), ('forceChatter:pillItem', None), ('forceChatter:pinAction', None), ('forceChatter:pinnedItemManager', None), ('forceChatter:pollPost', None), ('forceChatter:pollPostChoice', None), ('forceChatter:pollPostDesktop', None), ('forceChatter:pollPostMobile', None), ('forceChatter:postLinkSharing', None), ('forceChatter:preamble', None), ('forceChatter:progressBar', None), ('forceChatter:publishDraftPostAction', None), ('forceChatter:publisher', None), ('forceChatter:publisherAttachmentActionEmptyContainer', None), ('forceChatter:publisherAttachmentButton', None), ('forceChatter:publisherAttachmentFileUploadButton', None), ('forceChatter:publisherAttachmentItem', None), ('forceChatter:publisherAttachmentPreview', None), ('forceChatter:publisherAttachments', None), ('forceChatter:publisherAttachmentsGroup', None), ('forceChatter:publisherAttachmentsMenu', None), ('forceChatter:publisherContentAttachmentsPreviewContainer', None), ('forceChatter:publisherDesignInfo', None), ('forceChatter:publisherDesignSubstitute', None), ('forceChatter:publisherInput', None), ('forceChatter:publisherPresentation', None), ('forceChatter:publisherPresentationDesktop', None), ('forceChatter:publisherPresentationMobile', None), ('forceChatter:publisherPresentationPanel', None), ('forceChatter:publisherQuickAction', None), ('forceChatter:publisherQuickCreate', None), ('forceChatter:publisherSalesforceFileAction', None), ('forceChatter:publisherUploadFileAction', None), ('forceChatter:publisherVisibility', None), ('forceChatter:publisherVisibilityWrapper', None), ('forceChatter:questionPost', None), ('forceChatter:questionPostDesktop', None), ('forceChatter:questionPostMobile', None), ('forceChatter:quickActionLoader', None), ('forceChatter:recommendationAcceptButton', None), ('forceChatter:recommendationBase', None), ('forceChatter:recommendationBaseWidget', None), ('forceChatter:recommendationBig', None), ('forceChatter:recommendationCarousel', None), ('forceChatter:recommendationCarouselPage', None), ('forceChatter:recommendationCarouselWidget', None), ('forceChatter:recommendationFollowButton', None), ('forceChatter:recommendationInFeed', None), ('forceChatter:recommendationJoinButton', None), ('forceChatter:recommendationListCard', None), ('forceChatter:recommendationListWidget', None), ('forceChatter:recommendationSingleCard', None), ('forceChatter:recommendationSmall', None), ('forceChatter:recommendationTile', None), ('forceChatter:recommendationUiButton', None), ('forceChatter:recommendations', None), ('forceChatter:recommendationsBig', None), ('forceChatter:recommendationsBigDesignInfo', None), ('forceChatter:recommendationsDesignSubstitute', None), ('forceChatter:recordFeedActions', None), ('forceChatter:recordFeedContainer', None), ('forceChatter:recordFeedContainerDesignInfo', None), ('forceChatter:recordFeedContainerDesktop', None), ('forceChatter:recordFeedContainerDesktopWrapper', None), ('forceChatter:recordFeedContainerMobile', None), ('forceChatter:relatedCardContainer', None), ('forceChatter:relatedTopics', None), ('forceChatter:relatedTopicsDataProvider', None), ('forceChatter:removeParticipantDialog', None), ('forceChatter:richLinkPreviewMetadata', None), ('forceChatter:router', None), ('forceChatter:s1FeedsProxy', None), ('forceChatter:scroller', None), ('forceChatter:searchInFeed', None), ('forceChatter:seenByCard', None), ('forceChatter:selectBadge', None), ('forceChatter:selectBadgeDesktop', None), ('forceChatter:selectBadgeMobile', None), ('forceChatter:selectFileFromListViewPanel', None), ('forceChatter:selectGroupType', None), ('forceChatter:selectMention', None), ('forceChatter:selectMentionCachedDataProvider', None), ('forceChatter:selectMentionDataProvider', None), ('forceChatter:selectMentionOption', None), ('forceChatter:selectTopicSuggestion', None), ('forceChatter:selectTopicSuggestionDataProvider', None), ('forceChatter:selectTopicSuggestionOption', None), ('forceChatter:selectUserDataProvider', None), ('forceChatter:selectUserOption', None), ('forceChatter:selectedFileBadge', None), ('forceChatter:selectedThanksBadge', None), ('forceChatter:sfxAnnouncementPost', None), ('forceChatter:sfxEditGroupNotificationSettings', None), ('forceChatter:sfxFollowAction', None), ('forceChatter:sfxJoinGroupAction', None), ('forceChatter:sfxLeaveGroupAction', None), ('forceChatter:shareButton', None), ('forceChatter:sharePostMenu', None), ('forceChatter:simpleFeedItemTopics', None), ('forceChatter:slashAutocomplete', None), ('forceChatter:sortMenu', None), ('forceChatter:streamDeleteModalBody', None), ('forceChatter:streamEditDeleteAction', None), ('forceChatter:streamHeader', None), ('forceChatter:streamNotifications', None), ('forceChatter:streamsListing', None), ('forceChatter:streamsListingHeader', None), ('forceChatter:streamsListingMobile', None), ('forceChatter:streamsListingNavigation', None), ('forceChatter:streamsListingProvider', None), ('forceChatter:streamsListingRecordCell', None), ('forceChatter:streamsListingRowActionMenu', None), ('forceChatter:style', None), ('forceChatter:stypiEditor', None), ('forceChatter:tempDepend', None), ('forceChatter:textPost', None), ('forceChatter:textPostDesktop', None), ('forceChatter:textPostDesktopConditionalPanelActions', None), ('forceChatter:textPostMobile', None), ('forceChatter:thanksBadge', None), ('forceChatter:thanksBadgeSelected', None), ('forceChatter:thanksPost', None), ('forceChatter:thanksPostDesktop', None), ('forceChatter:thanksPostMobile', None), ('forceChatter:thanksPostUserSelect', None), ('forceChatter:thanksPostUserSelectDesktop', None), ('forceChatter:thanksPostUserSelectMobile', None), ('forceChatter:threadedComment', None), ('forceChatter:todayToMeFeed', None), ('forceChatter:toggleLike', None), ('forceChatter:topicAutocompleteInput', None), ('forceChatter:topicDescription', None), ('forceChatter:topicList', None), ('forceChatter:topicMetrics', None), ('forceChatter:topicMetricsItem', None), ('forceChatter:topicSuggestionAutoComplete', None), ('forceChatter:topicSuggestionPillBox', None), ('forceChatter:topicsOnRecordWrapper', None), ('forceChatter:topicsOnRecordWrapperDesignSubstitute', None), ('forceChatter:trailHeadCard', None), ('forceChatter:trailheadBadge', None), ('forceChatter:translationLanguageSelectionAction', None), ('forceChatter:trendingTopics', None), ('forceChatter:trendingTopicsDataProvider', None), ('forceChatter:trendingTopicsDesignSubstitute', None), ('forceChatter:truncatedOutputText', None), ('forceChatter:typingIndicator', None), ('forceChatter:unansweredQuestions', None), ('forceChatter:unansweredQuestionsDataProvider', None), ('forceChatter:upVote', None), ('forceChatter:updateBannerPhoto', None), ('forceChatter:updatePhoto', None), ('forceChatter:userPhoto', None), ('forceChatter:userPreviewStencil', None), ('forceChatter:userProfileAboutMeEdit', None), ('forceChatter:userProfileHighlightsStencil', None), ('forceChatter:userProfileHighlightsStencilDesktop', None), ('forceChatter:usersLookupDataProvider', None), ('forceChatter:verifyUnverifyAction', None), ('forceChatter:viewPhoto', None), ('forceChatter:votersCard', None), ('forceChatter:workspaceTileTemplate', None), ('forceCommunity:accountBrandImage', None), ('forceCommunity:accountBrandImageEdit', None), ('forceCommunity:accountBrandImageView', None), ('forceCommunity:accountBrandRecord', None), ('forceCommunity:accountBrandRecordDesignSubstitute', None), ('forceCommunity:accountSwitcher', None), ('forceCommunity:accountSwitcherAction', None), ('forceCommunity:accountSwitcherDataManager', None), ('forceCommunity:accountSwitcherDataProvider', None), ('forceCommunity:accountSwitcherDesktop', None), ('forceCommunity:accountSwitcherListRecord', None), ('forceCommunity:accountSwitcherSearchPanel', None), ('forceCommunity:actionButtonMobile', None), ('forceCommunity:actionsContainerMobile', None), ('forceCommunity:activateDeactivatePortalUser', None), ('forceCommunity:activityPanel', None), ('forceCommunity:addMember', None), ('forceCommunity:allResults', None), ('forceCommunity:analyticsListener', None), ('forceCommunity:analyticsListenerGtag', None), ('forceCommunity:analyticsObjectHome', None), ('forceCommunity:appLauncher', None), ('forceCommunity:appLauncherTester', None), ('forceCommunity:articleThumbVote', None), ('forceCommunity:askCommunity', None), ('forceCommunity:askCommunityDesignInfo', None), ('forceCommunity:askCommunitySuggestionDesignInfo', None), ('forceCommunity:bannerImageLayout', None), ('forceCommunity:bannerLayout', None), ('forceCommunity:baseRecordValidationComponent', None), ('forceCommunity:baseSearch', None), ('forceCommunity:breadcrumbs', None), ('forceCommunity:breadcrumbsDesignInfo', None), ('forceCommunity:buyerAccountDetail', None), ('forceCommunity:calendar', None), ('forceCommunity:campaignImage', None), ('forceCommunity:campaignImageEdit', None), ('forceCommunity:campaignImageView', None), ('forceCommunity:campaignSignup', None), ('forceCommunity:campaignTileList', None), ('forceCommunity:campaignTileListDataFieldsEditor', None), ('forceCommunity:campaignTileListDataFieldsItemEditor', None), ('forceCommunity:campaignTileListDataManager', None), ('forceCommunity:campaignTileTemplate', None), ('forceCommunity:cancelCheckoutButton', None), ('forceCommunity:cardLayout', None), ('forceCommunity:cardLayoutWithImage', None), ('forceCommunity:cardLayoutWithTitleAndText', None), ('forceCommunity:carousel', None), ('forceCommunity:caseDeflection', None), ('forceCommunity:caseDeflectionDesignInfo', None), ('forceCommunity:caseDeflectionMetricsDesignInfo', None), ('forceCommunity:caseDeflectionZeroStateDesignInfo', None), ('forceCommunity:caseFeed', None), ('forceCommunity:changePassword', None), ('forceCommunity:chatterGroupAnalytics', None), ('forceCommunity:chatterGroupAnalyticsFeedHistory', None), ('forceCommunity:chatterGroupAnalyticsNewMembers', None), ('forceCommunity:chatterGroupAnalyticsTotals', None), ('forceCommunity:checkoutFlow', None), ('forceCommunity:checkoutFlowDesignSubstitute', None), ('forceCommunity:checkoutHeaderWrapper', None), ('forceCommunity:cmsConnect', None), ('forceCommunity:cmsConnectBindingProvider', None), ('forceCommunity:cmsConnectJSONCollectionDataBindingProvider', None), ('forceCommunity:cmsConnectJSONDataProvider', None), ('forceCommunity:cmsConnectJSONItemDataBindingProvider', None), ('forceCommunity:cmsContent', None), ('forceCommunity:cmsContentCardLayout', None), ('forceCommunity:cmsContentCollectionLayoutManager', None), ('forceCommunity:cmsContentGridLayout', None), ('forceCommunity:cmsContentItemDetailLayout', None), ('forceCommunity:cmsContentItemDetailManager', None), ('forceCommunity:cmsContentItemRenderer', None), ('forceCommunity:cmsContentLink', None), ('forceCommunity:commerceBilling', None), ('forceCommunity:commerceCheckoutSummary', None), ('forceCommunity:commerceDelivery', None), ('forceCommunity:commerceNextButton', None), ('forceCommunity:commerceOrderConfirmation', None), ('forceCommunity:commerceOrdersList', None), ('forceCommunity:commercePayment', None), ('forceCommunity:commerceReorder', None), ('forceCommunity:commerceScreenWait', None), ('forceCommunity:communitySelectBadge', None), ('forceCommunity:communitySelectBadgeDesktop', None), ('forceCommunity:communitySelectBadgeMobile', None), ('forceCommunity:communityThanksBadge', None), ('forceCommunity:communityThanksBadgeWrapper', None), ('forceCommunity:confirmMessageBody', None), ('forceCommunity:connectedSources', None), ('forceCommunity:contactSupportButton', None), ('forceCommunity:contactSupportButtonDesignInfo', None), ('forceCommunity:contactSupportConfirmation', None), ('forceCommunity:contactSupportFileInput', None), ('forceCommunity:contactSupportForm', None), ('forceCommunity:contactSupportFormDesignInfo', None), ('forceCommunity:contactSupportFormDesignSetupLink', None), ('forceCommunity:contactSupportFormDesignSupportSetupLink', None), ('forceCommunity:contactSupportSetupError', None), ('forceCommunity:createRecordButton', None), ('forceCommunity:createRecordForm', None), ('forceCommunity:dashboard', None), ('forceCommunity:dashboardDesignInfo', None), ('forceCommunity:dashboardList', None), ('forceCommunity:defaultCommAppPageTemplate', None), ('forceCommunity:deflection', None), ('forceCommunity:deflectionDataProvider', None), ('forceCommunity:deflectionOption', None), ('forceCommunity:deflectionSignalActions', None), ('forceCommunity:deflectionTracking', None), ('forceCommunity:deleteBadgeAssignment', None), ('forceCommunity:detailImageFirstLayout', None), ('forceCommunity:detailLayout', None), ('forceCommunity:detailLayoutWithSections', None), ('forceCommunity:disablePortalUser', None), ('forceCommunity:dynamicCollection', None), ('forceCommunity:dynamicCollectionBaseDataProvider', None), ('forceCommunity:dynamicCollectionCarousel', None), ('forceCommunity:dynamicCollectionCarouselMultiSlide', None), ('forceCommunity:dynamicCollectionCarouselSlideshow', None), ('forceCommunity:dynamicCollectionEditorDesignInfo', None), ('forceCommunity:dynamicCollectionGrid', None), ('forceCommunity:dynamicCollectionListviewDataProvider', None), ('forceCommunity:embeddedQuipComponent', None), ('forceCommunity:embeddedService', None), ('forceCommunity:embeddedServiceChannelMenu', None), ('forceCommunity:embeddedServiceChannelMenuDesignInfo', None), ('forceCommunity:embeddedServiceDesignInfo', None), ('forceCommunity:embeddedServiceFeature', None), ('forceCommunity:embeddedServiceFieldService', None), ('forceCommunity:embeddedServiceFieldServiceDesignInfo', None), ('forceCommunity:embeddedServiceHelpButton', None), ('forceCommunity:embeddedServiceSidebar', None), ('forceCommunity:emptyComponentPlaceholder', None), ('forceCommunity:emptyTileMenuComponentPlaceholder', None), ('forceCommunity:enablePortalUser', None), ('forceCommunity:expiringContent', None), ('forceCommunity:expiringContentBase', None), ('forceCommunity:expiringContentDesignInfo', None), ('forceCommunity:expiringContentDesignSubstitute', None), ('forceCommunity:externalAccountHierarchyActions', None), ('forceCommunity:feedCommentInput', None), ('forceCommunity:feedItemDetail', None), ('forceCommunity:feedPublisher', None), ('forceCommunity:feedPublisherDesignInfo', None), ('forceCommunity:feedResults', None), ('forceCommunity:fileDetailPage', None), ('forceCommunity:fileEngagement', None), ('forceCommunity:filesList', None), ('forceCommunity:flexTileLayout', None), ('forceCommunity:flexTileLayoutWithImage', None), ('forceCommunity:flowCommunity', None), ('forceCommunity:flowCommunityDesignSubstitute', None), ('forceCommunity:flowCommunityEditFlowButton', None), ('forceCommunity:flowRedirect', None), ('forceCommunity:follow', None), ('forceCommunity:followDesignInfo', None), ('forceCommunity:forceCommunityFeed', None), ('forceCommunity:forceCommunityFeedDesignInfo', None), ('forceCommunity:freeze', None), ('forceCommunity:freezeUserAction', None), ('forceCommunity:giveBadgeAction', None), ('forceCommunity:globalNavigation', None), ('forceCommunity:globalSearchInput', None), ('forceCommunity:groupAnnouncement', None), ('forceCommunity:groupContainer', None), ('forceCommunity:groupDetail', None), ('forceCommunity:groupHeadline', None), ('forceCommunity:groupHighlightStencilNapili', None), ('forceCommunity:groupObjectHome', None), ('forceCommunity:groupRecordHomeTabs', None), ('forceCommunity:groupRecordHomeTabsDesignInfo', None), ('forceCommunity:groupRelatedList', None), ('forceCommunity:headline', None), ('forceCommunity:headlineDesignInfo', None), ('forceCommunity:hierarchyList', None), ('forceCommunity:homeTabs', None), ('forceCommunity:homeTabsDesignInfo', None), ('forceCommunity:htmlBlock', None), ('forceCommunity:htmlBlockDesignInfo', None), ('forceCommunity:interactive', None), ('forceCommunity:iotEmbedded', None), ('forceCommunity:knowledgeablePeople', None), ('forceCommunity:languageMenuItem', None), ('forceCommunity:languagePicker', None), ('forceCommunity:languagePickerDesignInfo', None), ('forceCommunity:languagePickerTrigger', None), ('forceCommunity:languageSelector43', None), ('forceCommunity:languageSelectorDesignInfo', None), ('forceCommunity:leadInbox', None), ('forceCommunity:leadInboxStencil', None), ('forceCommunity:linkMenuItem', None), ('forceCommunity:listView', None), ('forceCommunity:loginAsPortalUser', None), ('forceCommunity:manageBuyerAccount', None), ('forceCommunity:managePartnerSuperUser', None), ('forceCommunity:managePortalAccount', None), ('forceCommunity:managedContent', None), ('forceCommunity:managedContentCollectionDataProvider', None), ('forceCommunity:managedContentDesignInfo', None), ('forceCommunity:managedContentDetail', None), ('forceCommunity:multiLevelNavigation', None), ('forceCommunity:navBar', None), ('forceCommunity:navigationMenu', None), ('forceCommunity:navigationMenuBase', None), ('forceCommunity:navigationMenuBaseInternal', None), ('forceCommunity:navigationMenuItem', None), ('forceCommunity:navigationMenuItemTriggerLink', None), ('forceCommunity:nbaWidget', None), ('forceCommunity:notifications', None), ('forceCommunity:objectHome', None), ('forceCommunity:objectHomeDesignInfo', None), ('forceCommunity:objectHomeEmptyDesignSubstitute', None), ('forceCommunity:omniBox', None), ('forceCommunity:omniBoxContactSupportActionMenuItem', None), ('forceCommunity:omniBoxSwitcher', None), ('forceCommunity:omniBoxTopicTriggerLink', None), ('forceCommunity:ordersMobileHome', None), ('forceCommunity:outputRichText', None), ('forceCommunity:pathAssistant', None), ('forceCommunity:pathAssistantDesignInfo', None), ('forceCommunity:pausedInterviewCard', None), ('forceCommunity:pausedInterviewCardDesignSubstitute', None), ('forceCommunity:pausedInterviewCardRow', None), ('forceCommunity:placeholder', None), ('forceCommunity:profileRenderer', None), ('forceCommunity:psscFeedsProxy', None), ('forceCommunity:psscPublisherSalesforceFileAction', None), ('forceCommunity:psscPublisherUploadFileAction', None), ('forceCommunity:psscSelectFileFromListViewPanel', None), ('forceCommunity:questionPostCommunities', None), ('forceCommunity:quillInsertAssetImageButton', None), ('forceCommunity:quipCard', None), ('forceCommunity:reCaptcha', None), ('forceCommunity:recommendations', None), ('forceCommunity:recommendationsDesignInfo', None), ('forceCommunity:recordDetail', None), ('forceCommunity:recordDetailDesignInfo', None), ('forceCommunity:recordHeadline', None), ('forceCommunity:recordHomeTabs', None), ('forceCommunity:recordListCompact', None), ('forceCommunity:recordListCompactCard', None), ('forceCommunity:recordListDesktop', None), ('forceCommunity:recordListMobile', None), ('forceCommunity:recordListStandard', None), ('forceCommunity:relatedList', None), ('forceCommunity:relatedListDesignSubstitute', None), ('forceCommunity:relatedListSingle', None), ('forceCommunity:relatedQuipItemsView', None), ('forceCommunity:relatedRecords', None), ('forceCommunity:relatedRecordsDesignInfo', None), ('forceCommunity:relatedTopics', None), ('forceCommunity:reportBuilder', None), ('forceCommunity:reportChart', None), ('forceCommunity:reportChartDesignInfo', None), ('forceCommunity:reportList', None), ('forceCommunity:reportPage', None), ('forceCommunity:reportPageDesignInfo', None), ('forceCommunity:reputationLeaderboard', None), ('forceCommunity:reputationLeaderboard42', None), ('forceCommunity:reputationLeaderboardDataProvider', None), ('forceCommunity:reputationLeaderboardDesignInfo', None), ('forceCommunity:reputationLeaderboardRow', None), ('forceCommunity:reputationWidget', None), ('forceCommunity:resetPasswordPortalUser', None), ('forceCommunity:resultsList', None), ('forceCommunity:retrieveCommunityRoute', None), ('forceCommunity:richText', None), ('forceCommunity:richTextDesignInfo', None), ('forceCommunity:richTextInline', None), ('forceCommunity:richTextInlineDesignInfo', None), ('forceCommunity:routeLink', None), ('forceCommunity:scorecard', None), ('forceCommunity:scorecardMetric', None), ('forceCommunity:search', None), ('forceCommunity:searchBox', None), ('forceCommunity:section', None), ('forceCommunity:sectionColumnDesignInfo', None), ('forceCommunity:selectGroupType', None), ('forceCommunity:seoAssistant', None), ('forceCommunity:showPortalUserMemberList', None), ('forceCommunity:showUserNetworkMemberList', None), ('forceCommunity:signalCollector', None), ('forceCommunity:stamp', None), ('forceCommunity:standardListViewGrid', None), ('forceCommunity:streamDetail', None), ('forceCommunity:streamDetailDesktop', None), ('forceCommunity:streamDetailMobile', None), ('forceCommunity:streamList', None), ('forceCommunity:suggestedFilesCard', None), ('forceCommunity:surveyCommunity', None), ('forceCommunity:surveyCommunityDesignSubstitute', None), ('forceCommunity:tabset', None), ('forceCommunity:taskList', None), ('forceCommunity:taskListCompact', None), ('forceCommunity:tempDepend', None), ('forceCommunity:themeHeaderB2B', None), ('forceCommunity:themeHeaderBase', None), ('forceCommunity:themeHeaderCompact', None), ('forceCommunity:themeHeaderCompactMenuStylesDesignInfo', None), ('forceCommunity:themeHeaderHelpCenter', None), ('forceCommunity:themeHeaderMfg', None), ('forceCommunity:themeHeaderStacked', None), ('forceCommunity:themeHeaderStackedMenuStylesDesignInfo', None), ('forceCommunity:themeHeroBase', None), ('forceCommunity:themeHeroStarter', None), ('forceCommunity:themeLogo', None), ('forceCommunity:themeLogoSalesforce', None), ('forceCommunity:themeNav', None), ('forceCommunity:themeNavSubMenu', None), ('forceCommunity:themeNavTrigger', None), ('forceCommunity:themeProfileMenu', None), ('forceCommunity:themeProfileMenuLoginButtonDesignInfo', None), ('forceCommunity:themeSearch', None), ('forceCommunity:themeSearchHero', None), ('forceCommunity:themeSearchSection', None), ('forceCommunity:tileLayout', None), ('forceCommunity:tileLayoutWithImage', None), ('forceCommunity:tileMenu', None), ('forceCommunity:tileMenuDesignSubstitute', None), ('forceCommunity:tileMenuItem', None), ('forceCommunity:topArticleItem', None), ('forceCommunity:topArticleList', None), ('forceCommunity:topArticleListDataProvider', None), ('forceCommunity:topArticleListDesignInfo', None), ('forceCommunity:topArticleListForTopic', None), ('forceCommunity:topicCatalog', None), ('forceCommunity:topicCatalogDesignInfo', None), ('forceCommunity:topicDescription', None), ('forceCommunity:topicMerticsDesignInfo', None), ('forceCommunity:topicMetrics', None), ('forceCommunity:topicsOnRecordDesignSubstitute', None), ('forceCommunity:topicsOnRecordWrapper', None), ('forceCommunity:trendingTopics', None), ('forceCommunity:trendingTopicsDesignInfo', None), ('forceCommunity:trendingTopicsDesignSubstitute', None), ('forceCommunity:updatePhotoSitecomWrapper', None), ('forceCommunity:userPreviewStencilNapili', None), ('forceCommunity:userProfileAndSettings', None), ('forceCommunity:userProfileBase', None), ('forceCommunity:userProfileBody', None), ('forceCommunity:userProfileDetail', None), ('forceCommunity:userProfileEdit', None), ('forceCommunity:userProfileHeader', None), ('forceCommunity:userProfileHeaderDetail', None), ('forceCommunity:userProfileKnowledgeableAbout', None), ('forceCommunity:userProfileStats', None), ('forceCommunity:userProfileTabs', None), ('forceCommunity:userProfileWithBanner', None), ('forceCommunity:userProfileWithBannerDesignInfo', None), ('forceCommunity:userRecognitionList', None), ('forceCommunity:userRecognitions', None), ('forceCommunity:userRecordHome', None), ('forceCommunity:userRecordHomeDesignInfo', None), ('forceCommunity:userRelatedList', None), ('forceCommunity:userSettings', None), ('forceCommunity:userSettingsCustomizable', None), ('forceCommunity:userSettingsInternal', None), ('forceCommunity:visualforcePage', None), ('forceCommunity:waveDashboard', None), ('forceCommunity:workspacesList', None), ('forceCommunity:workspacesListBetaBadge', None), ('forceContent:actionEventLink', None), ('forceContent:actionNewVersion', None), ('forceContent:assetDetailsPanel', None), ('forceContent:assetPicker', None), ('forceContent:baseFolderAction', None), ('forceContent:basePreview', None), ('forceContent:basePreviewPlayer', None), ('forceContent:basePreviewToolbar', None), ('forceContent:compoundFieldsTitleRenderer', None), ('forceContent:contentDistributionViewer', None), ('forceContent:contentDistributionViewerToolbar', None), ('forceContent:contentDocumentHighlightsStencilDesktop', None), ('forceContent:contentFolderDistributionViewer', None), ('forceContent:contentHubAuthenticationBanner', None), ('forceContent:contentHubError', None), ('forceContent:contentLinkableEntityIcon', None), ('forceContent:contentThumbnail', None), ('forceContent:contentVersionEditorPanel', None), ('forceContent:contentVersionFieldsEditor', None), ('forceContent:contentVersionRelatedListRecord', None), ('forceContent:contentVersionsEditWizard', None), ('forceContent:contentWorkspaceDataProvider', None), ('forceContent:contentWorkspaceImage', None), ('forceContent:contentWorkspaceNameRenderer', None), ('forceContent:createContentDocForContentHubFile', None), ('forceContent:createFolderAction', None), ('forceContent:deleteFolderAction', None), ('forceContent:documentLinkRowStencil', None), ('forceContent:downloadExternalFileAction', None), ('forceContent:editContentWorkspaceImage', None), ('forceContent:editFolderAction', None), ('forceContent:embeddedQuipActionMenu', None), ('forceContent:embeddedQuipActionMenuBase', None), ('forceContent:embeddedQuipComponent', None), ('forceContent:embeddedQuipCreateFieldButton', None), ('forceContent:embeddedQuipDocumentChangePanel', None), ('forceContent:embeddedQuipEditor', None), ('forceContent:embeddedQuipEditorOption', None), ('forceContent:embeddedQuipFieldEditor', None), ('forceContent:embeddedQuipSharingEditor', None), ('forceContent:embeddedQuipUrlEditor', None), ('forceContent:feedActionOpenExternalFile', None), ('forceContent:feedActionsDropDown', None), ('forceContent:feedAttachmentAction', None), ('forceContent:fileBadge', None), ('forceContent:fileCard', None), ('forceContent:fileDataManager', None), ('forceContent:fileDataProvider', None), ('forceContent:fileDroppableZone', None), ('forceContent:fileInfoPopover', None), ('forceContent:fileLinkShare', None), ('forceContent:fileLinkShareAction', None), ('forceContent:fileList', None), ('forceContent:fileListDesktop', None), ('forceContent:fileListSorterDataProvider', None), ('forceContent:fileListViewDataManager', None), ('forceContent:filePicker', None), ('forceContent:filePickerDesktop', None), ('forceContent:filePickerMobile', None), ('forceContent:filePreview', None), ('forceContent:fileSearchPanel', None), ('forceContent:fileShareConfirmationModalBody', None), ('forceContent:fileShareDataProvider', None), ('forceContent:fileShareGrid', None), ('forceContent:fileShareGridRemoveColumn', None), ('forceContent:fileShareGridShareTypeColumn', None), ('forceContent:fileShareGridTitleColumn', None), ('forceContent:fileShareGridVisibilityCheckboxColumn', None), ('forceContent:fileSharePanel', None), ('forceContent:fileShareRecommendation', None), ('forceContent:fileSourceListItem', None), ('forceContent:fileSourceMenu', None), ('forceContent:fileSourceMenuDesktop', None), ('forceContent:fileSourceMenuItem', None), ('forceContent:fileSourceMenuItemDesktop', None), ('forceContent:fileSourceMenuSeparator', None), ('forceContent:fileTestingUtil', None), ('forceContent:fileTitle', None), ('forceContent:fileUpload', None), ('forceContent:fileUploadAction', None), ('forceContent:fileUploaderPanel', None), ('forceContent:filesHomeBreadcrumbs', None), ('forceContent:filesHomeDesktop', None), ('forceContent:filesHomeDesktopHeader', None), ('forceContent:filesListDesktop', None), ('forceContent:filesListMobile', None), ('forceContent:filesManager', None), ('forceContent:folderCreateAndEditPanel', None), ('forceContent:folderDeletePanel', None), ('forceContent:folderLinkShareAction', None), ('forceContent:folderManager', None), ('forceContent:folderSelectorPanel', None), ('forceContent:folderizeActionPanel', None), ('forceContent:folderizeButton', None), ('forceContent:inlineSpinner', None), ('forceContent:latestVersionDetailPanel', None), ('forceContent:librariesHomeDesktop', None), ('forceContent:librariesHomeMobile', None), ('forceContent:listLoadingTemplate', None), ('forceContent:listRecord', None), ('forceContent:listUploadFileAction', None), ('forceContent:listViewTitleRenderer', None), ('forceContent:manageWorkspaceMembersAction', None), ('forceContent:manageWorkspaceMembersPanel', None), ('forceContent:mobilePreviewPlayer', None), ('forceContent:mobilePreviewPlayerPageToolbar', None), ('forceContent:mobilePreviewPlayerTopToolbar', None), ('forceContent:modalFileUploader', None), ('forceContent:modalPreviewManager', None), ('forceContent:modalPreviewPlayer', None), ('forceContent:moveFilePanel', None), ('forceContent:multiFileUploader', None), ('forceContent:openExternalFileAction', None), ('forceContent:outputEntityName', None), ('forceContent:outputReasonForChange', None), ('forceContent:outputSourceTitle', None), ('forceContent:outputTitle', None), ('forceContent:panelFooter', None), ('forceContent:panelHeader', None), ('forceContent:previewInfoProvider', None), ('forceContent:previewPanel', None), ('forceContent:previewPlayer', None), ('forceContent:previewPlayerPagingToolbar', None), ('forceContent:previewPlayerTopToolbar', None), ('forceContent:previewStatus', None), ('forceContent:previewerAction', None), ('forceContent:previewerActionNewVersion', None), ('forceContent:previewerActionOpenExternalFile', None), ('forceContent:previewerActionsBar', None), ('forceContent:quipActionMenu', None), ('forceContent:quipActionMenuAloha', None), ('forceContent:quipActionMenuBase', None), ('forceContent:quipCard', None), ('forceContent:quipCardAloha', None), ('forceContent:quipCardLightning', None), ('forceContent:quipChooseDocumentPanel', None), ('forceContent:quipContentHubAuthPanel', None), ('forceContent:quipContentHubErrorAloha', None), ('forceContent:quipCreatePanel', None), ('forceContent:quipItem', None), ('forceContent:quipItemDropdown', None), ('forceContent:quipItemDropdownAloha', None), ('forceContent:quipItemsAloha', None), ('forceContent:quipMarketingBlock', None), ('forceContent:quipMassActionCreatePanel', None), ('forceContent:quipPreview', None), ('forceContent:quipSearchAutocompleteOption', None), ('forceContent:quipSearchBox', None), ('forceContent:quipSearchDataProvider', None), ('forceContent:quipSearchPanel', None), ('forceContent:quipSetupAssistant', None), ('forceContent:quipSheetIframe', None), ('forceContent:quipSheetMassAction', None), ('forceContent:quipSummaryBlock', None), ('forceContent:quipSupportTextDesignInfo', None), ('forceContent:quipTemplateButton', None), ('forceContent:relatedListPreviewFileList', None), ('forceContent:relatedQuipItemsActionMenu', None), ('forceContent:relatedQuipItemsView', None), ('forceContent:searchCompoundFieldsTitleRenderer', None), ('forceContent:searchStencil', None), ('forceContent:selectFileFromSalesforce', None), ('forceContent:shareExternalFileAction', None), ('forceContent:shareFileAction', None), ('forceContent:singleFileUploader', None), ('forceContent:statsPanel', None), ('forceContent:suggestedFile', None), ('forceContent:suggestedFilesCard', None), ('forceContent:suggestedFilesConfirmationPanel', None), ('forceContent:svgPreview', None), ('forceContent:tempDepend', None), ('forceContent:thumbnailPreview', None), ('forceContent:unshareQuipItemPanel', None), ('forceContent:uploadAssetAction', None), ('forceContent:uploadPanel', None), ('forceContent:uploadPanelFooter', None), ('forceContent:videoPreview', None), ('forceContent:virtualRelatedListStencil', None), ('forceContent:workspaceMemberDeleteColumn', None), ('forceContent:workspaceMembersDataProvider', None), ('forceContent:workspaceMembersGrid', None), ('forceContent:workspaceMembersPermissionColumn', None), ('forceContent:workspaceMembersTitleColumn', None), ('forceDiscovery:knowledgeablePeople', None), ('forceDiscovery:knowledgeablePeopleDataProvider', None), ('forceDiscovery:knowledgeablePeopleRow', None), ('forceDiscovery:userProfileKnowledgeableAbout', None), ('forceDiscovery:userProfileKnowledgeableAboutDataProvider', None), ('forceDiscovery:userProfileKnowledgeableAboutModal', None), ('forceDiscovery:userProfileKnowledgeableAboutTopic', None), ('forceHelp:contentSearch', None), ('forceHelp:contentSearchDataProvider', None), ('forceKnowledge:KnowledgeArticleVersionArchiveMassAction', None), ('forceKnowledge:KnowledgeArticleVersionAttachArticleAction', None), ('forceKnowledge:KnowledgeArticleVersionInsertContentToChannelAction', None), ('forceKnowledge:KnowledgeArticleVersionInsertContentToConversationAction', None), ('forceKnowledge:KnowledgeArticleVersionInsertUrlToChannelAction', None), ('forceKnowledge:KnowledgeArticleVersionPreviewPanel', None), ('forceKnowledge:KnowledgeArticleVersionPrintAction', None), ('forceKnowledge:articleDataCategoryChooser', None), ('forceKnowledge:articleDataCategoryChooserTester', None), ('forceKnowledge:articleDataCategoryViewer', None), ('forceKnowledge:articleDataCategoryViewerTester', None), ('forceKnowledge:articleInputDesktopDataProvider', None), ('forceKnowledge:articleMasterVersion', None), ('forceKnowledge:articleRedirect', None), ('forceKnowledge:articleSearchDesktop', None), ('forceKnowledge:articleSearchInputDesktop', None), ('forceKnowledge:articleSearchPrefilter', None), ('forceKnowledge:articleSearchResult', None), ('forceKnowledge:articleSearchSortMenu', None), ('forceKnowledge:articleStars', None), ('forceKnowledge:articleThumbVote', None), ('forceKnowledge:articleTitlePrintableView', None), ('forceKnowledge:articleVersionCompare', None), ('forceKnowledge:articleVersionHistory', None), ('forceKnowledge:articleVersionHistoryDataProvider', None), ('forceKnowledge:articleVersionSelector', None), ('forceKnowledge:articlesObjectHomeTablet', None), ('forceKnowledge:articlesSearch', None), ('forceKnowledge:assignArticle', None), ('forceKnowledge:blockSection', None), ('forceKnowledge:createCodeBlockPanel', None), ('forceKnowledge:highlightedOutputText', None), ('forceKnowledge:inputRichText', None), ('forceKnowledge:kbResultFieldTitle', None), ('forceKnowledge:kbResultStencil', None), ('forceKnowledge:kbResultStencilDesktop', None), ('forceKnowledge:kbResultStencilWithHover', None), ('forceKnowledge:knowledgeArchiveOptionDialog', None), ('forceKnowledge:knowledgeArticleVersionActionsCommon', None), ('forceKnowledge:knowledgeArticleVersionArchiveAction', None), ('forceKnowledge:knowledgeArticleVersionCreateDraftFromOnlineAction', None), ('forceKnowledge:knowledgeArticleVersionDeleteAction', None), ('forceKnowledge:knowledgeArticleVersionDeleteMassAction', None), ('forceKnowledge:knowledgeArticleVersionFollowAction', None), ('forceKnowledge:knowledgeArticleVersionHighlightsPreviewStencil', None), ('forceKnowledge:knowledgeArticleVersionMassAssignAction', None), ('forceKnowledge:knowledgeArticleVersionMassSubmitForTranslationAction', None), ('forceKnowledge:knowledgeArticleVersionPublishAction', None), ('forceKnowledge:knowledgeArticleVersionPublishMassAction', None), ('forceKnowledge:knowledgeArticleVersionRestoreAction', None), ('forceKnowledge:knowledgeArticleVersionRestoreMassAction', None), ('forceKnowledge:knowledgeArticleVersionShareSites', None), ('forceKnowledge:knowledgeArticleVersionShareSitesConversation', None), ('forceKnowledge:knowledgeArticleVersionShareSitesEmail', None), ('forceKnowledge:knowledgeArticleVersionShareSitesSocial', None), ('forceKnowledge:knowledgeArticleVersionTranslationPublishAction', None), ('forceKnowledge:knowledgeDeleteCreateOptionDialog', None), ('forceKnowledge:knowledgeDeleteOptionDialog', None), ('forceKnowledge:knowledgeEditCompletedTranslation', None), ('forceKnowledge:knowledgeMassArchiveOptionDialog', None), ('forceKnowledge:knowledgeMassAssignArticle', None), ('forceKnowledge:knowledgeMassPublishOptionDialog', None), ('forceKnowledge:knowledgeMassRestoreOptionDialog', None), ('forceKnowledge:knowledgeMassSubmitForTranslationOptionDialog', None), ('forceKnowledge:knowledgeMigrationFieldsMappingTab', None), ('forceKnowledge:knowledgeMigrationFieldsMappingTabInputSelect', None), ('forceKnowledge:knowledgeMigrationFlow', None), ('forceKnowledge:knowledgeMigrationFlowEndStep', None), ('forceKnowledge:knowledgeMigrationFlowFieldsMappingStep', None), ('forceKnowledge:knowledgeMigrationFlowFilesMigrationStep', None), ('forceKnowledge:knowledgeMigrationFlowStartStep', None), ('forceKnowledge:knowledgeMigrationForSingleArticleTypeFlow', None), ('forceKnowledge:knowledgeMigrationForSingleArticleTypeFlowEndStep', None), ('forceKnowledge:knowledgeMigrationForSingleArticleTypeFlowStartStep', None), ('forceKnowledge:knowledgeMigrationSetup', None), ('forceKnowledge:knowledgeMigrationSetupNonUiAction', None), ('forceKnowledge:knowledgePublishOptionDialog', None), ('forceKnowledge:knowledgeRestoreOptionDialog', None), ('forceKnowledge:multiSelectTable', None), ('forceKnowledge:multiSelectTree', None), ('forceKnowledge:multiSelectTreeNode', None), ('forceKnowledge:optionDialogFooter', None), ('forceKnowledge:outputPublishStatus', None), ('forceKnowledge:outputRichTextForKnowledge', None), ('forceKnowledge:pillListSection', None), ('forceKnowledge:pillListViewer', None), ('forceKnowledge:recordHomeLanguageSwitcher', None), ('forceKnowledge:submitKnowledgeArticleVersionForTranslation', None), ('forceKnowledge:suggestedArticle', None), ('forceKnowledge:tempDepend', None), ('forceKnowledge:titleInput', None), ('forceKnowledge:urlNameInput', None), ('forceSearch:actionDataProvider', None), ('forceSearch:assistant', None), ('forceSearch:assistantDialog', None), ('forceSearch:assistantDialogContainer', None), ('forceSearch:assistantListViewPreview', None), ('forceSearch:assistantRecordPreview', None), ('forceSearch:assistantSecondaryPanel', None), ('forceSearch:assistantSuggestionItem', None), ('forceSearch:assistantSuggestionsDataProvider', None), ('forceSearch:assistantSuggestionsList', None), ('forceSearch:assistantTip', None), ('forceSearch:baseSearch', None), ('forceSearch:baseSearchInput', None), ('forceSearch:baseSearchPage', None), ('forceSearch:bestResult', None), ('forceSearch:bestResultFooter', None), ('forceSearch:customPreviewWrapper', None), ('forceSearch:desktopHeader', None), ('forceSearch:desktopHeaderManager', None), ('forceSearch:entityMenuItem', None), ('forceSearch:entitySelectorMenu', None), ('forceSearch:experimentContextInitializer', None), ('forceSearch:feedback', None), ('forceSearch:filterInput', None), ('forceSearch:filterInputPicklist', None), ('forceSearch:filterInputRadio', None), ('forceSearch:filterInputRange', None), ('forceSearch:filterInputText', None), ('forceSearch:filterPanel', None), ('forceSearch:globalSearchLauncher', None), ('forceSearch:groupContainer', None), ('forceSearch:headerSearchInput', None), ('forceSearch:input', None), ('forceSearch:inputDataProvider', None), ('forceSearch:inputDesktop', None), ('forceSearch:inputDesktopDataProvider', None), ('forceSearch:inputDesktopListFooter', None), ('forceSearch:inputDesktopOption', None), ('forceSearch:inputDesktopPillWrapper', None), ('forceSearch:inputEntitySelector', None), ('forceSearch:inputEntitySelectorDataProvider', None), ('forceSearch:inputLookupDesktop', None), ('forceSearch:inputLookupDesktopActionItem', None), ('forceSearch:inputLookupDesktopDataProvider', None), ('forceSearch:inputLookupDesktopOption', None), ('forceSearch:inputMobile', None), ('forceSearch:intentQueryMessage', None), ('forceSearch:lookupAdvanced', None), ('forceSearch:lookupAdvancedFooter', None), ('forceSearch:mouseTrap', None), ('forceSearch:mru', None), ('forceSearch:mruDataProvider', None), ('forceSearch:mruMobile', None), ('forceSearch:mruMobileItem', None), ('forceSearch:multiScopesDataProvider', None), ('forceSearch:noResults', None), ('forceSearch:optionDataProvider', None), ('forceSearch:predictedResults', None), ('forceSearch:predictedResultsAppChart', None), ('forceSearch:predictedResultsDataProvider', None), ('forceSearch:queryExpansionMessage', None), ('forceSearch:queryFeedback', None), ('forceSearch:queryFeedbackMessage', None), ('forceSearch:queryMessage', None), ('forceSearch:queryRecourseMessage', None), ('forceSearch:queryRemediationMessage', None), ('forceSearch:queryRemediationMessagePanel', None), ('forceSearch:recordPicker', None), ('forceSearch:recordPickerOption', None), ('forceSearch:recordPickerOptionCard', None), ('forceSearch:recordPickerOptionInline', None), ('forceSearch:recordPreview', None), ('forceSearch:recordPreviewActions', None), ('forceSearch:recordPreviewBody', None), ('forceSearch:recordPreviewFields', None), ('forceSearch:recordPreviewHeader', None), ('forceSearch:recordPreviewRelatedList', None), ('forceSearch:recordPreviewTitle', None), ('forceSearch:reportPreview', None), ('forceSearch:results', None), ('forceSearch:resultsCardView', None), ('forceSearch:resultsCompact', None), ('forceSearch:resultsDataProvider', None), ('forceSearch:resultsFeed', None), ('forceSearch:resultsFeedMouseTrap', None), ('forceSearch:resultsFeedback', None), ('forceSearch:resultsFilters', None), ('forceSearch:resultsGridLVM', None), ('forceSearch:resultsGridLVMDataManager', None), ('forceSearch:resultsGridView', None), ('forceSearch:resultsGridViewMouseTrap', None), ('forceSearch:resultsHeaderFilters', None), ('forceSearch:resultsList', None), ('forceSearch:resultsListDataManager', None), ('forceSearch:resultsListItem', None), ('forceSearch:resultsListMouseTrap', None), ('forceSearch:resultsMultiScope', None), ('forceSearch:resultsMultiScopeCompact', None), ('forceSearch:resultsRegion', None), ('forceSearch:resultsRegionDesktop', None), ('forceSearch:resultsRegionMobile', None), ('forceSearch:resultsTopResults', None), ('forceSearch:resultsTopResultsDataProvider', None), ('forceSearch:scopeItem', None), ('forceSearch:scopeOverflow', None), ('forceSearch:scopeOverflowList', None), ('forceSearch:scopes', None), ('forceSearch:scopesDataProvider', None), ('forceSearch:scopesList', None), ('forceSearch:scopesListContainer', None), ('forceSearch:scopesListDataProvider', None), ('forceSearch:scopesListPlaceholder', None), ('forceSearch:scopesListSection', None), ('forceSearch:scopesRibbon', None), ('forceSearch:scopesRibbonDataProvider', None), ('forceSearch:search', None), ('forceSearch:searchDataProvider', None), ('forceSearch:searchFor', None), ('forceSearch:searchGDP', None), ('forceSearch:searchGDPCache', None), ('forceSearch:searchGDPCacheActivity', None), ('forceSearch:searchGDPCacheMrus', None), ('forceSearch:searchGDPCachePermsAndPrefs', None), ('forceSearch:searchGDPCacheResultsFilters', None), ('forceSearch:searchGDPCacheScopes', None), ('forceSearch:searchInputListHeader', None), ('forceSearch:searchMoreBox', None), ('forceSearch:searchPage', None), ('forceSearch:searchPageAssistant', None), ('forceSearch:searchPageAssistantDesktop', None), ('forceSearch:searchPageAssistantMobile', None), ('forceSearch:searchPageDesktop', None), ('forceSearch:searchResultsGridHeader', None), ('forceSearch:searchResultsSummary', None), ('forceSearch:searchScopeHeader', None), ('forceSearch:setupSearchLayouts', None), ('forceSearch:setupSearchSettings', None), ('forceSearch:setupSearchSettingsItem', None), ('forceSearch:test', None), ('forceSearch:testMockDataProvider', None), ('forceSearch:typeAheadDataProvider', None), ('forceTopic:featuredTopicItem', None), ('forceTopic:featuredTopics', None), ('forceTopic:featuredTopicsDataProvider', None), ('forceTopic:featuredTopicsDesignInfo', None), ('forceTopic:navigationTopicsMenu', None), ('forceTopic:placeholder', None), ('forceTopic:publisherTopicsWidget', None), ('forceTopic:simpleTopicAssignmentItem', None), ('forceTopic:simpleTopicAssignments', None), ('forceTopic:subTopicNavigation', None), ('forceTopic:subTopicNavigationDropDown', None), ('forceTopic:topicBreadcrumbs', None), ('forceTopic:topicLink', None), ('forceTopic:topicList', None), ('forceTopic:topicNavigationMenu', None), ('forceTopic:topicNavigationMenuLink', None), ('forceTopic:topicTriggerLink', None), ('formula:formulaContainer', None), ('formula:serverDataLib', None), ('frameworkEditor:arrangementEditor', None), ('frameworkEditor:baseEditorCanvasConfig', None), ('frameworkEditor:baseInvalidComponent', None), ('frameworkEditor:canvas', None), ('frameworkEditor:canvasContainer', None), ('frameworkEditor:canvasElement', None), ('frameworkEditor:canvasNode', None), ('frameworkEditor:canvasPanel', None), ('frameworkEditor:componentPlaceholder', None), ('frameworkEditor:errorComponent', None), ('frameworkEditor:modelRemoteData', None), ('frameworkEditor:noUserAccessPlaceholder', None), ('frameworkEditor:palettePanel', None), ('frameworkEditor:propertyPanel', None), ('frameworkEditor:surfaceTemplate', None), ('frameworkEditor:unsupportedFormFactorComponent', None), ('frameworkEditor:warningComponent', None), ('googleConnector:emailTransportServiceSetting', None), ('googleConnector:emailTransportServiceSetupPage', None), ('hammerSetup:hammerResultStatus', None), ('hammerSetup:isvHammerSubscriberOptOut', None), ('hammerSetup:progressPie', None), ('healthcloud:careProgramConsentForms', None), ('healthcloud:careProgramProductSelection', None), ('healthcloud:careProgramProviderSelection', None), ('healthcloud:careProgramSelector', None), ('healthcloud:careProgramSetup', None), ('healthcloud:careProviderSearchFieldsEditor', None), ('healthcloud:careProviderSearchFieldsItemEditor', None), ('healthcloud:consentFormListView', None), ('healthcloud:logger', None), ('healthcloud:medicalDevicesSetup', None), ('healthcloud:multiSelectDropDownMenu', None), ('healthcloud:productsProvidersReview', None), ('healthcloud:providerSearch', None), ('healthcloud:providerSearchCommunity', None), ('healthcloud:providerSearchContainer', None), ('healthcloud:providerSearchField', None), ('healthcloud:providerSearchSetup', None), ('healthcloud:resultCardFieldsEditor', None), ('healthcloud:searchPanel', None), ('home:activateActionOverrideAppAssignmentDataProvider', None), ('home:activateActionOverrideAppAssignmentStep', None), ('home:activateActionOverrideModeSelectionStep', None), ('home:activateActionOverrideReviewAssignmentDataProvider', None), ('home:activateActionOverrideReviewAssignmentStep', None), ('home:activateActionOverrideSelectedAppList', None), ('home:activateAppProfileReviewStep', None), ('home:activateAppProfileReviewStepDataProvider', None), ('home:activateHomeHierarchy', None), ('home:activateHomePage', None), ('home:activateProfileOverrideProfileStep', None), ('home:activateProfileOverrideProfileStepDataProvider', None), ('home:activateSelectedAppProfileList', None), ('home:activateSelectedAppProfileListDataProvider', None), ('home:assistant', None), ('home:assistantActionsContainer', None), ('home:assistantCardExpandedPanel', None), ('home:assistantCardList', None), ('home:assistantCardStencil', None), ('home:assistantCollapsedCard', None), ('home:assistantSmallActionButton', None), ('home:baseCollapsedCard', None), ('home:defaultPageAssignment', None), ('home:desktopTemplate', None), ('home:desktopTemplateHeaderThreeColumns', None), ('home:eventCardDataManager', None), ('home:eventCardStencil', None), ('home:eventContainer', None), ('home:goalEditor', None), ('home:goalSetting', None), ('home:heroChart', None), ('home:heroChartHeader', None), ('home:heroChartLegend', None), ('home:heroChartOpptyContainer', None), ('home:heroChartOverlay', None), ('home:heroChartTable', None), ('home:homeCard', None), ('home:landing', None), ('home:myDayHeroChart', None), ('home:newsPanel', None), ('home:outputLookup', None), ('home:outputLookupWithPreviewWithoutProfilePic', None), ('home:pageAssignmentByProfileReviewStep', None), ('home:pageAssignmentDefaultAssignmentReviewStep', None), ('home:pageAssignmentList', None), ('home:pageAssignmentListByApp', None), ('home:pageAssignmentListByAppDataProvider', None), ('home:pageAssignmentListDataProvider', None), ('home:pageAssignmentPagePickerStep', None), ('home:pageAssignmentPagePickerStepDataProvider', None), ('home:pageAssignmentProfilePickerStep', None), ('home:pageAssignmentReviewStepDataProvider', None), ('home:pageAssignmentSetDefaultOrAssignStep', None), ('home:pageAssignmentsSetupPage', None), ('home:productivityMetrics', None), ('home:productivityMetricsCard', None), ('home:productivityMetricsEditor', None), ('home:productivityMetricsEditorRow', None), ('home:productivityMetricsHeader', None), ('home:recentRecordContainer', None), ('home:recentRecordListRow', None), ('home:recentsItemStencil', None), ('home:recentsRecordListView', None), ('home:removeSelectedAppProfileStep', None), ('home:setupActionMenu', None), ('home:tempDepend', None), ('home:topDealsCardDataProvider', None), ('home:topDealsContainer', None), ('home:topDealsListStencil', None), ('home:workQueueSummary', None), ('hvcc:hvccPlaceholder', None), ('industries_common:entityPickerDataWrapper', None), ('industries_common:relationshipCardCommunity', None), ('industries_common:relationshipCardContainer', None), ('industries_manufacturing:actualsCalculationModeRenderer', None), ('industries_manufacturing:agreementCancelAction', None), ('industries_manufacturing:agreementRenewAction', None), ('industries_manufacturing:agreementSettings', None), ('industries_manufacturing:agreementTerms', None), ('industries_manufacturing:agreementTermsContainer', None), ('industries_manufacturing:agreementTermsDataGrid', None), ('industries_manufacturing:mfgCardStencil', None), ('industries_manufacturing:mfgHomeFavIcon', None), ('industries_manufacturing:mfgTemplateHome', None), ('industries_manufacturing:statusRenderer', None), ('industries_manufacturing:totalAgreementAmount', None), ('industries_manufacturing:updateContact', None), ('industries_manufacturing:updateContactFooterActions', None), ('industries_mfg_common:bulkUpdateModalWrapper', None), ('industries_mfg_common:filterAndSearchPanelWrapper', None), ('industries_mfg_forecast:addProductModal', None), ('industries_mfg_forecast:forecastContainer', None), ('industries_mfg_forecast:forecastModals', None), ('industries_mfg_forecast:forecastSettings', None), ('industries_mfg_forecast:formulaBuilderModal', None), ('industries_mfg_forecast:generateForecast', None), ('industries_mfg_forecast:growthMetricsModal', None), ('industries_mfg_forecast:recalculateForecastModal', None), ('industries_mfg_targets:assignAcctMgrTarget', None), ('industries_mfg_targets:fiscalYearFieldRendererEdit', None), ('industries_mfg_targets:fiscalYearFieldRendererView', None), ('industries_mfg_targets:targetHierarchy', None), ('industries_mfg_targets:targetSettings', None), ('instrumentation:accessLocatorEngine', None), ('instrumentation:avroValidator', None), ('instrumentation:beacon', None), ('instrumentation:chart', None), ('instrumentation:dockingContent', None), ('instrumentation:dynamicChartWrapper', None), ('instrumentation:lightningUsage', None), ('instrumentation:lightningUsageChatterFeedback', None), ('instrumentation:lightningUsageSetup', None), ('instrumentation:locatorEngine', None), ('instrumentation:locatorViewer', None), ('instrumentation:mainTemplate', None), ('instrumentation:transactionViewer', None), ('instrumentation:transactionsDefault', None), ('instrumentation:transactionsLtnginteraction', None), ('instrumentation:transactionsLtngpageView', None), ('instrumentation:transactionsProvider', None), ('instrumentation:uiManager', None), ('instrumentation:usageAppHeader', None), ('instrumentation:usageBody', None), ('instrumentation:usageChartGroup', None), ('instrumentation:usageNavBar', None), ('instrumentation:usageOptimizer', None), ('instrumentation:usageTab', None), ('instrumentation:viewerDockingPanel', None), ('instrumentation:viewerSeparateWindow', None), ('instrumentation:viewerSharedWindow', None), ('instrumentation:viewerWaterfall', None), ('instrumentation:waterfall', None), ('iot:activityLog', None), ('iot:context', None), ('iot:dataProviderOrchestrationContext', None), ('iot:dataproviderActivityLog', None), ('iot:dataproviderDataset', None), ('iot:dataproviderOrchestration', None), ('iot:dataproviderOrchestrationUsage', None), ('iot:embedded', None), ('iot:enablePanel', None), ('iot:insightsMetricsEditor', None), ('iot:insightsSourcePicklistEditor', None), ('iot:iotBasicSetup', None), ('iot:iotui', None), ('iot:multiselectEditor', None), ('iot:orchestration', None), ('iot:usage', None), ('iot:webtemplate', None), ('isotope:headerButton', None), ('isotope:serviceAPI', None), ('isotope:tester', None), ('jsonxform:jsonXformApi', None), ('knowledgeone:articleActions', None), ('knowledgeone:dialog', None), ('knowledgeone:knowledgeentitydetail', None), ('knowledgeone:message', None), ('laf:appLayoutHost', None), ('laf:baseLayoutContainer', None), ('laf:baseRouter', None), ('laf:directCmpReferenceRouter', None), ('laf:layoutContainer', None), ('laf:mobileWebLayoutContainer', None), ('laf:navEventManager', None), ('laf:navigationServiceAPI', None), ('laf:pageHost', None), ('laf:pageTransactionProcessor', None), ('laf:platformPageResolver', None), ('laf:platformRouter', None), ('laf:sObjectRouter', None), ('laf:singlePaneWindowManager', None), ('laf:standardLayoutContainer', None), ('laf:standardLayoutContentSelector', None), ('laf:windowedLayoutContainer', None), ('lbpm:actionHistoryList', None), ('lbpm:actionHistoryListDataProvider', None), ('lbpm:actionHistoryListItem', None), ('lbpm:actionHistoryTab', None), ('lbpm:actionList', None), ('lbpm:actionListChannelsEditor', None), ('lbpm:actionListDesignInfo', None), ('lbpm:actionListFlow', None), ('lbpm:actionListModalHeader', None), ('lbpm:actionListTab', None), ('lbpm:actionPicker', None), ('lbpm:actionPickerDataProvider', None), ('lbpm:actionSettingsEditor', None), ('lbpm:availableEntitiesDataProvider', None), ('lbpm:flowBody', None), ('lbpm:flowRuntimeForRecordAction', None), ('lbpm:flowScript', None), ('lbpm:lsfActionSettings', None), ('lbpm:lsfChannelSettings', None), ('lbpm:lsfChannelSettingsStep', None), ('lbpm:lsfChannelSettingsTab', None), ('lbpm:lsfDefaultFlow', None), ('lbpm:lsfDefaultFlowDropZone', None), ('lbpm:lsfDefaultFlowsSelector', None), ('lbpm:lsfEditDeployment', None), ('lbpm:lsfEntitySelectionStep', None), ('lbpm:lsfFilterStep', None), ('lbpm:lsfIntroStep', None), ('lbpm:lsfNameStep', None), ('lbpm:lsfNewDeployment', None), ('lbpm:lsfRecommendationsStep', None), ('lbpm:lsfSaveStep', None), ('lbpm:lsfSuccessStep', None), ('lbpm:nbaPanel', None), ('lbpm:pausedFlow', None), ('lbpm:pausedFlowsSection', None), ('lbpm:recordActionDeployment', None), ('lbpm:recordActionDeploymentList', None), ('lbpm:recordActionManager', None), ('lcwizard:dataLoaderSetupPage', None), ('lcwizard:lcGuidedSetupAuthProviderStep', None), ('lcwizard:lcGuidedSetupAuthStep', None), ('lcwizard:lcGuidedSetupDialog', None), ('lcwizard:lcGuidedSetupHome', None), ('lcwizard:lcGuidedSetupNewXdsStep', None), ('lcwizard:lcGuidedSetupObjectRelDialog', None), ('lcwizard:lcGuidedSetupParametersStep', None), ('lcwizard:lcGuidedSetupPrereqStep', None), ('lcwizard:lcGuidedSetupRelChooseObjectStep', None), ('lcwizard:lcGuidedSetupRelFLSStep', None), ('lcwizard:lcGuidedSetupRelFieldDetailStep', None), ('lcwizard:lcGuidedSetupRelPageLayoutStep', None), ('lcwizard:lcGuidedSetupRelRelatedListStep', None), ('lcwizard:lcGuidedSetupSearchLayoutStep', None), ('lcwizard:lcGuidedSetupTabNextStep', None), ('lcwizard:lcGuidedSetupTabStep', None), ('lcwizard:lcGuidedSetupValidateAndSyncStep', None), ('lightning:accordion', None), ('lightning:accordionSection', None), ('lightning:breadcrumbs', None), ('lightning:button', None), ('lightning:buttonGroup', None), ('lightning:buttonIcon', None), ('lightning:buttonMenu', None), ('lightning:buttonStateful', None), ('lightning:card', None), ('lightning:carousel', None), ('lightning:container', None), ('lightning:conversationToolkitAPI', None), ('lightning:deprecatedButtonIcon', None), ('lightning:deprecatedFormattedTime', None), ('lightning:deprecatedIcon', None), ('lightning:deprecatedPrimitiveIcon', None), ('lightning:fileCard', None), ('lightning:flexipageRegionInfo', None), ('lightning:flow', None), ('lightning:formElement', None), ('lightning:inputRichText', None), ('lightning:inputRichTextButtonBase', None), ('lightning:inputRichTextButtonSimple', None), ('lightning:insertImageButton', None), ('lightning:layout', None), ('lightning:layoutItem', None), ('lightning:listView', None), ('lightning:menuItem', None), ('lightning:messageChannel', None), ('lightning:navigation', None), ('lightning:navigationItemAPI', None), ('lightning:nextBestActions', None), ('lightning:notificationsLibrary', None), ('lightning:omniToolkitAPI', None), ('lightning:overlayInteropWrapper', None), ('lightning:overlayLibrary', None), ('lightning:path', None), ('lightning:picklistPath', None), ('lightning:pill', None), ('lightning:primitiveFileDroppableZone', None), ('lightning:primitiveIconTest', None), ('lightning:primitiveTextOrComponent', None), ('lightning:progressIndicator', None), ('lightning:quickActionAPI', None), ('lightning:quipCard', None), ('lightning:recordEditForm', None), ('lightning:recordViewForm', None), ('lightning:select', None), ('lightning:tab', None), ('lightning:tabset', None), ('lightning:test', None), ('lightning:tile', None), ('lightning:tooltip', None), ('lightning:unsavedChanges', None), ('lightning:utilityBarAPI', None), ('lightning:verticalNavigation', None), ('lightning:verticalNavigationOverflow', None), ('lightning:verticalNavigationSection', None), ('lightning:workspaceAPI', None), ('lightningInbox:associateButton', None), ('lightningInbox:consentMessageWrapper', None), ('lightningInbox:contextualTrackingContainer', None), ('lightningInbox:contextualTrackingDesignInfo', None), ('lightningInbox:contextualTrackingDesignSubstitute', None), ('lightningInbox:eacWidgetContainer', None), ('lightningInbox:emailTemplatesFooter', None), ('lightningInbox:emailTemplatesInsert', None), ('lightningInbox:emailTemplatesSave', None), ('lightningInbox:engagementTracking', None), ('lightningInbox:exchangeConnectivity', None), ('lightningInbox:fuelGaugeHeader', None), ('lightningInbox:genericPopoverWrapper', None), ('lightningInbox:globalsManager', None), ('lightningInbox:gmailAfterSendManager', None), ('lightningInbox:insertFreeTimeWidgetContainer', None), ('lightningInbox:insertFreeTimeWidgetDesignInfo', None), ('lightningInbox:logItemButtonContainer', None), ('lightningInbox:logItemButtonDesignInfo', None), ('lightningInbox:logItemCardHeader', None), ('lightningInbox:logItemFlowContainer', None), ('lightningInbox:logItemFlowContainerFooter', None), ('lightningInbox:logItemInfoBanner', None), ('lightningInbox:logItemInviteeListRowStencil', None), ('lightningInbox:logItemNoneRow', None), ('lightningInbox:logItemPeopleListCard', None), ('lightningInbox:logItemRelatedRecordListCard', None), ('lightningInbox:logItemRelatedRecordListCardStencil', None), ('lightningInbox:logItemRelatedRecordViewMoreListCardStencil', None), ('lightningInbox:logItemSearchBar', None), ('lightningInbox:manageLinksContainer', None), ('lightningInbox:pinnedComponentToggle', None), ('lightningInbox:placeholder', None), ('lightningInbox:readReceiptListContainer', None), ('lightningInbox:readReceiptListContainerDesignInfo', None), ('lightningInbox:readReceiptListContainerSubstitute', None), ('lightningInbox:readReceiptWidgetDesignInfo', None), ('lightningInbox:recordSelectButton', None), ('lightningInbox:sendLaterListContainer', None), ('lightningInbox:sendLaterListDesignInfo', None), ('lightningInbox:sendLaterListDesignSubstitute', None), ('lightningInbox:sendLaterTimePickerWrapper', None), ('lightningInbox:sendLaterWidgetDesignInfo', None), ('lightningInbox:snippetsActionContainer', None), ('lightningInbox:snippetsActionContainerDesignSubstitute', None), ('lightningInbox:snippetsDesignInfo', None), ('lightningInbox:virtualConsentIndicator', None), ('lightningInbox:welcomeMatContainer', None), ('lightningInbox:whatEntityMatchingManager', None), ('lightningcommunity:backButton', None), ('lightningcomponentdemo:exampleAccordionBasic', None), ('lightningcomponentdemo:exampleAccordionConditional', None), ('lightningcomponentdemo:exampleAccordionMultiple', None), ('lightningcomponentdemo:exampleAccordionSection', None), ('lightningcomponentdemo:exampleAvatarBasic', None), ('lightningcomponentdemo:exampleAvatarIcons', None), ('lightningcomponentdemo:exampleAvatarInitials', None), ('lightningcomponentdemo:exampleAvatarSizes', None), ('lightningcomponentdemo:exampleAvatarVariants', None), ('lightningcomponentdemo:exampleBadge', None), ('lightningcomponentdemo:exampleBaseBreadcrumbs', None), ('lightningcomponentdemo:exampleBreadcrumbsWithIteration', None), ('lightningcomponentdemo:exampleBreadcrumbsWithOnClick', None), ('lightningcomponentdemo:exampleButtonGroup', None), ('lightningcomponentdemo:exampleButtonGroupDisabled', None), ('lightningcomponentdemo:exampleButtonGroupInverse', None), ('lightningcomponentdemo:exampleButtonGroupWithButtonMenu', None), ('lightningcomponentdemo:exampleButtonGroupWithButtonMenuDisabled', None), ('lightningcomponentdemo:exampleButtonIconStateful', None), ('lightningcomponentdemo:exampleButtonIconStatefulBorderFilled', None), ('lightningcomponentdemo:exampleButtonIconStatefulInverse', None), ('lightningcomponentdemo:exampleButtonIconStatefulSelected', None), ('lightningcomponentdemo:exampleButtonMenu', None), ('lightningcomponentdemo:exampleButtonMenuDoubleIcon', None), ('lightningcomponentdemo:exampleButtonMenuItemStyling', None), ('lightningcomponentdemo:exampleButtonMenuSingleIcon', None), ('lightningcomponentdemo:exampleButtonMenuVariants', None), ('lightningcomponentdemo:exampleButtonMenuWithIcon', None), ('lightningcomponentdemo:exampleButtonStateful', None), ('lightningcomponentdemo:exampleButtonStatefulBrand', None), ('lightningcomponentdemo:exampleButtonStatefulInverse', None), ('lightningcomponentdemo:exampleButtonStatefulText', None), ('lightningcomponentdemo:exampleButtonsAccessibility', None), ('lightningcomponentdemo:exampleButtonsDisabled', None), ('lightningcomponentdemo:exampleButtonsIcon', None), ('lightningcomponentdemo:exampleButtonsIconInverse', None), ('lightningcomponentdemo:exampleButtonsIconSizes', None), ('lightningcomponentdemo:exampleButtonsInverse', None), ('lightningcomponentdemo:exampleCardBase', None), ('lightningcomponentdemo:exampleCardCustom', None), ('lightningcomponentdemo:exampleCardNarrow', None), ('lightningcomponentdemo:exampleCarousel', None), ('lightningcomponentdemo:exampleCarouselAutoScrollOff', None), ('lightningcomponentdemo:exampleCheckboxGroup', None), ('lightningcomponentdemo:exampleCheckboxGroupDisabled', None), ('lightningcomponentdemo:exampleCheckboxGroupRequired', None), ('lightningcomponentdemo:exampleClickToDial', None), ('lightningcomponentdemo:exampleClickToDialPlain', None), ('lightningcomponentdemo:exampleColorPicker', None), ('lightningcomponentdemo:exampleCombobox', None), ('lightningcomponentdemo:exampleComboboxDisabled', None), ('lightningcomponentdemo:exampleComboboxLong', None), ('lightningcomponentdemo:exampleComboboxMultiSelectedOptions', None), ('lightningcomponentdemo:exampleComboboxRequired', None), ('lightningcomponentdemo:exampleCurrencyFormatting', None), ('lightningcomponentdemo:exampleDatatableBase', None), ('lightningcomponentdemo:exampleDatatableDynamicRowActions', None), ('lightningcomponentdemo:exampleDatatableInAction', None), ('lightningcomponentdemo:exampleDatatableInfiniteLoading', None), ('lightningcomponentdemo:exampleDatatableInlineEdit', None), ('lightningcomponentdemo:exampleDatatableMaxRowSelection', None), ('lightningcomponentdemo:exampleDatatableRowSelection', None), ('lightningcomponentdemo:exampleDatatableSorting', None), ('lightningcomponentdemo:exampleDatatableStaticRowActions', None), ('lightningcomponentdemo:exampleDatatableWithoutCheckboxes', None), ('lightningcomponentdemo:exampleDateFormatting', None), ('lightningcomponentdemo:exampleDateTimeFormatting', None), ('lightningcomponentdemo:exampleDecimalFormatting', None), ('lightningcomponentdemo:exampleDualListbox', None), ('lightningcomponentdemo:exampleDualListboxDefaultValues', None), ('lightningcomponentdemo:exampleDualListboxMinMaxValues', None), ('lightningcomponentdemo:exampleDualListboxRequiredValues', None), ('lightningcomponentdemo:exampleDynamicIconEQ', None), ('lightningcomponentdemo:exampleDynamicIconEllie', None), ('lightningcomponentdemo:exampleDynamicIconScore', None), ('lightningcomponentdemo:exampleDynamicIconStrength', None), ('lightningcomponentdemo:exampleDynamicIconTrend', None), ('lightningcomponentdemo:exampleDynamicIconWaffle', None), ('lightningcomponentdemo:exampleFileSelectorDisabled', None), ('lightningcomponentdemo:exampleFileUpload', None), ('lightningcomponentdemo:exampleFormattedAddress', None), ('lightningcomponentdemo:exampleFormattedAddressLatLong', None), ('lightningcomponentdemo:exampleFormattedEmail', None), ('lightningcomponentdemo:exampleFormattedEmailOnclick', None), ('lightningcomponentdemo:exampleFormattedLocation', None), ('lightningcomponentdemo:exampleFormattedName', None), ('lightningcomponentdemo:exampleFormattedRichText', None), ('lightningcomponentdemo:exampleFormattedText', None), ('lightningcomponentdemo:exampleFormattedUrl', None), ('lightningcomponentdemo:exampleGroupedCombobox', None), ('lightningcomponentdemo:exampleHelptextBasic', None), ('lightningcomponentdemo:exampleHelptextIcon', None), ('lightningcomponentdemo:exampleIcon', None), ('lightningcomponentdemo:exampleIconVariants', None), ('lightningcomponentdemo:exampleInputAddress', None), ('lightningcomponentdemo:exampleInputAddressWithList', None), ('lightningcomponentdemo:exampleInputCheckbox', None), ('lightningcomponentdemo:exampleInputCheckboxButton', None), ('lightningcomponentdemo:exampleInputColor', None), ('lightningcomponentdemo:exampleInputDate', None), ('lightningcomponentdemo:exampleInputDateTime', None), ('lightningcomponentdemo:exampleInputEmail', None), ('lightningcomponentdemo:exampleInputFile', None), ('lightningcomponentdemo:exampleInputLocation', None), ('lightningcomponentdemo:exampleInputLocationDefaultValues', None), ('lightningcomponentdemo:exampleInputLocationDisabled', None), ('lightningcomponentdemo:exampleInputLocationFieldLevelHelp', None), ('lightningcomponentdemo:exampleInputLocationReadonly', None), ('lightningcomponentdemo:exampleInputLocationRequired', None), ('lightningcomponentdemo:exampleInputMaxlength', None), ('lightningcomponentdemo:exampleInputName', None), ('lightningcomponentdemo:exampleInputNameDisabled', None), ('lightningcomponentdemo:exampleInputNameFieldLevelHelp', None), ('lightningcomponentdemo:exampleInputNameFieldsToDisplay', None), ('lightningcomponentdemo:exampleInputNameReadOnly', None), ('lightningcomponentdemo:exampleInputNameRequired', None), ('lightningcomponentdemo:exampleInputNumber', None), ('lightningcomponentdemo:exampleInputPassword', None), ('lightningcomponentdemo:exampleInputRadio', None), ('lightningcomponentdemo:exampleInputRichTextButtonImage', None), ('lightningcomponentdemo:exampleInputRichTextButtonLink', None), ('lightningcomponentdemo:exampleInputSearch', None), ('lightningcomponentdemo:exampleInputSearchHiddenLabel', None), ('lightningcomponentdemo:exampleInputSearchWithSpinner', None), ('lightningcomponentdemo:exampleInputTel', None), ('lightningcomponentdemo:exampleInputText', None), ('lightningcomponentdemo:exampleInputTime', None), ('lightningcomponentdemo:exampleInputToggle', None), ('lightningcomponentdemo:exampleInputUrl', None), ('lightningcomponentdemo:exampleInputValidation', None), ('lightningcomponentdemo:exampleLayoutHorizontalSpace', None), ('lightningcomponentdemo:exampleLayoutHorizontalSpread', None), ('lightningcomponentdemo:exampleLayoutItems', None), ('lightningcomponentdemo:exampleLayoutItemsAlignmentBump', None), ('lightningcomponentdemo:exampleLayoutItemsBase', None), ('lightningcomponentdemo:exampleLayoutItemsDefaultSize', None), ('lightningcomponentdemo:exampleLayoutItemsFlexNoGrow', None), ('lightningcomponentdemo:exampleLayoutItemsFlexible', None), ('lightningcomponentdemo:exampleLayoutItemsMediumSizeOverride', None), ('lightningcomponentdemo:exampleLayoutItemsPadding', None), ('lightningcomponentdemo:exampleLayoutItemsSizeOverrides', None), ('lightningcomponentdemo:exampleLayoutPage', None), ('lightningcomponentdemo:exampleLayoutPullToBoundary', None), ('lightningcomponentdemo:exampleLayoutSimple', None), ('lightningcomponentdemo:exampleLayoutVerticalCenter', None), ('lightningcomponentdemo:exampleLayoutVerticalStretch', None), ('lightningcomponentdemo:exampleMapAttributes', None), ('lightningcomponentdemo:exampleMapMultipleMarkers', None), ('lightningcomponentdemo:exampleMapSingleMarker', None), ('lightningcomponentdemo:exampleMultiPicklist', None), ('lightningcomponentdemo:exampleOpenFiles', None), ('lightningcomponentdemo:exampleOutputField', None), ('lightningcomponentdemo:exampleOutputFieldDisplay', None), ('lightningcomponentdemo:exampleOutputFieldVariants', None), ('lightningcomponentdemo:exampleOutputFieldVariantsDisplay', None), ('lightningcomponentdemo:examplePercentFormatting', None), ('lightningcomponentdemo:examplePicklist', None), ('lightningcomponentdemo:examplePillAvatar', None), ('lightningcomponentdemo:examplePillBase', None), ('lightningcomponentdemo:examplePillContainer', None), ('lightningcomponentdemo:examplePillIcon', None), ('lightningcomponentdemo:examplePillWithError', None), ('lightningcomponentdemo:exampleProgressBar', None), ('lightningcomponentdemo:exampleProgressBarInAction', None), ('lightningcomponentdemo:exampleProgressIndicator', None), ('lightningcomponentdemo:exampleProgressIndicatorPath', None), ('lightningcomponentdemo:exampleProgressIndicatorWithIfCondition', None), ('lightningcomponentdemo:exampleProgressIndicatorWithIteration', None), ('lightningcomponentdemo:exampleProgressRing', None), ('lightningcomponentdemo:exampleProgressRingDirection', None), ('lightningcomponentdemo:exampleProgressRingInteractive', None), ('lightningcomponentdemo:exampleProgressRingSize', None), ('lightningcomponentdemo:exampleProgressRingVariant', None), ('lightningcomponentdemo:exampleRadioButtonGroup', None), ('lightningcomponentdemo:exampleRadioButtonGroupDisabled', None), ('lightningcomponentdemo:exampleRadioButtonGroupRequired', None), ('lightningcomponentdemo:exampleRadioGroup', None), ('lightningcomponentdemo:exampleRadioGroupDisabled', None), ('lightningcomponentdemo:exampleRadioGroupRequired', None), ('lightningcomponentdemo:exampleRecordCreate', None), ('lightningcomponentdemo:exampleRecordEdit', None), ('lightningcomponentdemo:exampleRegularButtons', None), ('lightningcomponentdemo:exampleRegularButtonsIcon', None), ('lightningcomponentdemo:exampleRelativeDateTime', None), ('lightningcomponentdemo:exampleRichTextBottomToolbar', None), ('lightningcomponentdemo:exampleRichTextButton', None), ('lightningcomponentdemo:exampleRichTextEditor', None), ('lightningcomponentdemo:exampleRichTextEditorWithButton', None), ('lightningcomponentdemo:exampleSelect', None), ('lightningcomponentdemo:exampleSelectChange', None), ('lightningcomponentdemo:exampleSelectDynamic', None), ('lightningcomponentdemo:exampleSelectIteration', None), ('lightningcomponentdemo:exampleSlider', None), ('lightningcomponentdemo:exampleSliderBasic', None), ('lightningcomponentdemo:exampleSliderSizes', None), ('lightningcomponentdemo:exampleSliderType', None), ('lightningcomponentdemo:exampleSliderVariant', None), ('lightningcomponentdemo:exampleSpinnerIf', None), ('lightningcomponentdemo:exampleSpinnerInverse', None), ('lightningcomponentdemo:exampleSpinnerSizes', None), ('lightningcomponentdemo:exampleTabsActive', None), ('lightningcomponentdemo:exampleTabsAuraIf', None), ('lightningcomponentdemo:exampleTabsDefault', None), ('lightningcomponentdemo:exampleTabsScoped', None), ('lightningcomponentdemo:exampleTabsVertical', None), ('lightningcomponentdemo:exampleTabset', None), ('lightningcomponentdemo:exampleTabsetOverflow', None), ('lightningcomponentdemo:exampleTabsetSelect', None), ('lightningcomponentdemo:exampleTextarea', None), ('lightningcomponentdemo:exampleTile', None), ('lightningcomponentdemo:exampleTileWithAvatar', None), ('lightningcomponentdemo:exampleTileWithIcon', None), ('lightningcomponentdemo:exampleTimeFormatting', None), ('lightningcomponentdemo:exampleTooltipAuto', None), ('lightningcomponentdemo:exampleTooltipButton', None), ('lightningcomponentdemo:exampleTooltipSimple', None), ('lightningcomponentdemo:exampleTree', None), ('lightningcomponentdemo:exampleTreeAddition', None), ('lightningcomponentdemo:exampleTreeGridAsyncExpand', None), ('lightningcomponentdemo:exampleTreeGridBase', None), ('lightningcomponentdemo:exampleTreeGridWithExpandedStateQuery', None), ('lightningcomponentdemo:exampleTreeNavigation', None), ('lightningcomponentdemo:exampleTreeNested', None), ('lightningcomponentdemo:exampleTreeSelect', None), ('lightningcomponentdemo:exampleTreeWithMetatext', None), ('lightningcomponentdemo:exampleVerticalNavAdvanced', None), ('lightningcomponentdemo:exampleVerticalNavBadge', None), ('lightningcomponentdemo:exampleVerticalNavBasic', None), ('lightningcomponentdemo:exampleVerticalNavCompact', None), ('lightningcomponentdemo:exampleVerticalNavHref', None), ('lightningcomponentdemo:exampleVerticalNavIcon', None), ('lightningcomponentdemo:exampleVerticalNavIteration', None), ('lightningcomponentdemo:exampleVerticalNavOverflow', None), ('lightningcomponentdemo:exampleVerticalNavSelected', None), ('lightningcomponentdemo:exampleVerticalNavShaded', None), ('lightningcomponentdemo:exampleVerticalNavValidation', None), ('lightningcomponentdemo:fileItem', None), ('lightningcomponentdemo:fileSelector', None), ('lightningcomponentdemo:filesList', None), ('lightningcomponentdemo:iconGenerator', None), ('lightningcomponentdemo:iconItem', None), ('lightningcomponentdemo:iconLibrary', None), ('lightningcomponentdemo:iconList', None), ('lightningcomponentdemo:layoutGenerator', None), ('lightningdocs:avatar', None), ('lightningdocs:badge', None), ('lightningdocs:breadcrumb', None), ('lightningdocs:buttonIconStateful', None), ('lightningdocs:checkboxGroup', None), ('lightningdocs:clickToDial', None), ('lightningdocs:combobox', None), ('lightningdocs:datatable', None), ('lightningdocs:dualListbox', None), ('lightningdocs:dynamicIcon', None), ('lightningdocs:empApi', None), ('lightningdocs:fileUpload', None), ('lightningdocs:formattedAddress', None), ('lightningdocs:formattedDateTime', None), ('lightningdocs:formattedEmail', None), ('lightningdocs:formattedLocation', None), ('lightningdocs:formattedName', None), ('lightningdocs:formattedNumber', None), ('lightningdocs:formattedPhone', None), ('lightningdocs:formattedRichText', None), ('lightningdocs:formattedText', None), ('lightningdocs:formattedTime', None), ('lightningdocs:formattedUrl', None), ('lightningdocs:helptext', None), ('lightningdocs:icon', None), ('lightningdocs:input', None), ('lightningdocs:inputAddress', None), ('lightningdocs:inputField', None), ('lightningdocs:inputLocation', None), ('lightningdocs:inputName', None), ('lightningdocs:map', None), ('lightningdocs:outputField', None), ('lightningdocs:pageReferenceUtils', None), ('lightningdocs:pillContainer', None), ('lightningdocs:progressBar', None), ('lightningdocs:progressRing', None), ('lightningdocs:radioGroup', None), ('lightningdocs:recordForm', None), ('lightningdocs:relativeDateTime', None), ('lightningdocs:slider', None), ('lightningdocs:spinner', None), ('lightningdocs:textarea', None), ('lightningdocs:tree', None), ('lightningdocs:treeGrid', None), ('lightningdocs:verticalNavigationItem', None), ('lightningdocs:verticalNavigationItemBadge', None), ('lightningdocs:verticalNavigationItemIcon', None), ('lightningsnapin:minimizedAPI', None), ('lightningsnapin:prechatAPI', None), ('lightningsnapin:settingsAPI', None), ('liveAgent:abstractPushedRequest', None), ('liveAgent:chatWidgetWork', None), ('liveAgent:liveChatButton', None), ('liveAgent:presenceStatus', None), ('liveAgent:presenceStatusMenuLink', None), ('liveAgent:presenceStatusTester', None), ('liveAgent:presenceStatusTesterData', None), ('liveAgent:presenceWidget', None), ('liveAgent:presenceWidgetTester', None), ('liveAgent:presenceWidgetTesterData', None), ('liveAgent:pushedEntityRequest', None), ('liveAgent:pushedEntityRequestTester', None), ('liveAgent:pushedEntityRequestTesterData', None), ('loyalty:loyaltyLVMDataProvider', None), ('loyalty:loyaltyProgramMemberList', None), ('loyalty:loyaltyProgramPartnerList', None), ('loyalty:loyaltyProgramProductList', None), ('loyalty:programDetailsBody', None), ('lst:listViewAutoCompleteWrapper', None), ('lst:listViewManagerDataTableWrapper', None), ('lst:listViewManagerMetadataConfiguration', None), ('lst:listViewRowLevelAuraAction', None), ('lst:relatedListContainerMobile', None), ('lst:relatedListQuickLinksContainerMobile', None), ('lst:relatedListQuickLinksMobile', None), ('lst:relatedListSingleContainerMobile', None), ('lsttest:listViewRowLevelAuraActionTest', None), ('ltng:developerError', None), ('ltng:outAppTemplate', None), ('ltng:require', None), ('ltngtools:dataProvider', None), ('macros:browser', None), ('macros:browserPanel', None), ('macros:browserPanelList', None), ('macros:browserPanelListDataProvider', None), ('macros:browserPanelListFolderItem', None), ('macros:browserPanelListItem', None), ('macros:browserPanelListRecordItem', None), ('macros:browserPanelNavigationBreadCrumbItem', None), ('macros:browserPanelNavigationBreadCrumbs', None), ('macros:browserPanelOverlay', None), ('macros:canvas', None), ('macros:dialog', None), ('macros:editor', None), ('macros:emailTemplatePillList', None), ('macros:engine', None), ('macros:executionPanel', None), ('macros:expressionContainer', None), ('macros:expressionGroup', None), ('macros:expressionGroupContainer', None), ('macros:header', None), ('macros:helpDropdown', None), ('macros:instructionsPanel', None), ('macros:keyboardHelpDialog', None), ('macros:lazyTargetManager', None), ('macros:lightningAdapter', None), ('macros:lightningMacroSetup', None), ('macros:macroDetail', None), ('macros:macroInstructions', None), ('macros:macroList', None), ('macros:macroListItem', None), ('macros:macroUtilityItem', None), ('macros:openBuilderAction', None), ('macros:outputEntityIcon', None), ('macros:progressDialog', None), ('macros:readOnlyValueDisplay', None), ('macros:relativeDateTime', None), ('macros:rightPanel', None), ('macros:rightPanelInstruction', None), ('macros:rightPanelInstructionList', None), ('macros:rightPanelSubInstruction', None), ('macros:searchInput', None), ('macros:serverSideBulkMacroResultsHandler', None), ('macros:serverSideEngineAdapter', None), ('macros:serverSideSingleMacroResultsHandler', None), ('macros:surfaceTemplate', None), ('macros:targetAdapter', None), ('macros:topToolbar', None), ('macros:widget', None), ('myday:landing', None), ('myday:myDay', None), ('native:layoutContainer', None), ('native:navigateToComponentShim', None), ('native:tempDepend', None), ('native:template', None), ('notes:contentNoteObjectHomeListStencil', None), ('notes:contentNoteRelatedListStencil', None), ('notes:editPanel', None), ('notes:editPanelManager', None), ('notes:editPanelStencil', None), ('notes:noteAutoCompleteOption', None), ('notes:noteDeleteRunnable', None), ('notes:noteEditor', None), ('notes:noteEditorDesktop', None), ('notes:noteEditorDesktopQuill', None), ('notes:noteEditorMobile', None), ('notes:noteEditorMobileQuill', None), ('notes:noteEditorPicker', None), ('notes:noteList', None), ('notes:noteListItem', None), ('notes:notePreviewPanel', None), ('notes:noteRecord', None), ('notes:noteVersionList', None), ('notes:noteVersionListDataProvider', None), ('notes:notesAbstractPanel', None), ('notes:notesDetail', None), ('notes:notesLandingPage', None), ('notes:notesListDesktop', None), ('notes:notesListViewHeader', None), ('notes:notesObjectHome', None), ('notes:notesTaskList', None), ('notes:notesTaskListDataProvider', None), ('notes:notesTaskListPanel', None), ('notes:notesTaskRowStencil', None), ('notes:outputFileType', None), ('notes:placeholder', None), ('notes:publisherCreatePanel', None), ('notes:quillAccessButton', None), ('notes:quillAddTaskButton', None), ('notes:quillInsertImageButton', None), ('notes:relateMruList', None), ('notes:relatePanel', None), ('notes:relateRecordsPanel', None), ('notes:relateSelectionItem', None), ('notes:relatedRecordPill', None), ('notes:relatedRecordsGrid', None), ('notes:relatedRecordsGridRemoveColumn', None), ('notes:relatedRecordsGridTitleColumn', None), ('notes:relatedRecordsList', None), ('notes:relatedRecordsListDesktop', None), ('notes:relatedRecordsListMobile', None), ('notes:sharingPrivacyIconLabel', None), ('notes:title', None), ('notes:utilityBarNoteList', None), ('objectManager:actionsMenu', None), ('objectManager:actionsMenuItem', None), ('objectManager:addImplementors', None), ('objectManager:apexTriggerDetail', None), ('objectManager:apexTriggerDetailList', None), ('objectManager:buttonsLinksActionsDetailList', None), ('objectManager:byOn', None), ('objectManager:cellToDisplayFormFactorDetails', None), ('objectManager:cellToDisplayPageLinkBasedOnFormFactor', None), ('objectManager:clientArrayDataProvider', None), ('objectManager:collapsible', None), ('objectManager:commChannelLayoutDetailList', None), ('objectManager:compactLayoutDetail', None), ('objectManager:compactLayoutDetailList', None), ('objectManager:customFieldDeleteWarning', None), ('objectManager:customObjectDeleteWarning', None), ('objectManager:dataTable', None), ('objectManager:detailCard', None), ('objectManager:detailLink', None), ('objectManager:detailRow', None), ('objectManager:detailRowDualField', None), ('objectManager:detailRowSingleField', None), ('objectManager:detailTable', None), ('objectManager:externalLink', None), ('objectManager:fieldMappingScreenContainer', None), ('objectManager:fieldSetDetailList', None), ('objectManager:fieldsAndRelationshipsDetailList', None), ('objectManager:fixableHeader', None), ('objectManager:flexiPagesDetailList', None), ('objectManager:globalSearchBox', None), ('objectManager:hierarchyColumnDetailList', None), ('objectManager:implementorActions', None), ('objectManager:implementorsDetailList', None), ('objectManager:leftNav', None), ('objectManager:limitDetailList', None), ('objectManager:lookupEntityByApiName', None), ('objectManager:lookupLayoutIdByRecordId', None), ('objectManager:lookupRedirect', None), ('objectManager:mappingContainer', None), ('objectManager:mappingDropdownContainer', None), ('objectManager:mySearchLayoutDetailList', None), ('objectManager:objectDataProvider', None), ('objectManager:objectDetail', None), ('objectManager:objectDetailComponent', None), ('objectManager:objectDetailPage', None), ('objectManager:objectEditLink', None), ('objectManager:objectLink', None), ('objectManager:objectList', None), ('objectManager:objectManagerAlohaPage', None), ('objectManager:objectManagerRouter', None), ('objectManager:outputCheckbox', None), ('objectManager:pageAssignment', None), ('objectManager:pageLayoutDetailList', None), ('objectManager:recordTypeDetail', None), ('objectManager:recordTypeDetailList', None), ('objectManager:relatedListCardButton', None), ('objectManager:relatedListCardDataProvider', None), ('objectManager:relatedLookupFilterDetail', None), ('objectManager:relatedLookupFilterDetailList', None), ('objectManager:schemaBuilderLink', None), ('objectManager:searchLayoutDetailList', None), ('objectManager:setupAlohaPage', None), ('objectManager:setupComponent', None), ('objectManager:spannableDataTableColumn', None), ('objectManager:style', None), ('objectManager:validationRuleDetail', None), ('objectManager:validationRuleDetailList', None), ('objectManager:virtualActionMenu', None), ('objectManager:virtualRelatedListCard', None), ('offline:banner', None), ('offline:conflictResolution', None), ('offline:draftRunnable', None), ('offline:offlineDraftActionHelper', None), ('offline:offlineDraftDataProvider', None), ('offline:offlineDraftList', None), ('offline:offlineDraftListItem', None), ('offline:offlineDrafts', None), ('offline:recordGvpTestTemplate', None), ('offline:recordsComparison', None), ('offline:sash', None), ('offline:smartStoreAdapter', None), ('offline:smartStoreAdapterEventListener', None), ('offline:syncManager', None), ('offline:tempDepend', None), ('omni:abstractDataProvider', None), ('omni:actionsMenu', None), ('omni:agentCurrentWorkDataProvider', None), ('omni:agentCurrentWorkList', None), ('omni:agentCurrentWorkListHeader', None), ('omni:agentCurrentWorkRow', None), ('omni:agentDataProvider', None), ('omni:agentDetailActivity', None), ('omni:agentDetailConfigurations', None), ('omni:agentDetailTabs', None), ('omni:agentDetailTabsTester', None), ('omni:agentDetailTabsTesterData', None), ('omni:agentDetailTimeLine', None), ('omni:agentDetailTimelineTester', None), ('omni:agentList', None), ('omni:agentListHeader', None), ('omni:agentRow', None), ('omni:agentRowTester', None), ('omni:agentTimeLineStatus', None), ('omni:agentTimeLineWork', None), ('omni:agentsByQueueDataProvider', None), ('omni:agentsByQueueList', None), ('omni:agentsByQueueListHeader', None), ('omni:agentsByQueueRow', None), ('omni:agentsTab', None), ('omni:backlogList', None), ('omni:backlogListDataProvider', None), ('omni:backlogListHeader', None), ('omni:backlogListRow', None), ('omni:backlogListTester', None), ('omni:backlogListTesterData', None), ('omni:backlogView', None), ('omni:backlogViewHeader', None), ('omni:chatMonitor', None), ('omni:chatPreview', None), ('omni:chatPreviewTester', None), ('omni:chatPreviewTesterData', None), ('omni:detailView', None), ('omni:loadingDots', None), ('omni:omniIcon', None), ('omni:omniIcons', None), ('omni:pager', None), ('omni:panelManager', None), ('omni:popupAgentRow', None), ('omni:popupChangeQueues', None), ('omni:popupChangeSkills', None), ('omni:popupFooter', None), ('omni:popupHeader', None), ('omni:popupQueueRow', None), ('omni:popupSkillRow', None), ('omni:queueDetails', None), ('omni:queueDetailsTester', None), ('omni:queueDetailsTesterData', None), ('omni:queueItemRow', None), ('omni:queueItemsDataProvider', None), ('omni:queueItemsHeader', None), ('omni:queueItemsList', None), ('omni:queueRow', None), ('omni:queuesDataProvider', None), ('omni:queuesList', None), ('omni:queuesListHeader', None), ('omni:queuesView', None), ('omni:scrtLibTester', None), ('omni:skillDetails', None), ('omni:supervisorComponentsTest', None), ('omni:supervisorComponentsTestTemplate', None), ('omni:supervisorConsole', None), ('omni:supervisorHeaderColumn', None), ('omni:supervisorHeaderFilterMenuList', None), ('omni:supervisorList', None), ('omni:supervisorPanel', None), ('omni:supervisorTabTester', None), ('omni:targetEntityCompactLayoutNoImage', None), ('omni:targetEntityCompactLayoutNoImageTester', None), ('omni:timestamp', None), ('omni:toast', None), ('omni:workAction', None), ('omni:workQueueDetails', None), ('omni:workQueueDetailsTester', None), ('omni:workQueueDetailsTesterData', None), ('omni:workQueueItemRow', None), ('omni:workQueueItemsDataProvider', None), ('omni:workQueueItemsHeader', None), ('omni:workQueueItemsList', None), ('omni:workQueueView', None), ('omni:worksByQueueDataProvider', None), ('omni:worksByQueueList', None), ('omni:worksByQueueListHeader', None), ('omni:worksByQueueRow', None), ('onboarding:analytics', None), ('onboarding:linkLabel', None), ('onboarding:onboardingComponent', None), ('onboarding:questionSet', None), ('onboarding:smartWelcomeMat', None), ('onboarding:template', None), ('onboardingTest:customStep', None), ('onboardingTest:customSummaryBlock', None), ('onboardingTest:opportunityStage', None), ('onboardingTest:pathProgress', None), ('onboardingTest:setupAssistantWelcomeMatContainer', None), ('onboardingTest:template', None), ('onboardingTest:welcomeMatService', None), ('onboardingTest:wizardSample1', None), ('onboardingTest:wizardStepCustomAction', None), ('onboardingTest:wizardStepCustomFinish', None), ('one:actionBar', None), ('one:actionBarPlugin', None), ('one:actionButtonIcon', None), ('one:actionCard', None), ('one:actionCardContent', None), ('one:actionCardPhone', None), ('one:actionOverflow', None), ('one:actionOverflowMenuItem', None), ('one:actionSimpleContainer', None), ('one:actionsComposer', None), ('one:actionsDropDown', None), ('one:actionsManager', None), ('one:actionsRibbon', None), ('one:addressableModalManager', None), ('one:adoptionComposer', None), ('one:adoptionContent', None), ('one:alohaPage', None), ('one:alohaPageCard', None), ('one:alohaPageDeprecated', None), ('one:anchorHeader', None), ('one:apiHandler', None), ('one:appAnalytics', None), ('one:appDetail', None), ('one:appLauncherItem', None), ('one:appLauncherItemList', None), ('one:appLauncherMenuContainer', None), ('one:appNavAddItemsBaseDataProvider', None), ('one:appNavAddItemsFavoritesDataProvider', None), ('one:appNavAddItemsTabsDataProvider', None), ('one:appNavBackButton', None), ('one:appNavBarItem', None), ('one:appNavBarOverflowMenuItem', None), ('one:appNavButtons', None), ('one:appNavContainer', None), ('one:appNavItems', None), ('one:appNavMenu', None), ('one:appNavMenuPanel', None), ('one:appNavMenuPopupTarget', None), ('one:appNavPromptContent', None), ('one:appNavTabsets', None), ('one:appNavToggle', None), ('one:applicationError', None), ('one:auraContainer', None), ('one:auraCustomerErrorHandler', None), ('one:auraSystemErrorHandler', None), ('one:baseComponentDepend', None), ('one:branding', None), ('one:celebrationManager', None), ('one:centerStage', None), ('one:chatter', None), ('one:closeTabsConfirmationModal', None), ('one:consoleApiBootstrapTester', None), ('one:consoleAppCustomizationDefault', None), ('one:consoleAppCustomizationSetup', None), ('one:consoleCmpInitApiTester', None), ('one:consoleEventBroker', None), ('one:consoleInlinePanel', None), ('one:consoleLayoutContainer2', None), ('one:consoleLi', None), ('one:consoleNav', None), ('one:consoleObjectHome', None), ('one:consoleOverflowItem', None), ('one:consolePersistenceForceLogoutPlugin', None), ('one:consolePersistenceManager', None), ('one:consoleTab', None), ('one:consoleTabContainer', None), ('one:consoleTabCustomizationPanel', None), ('one:consoleTabItem', None), ('one:consoleTabScrollManager', None), ('one:consoleTabset', None), ('one:consoleToolkitTestUtility', None), ('one:consoleVFOverridesTester', None), ('one:content', None), ('one:contentLoadedPlugin', None), ('one:contentRegionNavContainer', None), ('one:cryptoLibraryManager', None), ('one:customizeInterface', None), ('one:darkModeUserSettings', None), ('one:declarativeDockedContent', None), ('one:declarativePromptSetup', None), ('one:densitySetup', None), ('one:densityUserSettings', None), ('one:densityUserSettingsConfirmationDialog', None), ('one:desktopLayoutContainer', None), ('one:dialog', None), ('one:dockingPanelManager', None), ('one:dragAndDropEditItem', None), ('one:dragAndDropEditList', None), ('one:editMyNav', None), ('one:editMyNavListHandler', None), ('one:editSortOrderPanel', None), ('one:editSortOrderPanelDragAndDropEditListHandler', None), ('one:editablePagePlugin', None), ('one:empAPILoader', None), ('one:emptyPerfUtility', None), ('one:ept', None), ('one:establishVFSessionComponent', None), ('one:externalRedirect', None), ('one:favorites', None), ('one:favoritesDragAndDropEditListHandler', None), ('one:favoritesEditPanel', None), ('one:favoritesPicker', None), ('one:favoritesPickerDataProvider', None), ('one:featureDiscoveryModal', None), ('one:feedbackFormContainer', None), ('one:feedbackNextProvider', None), ('one:flexipage', None), ('one:floatingPanelPrompt', None), ('one:footer', None), ('one:globalCreate', None), ('one:globalCreateIcon', None), ('one:globalCreateItem', None), ('one:globalNav', None), ('one:header', None), ('one:headerRegionNavContainer', None), ('one:helpAndTrainingExperience', None), ('one:helpAndTrainingFeedback', None), ('one:helpAndTrainingKeyboardShortcuts', None), ('one:helpMenu', None), ('one:helpMenuDataProvider', None), ('one:helpMenuSectionsContainer', None), ('one:helpMenuSetup', None), ('one:hiddenRegion', None), ('one:homeCardListPhone', None), ('one:homeCardSeparator', None), ('one:iframeComposer', None), ('one:iframeContentPlugin', None), ('one:iframeMessageManager', None), ('one:inAppChat', None), ('one:inAppGuidanceBuilderTemplate', None), ('one:inAppGuidanceDataProvider', None), ('one:keyboardShortcutList', None), ('one:keyboardShortcutListFooter', None), ('one:keyboardShortcutListener', None), ('one:ladybugTrigger', None), ('one:leftContentWrapper', None), ('one:lexOnIpadSetup', None), ('one:listRow', None), ('one:liveChatPreview', None), ('one:lwcGvpClient', None), ('one:moreCard', None), ('one:multiTabList', None), ('one:multiTabListItem', None), ('one:multiTabListTab', None), ('one:navItemDropdown', None), ('one:navItemDropdownMenuItem', None), ('one:navItemDropdownMenuItemSeparator', None), ('one:navigationItemAPILoader', None), ('one:networkSwitcher', None), ('one:networkSwitcherMenuTrigger', None), ('one:networkSwitcherRadioMenuItem', None), ('one:noNavItems', None), ('one:npsContainer', None), ('one:objectHomeFlexipage', None), ('one:onboardingAssistanceSetup', None), ('one:onboardingManager', None), ('one:onboardingManagerWrapper', None), ('one:panelManager', None), ('one:panelManagerMobile', None), ('one:panelManagerScoped', None), ('one:panelService', None), ('one:persistenceTestComponent', None), ('one:pocketGuide', None), ('one:pocketGuidePrompt', None), ('one:preloadLayout', None), ('one:promptAuthoringContainer', None), ('one:promptAuthoringDialog', None), ('one:promptDisplaySettingsDialog', None), ('one:promptLsfFlow', None), ('one:promptLsfMilestoneContent', None), ('one:promptLsfMilestoneDetails', None), ('one:promptLsfMilestoneFrequency', None), ('one:promptLsfMilestonePermissions', None), ('one:promptLsfMilestonePosition', None), ('one:promptLsfMilestoneProfiles', None), ('one:promptLsfMilestoneType', None), ('one:publicGroupLookupDataProvider', None), ('one:pushChatWindowProvider', None), ('one:recordActionFlexipageWrapper', None), ('one:recordActionWrapper', None), ('one:recordHomeFlexipage', None), ('one:recordHomeFlexipage2Wrapper', None), ('one:recordLoadError', None), ('one:recycleBinActions', None), ('one:recycleBinHome', None), ('one:rrhTempDepend', None), ('one:searchContentPlugin', None), ('one:sessionManager', None), ('one:shortcutLibLazyLoader', None), ('one:singlePaneWindowManagerWrapper', None), ('one:splitViewWrapper', None), ('one:stageLeft', None), ('one:storagePrime', None), ('one:storagePrimeNative', None), ('one:storagePrimePerf', None), ('one:switchIdentityDialog', None), ('one:systemMessage', None), ('one:tempDepend', None), ('one:template', None), ('one:themeImageCrop', None), ('one:themeImageUpload', None), ('one:themeList', None), ('one:themeManager', None), ('one:themeSetup', None), ('one:trialExperience', None), ('one:trialHeader', None), ('one:twoColumnLayout', None), ('one:uncacheableContentPlugin', None), ('one:unsavedChangesAPILoader', None), ('one:unsupported', None), ('one:unsupportedContainer', None), ('one:unsupportedDetectorIpad', None), ('one:unsupportedDetectorIpadOS', None), ('one:unsupportedDetectorUiWebView', None), ('one:unsupportedHome', None), ('one:unsupportedMessage', None), ('one:userProfileCard', None), ('one:userProfileCardData', None), ('one:userProfileCardTrigger', None), ('one:userSwitcher', None), ('one:userSwitcherIdentity', None), ('one:utilPanelManager', None), ('one:utilityBar', None), ('one:utilityBarAPILoader', None), ('one:utilityBarContainer', None), ('one:utilityBarContent', None), ('one:utilityBarItem', None), ('one:utilityBarPanel', None), ('one:utilityBarPopoutWrapper', None), ('one:utilityBarTemplateDesktop', None), ('one:utilityBarTestComponent', None), ('one:visualforceOverride', None), ('one:webTab', None), ('one:webtemplate', None), ('one:workspace', None), ('one:workspace2', None), ('one:workspaceAPILoader', None), ('one:workspaceCollection', None), ('one:workspaceTabWrapper', None), ('onesetup:addUserModal', None), ('onesetup:addUsers', None), ('onesetup:allHome', None), ('onesetup:baseHomePage', None), ('onesetup:breadcrumb', None), ('onesetup:breadcrumbs', None), ('onesetup:chatRuleModal', None), ('onesetup:chatRuleModalFooter', None), ('onesetup:createMenu', None), ('onesetup:helpBanner', None), ('onesetup:helpTile', None), ('onesetup:homeCreateMenu', None), ('onesetup:lexEnableUsersStep', None), ('onesetup:lexEnablementFlow', None), ('onesetup:lexMultiAdd', None), ('onesetup:lexMultiAddTable', None), ('onesetup:lexSearchDataProvider', None), ('onesetup:lexSuccessStep', None), ('onesetup:lexUsersDataProvider', None), ('onesetup:liveAgentSettings', None), ('onesetup:liveAgentSettingsBasic', None), ('onesetup:liveAgentSettingsContainer', None), ('onesetup:liveAgentSettingsErrorPage', None), ('onesetup:liveAgentSettingsQueueing', None), ('onesetup:liveAgentSettingsSecurity', None), ('onesetup:liveAgentSettingsTimeouts', None), ('onesetup:module', None), ('onesetup:mruLink', None), ('onesetup:navTree', None), ('onesetup:navTreeFilter', None), ('onesetup:navTreeKeyboardNavigator', None), ('onesetup:navTreeNode', None), ('onesetup:outOfLicensesModal', None), ('onesetup:pageNotFound', None), ('onesetup:progressBar', None), ('onesetup:recentItems', None), ('onesetup:setupAlohaPage', None), ('onesetup:setupAssistantTile', None), ('onesetup:setupCarouselPage', None), ('onesetup:setupComponent', None), ('onesetup:setupFlow', None), ('onesetup:setupFlowAbstractEditableStep', None), ('onesetup:setupFlowAbstractStep', None), ('onesetup:setupFlowConfirmDialog', None), ('onesetup:setupFlowConfirmMessage', None), ('onesetup:setupFlowEditor', None), ('onesetup:setupFlowEditorFooter', None), ('onesetup:setupFlowEndStep', None), ('onesetup:setupFlowFooter', None), ('onesetup:setupFlowIterator', None), ('onesetup:setupFlowProgress', None), ('onesetup:setupFlowTab', None), ('onesetup:setupFlowTabset', None), ('onesetup:setupHeader', None), ('onesetup:setupLink', None), ('onesetup:setupMenuItem', None), ('onesetup:setupNavTree', None), ('onesetup:setupNavTreeAppManager', None), ('onesetup:setupPageLink', None), ('onesetup:setupSearchInputDataProvider', None), ('onesetup:setupSearchInputDesktop', None), ('onesetup:unsupported', None), ('onesetup:usersContainer', None), ('onesetup:usersResources', None), ('onesetup:virtualGridSetupPageLink', None), ('opencti:clickToDialApiHandler', None), ('opencti:embeddedTelephonyConnector', None), ('opencti:embeddedTelephonyTab', None), ('opencti:openCtiApiHandler', None), ('opencti:outputPhone', None), ('opencti:recordPhoneCallControlsDesignSubstitute', None), ('opencti:softPhone', None), ('opencti:testCrossCuttingOutputPhoneOverride', None), ('packagingSetupUI:deleteModeConfirmationDialog', None), ('packagingSetupUI:iframe', None), ('packagingSetupUI:inputCheckbox', None), ('packagingSetupUI:installKeyDialog', None), ('packagingSetupUI:ipErrorCmp', None), ('packagingSetupUI:ipLandingCmp', None), ('packagingSetupUI:ipSuccessCmp', None), ('packagingSetupUI:ipTemplate', None), ('packagingSetupUI:ipTooLongCmp', None), ('packagingSetupUI:profileMapping', None), ('packagingSetupUI:rssDialog', None), ('packagingSetupUI:rssDialogFooter', None), ('packagingSetupUI:subscriberQueryRequests', None), ('packagingSetupUI:template', None), ('platformencryption:advancedsettingsPage', None), ('platformencryption:advancedsettingsPageWrapper', None), ('platformencryption:esfPage', None), ('process_home:flowListView', None), ('process_home:openFlow', None), ('process_home:pausedFlowListView', None), ('process_home:processHome', None), ('process_home:processHomeCard', None), ('process_home:processHomeChart', None), ('process_home:processHomeCreateMenu', None), ('processui:header', None), ('processui:layout', None), ('processui:template', None), ('processuiappr:helloWorld', None), ('processuicommon:actionPanel', None), ('processuicommon:actionTypeApex', None), ('processuicommon:actionTypeBase', None), ('processuicommon:actionTypeChatterPost', None), ('processuicommon:actionTypeCustomNotification', None), ('processuicommon:actionTypeEmailAlert', None), ('processuicommon:actionTypeFlow', None), ('processuicommon:actionTypeIsotope', None), ('processuicommon:actionTypeLiveMessageNotification', None), ('processuicommon:actionTypeQuickAction', None), ('processuicommon:actionTypeQuip', None), ('processuicommon:actionTypeRecordCreate', None), ('processuicommon:actionTypeRecordUpdate', None), ('processuicommon:actionTypeSendSurveyInvitation', None), ('processuicommon:actionTypeSubmit', None), ('processuicommon:actionTypeThunder', None), ('processuicommon:actionTypes', None), ('processuicommon:advancedSection', None), ('processuicommon:apexFields', None), ('processuicommon:apexFieldsDataProvider', None), ('processuicommon:apexParameterList', None), ('processuicommon:apexParameterListRow', None), ('processuicommon:apexTypes', None), ('processuicommon:apexTypesDataProvider', None), ('processuicommon:arrow', None), ('processuicommon:autocomplete', None), ('processuicommon:baseItemListRow', None), ('processuicommon:canvasAddElement', None), ('processuicommon:canvasEditableElement', None), ('processuicommon:canvasElement', None), ('processuicommon:chatterActionTopics', None), ('processuicommon:chatterInput', None), ('processuicommon:chatterMentionsDataProvider', None), ('processuicommon:chatterTopicsDataProvider', None), ('processuicommon:conditionList', None), ('processuicommon:conditionListRow', None), ('processuicommon:conditionLogicTypes', None), ('processuicommon:confirmationModalBody', None), ('processuicommon:confirmationModalFooter', None), ('processuicommon:createableFieldDataProvider', None), ('processuicommon:createableFields', None), ('processuicommon:createableObjectTypes', None), ('processuicommon:createableObjectTypesDataProvider', None), ('processuicommon:customEventTypes', None), ('processuicommon:customEventTypesDataProvider', None), ('processuicommon:customLabel', None), ('processuicommon:customNotificationTypes', None), ('processuicommon:decisionArrow', None), ('processuicommon:dialog', None), ('processuicommon:duelingList', None), ('processuicommon:duelingListItem', None), ('processuicommon:duelingListS1', None), ('processuicommon:duelingListsS1', None), ('processuicommon:emailAlertObjectTypes', None), ('processuicommon:emailAlertObjectTypesDataProvider', None), ('processuicommon:entityFieldDataProvider', None), ('processuicommon:entityFieldDialog', None), ('processuicommon:entityFieldsByTypeDataProvider', None), ('processuicommon:entityOrEventFieldDialog', None), ('processuicommon:entityReferenceDialog', None), ('processuicommon:flowFields', None), ('processuicommon:flowFieldsDataProvider', None), ('processuicommon:flowParameterList', None), ('processuicommon:flowParameterListRow', None), ('processuicommon:flowTypes', None), ('processuicommon:flowTypesDataProvider', None), ('processuicommon:formulaBuilder', None), ('processuicommon:formulaFunctionDataProvider', None), ('processuicommon:formulaFunctionDialog', None), ('processuicommon:formulaGlobalVariableDataProvider', None), ('processuicommon:formulaGlobalVariableDialog', None), ('processuicommon:formulaOperator', None), ('processuicommon:help', None), ('processuicommon:helpPanelBody', None), ('processuicommon:inlineFormulaBuilder', None), ('processuicommon:input', None), ('processuicommon:inputBoolean', None), ('processuicommon:inputCheckbox', None), ('processuicommon:inputCurrency', None), ('processuicommon:inputDate', None), ('processuicommon:inputDateTime', None), ('processuicommon:inputError', None), ('processuicommon:inputEventParameter', None), ('processuicommon:inputFormula', None), ('processuicommon:inputGlobalConstant', None), ('processuicommon:inputJson', None), ('processuicommon:inputNumber', None), ('processuicommon:inputNumberHack', None), ('processuicommon:inputProcessValue', None), ('processuicommon:inputSelect', None), ('processuicommon:inputSourceTypes', None), ('processuicommon:inputString', None), ('processuicommon:inputSystemVariable', None), ('processuicommon:inputText', None), ('processuicommon:inputTextArea', None), ('processuicommon:inputTraverser', None), ('processuicommon:instructions', None), ('processuicommon:isotopeNotificationAction', None), ('processuicommon:isotopePicklist', None), ('processuicommon:liveMessageNotificationChannel', None), ('processuicommon:liveMessageNotificationChannelDataProvider', None), ('processuicommon:liveMessageNotificationRecipientFieldsDataProvider', None), ('processuicommon:liveMessageNotificationRecipientReferenceDialog', None), ('processuicommon:liveMessageNotificationTargetTypes', None), ('processuicommon:liveMessageNotificationTemplate', None), ('processuicommon:liveMessageNotificationTemplateDataProvider', None), ('processuicommon:messageModalFooter', None), ('processuicommon:messagingEndUserFieldsDataProvider', None), ('processuicommon:messagingEndUserReferenceDialog', None), ('processuicommon:multiPicklistButton', None), ('processuicommon:multiPicklistModalBody', None), ('processuicommon:multiPicklistModalFooter', None), ('processuicommon:notificationRecipientCategories', None), ('processuicommon:notificationRecipientTypes', None), ('processuicommon:notificationTargetInput', None), ('processuicommon:notificationTextInput', None), ('processuicommon:operatorTypes', None), ('processuicommon:outcomeGoToNext', None), ('processuicommon:outcomeGoToNextOptions', None), ('processuicommon:outcomeGoToNextPanel', None), ('processuicommon:outcomePanel', None), ('processuicommon:outcomeTypes', None), ('processuicommon:outcomeUpdateOnce', None), ('processuicommon:outputText', None), ('processuicommon:panel', None), ('processuicommon:parameterList', None), ('processuicommon:parameterListRow', None), ('processuicommon:phoneFieldsDataProvider', None), ('processuicommon:phoneReferenceDialog', None), ('processuicommon:picklistField', None), ('processuicommon:postTargetTypes', None), ('processuicommon:postTargetUserTypes', None), ('processuicommon:postTargetsPerType', None), ('processuicommon:processPerTriggerObjectType', None), ('processuicommon:queryableFields', None), ('processuicommon:queryableFieldsDataProvider', None), ('processuicommon:queueOrGroupList', None), ('processuicommon:queueOrGroupListDataProvider', None), ('processuicommon:quickActionActionTypes', None), ('processuicommon:quickActionActions', None), ('processuicommon:quickActionActionsDataProvider', None), ('processuicommon:quickActionActionsOption', None), ('processuicommon:quickActionFields', None), ('processuicommon:quickActionFieldsDataProvider', None), ('processuicommon:quickActionFilterTypes', None), ('processuicommon:quickActionObjectTypes', None), ('processuicommon:quickActionObjectTypesDataProvider', None), ('processuicommon:quickActionParameterList', None), ('processuicommon:quickActionParameterListRow', None), ('processuicommon:quipAddDocumentToFolderAction', None), ('processuicommon:quipAddMessageToChatAction', None), ('processuicommon:quipAddMessageToDocumentAction', None), ('processuicommon:quipAddUsersToChatAction', None), ('processuicommon:quipAddUsersToThreadAction', None), ('processuicommon:quipAttachDocumentToRecordAction', None), ('processuicommon:quipBaseSubActionType', None), ('processuicommon:quipChangeImageSlideAction', None), ('processuicommon:quipCopyContentAction', None), ('processuicommon:quipCopyDocumentAction', None), ('processuicommon:quipCreateChatAction', None), ('processuicommon:quipCreateDocumentAction', None), ('processuicommon:quipCreateFolderAction', None), ('processuicommon:quipEditDocumentAction', None), ('processuicommon:quipEditDocumentSubAction', None), ('processuicommon:quipEditSlideSubAction', None), ('processuicommon:quipEditSpreadsheetSubAction', None), ('processuicommon:quipInputParameter', None), ('processuicommon:quipInsertLiveAppAction', None), ('processuicommon:quipInsertNewSlideAction', None), ('processuicommon:quipInsertRelatedListAction', None), ('processuicommon:quipInsertSalesforceListAction', None), ('processuicommon:quipInsertSalesforceLiveRecordAction', None), ('processuicommon:quipLockDocumentAction', None), ('processuicommon:quipPicklist', None), ('processuicommon:quipRecordFieldPicklist', None), ('processuicommon:quipRemoveDocumentFromFolderAction', None), ('processuicommon:quipRemoveUsersFromThreadAction', None), ('processuicommon:radioButtons', None), ('processuicommon:recordCreateParameterList', None), ('processuicommon:recordCreateParameterListRow', None), ('processuicommon:recordFilterList', None), ('processuicommon:recordFilterListRow', None), ('processuicommon:recordUpdateEvaluationTypes', None), ('processuicommon:recordUpdateParameterList', None), ('processuicommon:recordUpdateParameterListRow', None), ('processuicommon:relationshipFieldDataProvider', None), ('processuicommon:relationshipFieldDialog', None), ('processuicommon:spinner', None), ('processuicommon:startOrStop', None), ('processuicommon:submitActionApprovals', None), ('processuicommon:submitActionApprovalsDataProvider', None), ('processuicommon:submitActionSelectionTypes', None), ('processuicommon:submitActionSubmitterTypes', None), ('processuicommon:summaryRenderer', None), ('processuicommon:surveyInvitationFieldDataProvider', None), ('processuicommon:surveyInvitationTargetTypes', None), ('processuicommon:textPostRecipients', None), ('processuicommon:toolbar', None), ('processuicommon:traverser', None), ('processuicommon:traverserModalBody', None), ('processuicommon:traverserModalFooter', None), ('processuicommon:traverserNode', None), ('processuicommon:traverserNodeAutocomplete', None), ('processuicommon:traverserNodeChild', None), ('processuicommon:traverserNodeDataProvider', None), ('processuicommon:triggerEnableRecursion', None), ('processuicommon:triggerObjectDataProvider', None), ('processuicommon:triggerObjectTypes', None), ('processuicommon:triggerPanel', None), ('processuicommon:triggerTypes', None), ('processuicommon:typedEntityFieldDataProvider', None), ('processuicommon:typedEntityFieldDialog', None), ('processuicommon:typedFieldOption', None), ('processuicommon:updateableFields', None), ('processuicommon:updateableFieldsDataProvider', None), ('processuicommon:userAndGroupAutocompleteOption', None), ('processuicommon:userFieldsDataProvider', None), ('processuicommon:userList', None), ('processuicommon:userListDataProvider', None), ('processuicommon:userReferenceDialog', None), ('processuicommon:valueTypes', None), ('processuicommon:waitEventDate', None), ('processuicommon:waitEventDateDataProvider', None), ('processuicommon:waitEventOperatorTypes', None), ('processuicommon:waitEventPanel', None), ('processuicommon:waitEventPanelRadio', None), ('processuicommon:waitEventTimeUnitTypes', None), ('processuimgnt:console', None), ('processuimgnt:consoleListRow', None), ('processuimgnt:consoleToolbar', None), ('processuimgnt:landingPage', None), ('processuimgnt:versionListRow', None), ('processuimgnt:versionTable', None), ('processuirule:actionAddElement', None), ('processuirule:actionContainer', None), ('processuirule:actionContainerGroup', None), ('processuirule:actionElement', None), ('processuirule:canvasToolbar', None), ('processuirule:eventTypeTrigger', None), ('processuirule:invocableSettings', None), ('processuirule:modalManager', None), ('processuirule:outcomeAddElement', None), ('processuirule:outcomeAddGroup', None), ('processuirule:outcomeElement', None), ('processuirule:outcomeGroup', None), ('processuirule:panelManager', None), ('processuirule:processPropertiesModalBody', None), ('processuirule:processPropertiesModalFooter', None), ('processuirule:ruleCanvas', None), ('processuirule:triggerAddElement', None), ('processuirule:triggerElement', None), ('processuirule:triggerSourceTypes', None), ('processuirule:waitEventActionContainer', None), ('processuirule:waitEventAddElement', None), ('processuirule:waitEventElement', None), ('processuirule:workflowTypeTrigger', None), ('processuitest:actionContainer_wrapper', None), ('processuitest:actionPanelApex_wrapper', None), ('processuitest:actionPanelChatterPost_wrapper', None), ('processuitest:actionPanelCustomNotification_wrapper', None), ('processuitest:actionPanelEmail_wrapper', None), ('processuitest:actionPanelFlow_wrapper', None), ('processuitest:actionPanelQuickAction_wrapper', None), ('processuitest:actionPanelRecordCreate_wrapper', None), ('processuitest:actionPanelRecordUpdate_wrapper', None), ('processuitest:actionPanelSubmit_wrapper', None), ('processuitest:actionPanelThunder_wrapper', None), ('processuitest:actionPanel_wrapper', None), ('processuitest:actionTypeApex_wrapper', None), ('processuitest:actionTypeChatterPost_wrapper', None), ('processuitest:actionTypeCustomNotification_wrapper', None), ('processuitest:actionTypeEmailAlert_wrapper', None), ('processuitest:actionTypeFlow_wrapper', None), ('processuitest:actionTypeQuickAction_wrapper', None), ('processuitest:actionTypeRecordCreate_wrapper', None), ('processuitest:actionTypeRecordUpdate_wrapper', None), ('processuitest:actionTypeSendSurveyInvitation_Wrapper', None), ('processuitest:actionTypeSubmit_wrapper', None), ('processuitest:autocomplete_wrapper', None), ('processuitest:canvasToolbar_wrapper', None), ('processuitest:conditionListSingleRow_wrapper', None), ('processuitest:conditionList_wrapper', None), ('processuitest:entityFieldDialog_wrapper', None), ('processuitest:eventTypeTrigger_wrapper', None), ('processuitest:flowParameterList_wrapper', None), ('processuitest:help_wrapper', None), ('processuitest:inputSelect_wrapper', None), ('processuitest:input_wrapper', None), ('processuitest:invocableSettings_wrapper', None), ('processuitest:layout_wrapper', None), ('processuitest:outcomePanel_wrapper', None), ('processuitest:panelManager_wrapper', None), ('processuitest:panel_wrapper', None), ('processuitest:processPropertiesModalBody_wrapper', None), ('processuitest:quickActionParameterList_wrapper', None), ('processuitest:recordCreateParameterList_wrapper', None), ('processuitest:recordUpdateParameterListSingleRow_wrapper', None), ('processuitest:recordUpdateParameterList_wrapper', None), ('processuitest:relationshipFieldDialog_wrapper', None), ('processuitest:stubDataProvider', None), ('processuitest:testAutoCompleteOption', None), ('processuitest:toolbar_wrapper', None), ('processuitest:traverserSummaryRenderer_wrapper', None), ('processuitest:workflowTypeTrigger_wrapper', None), ('reports:buttonGroup', None), ('reports:dataGrid', None), ('reports:eclairChart', None), ('reports:eclairConfigurer', None), ('reports:eclairPaletteSelector', None), ('reports:eclairReportChart', None), ('reports:errorPanel', None), ('reports:exportDialog', None), ('reports:exportDialogFooter', None), ('reports:exportVisualPickerOption', None), ('reports:feedPanel', None), ('reports:filterBooleanWidget', None), ('reports:filterCard', None), ('reports:filterCardCommon', None), ('reports:filterCardStandardDate', None), ('reports:filterDateWidget', None), ('reports:filterMultiSelectPicklistWidget', None), ('reports:filterNumberWidget', None), ('reports:filterPanel', None), ('reports:filterPanelFooter', None), ('reports:filterPanelTest', None), ('reports:filterRoleHierarchyCard', None), ('reports:filterRoleHierarchyWidget', None), ('reports:filterSelection', None), ('reports:filterSingleSelectPicklistWidget', None), ('reports:filterStandardDateWidget', None), ('reports:filterStringWidget', None), ('reports:filterWidget', None), ('reports:folderDialog', None), ('reports:folderDialogFooter', None), ('reports:highlight', None), ('reports:instancePoller', None), ('reports:lightningReportsChartingTest', None), ('reports:lockedFilterCard', None), ('reports:metricsHeader', None), ('reports:multiSelectDropDownMenu', None), ('reports:passiveFilterGroup', None), ('reports:reportBase', None), ('reports:reportBaseAura', None), ('reports:reportBuilder', None), ('reports:reportFilterPanel', None), ('reports:reportInstancePage', None), ('reports:reportPage', None), ('reports:reportSidebar', None), ('reports:roleHierarchyTree', None), ('reports:roleHierarchyTreeBaseButton', None), ('reports:roleHierarchyTreeLeaf', None), ('reports:roleHierarchyTreeLoadButton', None), ('reports:roleHierarchyTreeNode', None), ('reports:settingsPanel', None), ('reports:stopTrendingDialogFooter', None), ('reports:subscriptionUserLookupDataProvider', None), ('reports:tempDepend', None), ('reports:trendDialog', None), ('reports:trendDialogFooter', None), ('reports:trendReportDetailsDialog', None), ('reports:trendReportDetailsDialogFooter', None), ('reports:trendScheduleSelector', None), ('reports:warningPanel', None), ('reports:webtemplate', None), ('runtime_all_walkthroughs:orchestrationPlayerPrompt', None), ('runtime_all_walkthroughs:player', None), ('runtime_all_walkthroughs:playerCallout', None), ('runtime_all_walkthroughs:playerDynamic', None), ('runtime_all_walkthroughsTest:customAction', None), ('runtime_all_walkthroughsTest:locatorizedSubComponent', None), ('runtime_all_walkthroughsTest:playerEnvironment', None), ('runtime_appointmentbooking:appointmentCardExpandedPanel', None), ('runtime_appointmentbooking:appointmentCollapsedCard', None), ('runtime_appointmentbooking:appointmentsBookedCard', None), ('runtime_appointmentbooking:appointmentsBookedCardDesign', None), ('runtime_appointmentbooking:cancelApp', None), ('runtime_appointmentbooking:createOperatingHours', None), ('runtime_appointmentbooking:flowApptType', None), ('runtime_appointmentbooking:flowCandidate', None), ('runtime_appointmentbooking:flowConfirm', None), ('runtime_appointmentbooking:flowLocation', None), ('runtime_appointmentbooking:flowReview', None), ('runtime_appointmentbooking:flowReviewTester', None), ('runtime_appointmentbooking:flowTimeslot', None), ('runtime_appointmentbooking:flowTimeslotTester', None), ('runtime_appointmentbooking:flowTriage', None), ('runtime_appointmentbooking:flowWorkType', None), ('runtime_appointmentbooking:lightningSchedulerLookupDataProvider', None), ('runtime_appointmentbooking:lightningSchedulerSetup', None), ('runtime_appointmentbooking:lightningSchedulerSetupAssistant', None), ('runtime_appointmentbooking:lightningSchedulerTrailhead', None), ('runtime_appointmentbooking:massAssignmentDateTime', None), ('runtime_appointmentbooking:modalFooter', None), ('runtime_appointmentbooking:operatingHours', None), ('runtime_appointmentbooking:operatingHoursDesign', None), ('runtime_appointmentbooking:operatingHoursDisplayTable', None), ('runtime_appointmentbooking:resourceList', None), ('runtime_appointmentbooking:resourceSlot', None), ('runtime_appointmentbooking:resourceSlotTester', None), ('runtime_appointmentbooking:schedulerImageSlider', None), ('runtime_appointmentbooking:setupAssistantStep', None), ('runtime_appointmentbooking:setupAssistantStepsSection', None), ('runtime_appointmentbooking:suggestedResources', None), ('runtime_appointmentbooking:timeSlotsCalendar', None), ('runtime_appointmentbooking:userCard', None), ('runtime_appointmentbooking:visualPicker', None), ('runtime_appointmentbooking:visualPickerCard', None), ('runtime_approval_process:action', None), ('runtime_approval_process:actionContent', None), ('runtime_approval_process:basePanel', None), ('runtime_approval_process:commentsCard', None), ('runtime_approval_process:navigateToPendingApprovalList', None), ('runtime_approval_process:outputLookup', None), ('runtime_approval_process:outputName', None), ('runtime_approval_process:outputNameAndStatus', None), ('runtime_approval_process:outputStatus', None), ('runtime_approval_process:pendingApprovalCard', None), ('runtime_approval_process:pendingApprovalCardRow', None), ('runtime_approval_process:viewComments', None), ('runtime_cdp:activationPartnerProfileWizardLanding', None), ('runtime_cdp:activationTargetEditAction', None), ('runtime_cdp:dataConnectorDetails', None), ('runtime_cdp:dataMappingDetails', None), ('runtime_cdp:dataModelTab', None), ('runtime_cdp:dataSourceConfig', None), ('runtime_cdp:dataStreamDataModelStats', None), ('runtime_cdp:dataStreamDataSourceProperties', None), ('runtime_cdp:dataStreamExtendedDataPackage', None), ('runtime_cdp:dataStreamMappingContainer', None), ('runtime_cdp:dataStreamMassDeleteComponent', None), ('runtime_cdp:dataStreamRefreshDayOfMonth', None), ('runtime_cdp:dataStreamRefreshDayOfWeek', None), ('runtime_cdp:dataStreamSetupDialog', None), ('runtime_cdp:dataStreamSetupWizard', None), ('runtime_cdp:dataStreamSourceWizard', None), ('runtime_cdp:dataStreamStandardDataPackage', None), ('runtime_cdp:dataStreamStatus', None), ('runtime_cdp:dataStreamTaggingScreen', None), ('runtime_cdp:errorModal', None), ('runtime_cdp:homepageActivations', None), ('runtime_cdp:homepageDemographicInsights', None), ('runtime_cdp:homepageSegments', None), ('runtime_cdp:homepagedataStreams', None), ('runtime_cdp:individualDemoTab', None), ('runtime_cdp:inputRefreshScheduleEndDate', None), ('runtime_cdp:inputRefreshScheduleInterval', None), ('runtime_cdp:inputRefreshScheduleStartDateTime', None), ('runtime_cdp:inputSegmentTarget', None), ('runtime_cdp:insightsDemographicsPopulationChart', None), ('runtime_cdp:marketSegmentDisableAction', None), ('runtime_cdp:marketSegmentDisableModal', None), ('runtime_cdp:marketSegmentEditRulesAction', None), ('runtime_cdp:marketSegmentPublishAction', None), ('runtime_cdp:newActivationPartnerProfileAction', None), ('runtime_cdp:outputSegmentTarget', None), ('runtime_cdp:processAction', None), ('runtime_cdp:recordHomeNameField', None), ('runtime_cdp:segmentWizardLanding', None), ('runtime_commerce_entitlements:entitlementTypeEnabledCheckbox', None), ('runtime_commerce_entitlements:entitlementTypeEnabledToggle', None), ('runtime_commerce_entitlements:massAssignRecords', None), ('runtime_commerce_oms:changesWrapper', None), ('runtime_commerce_oms:deliveryGroup', None), ('runtime_commerce_oms:flowFooter', None), ('runtime_commerce_oms:fulfillmentOrderListView', None), ('runtime_commerce_oms:navigateToOrderDeliveryGroupSummary', None), ('runtime_commerce_oms:navigateToOrderItemSummary', None), ('runtime_commerce_oms:noDataMessage', None), ('runtime_commerce_oms:orderManagementSetup', None), ('runtime_commerce_oms:orderPaymentSummaryListView', None), ('runtime_commerce_oms:orderSummary', None), ('runtime_commerce_oms:orderSummaryListView', None), ('runtime_commerce_oms:productSelection', None), ('runtime_commerce_oms:reviewWrapper', None), ('runtime_commerce_pricing:associatePriceAdjustmentSchedule', None), ('runtime_commerce_pricing:associatePriceAdjustmentScheduleFooter', None), ('runtime_commerce_pricing:createPriceAdjustmentScheduleAction', None), ('runtime_commerce_pricing:editPriceAdjustmentScheduleAction', None), ('runtime_commerce_pricing:priceAdjustmentFlow', None), ('runtime_commerce_pricing:priceAdjustmentScheduleEditStep', None), ('runtime_commerce_pricing:priceAdjustmentTiersEditStep', None), ('runtime_commerce_store:assistantStep', None), ('runtime_commerce_store:buyerAccess', None), ('runtime_commerce_store:createCommerceStore', None), ('runtime_commerce_store:createStoreAndNetwork', None), ('runtime_commerce_store:defaultCurrencyFieldRenderer', None), ('runtime_commerce_store:defaultLanguageFieldRenderer', None), ('runtime_commerce_store:setupStorePage', None), ('runtime_commerce_store:storeActivation', None), ('runtime_commerce_store:storeDetail', None), ('runtime_commerce_store:storeList', None), ('runtime_commerce_store:storeSettings', None), ('runtime_commerce_store:storeSetupAssistant', None), ('runtime_commerce_store:supportedCurrenciesFieldRenderer', None), ('runtime_commerce_store:supportedCurrenciesViewFieldRenderer', None), ('runtime_commerce_store:supportedLanguageFieldRenderer', None), ('runtime_commerce_store:supportedLanguageViewFieldRenderer', None), ('runtime_commerce_store:webstoresInAlohaRouter', None), ('runtime_communities_nba:builderNbaWidget', None), ('runtime_communities_nba:flowScreenNbaWidget', None), ('runtime_communities_nba:nbaCard', None), ('runtime_communities_nba:nbaWidget', None), ('runtime_communities_nba:propositionActionReferenceEdit', None), ('runtime_communities_nba:propositionActionReferenceView', None), ('runtime_communities_nba:propositionImage', None), ('runtime_communities_nba:propositionImageEdit', None), ('runtime_communities_nba:propositionImageView', None), ('runtime_communities_nba:setupStrategy', None), ('runtime_einstein_discovery:einsteinDiscoveryPanel', None), ('runtime_essential_checkout:addOnAddUnits', None), ('runtime_essential_checkout:addOnChooseLicenses', None), ('runtime_essential_checkout:addOnConfirmOrder', None), ('runtime_essential_checkout:addOnDescription', None), ('runtime_essential_checkout:addOnFlow', None), ('runtime_essential_checkout:addOnLoading', None), ('runtime_essential_checkout:buyNowPromptDisplay', None), ('runtime_essential_checkout:cancellationFlow', None), ('runtime_essential_checkout:cancellationInfo', None), ('runtime_essential_checkout:cancellationSuccess', None), ('runtime_essential_checkout:checkoutBillingInfo', None), ('runtime_essential_checkout:checkoutConfirmOrder', None), ('runtime_essential_checkout:checkoutEnterBilling', None), ('runtime_essential_checkout:checkoutEnterUsers', None), ('runtime_essential_checkout:checkoutError', None), ('runtime_essential_checkout:checkoutFlow', None), ('runtime_essential_checkout:checkoutLoading', None), ('runtime_essential_checkout:checkoutSelectPlan', None), ('runtime_essential_checkout:checkoutSubscription', None), ('runtime_essential_checkout:checkoutSuccess', None), ('runtime_essential_checkout:classicCheckoutPage', None), ('runtime_essential_checkout:classicCheckoutPageWrapper', None), ('runtime_essential_checkout:creditCard', None), ('runtime_essential_checkout:cybersource', None), ('runtime_essential_checkout:holdStatusPromptDisplay', None), ('runtime_essential_checkout:holdStatusPromptWrapper', None), ('runtime_essential_checkout:inAppCheckoutPage', None), ('runtime_essential_checkout:inputNumber', None), ('runtime_essential_checkout:manageLicensesConfirmOrder', None), ('runtime_essential_checkout:manageLicensesDeactivateUsers', None), ('runtime_essential_checkout:manageLicensesEnterUsers', None), ('runtime_essential_checkout:manageLicensesFlow', None), ('runtime_essential_checkout:manageLicensesLoading', None), ('runtime_essential_checkout:manageSubscriptionError', None), ('runtime_essential_checkout:manageSubscriptionPage', None), ('runtime_essential_checkout:mastercardDiscountLoading', None), ('runtime_essential_checkout:modifyAddOnConfirmOrder', None), ('runtime_essential_checkout:modifyAddOnFlow', None), ('runtime_essential_checkout:modifyAddOnLoading', None), ('runtime_essential_checkout:modifyAddOnUnits', None), ('runtime_essential_checkout:setupManageLicensesFlow', None), ('runtime_essential_checkout:setupManageLicensesLoadData', None), ('runtime_essential_checkout:subscriptionDetail', None), ('runtime_essential_checkout:updatePaymentInfo', None), ('runtime_essential_checkout:updatePaymentInfoFlow', None), ('runtime_essential_checkout:updatePaymentInfoLoading', None), ('runtime_essential_checkout:upgradePlanDetail', None), ('runtime_essential_checkout:upgradePlanFlow', None), ('runtime_essential_checkout:upgradePlanLoading', None), ('runtime_essentials_marketing:labelDataService', None), ('runtime_essentials_next:CRUDObjectActionsService', None), ('runtime_essentials_next:actionService', None), ('runtime_essentials_next:activityTimelineDataService', None), ('runtime_essentials_next:chatProviderService', None), ('runtime_essentials_next:dataBusServiceWrapper', None), ('runtime_essentials_next:desktopPageWrapper', None), ('runtime_essentials_next:helpMenuService', None), ('runtime_essentials_next:listViewDataService', None), ('runtime_essentials_next:navBadgeService', None), ('runtime_essentials_next:ownerLookupService', None), ('runtime_essentials_next:relatedDealsService', None), ('runtime_essentials_next:rightSideWrapper', None), ('runtime_essentials_next:subscriptionOverviewService', None), ('runtime_essentials_next:systemMessageService', None), ('runtime_essentials_next:trialHeaderService', None), ('runtime_essentials_next:walkthroughPlayer', None), ('runtime_essentials_next:walkthroughPlayerCallout', None), ('runtime_essentials_next:walkthroughPlayerDynamic', None), ('runtime_essentials_next:walkthroughTestCustomAction', None), ('runtime_essentials_next:walkthroughTestLocatorizedSubComponent', None), ('runtime_essentials_next:walkthroughTestPlayerEnvironment', None), ('runtime_industries_actionplan:actionPlanPanel', None), ('runtime_industries_actionplan:addDocumentChecklistItemModal', None), ('runtime_industries_actionplan:addReusableTask', None), ('runtime_industries_actionplan:addTaskModal', None), ('runtime_industries_actionplan:assessmentTaskAddTaskModal', None), ('runtime_industries_actionplan:assessmentTaskItemListCardRecord', None), ('runtime_industries_actionplan:baseItemListCard', None), ('runtime_industries_actionplan:checklistItemList', None), ('runtime_industries_actionplan:checklistItemManager', None), ('runtime_industries_actionplan:highlightsPanel', None), ('runtime_industries_actionplan:highlightsPanelDesign', None), ('runtime_industries_actionplan:itemListCard', None), ('runtime_industries_actionplan:itemListCardDCI', None), ('runtime_industries_actionplan:itemListCardDesign', None), ('runtime_industries_actionplan:itemListCardRecord', None), ('runtime_industries_actionplan:itemListCardRecordDocumentChecklistItem', None), ('runtime_industries_actionplan:itemListCardRecordTask', None), ('runtime_industries_actionplan:listCard', None), ('runtime_industries_actionplan:listCardDesign', None), ('runtime_industries_actionplan:listCardRecord', None), ('runtime_industries_actionplan:taskList', None), ('runtime_industries_actionplan:taskManager', None), ('runtime_industries_actionplan:templateItemManagerDesign', None), ('runtime_industries_actionplan:versionDataManager', None), ('runtime_industries_fsc:relationshipVisualizer', None), ('runtime_industries_healthcare:associationCard', None), ('runtime_industries_healthcare:associationCardGrid', None), ('runtime_industries_healthcare:associationCardTask', None), ('runtime_industries_healthcare:associationList', None), ('runtime_industries_healthcare:associationRelatedRecords', None), ('runtime_industries_healthcare:careProgramGrid', None), ('runtime_industries_healthcare:consentListViewSection', None), ('runtime_industries_healthcare:consentListViewSectionItem', None), ('runtime_industries_healthcare:createAndViewTasks', None), ('runtime_industries_healthcare:createAssociation', None), ('runtime_industries_healthcare:documentViewer', None), ('runtime_industries_healthcare:documentViewerToolbar', None), ('runtime_industries_healthcare:emptyState', None), ('runtime_industries_healthcare:entityLookup', None), ('runtime_industries_healthcare:entitySelector', None), ('runtime_industries_healthcare:flowFooter', None), ('runtime_industries_healthcare:programCard', None), ('runtime_industries_healthcare:selectAssociation', None), ('runtime_industries_insurance:claimAdjusterContainer', None), ('runtime_industries_insurance:emptyState', None), ('runtime_industries_insurance:genericOutputField', None), ('runtime_industries_insurance:hoverListPanel', None), ('runtime_industries_insurance:keyMetric', None), ('runtime_industries_insurance:keyMetricsDesignInfo', None), ('runtime_industries_insurance:lifeEvent', None), ('runtime_industries_insurance:lifeEventsDesignInfo', None), ('runtime_industries_insurance:message', None), ('runtime_industries_insurance:performanceCharts', None), ('runtime_industries_insurance:policies', None), ('runtime_industries_insurance:policiesKPI', None), ('runtime_industries_insurance:policiesKPIElement', None), ('runtime_industries_insurance:policyTypeAccordion', None), ('runtime_industries_insurance:policyTypesContainer', None), ('runtime_industries_insurance:popover', None), ('runtime_industries_insurance:quickActionPanel', None), ('runtime_industries_lending:flowButton', None), ('runtime_industries_lending:flowCheckbox', None), ('runtime_industries_lending:flowFooter', None), ('runtime_industries_lending:flowPickArray', None), ('runtime_industries_lending:flowPickEnum', None), ('runtime_industries_loyalty:addPartner', None), ('runtime_industries_loyalty:addProgramCurrency', None), ('runtime_industries_loyalty:addProgramTier', None), ('runtime_industries_loyalty:addProgramTierGroup', None), ('runtime_industries_loyalty:assignProductCategories', None), ('runtime_industries_loyalty:assignProductPopup', None), ('runtime_industries_loyalty:assignProducts', None), ('runtime_industries_loyalty:associatePartnerPopup', None), ('runtime_industries_loyalty:associatePartnerProduct', None), ('runtime_industries_loyalty:currencyListView', None), ('runtime_industries_loyalty:loyaltyLVMDataProvider', None), ('runtime_industries_loyalty:loyaltyMemberHome', None), ('runtime_industries_loyalty:loyaltyMemberHomeNav', None), ('runtime_industries_loyalty:loyaltyPartnerHome', None), ('runtime_industries_loyalty:loyaltyPartnerHomeNav', None), ('runtime_industries_loyalty:loyaltyPartnerProductList', None), ('runtime_industries_loyalty:loyaltyProgram', None), ('runtime_industries_loyalty:loyaltyProgramMemberList', None), ('runtime_industries_loyalty:loyaltyProgramPartnerList', None), ('runtime_industries_loyalty:loyaltyProgramProductList', None), ('runtime_industries_loyalty:loyaltyTierGroupView', None), ('runtime_industries_loyalty:loyaltyUtil', None), ('runtime_industries_loyalty:newLoyaltyProgramCurrency', None), ('runtime_industries_loyalty:partnerDetailsBody', None), ('runtime_industries_loyalty:partnerHeaderContainer', None), ('runtime_industries_loyalty:programDetails', None), ('runtime_industries_loyalty:programDetailsBody', None), ('runtime_industries_loyalty:programTierGroupList', None), ('runtime_industries_loyalty:tierListView', None), ('runtime_industries_publicsector:deleteMeFirst', None), ('runtime_industries_publicsector:viewInspectionHistoryContainer', None), ('runtime_industries_referralscoring:emptyState', None), ('runtime_industries_referralscoring:topReferralHeader', None), ('runtime_industries_referralscoring:topReferralItem', None), ('runtime_industries_referralscoring:topReferralList', None), ('runtime_industries_referralscoring:topReferralSelection', None), ('runtime_industries_referralscoring:topReferrals', None), ('runtime_industries_retailexecution:retailExecutionContainer', None), ('runtime_industries_retailexecution:retailExecutionSettings', None), ('runtime_industries_retailexecution:visitRecommendation', None), ('runtime_industries_utilizationmanagement:careRequestDetailPanelWrapper', None), ('runtime_industries_utilizationmanagement:careRequestFormSection', None), ('runtime_industries_utilizationmanagement:createCareRequestForm', None), ('runtime_industries_visit:attachmentListManager', None), ('runtime_industries_visit:notesListManager', None), ('runtime_industries_visit:questionsManager', None), ('runtime_industries_visit:searchManager', None), ('runtime_industries_visit:visitActionManager', None), ('runtime_industries_visit:visitDummy', None), ('runtime_industries_visit:visitOverviewManager', None), ('runtime_industries_visit:visitTaskListManager', None), ('runtime_industries_visit:visitsListManager', None), ('runtime_industries_visit:visitsMapDataManager', None), ('runtime_ladybug:ladybug', None), ('runtime_ladybug:ladybugContent', None), ('runtime_ladybug:ladybugContentTrigger', None), ('runtime_marketing_btobma:addToSegment', None), ('runtime_marketing_btobma:b2bma_container', None), ('runtime_marketing_btobma:b2bma_home', None), ('runtime_marketing_btobma:embeddedCampaignDashboard', None), ('runtime_marketing_btobma:engagementProgramView', None), ('runtime_marketing_btobma:engagementProgramViewSubstitute', None), ('runtime_marketing_btobma:iframe', None), ('runtime_marketing_btobma:marketingLinkContentTargetUrlInput', None), ('runtime_marketing_btobma:nav', None), ('runtime_marketing_btobma:navItem', None), ('runtime_marketing_btobma:objectHome', None), ('runtime_marketing_btobma:piFrame', None), ('runtime_marketing_btobma:publishPardotContentDialog', None), ('runtime_marketing_btobma:snippetDeveloperNameField', None), ('runtime_marketing_btobma:snippetInputRichText', None), ('runtime_marketing_btobma:snippetNameField', None), ('runtime_mc2:auraPlaceholder', None), ('runtime_mobilesapp:businessCardReader', None), ('runtime_mobilesapp:businessCardReaderInfoComponent', None), ('runtime_platform_actions:actionListEditor', None), ('runtime_platform_actions:actionListEditorItemEditor', None), ('runtime_platform_actions:quickActionWrapper', None), ('runtime_platform_optimizer:govCloudPrompt', None), ('runtime_platform_optimizer:orgMetricObjectHome', None), ('runtime_platform_optimizer:orgMetricRecordHome', None), ('runtime_platform_optimizer:runOptimizerAction', None), ('runtime_platform_sfdx:linkNamespace', None), ('runtime_platform_sfdx:modalPanel', None), ('runtime_platform_testhistory:apexTestExecutionPage', None), ('runtime_platform_testhistory:fieldGrouper', None), ('runtime_platform_testhistory:outputDuration', None), ('runtime_platform_testhistory:selectApexJob', None), ('runtime_platformservices_condBuilder:conditionList', None), ('runtime_platformservices_condBuilder:conditionListRow', None), ('runtime_platformservices_condBuilder:inputOperator', None), ('runtime_platformservices_condBuilder:inputValue', None), ('runtime_platformservices_transactionSecurity:alohaRouter', None), ('runtime_platformservices_transactionSecurity:conditionLogicInput', None), ('runtime_platformservices_transactionSecurity:enableTransactionSecurity', None), ('runtime_platformservices_transactionSecurity:home', None), ('runtime_platformservices_transactionSecurity:homeContainer', None), ('runtime_platformservices_transactionSecurity:policyApexSetupFlowEditor', None), ('runtime_platformservices_transactionSecurity:policyConditionBuilderSetupFlowEditor', None), ('runtime_platformservices_transactionSecurity:policyDetail', None), ('runtime_platformservices_transactionSecurity:policyDetailCard', None), ('runtime_platformservices_transactionSecurity:policyEventNameInput', None), ('runtime_platformservices_transactionSecurity:policyFlowActionNamingStep', None), ('runtime_platformservices_transactionSecurity:policyFlowEventApexChooserStep', None), ('runtime_platformservices_transactionSecurity:policyFlowEventNameConditionBuilderStep', None), ('runtime_platformservices_transactionSecurity:policyLegacyAndRealTimeEventsSetupFlow', None), ('runtime_platformservices_transactionSecurity:policyLegacySetupFlow', None), ('runtime_platformservices_transactionSecurity:policyList', None), ('runtime_platformservices_transactionSecurity:policyNameDescriptionInput', None), ('runtime_platformservices_transactionSecurity:policyTypeChooserStep', None), ('runtime_platformservices_transactionSecurity:policyTypeOption', None), ('runtime_platformservices_transactionSecurity:preferencePage', None), ('runtime_platformservices_transactionSecurity:transactionSecurityModal', None), ('runtime_platformservices_transactionSecurity:welcomeMat', None), ('runtime_quip:enableIsotope', None), ('runtime_quip:isotopeConfiguration', None), ('runtime_quip:isotopeCopyableLinkTile', None), ('runtime_quip:isotopeEmailTemplatePanelContent', None), ('runtime_quip:isotopeEmailTemplateTile', None), ('runtime_quip:isotopeSetupPage', None), ('runtime_quip:isotopeSetupTile', None), ('runtime_quip:outputQuipDocumentType', None), ('runtime_quip:quipAuthPanel', None), ('runtime_quip:quipCardLightning', None), ('runtime_quip:quipCardLightningMobile', None), ('runtime_quip:quipCardRecommendations', None), ('runtime_quip:quipItemSuggested', None), ('runtime_quip:quipItemsContainer', None), ('runtime_quip:quipNotifications', None), ('runtime_quip:quipSetupAppBuilderStep', None), ('runtime_quip:quipSetupConfigurePermissionsPanel', None), ('runtime_quip:quipSetupConfigurePermissionsStep', None), ('runtime_quip:quipSetupConfigureXdsStep', None), ('runtime_quip:quipSetupEnableQuipPanel', None), ('runtime_quip:quipSetupHome', None), ('runtime_quip:quipSetupNotComplete', None), ('runtime_quip:quipSetupOptionalSettingsPanel', None), ('runtime_quip:quipSetupProvisioningStep', None), ('runtime_quip:quipSetupStartTrialPanel', None), ('runtime_quip:quipSetupStatusItem', None), ('runtime_quip:relatedQuipItems', None), ('runtime_quip:rollupActions', None), ('runtime_quip:suggestedQuipDocuments', None), ('runtime_quip:viewAllLinkedQuipItems', None), ('runtime_quip:viewAllRollupQuipItems', None), ('runtime_quip:viewAllTabContent', None), ('runtime_retail_runtime:baseDashboardTemplate', None), ('runtime_retail_runtime:createRecordButton', None), ('runtime_retail_runtime:customerProfileActionMenu', None), ('runtime_retail_runtime:customerProfileSearch', None), ('runtime_retail_runtime:customerSearchResults', None), ('runtime_retail_runtime:emptyState', None), ('runtime_retail_runtime:retailCustomerProfile', None), ('runtime_retail_runtime:retailOrderList', None), ('runtime_retail_runtime:retailOrderListLVMDataManager', None), ('runtime_retail_runtime:retailOrderListLink', None), ('runtime_retail_runtime:retailOrderPayments', None), ('runtime_retail_runtime:retailOrderShipments', None), ('runtime_retail_runtime:retailOrderSummary', None), ('runtime_retail_runtime:retailOrderTimeStamp', None), ('runtime_retail_runtime:retailOrderTotals', None), ('runtime_retail_runtime:retailServiceAgentContainer', None), ('runtime_retail_runtime:template', None), ('runtime_rtc:actions', None), ('runtime_rtc:googleSetupPage', None), ('runtime_rtc:googleSheetsUserSettings', None), ('runtime_rtc:googleSheetsUserSettingsPage', None), ('runtime_rtc:launchRtc', None), ('runtime_rtc:mobilePresence', None), ('runtime_rtc:mobileRtcContainer', None), ('runtime_rtc:oauthRedirect', None), ('runtime_rtc:presenceStatus', None), ('runtime_rtc:recordChatRoomCreate', None), ('runtime_rtc:rtcConversation', None), ('runtime_rtc:rtcDiscoveryBanner', None), ('runtime_rtc:rtcGlobalSignIn', None), ('runtime_rtc:rtcPreferenceCommon', None), ('runtime_rtc:rtcPreferenceSetup', None), ('runtime_rtc:rtcPresenceBase', None), ('runtime_rtc:rtcPresenceDesignInfo', None), ('runtime_rtc:rtcPresenceDesignSubstitute', None), ('runtime_rtc:rtcUserSettingsPage', None), ('runtime_rtc:signin', None), ('runtime_rtc:signout', None), ('runtime_rtc_spark:recentConversation', None), ('runtime_rtc_spark:signin', None), ('runtime_rtc_spark:signout', None), ('runtime_rtc_spark:spaceRow', None), ('runtime_rtc_spark:spaceStation', None), ('runtime_rtc_spark:spacesAutocompleteDataProvider', None), ('runtime_rtc_spark:sparkConversation', None), ('runtime_rtc_spark:sparkConversationSetup', None), ('runtime_rtc_spark:sparkDiscoveryBanner', None), ('runtime_rtc_spark:sparkForSalesforce', None), ('runtime_rtc_spark:sparkGlobalSignIn', None), ('runtime_rtc_spark:sparkPresence', None), ('runtime_rtc_spark:sparkPresenceDesignInfo', None), ('runtime_rtc_spark:sparkPresenceDesignSubstitute', None), ('runtime_rtc_spark:sparkRoom', None), ('runtime_rtc_spark:sparkSetupPage', None), ('runtime_rtc_spark:sparkSpaces', None), ('runtime_rtc_spark:sparkSpacesDesignSubstitute', None), ('runtime_rtc_spark:sparkUserSettings', None), ('runtime_rtc_spark:webExMeetingView', None), ('runtime_rtc_spark:webexComposer', None), ('runtime_rtc_spark:webexComposerDesignSubstitute', None), ('runtime_rtc_spark:webexDesignInfo', None), ('runtime_sales_activities:activityPanel', None), ('runtime_sales_activities:activityPanelDesignInfo', None), ('runtime_sales_activities:activityRecommendedConnections', None), ('runtime_sales_activities:activityRecommendedConnectionsDesignSubstitute', None), ('runtime_sales_activities:activityRecommendedConnectionsEntry', None), ('runtime_sales_activities:activityRecommendedConnectionsListCard', None), ('runtime_sales_activities:activityRecommendedConnectionsListView', None), ('runtime_sales_activities:activityRecommendedConnectionsWidget', None), ('runtime_sales_activities:activityRecurrenceDayOfWeek', None), ('runtime_sales_activities:activityRecurrenceDayOfYear', None), ('runtime_sales_activities:activityRecurrenceDayOfYearTest', None), ('runtime_sales_activities:activityRecurrenceDaysMonthlyMenu', None), ('runtime_sales_activities:activityRecurrenceDaysMonthlyMenuTest', None), ('runtime_sales_activities:activityRecurrenceIntervalMenu', None), ('runtime_sales_activities:activityRecurrenceIntervalMenuTest', None), ('runtime_sales_activities:activityRelatedListRow', None), ('runtime_sales_activities:activityRelatedListStencil', None), ('runtime_sales_activities:activityReminderSettings', None), ('runtime_sales_activities:activitySubject', None), ('runtime_sales_activities:activitySubjectListView', None), ('runtime_sales_activities:activityTime', None), ('runtime_sales_activities:activityTimeline2EmailStreamDetail', None), ('runtime_sales_activities:activityTimeline2FilterMenu', None), ('runtime_sales_activities:activityTimeline2InsightPopover', None), ('runtime_sales_activities:activityTimelineActivityGroup', None), ('runtime_sales_activities:activityTimelineBaseRow', None), ('runtime_sales_activities:activityTimelineEACPopover', None), ('runtime_sales_activities:activityTimelineEmailTracking', None), ('runtime_sales_activities:activityTimelineEventStreamAttendees', None), ('runtime_sales_activities:activityTimelineEventStreamDetail', None), ('runtime_sales_activities:activityTimelineEventStreamDetailStencil', None), ('runtime_sales_activities:activityTimelineEventStreamTime', None), ('runtime_sales_activities:activityTimelineFixedLayout', None), ('runtime_sales_activities:activityTimelineFixedLayoutExpandedSiqEmail', None), ('runtime_sales_activities:activityTimelineFixedLayoutExpandedSiqEvent', None), ('runtime_sales_activities:activityTimelineFixedLayoutExpandedTaskEventStencil', None), ('runtime_sales_activities:activityTimelineFixedStencil', None), ('runtime_sales_activities:activityTimelineInsightLabel', None), ('runtime_sales_activities:activityTimelineInsights', None), ('runtime_sales_activities:activityTimelineLabel', None), ('runtime_sales_activities:activityTimelineRowExpand', None), ('runtime_sales_activities:activityTimelineVirtualList', None), ('runtime_sales_activities:activityViewAllContainer', None), ('runtime_sales_activities:activityViewAllError', None), ('runtime_sales_activities:activityViewAllList', None), ('runtime_sales_activities:activityViewAllTemplate', None), ('runtime_sales_activities:baseActivityRecurringCreate', None), ('runtime_sales_activities:baseActivityReminderView', None), ('runtime_sales_activities:baseTaskStatus', None), ('runtime_sales_activities:composerPageBlockSectionEdit', None), ('runtime_sales_activities:emailStreamDetailInsights', None), ('runtime_sales_activities:emailStreamReplyActions', None), ('runtime_sales_activities:eventRecurrenceDayOfWeek', None), ('runtime_sales_activities:eventRecurrenceDayOfYear', None), ('runtime_sales_activities:eventRecurrenceDaysMonthlyMenu', None), ('runtime_sales_activities:eventRecurrenceIntervalMenu', None), ('runtime_sales_activities:eventRecurrenceStartEnd', None), ('runtime_sales_activities:eventRecurring2PatternEdit', None), ('runtime_sales_activities:eventRecurring2PatternView', None), ('runtime_sales_activities:eventRecurringLegacyPatternView', None), ('runtime_sales_activities:eventRecurringPatternEdit', None), ('runtime_sales_activities:eventRecurringPatternView', None), ('runtime_sales_activities:eventReminderCreate', None), ('runtime_sales_activities:eventReminderView', None), ('runtime_sales_activities:followUpHandler', None), ('runtime_sales_activities:manyWhoInputLookup', None), ('runtime_sales_activities:manyWhoName', None), ('runtime_sales_activities:manyWhoNameCompact', None), ('runtime_sales_activities:multipleOwners', None), ('runtime_sales_activities:outputActivityDateTime', None), ('runtime_sales_activities:outputLookupWithAlternateDetailId', None), ('runtime_sales_activities:requestAccessSIQ', None), ('runtime_sales_activities:requestAccessSIQFixedLayout', None), ('runtime_sales_activities:singleOwner', None), ('runtime_sales_activities:siqCherrypickingLink', None), ('runtime_sales_activities:siqCherrypickingSettings', None), ('runtime_sales_activities:siqCherrypickingSettingsConfirmationBody', None), ('runtime_sales_activities:siqCherrypickingSettingsConfirmationFooter', None), ('runtime_sales_activities:statelessTaskStatus', None), ('runtime_sales_activities:taskActivityDateOverride', None), ('runtime_sales_activities:taskActivityDateOverrideMobile', None), ('runtime_sales_activities:taskBorderLayout', None), ('runtime_sales_activities:taskCommon', None), ('runtime_sales_activities:taskCompactStencil', None), ('runtime_sales_activities:taskContent', None), ('runtime_sales_activities:taskContentFields', None), ('runtime_sales_activities:taskContentInner', None), ('runtime_sales_activities:taskDetailPanelWrapper', None), ('runtime_sales_activities:taskDetails', None), ('runtime_sales_activities:taskDueDate', None), ('runtime_sales_activities:taskFilterMenuDesktop', None), ('runtime_sales_activities:taskHighlights', None), ('runtime_sales_activities:taskListDataManager', None), ('runtime_sales_activities:taskListHeader', None), ('runtime_sales_activities:taskListHeaderBase', None), ('runtime_sales_activities:taskListHeaderPhone', None), ('runtime_sales_activities:taskListViewsPopover', None), ('runtime_sales_activities:taskNewButton', None), ('runtime_sales_activities:taskOverdue', None), ('runtime_sales_activities:taskQuickClose', None), ('runtime_sales_activities:taskQuickCreateManager', None), ('runtime_sales_activities:taskRecurrenceDayOfWeek', None), ('runtime_sales_activities:taskRecurrenceDayOfYear', None), ('runtime_sales_activities:taskRecurrenceDaysMonthlyMenu', None), ('runtime_sales_activities:taskRecurrenceIntervalMenu', None), ('runtime_sales_activities:taskRecurrenceStartEnd', None), ('runtime_sales_activities:taskRecurringCreate', None), ('runtime_sales_activities:taskRecurringCreateLatestEndDateCalculator', None), ('runtime_sales_activities:taskRecurringView', None), ('runtime_sales_activities:taskReminderCreate', None), ('runtime_sales_activities:taskReminderView', None), ('runtime_sales_activities:taskRow', None), ('runtime_sales_activities:taskSplitList', None), ('runtime_sales_activities:taskSplitViewListRecord', None), ('runtime_sales_activities:taskStatus', None), ('runtime_sales_activities:taskStatusAction', None), ('runtime_sales_activities:taskStatusBroker', None), ('runtime_sales_activities:taskStatusButton', None), ('runtime_sales_activities:taskStatusModal', None), ('runtime_sales_activities:tempDepend', None), ('runtime_sales_activities:timelineFixedStencilWrapper', None), ('runtime_sales_activities:todayTaskContainer', None), ('runtime_sales_activities:todayTasksCardDataManager', None), ('runtime_sales_activities:todayTasksCardDataProvider', None), ('runtime_sales_activities:todayTasksFilter', None), ('runtime_sales_activities:todayTasksList', None), ('runtime_sales_ade:acceptSuggestion', None), ('runtime_sales_ade:rejectSuggestion', None), ('runtime_sales_ade:reviewSuggestion', None), ('runtime_sales_billingpayments:cardPaymentMethod', None), ('runtime_sales_cadence:addToCadence', None), ('runtime_sales_cadence:cadenceStepsCard', None), ('runtime_sales_cadence:cadenceStepsCardStepList', None), ('runtime_sales_cadence:cadenceStepsCardStepListItem', None), ('runtime_sales_cadence:cloneCadence', None), ('runtime_sales_cadence:createCadence', None), ('runtime_sales_cadence:deleteCadence', None), ('runtime_sales_cadence:openCadenceBuilder', None), ('runtime_sales_cadence:removeAllTargetsFromCadence', None), ('runtime_sales_cadence:removeFromCadence', None), ('runtime_sales_cadencebuilder:cadenceBuilder', None), ('runtime_sales_campaign:addMember', None), ('runtime_sales_campaign:addMemberStatus', None), ('runtime_sales_campaign:changeDefaultStatus', None), ('runtime_sales_campaign:influenceRelatedList', None), ('runtime_sales_campaign:massAddMember', None), ('runtime_sales_campaign:massRemoveMembers', None), ('runtime_sales_campaign:massUpdateMemberStatus', None), ('runtime_sales_campaign:memberRecordType', None), ('runtime_sales_campaign:memberRelatedList', None), ('runtime_sales_campaign:memberStatus', None), ('runtime_sales_campaign:metricsPanel', None), ('runtime_sales_campaign:percentageMetricsCard', None), ('runtime_sales_campaign:rawNumMetricsCard', None), ('runtime_sales_campaign:relatedAddMember', None), ('runtime_sales_commerce:activateDeactivateTerminateCommerceEntities', None), ('runtime_sales_commerce:activateOrderEntity', None), ('runtime_sales_commerce:busopEntityNameLookup', None), ('runtime_sales_commerce:createBillingScheduleFromOrderItem', None), ('runtime_sales_dedupe:bulkDedupeJobLink', None), ('runtime_sales_dedupe:bulkDedupeJobList', None), ('runtime_sales_dedupe:bulkDedupeJobListDataProvider', None), ('runtime_sales_dedupe:bulkDedupeJobListView', None), ('runtime_sales_dedupe:bulkDedupeJobResult', None), ('runtime_sales_dedupe:bulkDedupeJobRunnable', None), ('runtime_sales_dedupe:drsParentLink', None), ('runtime_sales_dedupe:initiateBulkJobPanel', None), ('runtime_sales_dedupe:initiateBulkJobSection', None), ('runtime_sales_dedupe:matchedLead', None), ('runtime_sales_dedupe:matchedLeadField', None), ('runtime_sales_dedupe:matchedLeadsDesignInfo', None), ('runtime_sales_dedupe:matchedLeadsDesignSubstitute', None), ('runtime_sales_dedupe:matchedLeadsList', None), ('runtime_sales_dedupe:matchedLeadsPanel', None), ('runtime_sales_dedupe:matchedLeadsWrapper', None), ('runtime_sales_emailtemplateui:basePublisher', None), ('runtime_sales_emailtemplateui:emailTemplateListDataManager', None), ('runtime_sales_emailtemplateui:emailTemplateMergeFieldModal', None), ('runtime_sales_emailtemplateui:emailTemplateObjectHome', None), ('runtime_sales_emailtemplateui:emailToolbar', None), ('runtime_sales_emailtemplateui:enhancedEmailTemplateListDataManager', None), ('runtime_sales_emailtemplateui:enhancedEmailTemplateMergeFieldModal', None), ('runtime_sales_emailtemplateui:enhancedEmailTemplateObjectHome', None), ('runtime_sales_emailtemplateui:enhancedMergeFieldRowTemplate', None), ('runtime_sales_emailtemplateui:inputEmailTemplateBody', None), ('runtime_sales_emailtemplateui:inputEnhancedEmailTemplateBody', None), ('runtime_sales_emailtemplateui:inputEnhancedLetterheadHeaderFooter', None), ('runtime_sales_emailtemplateui:insertEmailTemplateFieldsDialog', None), ('runtime_sales_emailtemplateui:insertEmailTemplateFieldsRecordHomeDialog', None), ('runtime_sales_emailtemplateui:insertEnhancedEmailTemplateFieldsDialog', None), ('runtime_sales_emailtemplateui:mergeFieldModal', None), ('runtime_sales_emailtemplateui:mergeFieldRowTemplate', None), ('runtime_sales_emailtemplateui:mergeableEntityTemplate', None), ('runtime_sales_emailtemplateui:outputEmailTemplateBody', None), ('runtime_sales_emailtemplateui:outputEnhancedEmailTemplateBody', None), ('runtime_sales_emailtemplateui:publisherMergeField', None), ('runtime_sales_emailtemplateui:publisherTemplateInsertDialog', None), ('runtime_sales_emailtemplateui:publisherTemplateQuickLink', None), ('runtime_sales_emailtemplateui:publisherTemplateSaveDialog', None), ('runtime_sales_emailtemplateui:publisherTemplateUpdateDialog', None), ('runtime_sales_emailtemplateui:recordHomeFolder', None), ('runtime_sales_emailtemplateui:recordHomeFolderPicklist', None), ('runtime_sales_emailtemplateui:recordHomeRelatedEntityPicklist', None), ('runtime_sales_emailtemplateui:templateDataProvider', None), ('runtime_sales_emailtemplateui:templateErrors', None), ('runtime_sales_emailtemplateui:templateInsertDialog', None), ('runtime_sales_emailtemplateui:templateInsertDialogFooter', None), ('runtime_sales_emailtemplateui:templateItem', None), ('runtime_sales_emailtemplateui:templateSaveDialog', None), ('runtime_sales_emailtemplateui:templateSaveDialogFooter', None), ('runtime_sales_emailtemplateui:templateSaveDialogHeader', None), ('runtime_sales_emailtemplateui:templateSetup', None), ('runtime_sales_emailtemplateui:templateWarningBanner', None), ('runtime_sales_forecasting:forecastingAdjustmentDialog', None), ('runtime_sales_forecasting:forecastingAdjustmentErrorDialog', None), ('runtime_sales_forecasting:forecastingAdjustmentPopup', None), ('runtime_sales_forecasting:forecastingBellCurve', None), ('runtime_sales_forecasting:forecastingCellCurrency', None), ('runtime_sales_forecasting:forecastingCellNumber', None), ('runtime_sales_forecasting:forecastingCellPredictionCurrency', None), ('runtime_sales_forecasting:forecastingCellQuotaCurrency', None), ('runtime_sales_forecasting:forecastingCellQuotaNumber', None), ('runtime_sales_forecasting:forecastingCellText', None), ('runtime_sales_forecasting:forecastingCurrencyRecordCollection', None), ('runtime_sales_forecasting:forecastingCustomColumnHeader', None), ('runtime_sales_forecasting:forecastingDisplayAsMenu', None), ('runtime_sales_forecasting:forecastingDisplayedFamilyRecordCollection', None), ('runtime_sales_forecasting:forecastingDropdownMenu', None), ('runtime_sales_forecasting:forecastingGenericFeedback', None), ('runtime_sales_forecasting:forecastingGraphPopup', None), ('runtime_sales_forecasting:forecastingGraphView', None), ('runtime_sales_forecasting:forecastingHeader', None), ('runtime_sales_forecasting:forecastingHeroShotChart', None), ('runtime_sales_forecasting:forecastingHeroShotChartGraph', None), ('runtime_sales_forecasting:forecastingHeroShotChartHeader', None), ('runtime_sales_forecasting:forecastingHeroShotChartKPIs', None), ('runtime_sales_forecasting:forecastingHierarchyBreadcrumb', None), ('runtime_sales_forecasting:forecastingHierarchyBreadcrumbNode', None), ('runtime_sales_forecasting:forecastingHierarchyBreadcrumbOverflowNode', None), ('runtime_sales_forecasting:forecastingJumpToListProvider', None), ('runtime_sales_forecasting:forecastingListView', None), ('runtime_sales_forecasting:forecastingListViewProvider', None), ('runtime_sales_forecasting:forecastingMassEditQuotaPanel', None), ('runtime_sales_forecasting:forecastingMyTerritoriesOrForecasts', None), ('runtime_sales_forecasting:forecastingNoAccessSplashMessage', None), ('runtime_sales_forecasting:forecastingNoTerritoryFoundSplashMessage', None), ('runtime_sales_forecasting:forecastingNotEnabledSplashMessage', None), ('runtime_sales_forecasting:forecastingOppLVMDataManager', None), ('runtime_sales_forecasting:forecastingOppListContainer', None), ('runtime_sales_forecasting:forecastingOppListSummary', None), ('runtime_sales_forecasting:forecastingOppListViewManager', None), ('runtime_sales_forecasting:forecastingOrgShapeSplashPage', None), ('runtime_sales_forecasting:forecastingPeriodRange', None), ('runtime_sales_forecasting:forecastingPeriodRecord', None), ('runtime_sales_forecasting:forecastingPredictionColumnHeader', None), ('runtime_sales_forecasting:forecastingPredictionPanel', None), ('runtime_sales_forecasting:forecastingRecordCollection', None), ('runtime_sales_forecasting:forecastingSettingsMenu', None), ('runtime_sales_forecasting:forecastingSharePanel', None), ('runtime_sales_forecasting:forecastingSharePanelSharedGrid', None), ('runtime_sales_forecasting:forecastingTab', None), ('runtime_sales_forecasting:forecastingTreeView', None), ('runtime_sales_forecasting:forecastingTreeViewDataManager', None), ('runtime_sales_forecasting:forecastingTypeRecordCollection', None), ('runtime_sales_forecasting:forecastingTypesNotActiveQuotaSettingsSplashMessage', None), ('runtime_sales_forecasting:forecastingUserRecord', None), ('runtime_sales_forecasting:forecastingUserRoleOrTerritoryRecord', None), ('runtime_sales_forecasting:forecastingUserRolePermNotEnabledMessage', None), ('runtime_sales_hvs:baseHvsListGroupData', None), ('runtime_sales_hvs:callCategoryDispositionFeature', None), ('runtime_sales_hvs:callCategoryDispositionList', None), ('runtime_sales_hvs:callCategoryDispositionListItem', None), ('runtime_sales_hvs:createMyList', None), ('runtime_sales_hvs:highVelocitySalesExpandedSetup', None), ('runtime_sales_hvs:highVelocitySalesSetup', None), ('runtime_sales_hvs:highVelocitySalesSetupFeatureSection', None), ('runtime_sales_hvs:highVelocitySalesSetupPreferenceToggleRow', None), ('runtime_sales_hvs:highVelocitySalesSetupRow', None), ('runtime_sales_hvs:hvsCustomScoreCombobox', None), ('runtime_sales_hvs:hvsFeatureSetupContact', None), ('runtime_sales_hvs:hvsFeatureSetupDialer', None), ('runtime_sales_hvs:hvsFeatureSetupLead', None), ('runtime_sales_hvs:hvsFeatureSetupPersonAccount', None), ('runtime_sales_hvs:hvsFeatureSetupWorkQueue', None), ('runtime_sales_hvs:hvsLearningPath', None), ('runtime_sales_hvs:hvsLearningPathSection', None), ('runtime_sales_hvs:hvsLearningPathStep', None), ('runtime_sales_hvs:hvsOnboardingStepTopic', None), ('runtime_sales_hvs:hvsWelcomeMat', None), ('runtime_sales_hvs:hvsWelcomeMatHeader', None), ('runtime_sales_hvs:hvsWelcomeMatPrompt', None), ('runtime_sales_hvs:hvsWelcomeMatTile', None), ('runtime_sales_hvs:myFeedContainer', None), ('runtime_sales_hvs:myListGroupsContainer', None), ('runtime_sales_hvs:salesAlertManager', None), ('runtime_sales_hvs:viewDetailsDockedPanel', None), ('runtime_sales_hvs:workQueueActionsContainer', None), ('runtime_sales_hvs:workQueueContainer', None), ('runtime_sales_hvs:workQueueFilterContainer', None), ('runtime_sales_hvs:workQueueFilterMenu', None), ('runtime_sales_hvs:workQueueList', None), ('runtime_sales_hvs:workQueueListGroupsContainer', None), ('runtime_sales_insights:accountInsightsContainer', None), ('runtime_sales_insights:accountInsightsDataProvider', None), ('runtime_sales_insights:accountRationaleContainer', None), ('runtime_sales_insights:accountRationaleNewsArticle', None), ('runtime_sales_insights:alohaInsightsContainer', None), ('runtime_sales_insights:beginFreemiumButton', None), ('runtime_sales_insights:campaignInsightsContainer', None), ('runtime_sales_insights:campaignInsightsContainerInfo', None), ('runtime_sales_insights:campaignInsightsRationale', None), ('runtime_sales_insights:contactInsightsContainer', None), ('runtime_sales_insights:contactInsightsContainerInfo', None), ('runtime_sales_insights:contactSuggestionRationaleContainer', None), ('runtime_sales_insights:einsteinHeader', None), ('runtime_sales_insights:einsteinIcon', None), ('runtime_sales_insights:freemiumAdoptionBanner', None), ('runtime_sales_insights:freemiumAdoptionBannerAlohaWrapper', None), ('runtime_sales_insights:freemiumOptInOutPanel', None), ('runtime_sales_insights:genericInsightsDataProvider', None), ('runtime_sales_insights:highlightsPanelScoreRenderer', None), ('runtime_sales_insights:insightActionBeforeExecution', None), ('runtime_sales_insights:insightActivityDetails', None), ('runtime_sales_insights:insightActivityRequestAccess', None), ('runtime_sales_insights:insightsActionButton', None), ('runtime_sales_insights:insightsActionButtonBase', None), ('runtime_sales_insights:insightsActionManager', None), ('runtime_sales_insights:insightsActions', None), ('runtime_sales_insights:insightsBucket', None), ('runtime_sales_insights:insightsCard', None), ('runtime_sales_insights:insightsCardHeader', None), ('runtime_sales_insights:insightsCardHeaderTrigger', None), ('runtime_sales_insights:insightsCards', None), ('runtime_sales_insights:insightsCardsDataProvider', None), ('runtime_sales_insights:insightsContainer', None), ('runtime_sales_insights:insightsContainerInfo', None), ('runtime_sales_insights:insightsDataProvider', None), ('runtime_sales_insights:insightsDetailButtonMobile', None), ('runtime_sales_insights:insightsDetailWrapper', None), ('runtime_sales_insights:insightsEllieButton', None), ('runtime_sales_insights:insightsEllieIcon', None), ('runtime_sales_insights:insightsEmailCard', None), ('runtime_sales_insights:insightsFeedbackDropdown', None), ('runtime_sales_insights:insightsGenericFeedback', None), ('runtime_sales_insights:insightsMessage', None), ('runtime_sales_insights:insightsNewsChatterShare', None), ('runtime_sales_insights:insightsPanelBody', None), ('runtime_sales_insights:insightsPlatformActionSmall', None), ('runtime_sales_insights:insightsRationaleContainer', None), ('runtime_sales_insights:insightsRelevantLatestActivity', None), ('runtime_sales_insights:insightsSFDCEventCard', None), ('runtime_sales_insights:insightsSIQEventCard', None), ('runtime_sales_insights:insightsTaskCard', None), ('runtime_sales_insights:insightsTitleContainer', None), ('runtime_sales_insights:insightsTrendingIcon', None), ('runtime_sales_insights:insightsVoiceCard', None), ('runtime_sales_insights:listViewBehaviorInsightsContainer', None), ('runtime_sales_insights:listViewBehaviorScoreRenderer', None), ('runtime_sales_insights:listViewInsightsContainer', None), ('runtime_sales_insights:listViewScoreRenderer', None), ('runtime_sales_insights:opportunityIQInsightsDataProvider', None), ('runtime_sales_insights:scoreDial', None), ('runtime_sales_insights:topInsight', None), ('runtime_sales_lead:accept', None), ('runtime_sales_lead:convert', None), ('runtime_sales_lead:convertAccountSearchDataProvider', None), ('runtime_sales_lead:convertCreatePanelDesktop', None), ('runtime_sales_lead:convertDesktop', None), ('runtime_sales_lead:convertDesktopConsole', None), ('runtime_sales_lead:convertDupePanelDesktop', None), ('runtime_sales_lead:convertMatchPanelDesktop', None), ('runtime_sales_lead:convertMatchPanelDesktopSearchDataProvider', None), ('runtime_sales_lead:convertModal', None), ('runtime_sales_lead:convertModalFooter', None), ('runtime_sales_lead:convertOpportunityCheckBox', None), ('runtime_sales_lead:convertSectionDesktop', None), ('runtime_sales_lead:convertedCardStencilDesktop', None), ('runtime_sales_lead:convertedConfirmation', None), ('runtime_sales_lead:convertedConfirmationDesktop', None), ('runtime_sales_lead:convertedConfirmationFooter', None), ('runtime_sales_lead:convertedConfirmationFooterDesktop', None), ('runtime_sales_lead:dupePanelCardStencil', None), ('runtime_sales_lead:dupePanelCardStencilTester', None), ('runtime_sales_lead:leadConvertSettingsLoadingError', None), ('runtime_sales_lead:leadConvertSettingsPanel', None), ('runtime_sales_lead:linkedInLeadGen', None), ('runtime_sales_lead:linkedInLeadGenAdAccounts', None), ('runtime_sales_lead:linkedInLeadGenFieldMapping', None), ('runtime_sales_lead:linkedInLeadGenFieldMappingAutocomplete', None), ('runtime_sales_lead:linkedInLeadGenFieldMappingBasic', None), ('runtime_sales_lead:linkedInLeadGenFieldMappingDataProvider', None), ('runtime_sales_lead:linkedInLeadGenMapping', None), ('runtime_sales_lead:linkedInLeadGenMappingSection', None), ('runtime_sales_lead:linkedInLeadGenSetup', None), ('runtime_sales_lead:notConvertedToastMessage', None), ('runtime_sales_lead:pathAssistant', None), ('runtime_sales_lead:pillContainerAutoComplete', None), ('runtime_sales_lead:recordTypeOutputText', None), ('runtime_sales_leadiq:alohaInsightsContainer', None), ('runtime_sales_leadiq:engagementScoreDataProvider', None), ('runtime_sales_leadiq:leadInsights', None), ('runtime_sales_leadiq:leadInsightsAccordionItem', None), ('runtime_sales_leadiq:leadInsightsDataProvider', None), ('runtime_sales_leadiq:leadScoreDial', None), ('runtime_sales_leadiq:leadScoreInfo', None), ('runtime_sales_leadiq:listViewInsightsContainer', None), ('runtime_sales_leadiq:listViewScoreRenderer', None), ('runtime_sales_leadiq:recordHomeInsightsContainer', None), ('runtime_sales_leadiq:recordHomeInsightsContainerInfo', None), ('runtime_sales_merge:findDup', None), ('runtime_sales_merge:manualMergeFlow', None), ('runtime_sales_merge:manualMergeFlowLauncher', None), ('runtime_sales_merge:massManualMergeFlow', None), ('runtime_sales_merge:massManualMergeFlowLauncher', None), ('runtime_sales_merge:mergeCandidatesACRelErrorPage', None), ('runtime_sales_merge:mergeCandidatesList', None), ('runtime_sales_merge:mergeCandidatesListDataProvider', None), ('runtime_sales_merge:mergeCandidatesListPanel', None), ('runtime_sales_merge:mergeCandidatesListSection', None), ('runtime_sales_merge:mergeCandidatesPreviewCard', None), ('runtime_sales_merge:mergeCandidatesPreviewCardDesignInfo', None), ('runtime_sales_merge:mergeCandidatesPreviewCardSubstitute', None), ('runtime_sales_merge:mergeComparison', None), ('runtime_sales_merge:mergeConfirm', None), ('runtime_sales_merge:mergeDesktopConsole', None), ('runtime_sales_merge:mergeFlow', None), ('runtime_sales_merge:mergeFlowBroker', None), ('runtime_sales_merge:mergePanel', None), ('runtime_sales_merge:mergeSearch', None), ('runtime_sales_merge:mergeSearchFlow', None), ('runtime_sales_merge:mergeSearchLauncher', None), ('runtime_sales_merge:multiAddCandidates', None), ('runtime_sales_multiaddedit:filteredSearchDataProvider', None), ('runtime_sales_pathassistant:collapsibleDrawer', None), ('runtime_sales_pathassistant:daysInStage', None), ('runtime_sales_pathassistant:defaultTabHover', None), ('runtime_sales_pathassistant:desktopScroller', None), ('runtime_sales_pathassistant:pathAssistant', None), ('runtime_sales_pathassistant:pathAssistantBody', None), ('runtime_sales_pathassistant:pathAssistantCard', None), ('runtime_sales_pathassistant:pathAssistantCardDesktop', None), ('runtime_sales_pathassistant:pathAssistantCardMobile', None), ('runtime_sales_pathassistant:pathAssistantContainer', None), ('runtime_sales_pathassistant:pathAssistantDesignInfo', None), ('runtime_sales_pathassistant:pathAssistantDesignInfoDialogContent', None), ('runtime_sales_pathassistant:pathAssistantDesignSubstitute', None), ('runtime_sales_pathassistant:pathAssistantErrorOnLoad', None), ('runtime_sales_pathassistant:pathAssistantFields', None), ('runtime_sales_pathassistant:pathAssistantHeader', None), ('runtime_sales_pathassistant:pathAssistantInfo', None), ('runtime_sales_pathassistant:pathAssistantStepClosed', None), ('runtime_sales_pathassistant:pathAssistantTab', None), ('runtime_sales_pathassistant:pathAssistantTabSet', None), ('runtime_sales_pathassistant:tempDepend', None), ('runtime_sales_pathassistant:uiTabBar', None), ('runtime_sales_pathassistant:uiTabItem', None), ('runtime_sales_pipelineboard:genericPipelineDataProvider', None), ('runtime_sales_pipelineboard:pipelineColumnDataProvider', None), ('runtime_sales_pipelineboard:pipelineDataProvider', None), ('runtime_sales_pipelineboard:pipelineView', None), ('runtime_sales_pipelineboard:pipelineViewActionsList', None), ('runtime_sales_pipelineboard:pipelineViewAlertModal', None), ('runtime_sales_pipelineboard:pipelineViewCardItemStencil', None), ('runtime_sales_pipelineboard:pipelineViewCardItemStencilOutputText', None), ('runtime_sales_pipelineboard:pipelineViewCardItemStencilOutputTextArea', None), ('runtime_sales_pipelineboard:pipelineViewCardStencil', None), ('runtime_sales_pipelineboard:pipelineViewCloseConfirmModal', None), ('runtime_sales_pipelineboard:pipelineViewCloseLostTarget', None), ('runtime_sales_pipelineboard:pipelineViewColumn', None), ('runtime_sales_pipelineboard:pipelineViewColumnHeader', None), ('runtime_sales_pipelineboard:pipelineViewColumnModal', None), ('runtime_sales_pipelineboard:pipelineViewConfigurationModal', None), ('runtime_sales_pipelineboard:pipelineViewMultipleRecordTypeTabSet', None), ('runtime_sales_pipelineboard:tempDepend', None), ('runtime_sales_quotes:createPDF', None), ('runtime_sales_quotes:createQuote', None), ('runtime_sales_quotes:quotePDFPreview', None), ('runtime_sales_quotes:quotePDFViewer', None), ('runtime_sales_quotes:quotesSetup', None), ('runtime_sales_quotes:quotesSetupPage', None), ('runtime_sales_quotes:syncQuote', None), ('runtime_sales_quotes:templatePicker', None), ('runtime_sales_see:itemEditorContainer', None), ('runtime_sales_see:productListContainer', None), ('runtime_sales_skype:frameParent', None), ('runtime_sales_skype:signin', None), ('runtime_sales_skype:signout', None), ('runtime_sales_skype:skypeConversation', None), ('runtime_sales_skype:skypeForSalesforce', None), ('runtime_sales_skype:skypeGlobalSignIn', None), ('runtime_sales_skype:skypePresence', None), ('runtime_sales_skype:skypePresenceDesignInfo', None), ('runtime_sales_skype:skypePresenceDesignSubstitute', None), ('runtime_sales_skype:skypeSetup', None), ('runtime_sales_skype:skypeSetupPage', None), ('runtime_sales_skype:skypeUserSettings', None), ('runtime_sales_skype:skypeUserSettingsPage', None), ('runtime_sales_social:socialActionsMenu', None), ('runtime_sales_social:socialConnections', None), ('runtime_sales_social:socialConnectionsList', None), ('runtime_sales_social:socialConnectionsListProvider', None), ('runtime_sales_social:socialFeedItem', None), ('runtime_sales_social:socialList', None), ('runtime_sales_social:socialLoggingManager', None), ('runtime_sales_social:socialPanel', None), ('runtime_sales_social:socialPanelCard', None), ('runtime_sales_social:socialProfilePanel', None), ('runtime_sales_social:socialSearchButtonCard', None), ('runtime_sales_social:socialSearchPanel', None), ('runtime_sales_social:socialSearchPanelProvider', None), ('runtime_sales_social:socialSignInPanel', None), ('runtime_sales_social:tempDepend', None), ('runtime_sales_templatebuilder:baseColumnRow', None), ('runtime_sales_templatebuilder:breadcrumb', None), ('runtime_sales_templatebuilder:builderAppLaunch', None), ('runtime_sales_templatebuilder:button', None), ('runtime_sales_templatebuilder:column', None), ('runtime_sales_templatebuilder:editor', None), ('runtime_sales_templatebuilder:emailComponent', None), ('runtime_sales_templatebuilder:emailHtmlGen', None), ('runtime_sales_templatebuilder:emailRegion', None), ('runtime_sales_templatebuilder:emailTemplate', None), ('runtime_sales_templatebuilder:emailTemplateBuilderTemplate', None), ('runtime_sales_templatebuilder:emailTemplateCanvasConfig', None), ('runtime_sales_templatebuilder:emailTemplateEditorUi', None), ('runtime_sales_templatebuilder:fourColumnRow', None), ('runtime_sales_templatebuilder:header', None), ('runtime_sales_templatebuilder:htmlEditor', None), ('runtime_sales_templatebuilder:image', None), ('runtime_sales_templatebuilder:imageEditor', None), ('runtime_sales_templatebuilder:leftPanel', None), ('runtime_sales_templatebuilder:middlePanel', None), ('runtime_sales_templatebuilder:oneColumnRow', None), ('runtime_sales_templatebuilder:richText', None), ('runtime_sales_templatebuilder:richTextCkEditor', None), ('runtime_sales_templatebuilder:rightPanel', None), ('runtime_sales_templatebuilder:surfaceTemplate', None), ('runtime_sales_templatebuilder:threeColumnRow', None), ('runtime_sales_templatebuilder:topToolbar', None), ('runtime_sales_templatebuilder:twoColumnRow', None), ('runtime_sales_xclean:advancedSearchLauncher', None), ('runtime_sales_xclean:advancedSearchModal', None), ('runtime_sales_xclean:advancedSearchRow', None), ('runtime_sales_xclean:dataAssessment', None), ('runtime_sales_xclean:dataAssessmentConfig', None), ('runtime_sales_xclean:dataAssessmentConfigListView', None), ('runtime_sales_xclean:dataAssessmentConfigProvider', None), ('runtime_sales_xclean:dataAssessmentCustomerSegmentation', None), ('runtime_sales_xclean:dataAssessmentDataQuality', None), ('runtime_sales_xclean:dataAssessmentHealthOverview', None), ('runtime_sales_xclean:dataAssessmentMatchAnalysis', None), ('runtime_sales_xclean:dataAssessmentPrompt', None), ('runtime_sales_xclean:dataAssessmentUpgradePanel', None), ('runtime_sales_xclean:dataPreviewDashboard', None), ('runtime_sales_xclean:dataPreviewImproveMatchRate', None), ('runtime_sales_xclean:dataPreviewQuality', None), ('runtime_sales_xclean:dataPreviewReport', None), ('runtime_sales_xclean:dataPreviewReportTest', None), ('runtime_sales_xclean:discoveryAccountsTabHome', None), ('runtime_sales_xclean:discoveryUserLicenseSetup', None), ('runtime_sales_xclean:dummyListDataProvider', None), ('runtime_sales_xclean:dummyRangeFacets', None), ('runtime_sales_xclean:externalRecordsListDataProvider', None), ('runtime_sales_xclean:externalRecordsRangeFacets', None), ('runtime_sales_xclean:externalRecordsTab', None), ('runtime_sales_xclean:fieldMappingError', None), ('runtime_sales_xclean:fieldMappingPanel', None), ('runtime_sales_xclean:fieldMappingPanelTest', None), ('runtime_sales_xclean:fieldMappingRadioColumn', None), ('runtime_sales_xclean:fieldMappingTabs', None), ('runtime_sales_xclean:recommendationsFacetsPlaceholder', None), ('runtime_sales_xclean:recommendationsListDataProvider', None), ('runtime_sales_xclean:recommendationsRangeFacets', None), ('runtime_sales_xclean:search', None), ('runtime_sales_xclean:searchAccountsPlugin', None), ('runtime_sales_xclean:searchBar', None), ('runtime_sales_xclean:searchCommaSeparatedCell', None), ('runtime_sales_xclean:searchConcatenatedCell', None), ('runtime_sales_xclean:searchContactsPlugin', None), ('runtime_sales_xclean:searchContainer', None), ('runtime_sales_xclean:searchContractExpirationDate', None), ('runtime_sales_xclean:searchCreditMetrics', None), ('runtime_sales_xclean:searchCreditMetricsInvalidPackage', None), ('runtime_sales_xclean:searchCreditMetricsKnownError', None), ('runtime_sales_xclean:searchCreditMetricsTile', None), ('runtime_sales_xclean:searchCreditsAvailable', None), ('runtime_sales_xclean:searchFacetsPanel', None), ('runtime_sales_xclean:searchFilterPanel', None), ('runtime_sales_xclean:searchList', None), ('runtime_sales_xclean:searchListDataProvider', None), ('runtime_sales_xclean:searchPlugin', None), ('runtime_sales_xclean:searchPreviewCompanyPanel', None), ('runtime_sales_xclean:searchPreviewContainer', None), ('runtime_sales_xclean:searchPreviewableCell', None), ('runtime_sales_xclean:searchRangeFacets', None), ('runtime_sales_xclean:searchRemainingCredits', None), ('runtime_sales_xclean:searchSelectForImportCell', None), ('runtime_sales_xclean:searchStatusCell', None), ('runtime_sales_xclean:searchTotalCredits', None), ('runtime_sales_xclean:searchUserLicenseDataSource', None), ('runtime_sales_xclean:searchUserLicenseIsActive', None), ('runtime_sales_xclean:searchUserLicensesUsageLimit', None), ('runtime_sales_xclean:selectMatch', None), ('runtime_sales_xclean:selectMatchContainer', None), ('runtime_sales_xclean:selectMatchDetailPane', None), ('runtime_sales_xclean:selectMatchDetailPart', None), ('runtime_sales_xclean:selectMatchHighLightsStencil', None), ('runtime_sales_xclean:selectionContainer', None), ('runtime_sales_xclean:singleLineAddress', None), ('runtime_sales_xclean:stareAndCompare', None), ('runtime_sales_xclean:stareAndCompareComparison', None), ('runtime_sales_xclean:stareAndCompareHeader', None), ('runtime_sales_xclean:swiftFacet', None), ('runtime_sales_xclean:xCleanMetrics', None), ('runtime_sales_xclean:xCleanMetricsGenericError', None), ('runtime_sales_xclean:xCleanMetricsHeader', None), ('runtime_sales_xclean:xCleanMetricsItem', None), ('runtime_sales_xclean:xCleanRecordsComparison', None), ('runtime_sales_xclean:xCleanSimpleCompoundField', None), ('runtime_sales_xclean:xCleanStareAndCompareModal', None), ('runtime_sales_xclean:xCleanThisRecordModal', None), ('runtime_sales_xclean:xcleanHighlights', None), ('runtime_search_federated:externalOutputUrl', None), ('runtime_search_federated:externalResultsGridView', None), ('runtime_search_federated:externalScopes', None), ('runtime_search_federated:externalScopesList', None), ('runtime_search_federated:externalScopesListDataProvider', None), ('runtime_service_fieldservice:createServiceReportPDF', None), ('runtime_service_fieldservice:generateWorkOrders', None), ('runtime_service_fieldservice:languagePicker', None), ('runtime_service_fieldservice:objectHierarchy', None), ('runtime_service_fieldservice:objectHierarchyMessage', None), ('runtime_service_fieldservice:objectHomeShiftGridView', None), ('runtime_service_fieldservice:serviceReportPdfViewer', None), ('runtime_service_fieldservice:serviceReportTemplatePicker', None), ('runtime_service_liveagent:baseChat', None), ('runtime_service_liveagent:baseNotification', None), ('runtime_service_liveagent:basePanelFooter', None), ('runtime_service_liveagent:baseToolbar', None), ('runtime_service_liveagent:blockVisitorFooter', None), ('runtime_service_liveagent:blockVisitorPanel', None), ('runtime_service_liveagent:chat', None), ('runtime_service_liveagent:chatApi', None), ('runtime_service_liveagent:chatBody', None), ('runtime_service_liveagent:chatEndNotification', None), ('runtime_service_liveagent:chatHover', None), ('runtime_service_liveagent:chatInput', None), ('runtime_service_liveagent:chatMessage', None), ('runtime_service_liveagent:chatMessenger', None), ('runtime_service_liveagent:chatNotification', None), ('runtime_service_liveagent:chatSlice', None), ('runtime_service_liveagent:chatSneakPeekIndicator', None), ('runtime_service_liveagent:chatStartNotification', None), ('runtime_service_liveagent:chatUnavailableMessage', None), ('runtime_service_liveagent:conferenceButton', None), ('runtime_service_liveagent:conferenceFooter', None), ('runtime_service_liveagent:conferencePanel', None), ('runtime_service_liveagent:conversationData', None), ('runtime_service_liveagent:conversationLog', None), ('runtime_service_liveagent:conversationToolkitAPI', None), ('runtime_service_liveagent:embeddedAlohaPage', None), ('runtime_service_liveagent:embeddedLiveChatButton', None), ('runtime_service_liveagent:embeddedLiveChatDeployment', None), ('runtime_service_liveagent:embeddedLiveChatSkill', None), ('runtime_service_liveagent:endChatFooter', None), ('runtime_service_liveagent:endChatPanel', None), ('runtime_service_liveagent:engagedChat', None), ('runtime_service_liveagent:fileTransferButton', None), ('runtime_service_liveagent:fileTransferFooter', None), ('runtime_service_liveagent:fileTransferPanel', None), ('runtime_service_liveagent:liveChatTranscriptHighlightsStencil', None), ('runtime_service_liveagent:liveagentToolbar', None), ('runtime_service_liveagent:lowerFlagFooter', None), ('runtime_service_liveagent:lowerFlagPanel', None), ('runtime_service_liveagent:panelCloseButton', None), ('runtime_service_liveagent:pastChats', None), ('runtime_service_liveagent:pastChatsDesignInfo', None), ('runtime_service_liveagent:raiseFlagFooter', None), ('runtime_service_liveagent:raiseFlagPanel', None), ('runtime_service_liveagent:scopedNotification', None), ('runtime_service_liveagent:toolkitMessenger', None), ('runtime_service_liveagent:transferButton', None), ('runtime_service_liveagent:transferFooter', None), ('runtime_service_liveagent:transferPanel', None), ('runtime_service_livemessage:appleBusinessChatInfoCard', None), ('runtime_service_livemessage:chatBody', None), ('runtime_service_livemessage:chatFileCard', None), ('runtime_service_livemessage:chatHover', None), ('runtime_service_livemessage:conversationLog', None), ('runtime_service_livemessage:linkObject', None), ('runtime_service_livemessage:linkObjectsNotification', None), ('runtime_service_livemessage:livemessageChat', None), ('runtime_service_livemessage:livemessageInput', None), ('runtime_service_livemessage:livemessageToolbar', None), ('runtime_service_livemessage:messagingSessionForceCloseAction', None), ('runtime_service_livemessage:messagingSessionHighlightsStencil', None), ('runtime_service_livemessage:messagingSessionLinkedRecords', None), ('runtime_service_livemessage:relatedRecords', None), ('runtime_service_livemessage:selectFileButton', None), ('runtime_service_livemessage:startOutboundConversationAction', None), ('runtime_service_livemessage:startOutboundConversationModal', None), ('runtime_service_objectlinking:conversationParticipantCard', None), ('runtime_service_objectlinking:linkObjectsNotification', None), ('runtime_service_objectlinking:linkRecord', None), ('runtime_service_objectlinking:messagingEndUserCard', None), ('runtime_service_objectlinking:objectLinkingBackgroundUtility', None), ('runtime_service_objectlinking:relatedRecords', None), ('runtime_service_omnichannel:abstractPushedRequest', None), ('runtime_service_omnichannel:currentWork', None), ('runtime_service_omnichannel:currentWorkList', None), ('runtime_service_omnichannel:currentWorkTransfer', None), ('runtime_service_omnichannel:message', None), ('runtime_service_omnichannel:omniAPILoader', None), ('runtime_service_omnichannel:omniAPITester', None), ('runtime_service_omnichannel:omniWidget', None), ('runtime_service_omnichannel:omniWidgetPublicEventsTester', None), ('runtime_service_omnichannel:pushedEntityRequest', None), ('runtime_service_omnichannel:pushedEntityRequestTester', None), ('runtime_service_omnichannel:pushedEntityRequestTesterData', None), ('runtime_service_omnichannel:status', None), ('runtime_service_omnichannel:statusTester', None), ('runtime_service_omnichannel:statusTesterData', None), ('runtime_service_omnichannel:toolkitTester', None), ('runtime_service_predictions:einsteinArticleSuggestion', None), ('runtime_service_predictions:einsteinArticleSuggestionCardStatusHeader', None), ('runtime_service_predictions:einsteinArticleSuggestionFeedbackComponent', None), ('runtime_service_predictions:einsteinArticleSuggestionRecordObserver', None), ('runtime_service_predictions:einsteinArticleSuggestionsCard', None), ('runtime_service_predictions:einsteinItemWrapper', None), ('runtime_service_predictions:einsteinSuggestedResponse', None), ('runtime_service_predictions:einsteinSuggestionsCard', None), ('runtime_service_predictions:einsteinSuggestionsCardContainer', None), ('runtime_service_predictions:fieldPredictionsLauncher', None), ('runtime_service_predictions:pilotRecommendationsManager', None), ('runtime_service_predictions:predictionInputCheckbox', None), ('runtime_service_predictions:predictionInputPicklist', None), ('runtime_service_predictions:predictionsEllieIcon', None), ('runtime_service_predictions:predictionsManager', None), ('runtime_service_predictions:predictionsStrengthIcon', None), ('runtime_service_predictions:recommendationInputLookup', None), ('runtime_service_predictions:recommendationInputLookupDataProvider', None), ('runtime_service_predictions:recommendationInputLookupDesktop', None), ('runtime_service_predictions:recommendationLookupOption', None), ('runtime_service_predictions:replyTextStatusChange', None), ('runtime_service_predictions:standalonePredictionsManager', None), ('runtime_service_predictions:standaloneRecordRecommendations', None), ('runtime_service_scs:attachments', None), ('runtime_service_scs:conversationCaseDetail', None), ('runtime_service_scs:conversationCaseDetailTester', None), ('runtime_service_scs:conversationCaseList', None), ('runtime_service_scs:conversationSocialPostDetail', None), ('runtime_service_scs:conversationSocialPostDetailFooter', None), ('runtime_service_scs:conversationSocialPostDetailTester', None), ('runtime_service_scs:conversationSocialPostList', None), ('runtime_service_scs:conversations', None), ('runtime_service_scs:conversationsPersona', None), ('runtime_service_scs:conversationsPersonaTester', None), ('runtime_service_scs:inputSocialPostAccount', None), ('runtime_service_scs:inputSocialPostContent', None), ('runtime_service_scs:inputSocialPostMessageType', None), ('runtime_service_scs:inputSocialPostProvider', None), ('runtime_service_scs:inputSocialPostReplyTo', None), ('runtime_service_scs:link', None), ('runtime_service_scs:publisherQuickSocialPost', None), ('runtime_service_scs:sfxCreateCase', None), ('runtime_service_scs:sfxIgnore', None), ('runtime_service_scs:sfxMassApproveSocialPosts', None), ('runtime_service_scs:sfxMassCreateCase', None), ('runtime_service_scs:sfxMassIgnore', None), ('runtime_service_scs:sfxMassRejectSocialPosts', None), ('runtime_service_scs:socialOutputLookup', None), ('runtime_service_scs:socialPersona', None), ('runtime_service_scs:socialPostContent', None), ('runtime_service_scs:socialPostContentLink', None), ('runtime_service_scs:socialPostContentListView', None), ('runtime_service_scs:socialPostFeedItem', None), ('runtime_service_scs:socialPostMessage', None), ('runtime_service_scs:socialPostPreamble', None), ('runtime_service_scs:socialPostProvider', None), ('runtime_service_scs:socialPostQuickAction', None), ('runtime_service_scs:socialPostYouTubeLinkPreview', None), ('runtime_service_scs:truncatedText', None), ('runtime_service_trials:essentialsPromoCode', None), ('runtime_service_trials:expandedWelcomeMat', None), ('runtime_service_trials:expandedWelcomeMatPrompt', None), ('runtime_service_trials:miniSetup', None), ('runtime_service_trials:momentOfCelebration', None), ('runtime_service_trials:setupSocialFlow', None), ('runtime_service_trials:setupSocialSelectProvider', None), ('runtime_service_trials:surveyUserInterestInfoPrompt', None), ('runtime_service_trials:surveyUserInterestInfoWrapper', None), ('runtime_service_trials:welcomeMatTile', None), ('s1wizard:actionCard', None), ('s1wizard:actionListPicker', None), ('s1wizard:actions', None), ('s1wizard:actionsPreview', None), ('s1wizard:arrangeActions', None), ('s1wizard:comicText', None), ('s1wizard:compactLayout', None), ('s1wizard:compactLayoutPreview', None), ('s1wizard:createContactLayout', None), ('s1wizard:createGlobalAction', None), ('s1wizard:dndDragSource', None), ('s1wizard:dndDropTarget', None), ('s1wizard:duelingList', None), ('s1wizard:duelingListItem', None), ('s1wizard:duelingLists', None), ('s1wizard:iPhone', None), ('s1wizard:navMenuPreview', None), ('s1wizard:navigation', None), ('s1wizard:preview', None), ('s1wizard:review', None), ('s1wizard:share', None), ('s1wizard:shareDataProvider', None), ('s1wizard:shareFeedback', None), ('s1wizard:shareListOption', None), ('s1wizard:shareSelectedOption', None), ('s1wizard:template', None), ('s1wizard:welcome', None), ('salesforceIdentity:accountSettings', None), ('salesforceIdentity:appLauncher', None), ('salesforceIdentity:appLauncherDesktop', None), ('salesforceIdentity:appLauncherDesktopContainer', None), ('salesforceIdentity:appLauncherDesktopInternal', None), ('salesforceIdentity:appLauncherDesktopInternalTester', None), ('salesforceIdentity:appLauncherDesktopTester', None), ('salesforceIdentity:appLauncherHeader', None), ('salesforceIdentity:appLauncherManager', None), ('salesforceIdentity:appLauncherModal', None), ('salesforceIdentity:appLauncherSetupDesktop', None), ('salesforceIdentity:appLauncherSetupReorderer', None), ('salesforceIdentity:appLauncherSetupTile', None), ('salesforceIdentity:appLauncherTile', None), ('salesforceIdentity:changePassword', None), ('salesforceIdentity:changePassword2', None), ('salesforceIdentity:communityLogo', None), ('salesforceIdentity:communityLogo2', None), ('salesforceIdentity:employeeLoginLink', None), ('salesforceIdentity:employeeLoginLink2', None), ('salesforceIdentity:forgotPassword', None), ('salesforceIdentity:forgotPassword2', None), ('salesforceIdentity:identityBody', None), ('salesforceIdentity:identityCustomHomeLayout', None), ('salesforceIdentity:identityHeader', None), ('salesforceIdentity:identityTemplate', None), ('salesforceIdentity:identityVerification', None), ('salesforceIdentity:lightningLoginFlow', None), ('salesforceIdentity:loginBody', None), ('salesforceIdentity:loginBody2', None), ('salesforceIdentity:loginForm', None), ('salesforceIdentity:loginForm2', None), ('salesforceIdentity:loginTemplate', None), ('salesforceIdentity:loginTemplate2', None), ('salesforceIdentity:searchInput', None), ('salesforceIdentity:selfRegister', None), ('salesforceIdentity:selfRegister2', None), ('salesforceIdentity:sessionTimeoutWarn', None), ('salesforceIdentity:sessionTimeoutWatcher', None), ('salesforceIdentity:socialLogin', None), ('salesforceIdentity:socialLogin2', None), ('salesforceIdentity:tempDepend', None), ('securityHealth:alohaContainer', None), ('securityHealth:alohaMessage', None), ('securityHealth:fixItConfirmModal', None), ('securityHealth:fixItModal', None), ('securityHealth:fixItModalFooter', None), ('securityHealth:fixItRiskComponent', None), ('securityHealth:fixItSearch', None), ('securityHealth:genericRiskComponent', None), ('securityHealth:importBaselineModal', None), ('securityHealth:missingSettings', None), ('securityHealth:relatedListCard', None), ('securityHealth:securityHealthSetupComponent', None), ('securityHealth:urlSwitcher', None), ('securityHub:dashboard', None), ('securityHub:header', None), ('securityHub:healthCheck', None), ('securityHub:metricDetailHome', None), ('securityHub:metricDrillDownBarChart', None), ('securityHub:metricDrillDownDetail', None), ('securityHub:metricDrillDownGraph', None), ('securityHub:metricDrilldownDataTable', None), ('securityHub:metricDrilldownDetailDataTable', None), ('securityHub:metricDrilldownLoginDataTable', None), ('securityHub:metricDrilldownUserDataTable', None), ('securityHub:orgManagement', None), ('securityHub:securityHubHome', None), ('securitycentral:appsList', None), ('securitycentral:module', None), ('securitycentral:scList', None), ('securitycentral:tabs', None), ('securitycentral:terminateSessionAction', None), ('selfService:articleHeaderDetail', None), ('selfService:articleLayout', None), ('selfService:articleList', None), ('selfService:articleListDataProvider', None), ('selfService:articleListItem', None), ('selfService:articleReCaptchaFlipView', None), ('selfService:articleTopicList', None), ('selfService:articleTypeDataProvider', None), ('selfService:articleTypeFilter', None), ('selfService:articleView', None), ('selfService:articleVoting', None), ('selfService:articleVotingIcon', None), ('selfService:autoSuggest', None), ('selfService:autoSuggestDataProvider', None), ('selfService:autoSuggestOption', None), ('selfService:backButton', None), ('selfService:baseArticleList', None), ('selfService:baseCaseCreation', None), ('selfService:baseNavItem', None), ('selfService:baseNavList', None), ('selfService:baseNavigation', None), ('selfService:baseSimpleItem', None), ('selfService:baseSimpleItems', None), ('selfService:breadCrumb', None), ('selfService:breadCrumbBase', None), ('selfService:breadCrumbItem', None), ('selfService:breadCrumbProvider', None), ('selfService:caseArticleDeflection', None), ('selfService:caseArticleDeflectionItem', None), ('selfService:caseArticleDeflectionProvider', None), ('selfService:caseAttachment', None), ('selfService:caseAttachments', None), ('selfService:caseAttachmentsDataProvider', None), ('selfService:caseComment', None), ('selfService:caseComments', None), ('selfService:caseCommentsDataProvider', None), ('selfService:caseConfirmation', None), ('selfService:caseCreate', None), ('selfService:caseCreateAttachments', None), ('selfService:caseDescription', None), ('selfService:caseDetails', None), ('selfService:caseHighlights', None), ('selfService:caseListView', None), ('selfService:casePublisher', None), ('selfService:casePublisherFileInput', None), ('selfService:caseStatusButton', None), ('selfService:caseSubject', None), ('selfService:caseVirtualGrid', None), ('selfService:categoryFilter', None), ('selfService:categoryNavigation', None), ('selfService:categoryProvider', None), ('selfService:contactSupport', None), ('selfService:expandedCategoryNav', None), ('selfService:expandedCategoryNavItem', None), ('selfService:expandedTrendingArticleItem', None), ('selfService:expandedTrendingArticleSection', None), ('selfService:expandedTrendingArticleSectionProvider', None), ('selfService:expandedTrendingArticles', None), ('selfService:expandedTrendingArticlesProvider', None), ('selfService:featuredDataCategories', None), ('selfService:featuredDataCategoryProvider', None), ('selfService:featuredItem', None), ('selfService:featuredItemList', None), ('selfService:featuredSearch', None), ('selfService:filter', None), ('selfService:filterItem', None), ('selfService:inputEmail', None), ('selfService:inputText', None), ('selfService:inputTextArea', None), ('selfService:koaHeaderCompanyName', None), ('selfService:loadingSpinner', None), ('selfService:logout', None), ('selfService:miniSearch', None), ('selfService:myCaseList', None), ('selfService:outputRichTextWithSmartLinks', None), ('selfService:pageWrapper', None), ('selfService:postToCase', None), ('selfService:profileHome', None), ('selfService:profileMenu', None), ('selfService:profileMenuAPI', None), ('selfService:profileMenuTrigger', None), ('selfService:profileNavigation', None), ('selfService:profilePanel', None), ('selfService:reCaptchaCarouselView', None), ('selfService:searchWrapper', None), ('selfService:similarArticleItem', None), ('selfService:similarArticles', None), ('selfService:similarArticles42', None), ('selfService:similarArticles42DesignSubstitute', None), ('selfService:similarArticlesDataProvider', None), ('selfService:similarArticlesDesignSubstitute', None), ('selfService:similarFeedItem', None), ('selfService:similarItemWithViewCount', None), ('selfService:similarQuestions', None), ('selfService:similarQuestionsDataProvider', None), ('selfService:simpleArticleItem', None), ('selfService:singleArticleView', None), ('selfService:subCategoryItem', None), ('selfService:supportQuickActionField', None), ('selfService:supportQuickActionLayout', None), ('selfService:tempDepend', None), ('selfService:template', None), ('selfService:toggleButton', None), ('selfService:topicArticleList', None), ('selfService:topicArticleListDataProvider', None), ('selfService:topicBreadCrumb', None), ('selfService:topicBreadCrumbDataProvider', None), ('selfService:topicRelatedArticle', None), ('selfService:topicTrendingArticles', None), ('selfService:topicTrendingArticles42', None), ('selfService:topicTrendingArticles42DesignSubstitute', None), ('selfService:topicTrendingArticlesDataProvider', None), ('selfService:topicTrendingArticlesDesignInfo', None), ('selfService:topicTrendingArticlesDesignSubstitute', None), ('selfService:trendingArticles', None), ('selfService:trendingArticlesDataProvider', None), ('selfService:twoColumnFilterLayout', None), ('selfService:unsupported', None), ('selfService:userProfileMenu', None), ('serviceCommunity:askWidget', None), ('serviceCommunity:deflectionActions', None), ('serviceCommunity:searchAskWidgetMain', None), ('serviceCommunity:searchBox', None), ('serviceCommunity:searchDeflection', None), ('serviceCommunity:searchResult', None), ('serviceCommunity:searchResultsList', None), ('serviceCommunity:signInBox', None), ('serviceCommunity:zonedropdownoption', None), ('serviceCommunity:zoneswitcher', None), ('setup:assistantActionButtonLink', None), ('setup:assistantActionLSF', None), ('setup:assistantActionRPC', None), ('setup:assistantActionStep', None), ('setup:assistantActionToggle', None), ('setup:assistantActionVideoLink', None), ('setup:assistantDiscoverStepAlign', None), ('setup:assistantDiscoverStepEvaluate', None), ('setup:assistantDiscoverStepLearn', None), ('setup:assistantDiscoverStepPlan', None), ('setup:assistantModelService', None), ('setup:assistantNonTrackableSubStep', None), ('setup:assistantOptimizeStepIterate', None), ('setup:assistantOptimizeStepMeasure', None), ('setup:assistantOptimizeStepMotivate', None), ('setup:assistantOptimizeStepTurnOff', None), ('setup:assistantPage', None), ('setup:assistantPageDiscover', None), ('setup:assistantPageOptimize', None), ('setup:assistantPageOverview', None), ('setup:assistantPageRollout', None), ('setup:assistantRolloutStepAdapt', None), ('setup:assistantRolloutStepImplement', None), ('setup:assistantRolloutStepLaunch', None), ('setup:assistantRolloutStepPlan', None), ('setup:assistantStep', None), ('setup:assistantSubStep', None), ('setup:assistantSummaryCard', None), ('setup:autoTransitionOptOutAgreement', None), ('setup:autoTransitionOptOutConfirmation', None), ('setup:autoTransitionOptOutErrorPage', None), ('setup:autoTransitionOptOutLanding', None), ('setup:customProfilesEditable', None), ('setup:customProfilesOptOutLanding', None), ('setup:customProfilesReadOnly', None), ('setup:enableConsentManagement', None), ('setup:enableEinsteinDataDiscovery', None), ('setup:enableLightningExperience', None), ('setup:enableLightningExperienceSetupComponent', None), ('setup:enableLightningExperienceTab', None), ('setup:enableLightningExperienceToggle', None), ('setup:enableLightningExperienceWrapper', None), ('setup:enableLightningModalBody', None), ('setup:enablePowerInsights', None), ('setup:eventMonitoring', None), ('setup:externalAppsSettingsPage', None), ('setup:externalAppsSettingsPageLex', None), ('setup:fieldService', None), ('setup:fieldServiceSetup', None), ('setup:flexList', None), ('setup:gear', None), ('setup:hoverHelp', None), ('setup:lightningExtensionAccessControl', None), ('setup:lightningExtensionHome', None), ('setup:lightningOnMobileAppMigration', None), ('setup:lightningOnMobileButtonLink', None), ('setup:lightningOnMobileInfoSection', None), ('setup:lightningOnMobileMigrationEmptyState', None), ('setup:lightningOnMobileMigrationErrorState', None), ('setup:lightningOnMobileMigrationStatus', None), ('setup:lightningOnMobileMigrationStep', None), ('setup:lightningOnMobileOverridesMigration', None), ('setup:lightningOnMobileQuickStart', None), ('setup:lightningOnMobileQuickStartWrapper', None), ('setup:lightningOnMobileSetupComponent', None), ('setup:placeholder', None), ('setup:progressCircle', None), ('setup:s1SetupHomePage', None), ('setup:s1SetupSection', None), ('setup:s1SetupSectionItem', None), ('setup:sfxSearchResultsGrid', None), ('setup:ssDataProvider', None), ('setup:ssResultsFilters', None), ('setup:ssResultsPage', None), ('setup:ssResultsTable', None), ('setup:statelessAssistantStep', None), ('setup:statelessAssistantSubStep', None), ('setup:walkthroughs', None), ('setup:wtSetupPage', None), ('setupAssistant:setupAssistantProgress', None), ('setupAssistant:setupAssistantProgressComponent', None), ('setupAssistant:setupAssistantWelcomeMat', None), ('setupAssistant:setupAssistantWelcomeMatModal', None), ('setupAssistant:sfxWelcomeMat', None), ('setup_cdp:cdpEnablementScreen', None), ('setup_cdp:cdpMcSetup', None), ('setup_cdp:cdpSetupHome', None), ('setup_data_translation:dataTranslationSupportedEntitiesSettings', None), ('setup_data_translation:dataTranslationSupportedEntityLink', None), ('setup_data_translation:dataTranslationSupportedFieldsSettings', None), ('setup_document_checklist:documentChecklistSetup', None), ('setup_einstein_assistant:assistantSetup', None), ('setup_einstein_assistant:createDefinition', None), ('setup_einstein_assistant:setupBuilderFlow', None), ('setup_einstein_assistant:welcomeScreen', None), ('setup_einstein_shared:assessorItem', None), ('setup_einstein_shared:fieldsTable', None), ('setup_einstein_shared:guidePanel', None), ('setup_einstein_shared:ignoredfields', None), ('setup_einstein_shared:info', None), ('setup_einstein_shared:inputRadio', None), ('setup_einstein_shared:layoutSplit', None), ('setup_einstein_shared:stepLayoutEinstein', None), ('setup_einstein_shared:stepLayoutOneColumn', None), ('setup_einstein_shared:stepLayoutSplit', None), ('setup_industries_common:relationshipCardTypeFieldsListContainer', None), ('setup_industries_common:relationshipCardTypeFieldsSetup', None), ('setup_industries_common:relationshipCardTypeList', None), ('setup_industries_common:relationshipCardTypeManagerHome', None), ('setup_industries_common:relationshipCardTypeSetup', None), ('setup_industries_common:relationshipOptions', None), ('setup_industries_common:relationshipTypeCardFieldsEditor', None), ('setup_industries_insurance:iconEdit', None), ('setup_industries_insurance:iconList', None), ('setup_industries_insurance:iconManager', None), ('setup_industries_insurance:insuranceSettings', None), ('setup_industries_insurance:policiesIconManager', None), ('setup_industries_objectdetection:datasetTrainAction', None), ('setup_industries_objectdetection:datasetTrainModal', None), ('setup_industries_objectdetection:modelDisableAction', None), ('setup_industries_objectdetection:modelEnableAction', None), ('setup_industries_objectdetection:modelRetrainAction', None), ('setup_industries_objectdetection:objectDetectionHome', None), ('setup_industries_objectdetection:setupReviewTerms', None), ('setup_industries_objectdetection:setupReviewTermsFlow', None), ('setup_industries_referralscoring:fscReferralScoringHome', None), ('setup_industries_referralscoring:hcReferralScoringHome', None), ('setup_industries_referralscoring:hcReferralScoringModelFlow', None), ('setup_industries_referralscoring:predictionSettings', None), ('setup_industries_referralscoring:referralScoringAdditionalFields', None), ('setup_industries_referralscoring:referralScoringConfirmSettings', None), ('setup_industries_referralscoring:referralScoringExclusionFields', None), ('setup_industries_referralscoring:referralScoringHome', None), ('setup_industries_referralscoring:referralScoringModelFlow', None), ('setup_industries_referralscoring:referralScoringRecordType', None), ('setup_industries_referralscoring:referralScoringSegmentationScreen', None), ('setup_industries_referralscoring:referralScoringTargetFieldAndTrainingFilters', None), ('setup_industries_smartselling:einsteinVisitsHome', None), ('setup_lightning_visualforce:apexPageList', None), ('setup_lightning_visualforce:vfEditPage', None), ('setup_mc2:marketingSetupHome', None), ('setup_mobile_appclone:addDistributionAccountModal', None), ('setup_mobile_appclone:androidFeatureGraphicSection', None), ('setup_mobile_appclone:androidIconsSection', None), ('setup_mobile_appclone:androidMetadataDraft', None), ('setup_mobile_appclone:androidMetadataReadOnly', None), ('setup_mobile_appclone:androidPlayStoreSection', None), ('setup_mobile_appclone:androidPromoVideoSection', None), ('setup_mobile_appclone:androidPushSection', None), ('setup_mobile_appclone:androidScreenshotsSection', None), ('setup_mobile_appclone:appAvailabilityDataProvider', None), ('setup_mobile_appclone:appAvailabilityModal', None), ('setup_mobile_appclone:appAvailabilitySection', None), ('setup_mobile_appclone:appAvailabilitySelection', None), ('setup_mobile_appclone:appAvailabilitySelectionColumnCountry', None), ('setup_mobile_appclone:appAvailabilitySelectionColumnSelect', None), ('setup_mobile_appclone:appCloneCreationModal', None), ('setup_mobile_appclone:appCloneEmptyState', None), ('setup_mobile_appclone:appCloneResourceCard', None), ('setup_mobile_appclone:appCloneTableView', None), ('setup_mobile_appclone:appCloneVideo', None), ('setup_mobile_appclone:appDistributionDelegateConfigStep', None), ('setup_mobile_appclone:appDistributionEditFlow', None), ('setup_mobile_appclone:appDistributionSection', None), ('setup_mobile_appclone:appDistributionSelectionStep', None), ('setup_mobile_appclone:appTemplatePickerModal', None), ('setup_mobile_appclone:approveAppConfirmationFlowStep', None), ('setup_mobile_appclone:approveAppFlow', None), ('setup_mobile_appclone:approveAppFlowStep', None), ('setup_mobile_appclone:approveRejectStep', None), ('setup_mobile_appclone:asset', None), ('setup_mobile_appclone:assetMetadataSection', None), ('setup_mobile_appclone:assetUploader', None), ('setup_mobile_appclone:assetViewer', None), ('setup_mobile_appclone:authorizedDomainRow', None), ('setup_mobile_appclone:authorizedDomainsSection', None), ('setup_mobile_appclone:baseMetadataDraft', None), ('setup_mobile_appclone:baseMetadataReadOnly', None), ('setup_mobile_appclone:betaTesterSection', None), ('setup_mobile_appclone:collapsibleSection', None), ('setup_mobile_appclone:combobox', None), ('setup_mobile_appclone:communitySection', None), ('setup_mobile_appclone:confirmationModal', None), ('setup_mobile_appclone:connectedAppSection', None), ('setup_mobile_appclone:deepLinkRow', None), ('setup_mobile_appclone:deepLinksSection', None), ('setup_mobile_appclone:delegateAccountSection', None), ('setup_mobile_appclone:delegatedConfigurationSection', None), ('setup_mobile_appclone:disableIconSetConfirmationModal', None), ('setup_mobile_appclone:fileUploader', None), ('setup_mobile_appclone:fixedBanner', None), ('setup_mobile_appclone:generalMessaging', None), ('setup_mobile_appclone:headerColorSection', None), ('setup_mobile_appclone:iconSet', None), ('setup_mobile_appclone:inputFile', None), ('setup_mobile_appclone:installPackageModalPanel', None), ('setup_mobile_appclone:installPackageStep', None), ('setup_mobile_appclone:iosAppStoreSection', None), ('setup_mobile_appclone:iosIconsSection', None), ('setup_mobile_appclone:iosMetadataDraft', None), ('setup_mobile_appclone:iosMetadataReadOnly', None), ('setup_mobile_appclone:iosScreenshotsSection', None), ('setup_mobile_appclone:languageList', None), ('setup_mobile_appclone:lifecycle', None), ('setup_mobile_appclone:lifecycleStep', None), ('setup_mobile_appclone:lifecycle_TestLifecycle_General', None), ('setup_mobile_appclone:loadingScreenSection', None), ('setup_mobile_appclone:makeChangesModalFooter', None), ('setup_mobile_appclone:metadataAttribute', None), ('setup_mobile_appclone:metadataHeader', None), ('setup_mobile_appclone:metadataSection', None), ('setup_mobile_appclone:myS1Home', None), ('setup_mobile_appclone:myS1MetadataDetail', None), ('setup_mobile_appclone:myS1WarningModal', None), ('setup_mobile_appclone:mys1Lifecycle', None), ('setup_mobile_appclone:mys1LifecycleModalFooter', None), ('setup_mobile_appclone:mys1LifecycleStep', None), ('setup_mobile_appclone:mys1ModalPanel', None), ('setup_mobile_appclone:noAccess', None), ('setup_mobile_appclone:popover', None), ('setup_mobile_appclone:privateDistributionSection', None), ('setup_mobile_appclone:requestActionStep', None), ('setup_mobile_appclone:requestBetaModalPanel', None), ('setup_mobile_appclone:requestPackagePanel', None), ('setup_mobile_appclone:screenshotSet', None), ('setup_mobile_appclone:screenshotsSection', None), ('setup_mobile_appclone:setupTile', None), ('setup_mobile_appclone:stateMapRefreshModal', None), ('setup_mobile_appclone:submitConfirmationModal', None), ('setup_mobile_appclone:tmpLifecycleTriggers', None), ('setup_mobile_appclone:translationStateMapSection', None), ('setup_mobile_appclone:updatePackagePanel', None), ('setup_mobile_appclone:verticalImagePanel', None), ('setup_osl:oslSetupHome', None), ('setup_platformServices_eventManager:alohaRouter', None), ('setup_platformServices_eventManager:eventManagerDetail', None), ('setup_platformServices_eventManager:eventManagerHome', None), ('setup_platformServices_eventManager:eventManagerList', None), ('setup_platform_a2:banner', None), ('setup_platform_a2:customProfilesBanner', None), ('setup_platform_a2:lexEndUsersNoSwitchSetup', None), ('setup_platform_a2:scheduledSwitcherSetup', None), ('setup_platform_adoptionapps:adoptionAppOpener', None), ('setup_platform_adoptionapps:govCloudConfirmDialogBody', None), ('setup_platform_adoptionapps:govCloudDisallowedDialogBody', None), ('setup_platform_adoptionapps:govCloudOptInCard', None), ('setup_platform_api_wsdl:webservicesSetupPage', None), ('setup_platform_cdc:availableCdcEntitiesProvider', None), ('setup_platform_cdc:cdcObjectEnablement', None), ('setup_platform_integration:dataloaderIoSetup', None), ('setup_platform_ltngbolt:abstractBoltTile', None), ('setup_platform_ltngbolt:boltDetail', None), ('setup_platform_ltngbolt:boltDetailAccordion', None), ('setup_platform_ltngbolt:boltDetailHome', None), ('setup_platform_ltngbolt:boltFeature', None), ('setup_platform_ltngbolt:boltGetStarted', None), ('setup_platform_ltngbolt:boltHomeBodyCard', None), ('setup_platform_ltngbolt:boltItemList', None), ('setup_platform_ltngbolt:boltSearchDataProvider', None), ('setup_platform_ltngbolt:boltTableDataProvider', None), ('setup_platform_ltngbolt:boltTile', None), ('setup_platform_ltngbolt:boltTiles', None), ('setup_platform_ltngbolt:createBoltButton', None), ('setup_platform_ltngbolt:errorBoltTile', None), ('setup_platform_ltngbolt:flowCategoryDetail', None), ('setup_platform_ltngbolt:flowCategoryInAlohaRouter', None), ('setup_platform_ltngbolt:flowCategorySetupHome', None), ('setup_platform_ltngbolt:flowDataProvider', None), ('setup_platform_ltngbolt:lightningBoltHome', None), ('setup_platform_ltngbolt:lightningBoltSetupHome', None), ('setup_platform_ltngbolt:lsfMilestoneCreate', None), ('setup_platform_ltngbolt:lsfMilestoneFlowCategory', None), ('setup_platform_ltngbolt:lsfMilestoneItems', None), ('setup_platform_ltngbolt:lsfMilestoneSummary', None), ('setup_platform_ltngbolt:lsfNewBolt', None), ('setup_platform_ltngbolt:lsfNewFlowCategory', None), ('setup_platform_notifications:collapsibleSection', None), ('setup_platform_notifications:customNotificationTypeActionMenu', None), ('setup_platform_notifications:customNotificationTypeEdit', None), ('setup_platform_notifications:customNotificationTypeList', None), ('setup_platform_notifications:customNotificationTypeSettings', None), ('setup_platform_notifications:customNotificationTypes', None), ('setup_platform_notifications:customNotificationTypesDataProvider', None), ('setup_platform_notifications:customNotifications', None), ('setup_platform_notifications:editNotificationDeliverySettingsModalContent', None), ('setup_platform_notifications:editNotificationDeliverySettingsModalFooter', None), ('setup_platform_notifications:notificationTypeSettingsList', None), ('setup_platform_notifications:notificationTypesManager', None), ('setup_platform_notifications:standardNotificationTypeSettings', None), ('setup_platform_optimizer:allowAccessModal', None), ('setup_platform_optimizer:optimizerSetupPage', None), ('setup_platform_optimizer:optimizerSetupPageLEX', None), ('setup_platform_optimizer:revokeAccessModalBody', None), ('setup_platform_perms:createPsgFooter', None), ('setup_platform_perms:createPsgModal', None), ('setup_platform_perms:permissionSetGroupsBaseSetupPage', None), ('setup_platform_perms:permissionSetGroupsDetailPage', None), ('setup_platform_perms:permissionSetGroupsOutputLookup', None), ('setup_platform_perms:permissionSetGroupsSetup', None), ('setup_platform_perms:permissionSetGroupsSetupPage', None), ('setup_platform_perms:permissionSetGroupsWelcomeScreen', None), ('setup_platform_perms:userManagementSettings', None), ('setup_platform_sfdx:cannotExpire', None), ('setup_platform_sfdx:cannotExpireWrapper', None), ('setup_platform_sfdx:einsteinReviewTerms', None), ('setup_platform_sfdx:einsteinReviewTermsFlow', None), ('setup_platform_sfdx:einsteinTermsSetup', None), ('setup_platform_sfdx:expireOrganization', None), ('setup_platform_sfdx:expireOrganizationWrapper', None), ('setup_platform_sfdx:shapeSetupPage', None), ('setup_platform_sfdx:shapeSubscriberSetup', None), ('setup_platform_sfdx:somaPreferenceSetup', None), ('setup_platform_sfdx:somaSetupPage', None), ('setup_platform_sfdx:test', None), ('setup_platform_sfdx:unexpireOrganization', None), ('setup_platform_sfdx:unexpireOrganizationWrapper', None), ('setup_platformservices_customplatform:schemaSettingsPage', None), ('setup_platformservices_customplatform:schemaSettingsSecurityPrompt', None), ('setup_platformservices_customplatform:schemaSettingsSecurityPromptFooter', None), ('setup_platformservices_customplatform:test', None), ('setup_sales_einsteinForecasting:tuner', None), ('setup_sales_einsteinForecasting:tunerFieldExclusionChoice', None), ('setup_sales_einsteinForecasting:tunerFieldFiltersSelection', None), ('setup_sales_einsteinForecasting:tunerSegmentationChoice', None), ('setup_sales_einsteinForecasting:tunerSegmentationDefinition', None), ('setup_sales_einsteinForecasting:tunerSegmentationDefinitionRow', None), ('setup_sales_einsteinForecasting:tunerSetupFlow', None), ('setup_sales_einsteinForecasting:tunerSetupFlowComplete', None), ('setup_sales_einsteinForecasting:tunerWelcomeMat', None), ('setup_sales_forecasting:forecastingPredictionEnablement', None), ('setup_sales_forecasting:forecastingPredictionSetup', None), ('setup_sales_forecasting:forecastingPredictionSetupStatus', None), ('setup_sales_forecasting:forecastingPredictionSetupStatusContainer', None), ('setup_sales_forecasting:forecastingPredictionVerifyHomepage', None), ('setup_sales_forecasting:forecastingQuotaSettings', None), ('setup_sales_insights:AifeSetupModalReviewTerms', None), ('setup_sales_insights:AifeSetupModalReviewTermsFooter', None), ('setup_sales_insights:accountIqSetup', None), ('setup_sales_insights:autoDataEntrySetup', None), ('setup_sales_insights:campaignInsightsSetup', None), ('setup_sales_insights:engagementScoreSetup', None), ('setup_sales_insights:freemiumActionsAlohaWrapper', None), ('setup_sales_insights:freemiumModalFooter', None), ('setup_sales_insights:freemiumOptOutSetupStep', None), ('setup_sales_insights:freemiumSetupStepIcon', None), ('setup_sales_insights:insightsFreemiumSetupAssistantStep', None), ('setup_sales_insights:insightsSetupCustomizeBox', None), ('setup_sales_insights:insightsSetupStatus', None), ('setup_sales_insights:opportunityIqSetup', None), ('setup_sales_insights:opportunityScoreSetup', None), ('setup_sales_insights:readinessCheck', None), ('setup_sales_insights:readinessCheckFilesDataProvider', None), ('setup_sales_insights:readinessCheckFilesList', None), ('setup_sales_insights:readinessCheckFrame', None), ('setup_sales_insights:readinessCheckPardot', None), ('setup_sales_leadiq:assessor', None), ('setup_sales_leadiq:confirmationModal', None), ('setup_sales_leadiq:fieldFilter', None), ('setup_sales_leadiq:filterList', None), ('setup_sales_leadiq:filterOption', None), ('setup_sales_leadiq:filterRow', None), ('setup_sales_leadiq:filterRowValue', None), ('setup_sales_leadiq:leadScoreSetupFlow', None), ('setup_sales_leadiq:leadiqsettingpage2', None), ('setup_sales_leadiq:leadiqsetup', None), ('setup_sales_leadiq:leadiqsetupconfigs', None), ('setup_sales_leadiq:leadiqsetupdeploymentstatus', None), ('setup_sales_leadiq:milestone', None), ('setup_sales_leadiq:quickAssessment', None), ('setup_sales_leadiq:rowFilter', None), ('setup_sales_leadiq:rowFilterBoolean', None), ('setup_sales_leadiq:rowFilterPicklist', None), ('setup_sales_leadiq:settingsModal', None), ('setup_sales_leadiq:welcomeMat', None), ('setup_sales_pardot:b2bMarketingAnalyticsSetup', None), ('setup_sales_pardot:b2bMarketingAnalyticsSetupStepLink', None), ('setup_sales_pardot:b2bMarketingAnalyticsSetupSummaryBlock', None), ('setup_sales_pardot:einsteinAnalyticsSetup', None), ('setup_sales_pardot:enablePanel', None), ('setup_sales_pardot:enablePardotTabs', None), ('setup_sales_pardot:engagementHistorySetup', None), ('setup_sales_pardot:engagementHistorySetupCustomStep', None), ('setup_sales_pardot:engagementHistorySetupStepLink', None), ('setup_sales_pardot:engagementHistorySetupSummaryBlock', None), ('setup_sales_pardot:pardotAccountSetup', None), ('setup_sales_pardot:pardotTenantRow', None), ('setup_sales_pardot:pardotTenantSetup', None), ('setup_sales_pardot:prospectActivityB2BMarketingAnalyticsSetup', None), ('setup_sales_pardot:searchableCombobox', None), ('setup_sales_pathassistant:paSetupDuelingListsDialog', None), ('setup_sales_pathassistant:paSetupHome', None), ('setup_sales_pathassistant:paSetupInputRichText', None), ('setup_sales_pathassistant:paSetupPAStep', None), ('setup_sales_pathassistant:paSetupStep1Definition', None), ('setup_sales_pathassistant:paSetupStep2Configure', None), ('setup_sales_pathassistant:paSetupStep3Finish', None), ('setup_sales_pathassistant:paSetupWizardTemplate', None), ('setup_sales_spark:customFieldCheckbox', None), ('setup_sales_spark:customFieldCurrency', None), ('setup_sales_spark:customFieldDate', None), ('setup_sales_spark:customFieldDateTime', None), ('setup_sales_spark:customFieldEmail', None), ('setup_sales_spark:customFieldEntityStep', None), ('setup_sales_spark:customFieldForm', None), ('setup_sales_spark:customFieldFormStep', None), ('setup_sales_spark:customFieldLongTextArea', None), ('setup_sales_spark:customFieldNumber', None), ('setup_sales_spark:customFieldPercent', None), ('setup_sales_spark:customFieldPhone', None), ('setup_sales_spark:customFieldPreviewStep', None), ('setup_sales_spark:customFieldSetupFlow', None), ('setup_sales_spark:customFieldText', None), ('setup_sales_spark:customFieldUrl', None), ('setup_sales_spark:eacAgreeToTerms', None), ('setup_sales_spark:eacLSF', None), ('setup_sales_spark:eacLSFPrompt', None), ('setup_sales_spark:eacLandingStep', None), ('setup_sales_spark:eacReviewTermsAndConnectEmailStep', None), ('setup_sales_spark:eacSendEmailStep', None), ('setup_sales_spark:essentialsAssistantPage', None), ('setup_sales_spark:essentialsSetupHome', None), ('setup_sales_spark:essentialsSetupHomeCarousel', None), ('setup_sales_spark:finishEacStep', None), ('setup_sales_spark:leadStatusesCustomizeRow', None), ('setup_sales_spark:opportunityStagesCustomizeRow', None), ('setup_sales_spark:opportunityStagesCustomizeStep', None), ('setup_sales_spark:opportunityStagesInfoStep', None), ('setup_sales_spark:opportunityStagesSetupFlow', None), ('setup_sales_spark:opportunityStagesTemplateStep', None), ('setup_sales_spark:setupAppExchangeTile', None), ('setup_sales_spark:setupLifetimePerformance', None), ('setup_sales_spark:setupOnboardingAssistant', None), ('setup_sales_spark:setupWeeklyPerformance', None), ('setup_sales_spark:sparkOnboarding', None), ('setup_service:allTiles', None), ('setup_service:commBranding', None), ('setup_service:commConfigTopic', None), ('setup_service:commContactForm', None), ('setup_service:commDomainName', None), ('setup_service:commExtension', None), ('setup_service:commExtensionWaiting', None), ('setup_service:commSetupFlow', None), ('setup_service:commStart', None), ('setup_service:commSuccess', None), ('setup_service:commUploader', None), ('setup_service:ctiActionItems', None), ('setup_service:ctiAddUsers', None), ('setup_service:ctiInstallingDependencies', None), ('setup_service:ctiProviderAdditionalDetails', None), ('setup_service:ctiProviderInfo', None), ('setup_service:ctiProviderPicklist', None), ('setup_service:ctiSelectProvider', None), ('setup_service:ctiSetupFlow', None), ('setup_service:ctiSetupSuccess', None), ('setup_service:ctiStart', None), ('setup_service:ctiTermsModal', None), ('setup_service:dataImporterContainer', None), ('setup_service:dataImporterSetupContainer', None), ('setup_service:dataImporterSetupFlow', None), ('setup_service:dataImporterSetupPage', None), ('setup_service:deleteSampleData', None), ('setup_service:deleteSampleDataLoading', None), ('setup_service:deleteSampleDataSetupFlow', None), ('setup_service:deleteSampleDataSuccessful', None), ('setup_service:diwB2bBranching', None), ('setup_service:diwChooseObject', None), ('setup_service:diwCsvExportGuide', None), ('setup_service:diwExportGuideBranching', None), ('setup_service:diwExportGuideColumn', None), ('setup_service:diwFinish', None), ('setup_service:diwIntroStep', None), ('setup_service:diwMapFields', None), ('setup_service:diwUploadData', None), ('setup_service:e2cConfigForward', None), ('setup_service:e2cEmailName', None), ('setup_service:e2cGmailAddForwardingAddress', None), ('setup_service:e2cGmailConnectorAuth', None), ('setup_service:e2cGmailForwardingConfirmation', None), ('setup_service:e2cGmailForwardingLinkLoader', None), ('setup_service:e2cGmailSave', None), ('setup_service:e2cGmailSetupFlow', None), ('setup_service:e2cGmailSetupPage', None), ('setup_service:e2cGmailSetupPageContainer', None), ('setup_service:e2cGmailSetupPageDeleteModal', None), ('setup_service:e2cGmailSetupPageEditModal', None), ('setup_service:e2cRoundtripVerification', None), ('setup_service:e2cSelectProvider', None), ('setup_service:e2cSetupFlow', None), ('setup_service:e2cStart', None), ('setup_service:e2cSuccess', None), ('setup_service:e2cVerifyRoutingAddress', None), ('setup_service:facebookSetupFlow', None), ('setup_service:inlineEditPopover', None), ('setup_service:kbAuthors', None), ('setup_service:kbDataCategoryGroup', None), ('setup_service:kbSetupFlow', None), ('setup_service:kbStart', None), ('setup_service:kbSuccess', None), ('setup_service:liveAgentCodeSnippet', None), ('setup_service:liveAgentDeployWaiting', None), ('setup_service:liveAgentEndpoints', None), ('setup_service:liveAgentOfflineSupport', None), ('setup_service:liveAgentOfflineSupportConfig', None), ('setup_service:liveAgentPrechat', None), ('setup_service:liveAgentQueueCreation', None), ('setup_service:liveAgentSetupFlow', None), ('setup_service:liveAgentStart', None), ('setup_service:liveAgentSuccess', None), ('setup_service:liveMessageAppleBusinessChat', None), ('setup_service:liveMessageAuth', None), ('setup_service:liveMessageBestPractice', None), ('setup_service:liveMessageDeployWaiting', None), ('setup_service:liveMessageProceedOmni', None), ('setup_service:liveMessageSelectChannel', None), ('setup_service:liveMessageSelectFacebookPage', None), ('setup_service:liveMessageSetupFlow', None), ('setup_service:liveMessageSms', None), ('setup_service:liveMessageStart', None), ('setup_service:liveMessageSuccess', None), ('setup_service:liveMessageWeChat', None), ('setup_service:liveMessageWeChatDetails', None), ('setup_service:liveMessageWhatsApp', None), ('setup_service:lsfConnect', None), ('setup_service:lsfContent', None), ('setup_service:lsfEndStep', None), ('setup_service:lsfStart', None), ('setup_service:lsfSuccess', None), ('setup_service:lshLifetimePerformanceCharts', None), ('setup_service:lshQueueCreation', None), ('setup_service:lshRecommendedTopCards', None), ('setup_service:lshTileServices', None), ('setup_service:lshTodaysPerformanceCharts', None), ('setup_service:multiAddWithFooter', None), ('setup_service:objectLinkingRuleChannelSelection', None), ('setup_service:objectLinkingRuleGeneralInfo', None), ('setup_service:objectLinkingRuleLinkingLogic', None), ('setup_service:objectLinkingRuleNoChannelsAvailable', None), ('setup_service:objectLinkingRuleObjectToLink', None), ('setup_service:objectLinkingRuleSetupFlow', None), ('setup_service:objectLinkingRuleStart', None), ('setup_service:objectLinkingRuleSuccess', None), ('setup_service:objectLinkingRuleWaiting', None), ('setup_service:omniDeployWaiting', None), ('setup_service:omniError', None), ('setup_service:omniQueueCreation', None), ('setup_service:omniRoutingConfig', None), ('setup_service:omniRoutingConfigTableRow', None), ('setup_service:omniSetupFlow', None), ('setup_service:omniStart', None), ('setup_service:omniSuccess', None), ('setup_service:omniWorkLoad', None), ('setup_service:orgShape', None), ('setup_service:packageInstaller', None), ('setup_service:queueRoutingConfigTableRow', None), ('setup_service:quickActionCustomizeFields', None), ('setup_service:quickActionCustomizeFieldsAddFieldPopover', None), ('setup_service:quickActionCustomizeFieldsRow', None), ('setup_service:quickActionCustomizeFieldsRowIconButton', None), ('setup_service:serviceCaseStatus', None), ('setup_service:serviceCaseStatusAddTemplate', None), ('setup_service:serviceSetupHome', None), ('setup_service:setupCaseStatusFlow', None), ('setup_service:setupFlowError', None), ('setup_service:setupMatTile', None), ('setup_service:setupMatTileWrapper', None), ('setup_service:socialAuth', None), ('setup_service:socialEnablePages', None), ('setup_service:socialStart', None), ('setup_service:socialSuccess', None), ('setup_service:socialTeamAccess', None), ('setup_service:socialWaiting', None), ('setup_service:treeGridSelectionTriggerCell', None), ('setup_service:twitterSetupFlow', None), ('setup_service_entityarchiving:entityArchivingSetup', None), ('setup_service_entityarchiving:entityArchivingSetupView', None), ('setup_service_fieldservice:baseTemplateAssignment', None), ('setup_service_fieldservice:createMobileExtensionModal', None), ('setup_service_fieldservice:emptyState', None), ('setup_service_fieldservice:fieldServiceSettings', None), ('setup_service_fieldservice:mobileExtensionGetStarted', None), ('setup_service_fieldservice:mobileExtensionList', None), ('setup_service_fieldservice:quickActionLinkedList', None), ('setup_service_fieldservice:setupEntityList', None), ('setup_service_fieldservice:timeSheetTemplate', None), ('setup_service_fieldservice:timeSheetTemplateAssignment', None), ('setup_service_fieldservice:timeSheetTemplateWizard', None), ('setup_service_fieldservice:timeSheetTemplateWizardDetailsStep', None), ('setup_service_fieldservice:timeSheetTemplateWizardFlow', None), ('setup_service_fieldservice:updateTemplateAssignmentModal', None), ('setup_service_fieldservice:viewLinksMobileExtensionModal', None), ('setup_service_fieldservice:visionPrediction', None), ('setup_service_intents:createIntentModal', None), ('setup_service_intents:domainList', None), ('setup_service_intents:domainListCard', None), ('setup_service_intents:domainQuickViewModal', None), ('setup_service_intents:intentListCard', None), ('setup_service_intents:intentRecord', None), ('setup_service_intents:intentSetRecord', None), ('setup_service_intents:intentSetup', None), ('setup_service_intents:slotClassListCard', None), ('setup_service_intents:slotClassRecord', None), ('setup_service_livemessage:channelsContainer', None), ('setup_service_livemessage:channelsGrid', None), ('setup_service_livemessage:errorType', None), ('setup_service_livemessage:messageType', None), ('setup_service_livemessage:messagingChannelEditAction', None), ('setup_service_livemessage:messagingChannelEditModal', None), ('setup_service_livemessage:messagingDeliveryErrorLogContainer', None), ('setup_service_livemessage:messagingDeliveryErrorMassDelete', None), ('setup_service_livemessage:messagingDeliveryErrorViewAction', None), ('setup_service_livemessage:messagingDeliveryErrorViewModal', None), ('setup_service_livemessage:messagingSensitiveDataRuleEditAction', None), ('setup_service_livemessage:messagingSensitiveDataRuleEditModal', None), ('setup_service_livemessage:messagingSensitiveDataRules', None), ('setup_service_livemessage:messagingTemplateDeveloperNameField', None), ('setup_service_livemessage:messagingTemplateMasterLabelField', None), ('setup_service_livemessage:messagingTemplateMessageField', None), ('setup_service_livemessage:messagingTemplateSettingsContainer', None), ('setup_service_livemessage:saveButton', None), ('setup_service_livemessage:sensitiveDataRuleActionTypeListField', None), ('setup_service_livemessage:sensitiveDataRuleEnforceOnListField', None), ('setup_service_livemessage:sensitiveDataRulePatternListField', None), ('setup_service_livemessage:settingsContainer', None), ('setup_service_messenger:messengerSettings', None), ('setup_service_messenger:messengerUsers', None), ('setup_service_objectlinking:channelSetupFlowTile', None), ('setup_service_objectlinking:channelType', None), ('setup_service_objectlinking:linkingRulesContainer', None), ('setup_service_objectlinking:rulesGrid', None), ('setup_service_objectlinking:settingsContainer', None), ('setup_service_omnichannel:attributeBasedRoutingCombobox', None), ('setup_service_omnichannel:attributeBasedRoutingSelectAttributeList', None), ('setup_service_omnichannel:attributeBasedRoutingSelectAttributeRow', None), ('setup_service_omnichannel:attributeBasedRoutingSetup', None), ('setup_service_omnichannel:attributeBasedRoutingSetupFooter', None), ('setup_service_omnichannel:attributeBasedRoutingSetupHeader', None), ('setup_service_omnichannel:attributeBasedRoutingSetupModal', None), ('setup_service_omnichannel:attributeBasedRoutingSetupSelectAttributes', None), ('setup_service_omnichannel:attributeBasedRoutingSetupSelectEntity', None), ('setup_service_omnichannel:attributeBasedRoutingSetupSelectFields', None), ('setup_service_omnichannel:attributeBasedSaveModalFooter', None), ('setup_service_omnichannel:errorPopover', None), ('setup_service_predictions:addFields', None), ('setup_service_predictions:addFieldsContent', None), ('setup_service_predictions:baseModal', None), ('setup_service_predictions:confirmationModal', None), ('setup_service_predictions:dataSummary', None), ('setup_service_predictions:dataSummaryCaseObjectCount', None), ('setup_service_predictions:dataSummaryReviewScreen', None), ('setup_service_predictions:einsteinCaseClassificationSegmentationScreen', None), ('setup_service_predictions:einsteinCaseClassificationSetup', None), ('setup_service_predictions:einsteinCaseClassificationSetupDataSegmentationBase', None), ('setup_service_predictions:einsteinCaseClassificationSetupDataSegmentationStart', None), ('setup_service_predictions:fieldList', None), ('setup_service_predictions:fieldListItem', None), ('setup_service_predictions:initialProgressBar', None), ('setup_service_predictions:modelConfigPage', None), ('setup_service_predictions:modelDetailHeader', None), ('setup_service_predictions:modelList', None), ('setup_service_predictions:modelListItem', None), ('setup_service_predictions:modelListItemContainer', None), ('setup_service_predictions:modelOverviewPage', None), ('setup_service_predictions:predictiveModelsCard', None), ('setup_service_predictions:progressBar', None), ('setup_service_predictions:report', None), ('setup_service_predictions:reportChart', None), ('setup_service_predictions:reviewBasics', None), ('setup_service_predictions:reviewFields', None), ('setup_service_predictions:reviewTerms', None), ('setup_service_predictions:reviewTermsFlow', None), ('setup_service_predictions:segmentationInfoSidebar', None), ('setup_service_predictions:selectFields', None), ('setup_service_predictions:settings', None), ('setup_service_predictions:setupModelPage', None), ('setup_service_predictions:setupReviewFields', None), ('setup_service_predictions:thresholdPicker', None), ('setup_service_scs:caseRulesTab', None), ('setup_service_scs:inboundSettingsTab', None), ('setup_service_scs:scopedNotification', None), ('setup_service_scs:socialBusinessRulesCaseSubject', None), ('setup_service_scs:socialBusinessRulesCaseSubjectAddField', None), ('setup_service_scs:socialBusinessRulesCaseSubjectCustomSubject', None), ('setup_service_scs:socialBusinessRulesContainer', None), ('setup_service_scs:socialBusinessRulesFooter', None), ('setup_service_scs:socialBusinessRulesTabs', None), ('setup_service_smb:audioUploader', None), ('setup_service_smb:createAgentQueue', None), ('setup_service_smb:hcCreateTopics', None), ('setup_service_smb:hcCreateTopicsRow', None), ('setup_service_smb:hcSetupFlow', None), ('setup_service_smb:hcStart', None), ('setup_service_smb:hcSuccess', None), ('setup_service_smb:helpCenterSetupPage', None), ('setup_service_smb:lsfGenericStep', None), ('setup_service_smb:lsfQueueCreation', None), ('setup_service_smb:voiceChannelBusinessHours', None), ('setup_service_smb:voiceChannelMessageUploader', None), ('setup_service_smb:voiceChannelName', None), ('setup_service_smb:voiceChannelSelectNumber', None), ('setup_service_smb:voiceChannelSetupFlow', None), ('setup_service_smb:voiceChannelStart', None), ('setup_service_smb:voiceChannelSuccess', None), ('setup_service_smb:voiceRouting', None), ('setup_service_smb:voiceRoutingSetupFlow', None), ('setup_service_smb:voiceSelectPhone', None), ('setup_suggested_articles:suggestedArticlesSetup', None), ('setup_suggested_articles:suggestedArticlesSetupBasicsStep', None), ('setup_suggested_articles:suggestedArticlesSetupConfigurationFlow', None), ('setup_suggested_articles:suggestedArticlesSetupFieldList', None), ('setup_suggested_articles:suggestedArticlesSetupHomePage', None), ('setup_suggested_articles:suggestedArticlesSetupInformBeforeBuild', None), ('setup_suggested_articles:suggestedArticlesSetupModal', None), ('setup_suggested_articles:suggestedArticlesSetupProgressBar', None), ('setup_suggested_articles:suggestedArticlesSetupReviewTerms', None), ('setup_suggested_articles:suggestedArticlesSetupReviewTermsFlow', None), ('setup_suggested_articles:suggestedArticlesSetupSelectFieldsStep', None), ('setup_suggested_articles:suggestedArticlesSetupStep', None), ('setup_suggested_articles:suggestedArticlesSetupWarnBeforeEdit', None), ('setup_suggested_response:initialProgressBarItem', None), ('setup_suggested_response:processIllustrationProgressBar', None), ('setup_suggested_response:replyRecommendationActivatePageInfo', None), ('setup_suggested_response:replyRecommendationBuildInfo', None), ('setup_suggested_response:replyTextListView', None), ('setup_suggested_response:rrProgressBar', None), ('setup_suggested_response:suggestedResponseSetup', None), ('setupnav:appImageUpload', None), ('setupnav:appLauncherPreview', None), ('setupnav:appManager', None), ('setupnav:availableProfilesDataProvider', None), ('setupnav:formFactorsCellRenderer', None), ('setupnav:iconPicker', None), ('setupnav:iconPickerListItem', None), ('setupnav:iconPickerModal', None), ('setupnav:infiniteDuelingListTestHarness', None), ('setupnav:lsfEditFlow', None), ('setupnav:lsfMilestone', None), ('setupnav:lsfMilestoneAppCapabilities', None), ('setupnav:lsfMilestoneAppNavigation', None), ('setupnav:lsfMilestoneCreate', None), ('setupnav:lsfMilestoneItems', None), ('setupnav:lsfMilestoneNavigationRules', None), ('setupnav:lsfMilestoneProfiles', None), ('setupnav:lsfMilestoneUtilityBar', None), ('setupnav:lsfNewFlow', None), ('setupnav:uitypeCellRenderer', None), ('setupnav:upgradeCustomApp', None), ('setupnav:utilityBarItemIconPicker', None), ('setupnav:utilityBarSetup', None), ('setupnav:utilityBarSetupPropertyEditor', None), ('setupnav:utilityBarSetupTab', None), ('setupnav:utilityBarSetupTabset', None), ('setupnav:utilityBarSetupVisualEditorPalette', None), ('setupwizard:alertBox', None), ('setupwizard:footer', None), ('setupwizard:header', None), ('setupwizard:milestoneMarker', None), ('setupwizard:milestoneTracker', None), ('setupwizard:overlay', None), ('setupwizard:stdMilestone', None), ('setupwizard:stdOverlay', None), ('setupwizard:stdSubstep', None), ('setupwizard:stepLevelMessage', None), ('setupwizard:testMilestone', None), ('setupwizard:wizard', None), ('sfa:accountLookupCard', None), ('sfa:addAccTeamOnOpp', None), ('sfa:addCustomPriceOnPricebook', None), ('sfa:addCustomPriceOnProduct', None), ('sfa:addCustomPriceOnProductFooter', None), ('sfa:addDefaultTeam', None), ('sfa:analyticsHome', None), ('sfa:assetDateFieldOverride', None), ('sfa:caseLookupCard', None), ('sfa:checkboxButton', None), ('sfa:checkboxToggle', None), ('sfa:chooseCurrencyFilter', None), ('sfa:choosePricebook', None), ('sfa:choosePricebookFooter', None), ('sfa:choosePricebookPostSaveRunnable', None), ('sfa:closableMessage', None), ('sfa:contactLookupCard', None), ('sfa:createPartnerContainer', None), ('sfa:datePicker', None), ('sfa:datePickerItem', None), ('sfa:datePickerScroller', None), ('sfa:datePickerWeek', None), ('sfa:deleteAllTeams', None), ('sfa:detailPanelWrapper', None), ('sfa:dialog', None), ('sfa:displayTeamEffectiveAccessContainer', None), ('sfa:duelingListBoxes', None), ('sfa:eventActivityDate', None), ('sfa:eventActivityDateTime', None), ('sfa:eventDateTime', None), ('sfa:eventDurationInMinutes', None), ('sfa:eventIsAllDayEvent', None), ('sfa:eventOwnerPreventEntityChange', None), ('sfa:filterMenu', None), ('sfa:folderHome', None), ('sfa:forecasting', None), ('sfa:hierarchyDataManager', None), ('sfa:hierarchyFullView', None), ('sfa:hierarchyListViewAction', None), ('sfa:hierarchyListViewCard', None), ('sfa:hierarchyListViewDetails', None), ('sfa:hierarchyPrompt', None), ('sfa:hierarchyTriggerCell', None), ('sfa:importButton', None), ('sfa:importContact', None), ('sfa:launchPhone', None), ('sfa:lightningConversionWelcomeMat', None), ('sfa:linkedInSalesNavigatorPage', None), ('sfa:navigateToHierarchyButton', None), ('sfa:objTerrAssociationCreate', None), ('sfa:objTerrAssociationCreateFooter', None), ('sfa:ocrMultiEdit', None), ('sfa:ocrRelatedListPrimaryField', None), ('sfa:opportunityContactRoleIsPrimary', None), ('sfa:opportunityFieldOverride', None), ('sfa:opportunityLineItemFieldOverride', None), ('sfa:opportunityLineItemMultiEdit', None), ('sfa:opportunityLineItemScheduleMultiEdit', None), ('sfa:opportunityLineItemScheduleSubtotalsFooter', None), ('sfa:opportunityLookupCard', None), ('sfa:opportunitySplitMultiEdit', None), ('sfa:opportunitySplitSubtotalsFooter', None), ('sfa:opportunitySplitUser', None), ('sfa:outputCompoundPhotoUserName', None), ('sfa:outputLookupForContactPoint', None), ('sfa:outputLookupNoNavigation', None), ('sfa:outputLookupWithHierarchyIcon', None), ('sfa:outputNameWithHierarchyIcon', None), ('sfa:outputYearQuarter', None), ('sfa:placeholder', None), ('sfa:productNameOutputLookup', None), ('sfa:productScheduleDeleteAll', None), ('sfa:productScheduleEstablish', None), ('sfa:productScheduleEstablishInputFields', None), ('sfa:saveAndNewEventEntity', None), ('sfa:saveEventEntityAction', None), ('sfa:sfdcEventList', None), ('sfa:sfdcEventListDataManager', None), ('sfa:sfdcEventListStencil', None), ('sfa:sortLineItems', None), ('sfa:stageNameService', None), ('sfa:stageNameServiceForMDP', None), ('sfa:stageNameServiceForecastCategoryWrapper', None), ('sfa:stageNameServiceProbabilityWrapper', None), ('sfa:taskList', None), ('sfa:teamAccessLevel', None), ('sfa:teamDetailPanel', None), ('sfa:teamDetailPanelInfoMessage', None), ('sfa:teamMiniRelatedStencil', None), ('sfa:teamMiniRelatedStencilMobile', None), ('sfa:tempDepend', None), ('sfa:useStandardPrice', None), ('sfa:useStandardPriceUnitPriceWrapper', None), ('siteforce:b2bBody', None), ('siteforce:baseInvalidComponent', None), ('siteforce:baseScopedSldsTemplate', None), ('siteforce:baseSldsTemplate', None), ('siteforce:baseTemplate', None), ('siteforce:cmsConnectManager', None), ('siteforce:cmsConnectProvider', None), ('siteforce:communityTemplate', None), ('siteforce:conditional', None), ('siteforce:contentArea', None), ('siteforce:cptBody', None), ('siteforce:cptThemeCss', None), ('siteforce:designTimeCmpLoader', None), ('siteforce:designTimeCmpLoaderWrapper', None), ('siteforce:designTimeComponent', None), ('siteforce:designTimeEmptyRegion', None), ('siteforce:designTimeLabelLoader', None), ('siteforce:designTimeMode', None), ('siteforce:designTimeModeLoader', None), ('siteforce:designTimeRegion', None), ('siteforce:designTimeSection', None), ('siteforce:dialogMessage', None), ('siteforce:dialogModal', None), ('siteforce:dialogOfflineMessage', None), ('siteforce:dialogPanel', None), ('siteforce:dialogService', None), ('siteforce:dynamicLayout', None), ('siteforce:fontContainer', None), ('siteforce:fontStyle', None), ('siteforce:helpCenterBody', None), ('siteforce:hiddenRegion', None), ('siteforce:hybridAppManager', None), ('siteforce:insuranceBody', None), ('siteforce:integrationServiceAppTemplate', None), ('siteforce:koaBody', None), ('siteforce:koaTemplate', None), ('siteforce:kokuaBody', None), ('siteforce:kokuaTemplate', None), ('siteforce:loadingBalls', None), ('siteforce:napiliBody', None), ('siteforce:napiliFooter', None), ('siteforce:napiliFooterDesignInfo', None), ('siteforce:napiliStyle', None), ('siteforce:napiliTemplate', None), ('siteforce:navigationProvider', None), ('siteforce:networkTracking', None), ('siteforce:oneColumnLayout', None), ('siteforce:pageLoader', None), ('siteforce:panelManager', None), ('siteforce:panelsContainer', None), ('siteforce:placeholderComponent', None), ('siteforce:prmBody', None), ('siteforce:prmThemeCss', None), ('siteforce:publiclyCacheableComponentLoader', None), ('siteforce:qb', None), ('siteforce:quarterback', None), ('siteforce:recordServiceComponent', None), ('siteforce:regionLoader', None), ('siteforce:regionLoaderWrapper', None), ('siteforce:routerInitializer', None), ('siteforce:runtimeComponent', None), ('siteforce:runtimeMode', None), ('siteforce:runtimeRegion', None), ('siteforce:serviceBody', None), ('siteforce:serviceThemeCss', None), ('siteforce:sfdcPage', None), ('siteforce:sldsOneColLayout', None), ('siteforce:sldsThreeCol336Layout', None), ('siteforce:sldsThreeCol363Layout', None), ('siteforce:sldsThreeCol444Layout', None), ('siteforce:sldsThreeCol633Layout', None), ('siteforce:sldsTwoCol48Layout', None), ('siteforce:sldsTwoCol66Layout', None), ('siteforce:sldsTwoCol84Layout', None), ('siteforce:sldsTwoCol84SidebarFeaturedLayout', None), ('siteforce:spinnerManager', None), ('siteforce:starterBody', None), ('siteforce:style', None), ('siteforce:themeLayoutStarter', None), ('siteforce:toast', None), ('siteforce:twoCol74Layout', None), ('siteforce:twoColumnLayout', None), ('siteforce:warningComponent', None), ('siteforce:warningComponentNoData', None), ('siteforceBuilder:cmcHubMenuWrapper', None), ('siteforceBuilder:communityBuilderComponentPalettePanel', None), ('siteforceBuilder:communityBuilderComponentPropertyPanel', None), ('siteforceBuilder:communityBuilderLibraryLoader', None), ('siteforceBuilder:communityBuilderPanelManager', None), ('siteforceBuilder:communityBuilderTemplate', None), ('siteforceBuilder:dropdown', None), ('siteforceBuilder:paletteSectionDisabledMessage', None), ('siteforceBuilder:setupFlowLibraryWrapper', None), ('siteforceBuilder:siteLinkDropdown', None), ('support:caseCommentIsNotificationSelectedField', None), ('support:caseCommentIsPublishedField', None), ('support:caseCommentOutputText', None), ('support:caseHighlightsPreviewStencil', None), ('support:caseHoverDescription', None), ('support:caseMergeSetup', None), ('support:caseTeamActions', None), ('support:changeVisibilityAction', None), ('support:compactClumpItem', None), ('support:compactClumpItemForPreview', None), ('support:compactFeedItem', None), ('support:compactFeedItemArticleContent', None), ('support:compactFeedItemCaseCommentContent', None), ('support:compactFeedItemChatTranscriptContent', None), ('support:compactFeedItemContent', None), ('support:compactFeedItemDefaultContent', None), ('support:compactFeedItemEmailMessageContent', None), ('support:compactFeedItemFieldChangeContent', None), ('support:compactFeedItemForPreview', None), ('support:compactFeedItemHeader', None), ('support:compactFeedItemLogCallContent', None), ('support:compactFeedItemRecordSummaryContent', None), ('support:compactFeedItemSocialPostContent', None), ('support:compactFeedOverflowActionMenu', None), ('support:compactRecordFeedContainerDesktop', None), ('support:contactRequestButton', None), ('support:contactRequestButtonDesignInfo', None), ('support:contactRequestFlow', None), ('support:contactRequestFlowAvailableChannelsDataProvider', None), ('support:contactRequestFlowAvailableReasonsDataProvider', None), ('support:contactRequestFlowChannelSelection', None), ('support:contactRequestFlowDetails', None), ('support:contactRequestFlowError', None), ('support:contactRequestFlowOwnerSelection', None), ('support:contactRequestFlowReasonSelection', None), ('support:contactRequestFlowSuccess', None), ('support:contactRequestFlowsListView', None), ('support:contactRequestFlowsSetup', None), ('support:contactRequestWhatIdLookup', None), ('support:contactRequestWhoIdLookup', None), ('support:crossFrameApiManager', None), ('support:draftOverwriteWarningModal', None), ('support:emailAddress', None), ('support:emailAddresses', None), ('support:emailApproval', None), ('support:emailApprovalNotification', None), ('support:emailAutosaver', None), ('support:emailBody', None), ('support:emailHeader', None), ('support:emailMessageDropdown', None), ('support:emailMessageDropdownButton', None), ('support:emailMessageMergeFieldOverride', None), ('support:emailMessageSubjectFieldLinkOverride', None), ('support:emailRecipientLookup', None), ('support:emailReplyActionLink', None), ('support:enhancedOutputURL', None), ('support:feedContainerForPreview', None), ('support:feedFilters', None), ('support:feedItemAction', None), ('support:inputCaseMergedStatus', None), ('support:inputCaseStatus', None), ('support:inputEmailAttachmentIds', None), ('support:inputEmailRecipients', None), ('support:inputFolderField', None), ('support:inputTextArea', None), ('support:label', None), ('support:lightningQuickTextSetup', None), ('support:likeAction', None), ('support:milestoneItem', None), ('support:milestoneTimer', None), ('support:milestones', None), ('support:milestonesDesignInfo', None), ('support:milestonesList', None), ('support:outputCaseSubjectFieldWrapper', None), ('support:outputFolderField', None), ('support:outputLookupWithPreviewForSubject', None), ('support:outputPhoneManager', None), ('support:outputTextArea', None), ('support:ownerAssignmentForContactRequest', None), ('support:progressRing', None), ('support:publisherQuickSendEmail', None), ('support:quickActionLink', None), ('support:quickActionLinkManager', None), ('support:quickActionRunnable', None), ('support:quickText', None), ('support:quickTextBrowserContainer', None), ('support:quickTextChannelField', None), ('support:quickTextChannelRowTransformer', None), ('support:quickTextChannelViewField', None), ('support:quickTextFloater', None), ('support:quickTextMessageField', None), ('support:quickTextPreview', None), ('support:quickTextToolbarButton', None), ('support:sendEmailQuickAction', None), ('support:toInputEmailRecipients', None), ('support:toggleObjectHomeView', None), ('support:urlImageSelector', None), ('support:voiceCallParticipantOverride', None), ('survey:advanceFeatures', None), ('survey:analytics', None), ('survey:analyticsPublished', None), ('survey:analyticsPublishedv2', None), ('survey:analyticsUnpublished', None), ('survey:answerCsat', None), ('survey:answerDateNew', None), ('survey:answerInputTemplate', None), ('survey:answerMultiChoice', None), ('survey:answerNps', None), ('survey:answerPicklist', None), ('survey:answerRadio', None), ('survey:answerRating', None), ('survey:answerRuntimeBase', None), ('survey:answerSlider', None), ('survey:answerStackRank', None), ('survey:answerStackRankItem', None), ('survey:answerStackRankWeight', None), ('survey:answerTextarea', None), ('survey:baseTemplate', None), ('survey:build', None), ('survey:builder', None), ('survey:builderAddImage', None), ('survey:builderLeftPanel', None), ('survey:builderLeftPanelSurveyItem', None), ('survey:builderRichText', None), ('survey:builderRichTextButtonImage', None), ('survey:builderStylePanel', None), ('survey:builderToolbar', None), ('survey:cloneNewSurveyModal', None), ('survey:cmpInputRuntimeCsat', None), ('survey:cmpInputRuntimeSlider', None), ('survey:cmpInputRuntimeStackRank', None), ('survey:colorPicker', None), ('survey:conditionBuilder', None), ('survey:conditionEntry', None), ('survey:confirmActiveOverrideModal', None), ('survey:createInvitationAction', None), ('survey:dataMapperEditor', None), ('survey:dataMapperWrapper', None), ('survey:defaultNavigationRule', None), ('survey:displayLogicModal', None), ('survey:emailPreviewModal', None), ('survey:emailPreviewPublisher', None), ('survey:emptyState', None), ('survey:expireInvitation', None), ('survey:exportDialog', None), ('survey:exportDialogFooter', None), ('survey:exportDialogHeader', None), ('survey:feedbackScore', None), ('survey:feedbackScoreCommon', None), ('survey:feedbackScoreDesignInfo', None), ('survey:feedbackScoreDesignSubstitute', None), ('survey:feedbackScoreResponse', None), ('survey:fileSelector', None), ('survey:getSharableLinkModal', None), ('survey:header', None), ('survey:logicLabel', None), ('survey:logicModal', None), ('survey:logicRuleList', None), ('survey:logicRuleListItem', None), ('survey:modal', None), ('survey:network', None), ('survey:newSurveyVersionModal', None), ('survey:notDeleteableSurveyItemModal', None), ('survey:pageHeader', None), ('survey:picklistDataProvider', None), ('survey:questionCreatorPanel', None), ('survey:questionEditor', None), ('survey:questionList', None), ('survey:questionOptions', None), ('survey:questionTypePanelItem', None), ('survey:ruleBuilder', None), ('survey:ruleView', None), ('survey:runtimeActionBar', None), ('survey:runtimeAnswerTextarea', None), ('survey:runtimeBaseAnswer', None), ('survey:runtimeCsat', None), ('survey:runtimeDate', None), ('survey:runtimeMultiChoice', None), ('survey:runtimeNps', None), ('survey:runtimeOutputText', None), ('survey:runtimePicklist', None), ('survey:runtimeQuestionDescription', None), ('survey:runtimeQuestionImage', None), ('survey:runtimeQuestionLabel', None), ('survey:runtimeRadioButton', None), ('survey:runtimeRating', None), ('survey:runtimeScreen', None), ('survey:runtimeScreenActionButtons', None), ('survey:runtimeSlider', None), ('survey:runtimeStackRank', None), ('survey:runtimeSurvey', None), ('survey:runtimeThankYou', None), ('survey:runtimeWelcome', None), ('survey:saveAsModal', None), ('survey:send', None), ('survey:sendPublished', None), ('survey:sendUnpublished', None), ('survey:slider', None), ('survey:survey', None), ('survey:surveyActivationModal', None), ('survey:surveyChoiceResponseChart', None), ('survey:surveyCustomSvgIcons', None), ('survey:surveyDesignInfo', None), ('survey:surveyDesignSubstitute', None), ('survey:surveyDetailsLocalization', None), ('survey:surveyEmailBranding', None), ('survey:surveyEmailEditor', None), ('survey:surveyEmailSummary', None), ('survey:surveyEmailWizard', None), ('survey:surveyEmailWizardFooter', None), ('survey:surveyFreeTextDateResponse', None), ('survey:surveyInsertResponseWizard', None), ('survey:surveyInsertResponseWizardFooter', None), ('survey:surveyLocalization', None), ('survey:surveyLocalizationEditor', None), ('survey:surveyLocalizationWizard', None), ('survey:surveyPageLocalization', None), ('survey:surveyQuestionLabelLocalization', None), ('survey:surveyQuestionResponse', None), ('survey:surveyQuestionResponseCharts', None), ('survey:surveyQuestionResponseChartsv2', None), ('survey:surveyResponseStatusCharts', None), ('survey:surveySubjectRLName', None), ('survey:tester_builderLeftPanel', None), ('survey:unsavedChangesWarningModal', None), ('survey:visualPickerInput', None), ('templatesetup:deployPage', None), ('templatesetup:deploymentNotification', None), ('templatesetup:historyPage', None), ('templatesetup:notificationToast', None), ('templatesetup:openNewBrowserTabLink', None), ('templatesetup:pageTitle', None), ('templatesetup:svgIcon', None), ('templatesetup:template', None), ('templatesetup:templateDesc', None), ('templatesetup:templateHistoryItems', None), ('templatesetup:templateItem', None), ('templatesetup:templateListPage', None), ('templatesetup:templatePrerequisites', None), ('templatesetup:templatePromptedValue', None), ('templatesetup:templatePromptedValues', None), ('templatesetup:templateSearch', None), ('templatesetup:templateSearchDataProvider', None), ('templatesetup:templateUninstallLink', None), ('templatesetup:templatesDataProvider', None), ('today:acceptanceStatusIcon', None), ('today:agendaCard', None), ('today:agendaRow', None), ('today:bridgeWrapper', None), ('today:calendar', None), ('today:card', None), ('today:cardLoader', None), ('today:cardLoaderFeeder', None), ('today:cardLoadingUI', None), ('today:clientSideDataProvider', None), ('today:conferenceCall', None), ('today:dashboardCardContainer', None), ('today:debugBox', None), ('today:deviceFeature', None), ('today:deviceManager', None), ('today:eventCard', None), ('today:eventContainer', None), ('today:eventDetailContainer', None), ('today:eventDetailSlide', None), ('today:eventNotesCard', None), ('today:eventRecordHome', None), ('today:eventRecordHomeContainer', None), ('today:eventsManager', None), ('today:geolocation', None), ('today:heroCardItemStencil', None), ('today:inviteeList', None), ('today:inviteeListCard', None), ('today:inviteeListDataProvider', None), ('today:inviteeListRow', None), ('today:inviteeListRowStencil', None), ('today:inviteeRecordHome', None), ('today:landingNew', None), ('today:newsContainer', None), ('today:pageActionManager', None), ('today:perfTools', None), ('today:quickMessage', None), ('today:recentRecordContainer', None), ('today:recentRecordList', None), ('today:recentsCard', None), ('today:recentsCardContainer', None), ('today:relatedRecordList', None), ('today:relatedRecordListAbstract', None), ('today:relatedRecordListCard', None), ('today:relatedRecordListCardStencil', None), ('today:relatedRecordListContainer', None), ('today:settings', None), ('today:settingsButton', None), ('today:settingsHeader', None), ('today:smartStore', None), ('today:taskContainer', None), ('today:tasksCard', None), ('today:tempDepend', None), ('today:template', None), ('today:timeContainer', None), ('ui:abstractDataGrid', None), ('ui:abstractList', None), ('ui:action', None), ('ui:actionButton', None), ('ui:actionCheckbox', None), ('ui:actionDelegate', None), ('ui:actionMenuItem', None), ('ui:asyncComponentManager', None), ('ui:asyncImage', None), ('ui:autocomplete', None), ('ui:autocompleteList', None), ('ui:autocompleteOption', None), ('ui:autocompletePanel', None), ('ui:block', None), ('ui:button', None), ('ui:calendar', None), ('ui:carousel', None), ('ui:carouselDeprecated', None), ('ui:carouselIndicator', None), ('ui:carouselPage', None), ('ui:carouselPageDeprecated', None), ('ui:carouselPageIndicator', None), ('ui:carouselPageIndicatorItem', None), ('ui:checkboxMenuItem', None), ('ui:containerManager', None), ('ui:dataGrid', None), ('ui:dataGridActionColumn', None), ('ui:dataGridColumn', None), ('ui:dataGridSelectionColumn', None), ('ui:dataGridSummaryCell', None), ('ui:dataProvider', None), ('ui:dataTable', None), ('ui:dataTableColumn', None), ('ui:dataTableHeader', None), ('ui:dataTableRow', None), ('ui:dataWriter', None), ('ui:datePicker', None), ('ui:datePickerGrid', None), ('ui:datePickerManager', None), ('ui:dayInMonthCell', None), ('ui:dialog', None), ('ui:dialogButtons', None), ('ui:dialogManager', None), ('ui:dragAndDropAccessibility', None), ('ui:dragAndDropAccessibilityMenu', None), ('ui:draggable', None), ('ui:dropzone', None), ('ui:fieldLabel', None), ('ui:format', None), ('ui:image', None), ('ui:infiniteList', None), ('ui:infiniteListRow', None), ('ui:inlineEditPanelBody', None), ('ui:inlinePanel', None), ('ui:input', None), ('ui:inputCheckbox', None), ('ui:inputCurrency', None), ('ui:inputDate', None), ('ui:inputDateHtml', None), ('ui:inputDateRange', None), ('ui:inputDateTime', None), ('ui:inputDateTimeHtml', None), ('ui:inputDateTrigger', None), ('ui:inputDefaultError', None), ('ui:inputEmail', None), ('ui:inputFile', None), ('ui:inputFileDroppableZone', None), ('ui:inputFileFilesList', None), ('ui:inputFileOpenBrowse', None), ('ui:inputNumber', None), ('ui:inputPercent', None), ('ui:inputPhone', None), ('ui:inputRadio', None), ('ui:inputRange', None), ('ui:inputRichText', None), ('ui:inputSearch', None), ('ui:inputSecret', None), ('ui:inputSelect', None), ('ui:inputSelectOption', None), ('ui:inputSelectOptionGroup', None), ('ui:inputSmartNumber', None), ('ui:inputText', None), ('ui:inputTextArea', None), ('ui:inputTextAreaForAutocomplete', None), ('ui:inputTextForAutocomplete', None), ('ui:inputTimePicker', None), ('ui:inputURL', None), ('ui:interactive', None), ('ui:label', None), ('ui:legend', None), ('ui:list', None), ('ui:listSorter', None), ('ui:manifest', None), ('ui:menu', None), ('ui:menuItem', None), ('ui:menuItemSeparator', None), ('ui:menuList', None), ('ui:menuTrigger', None), ('ui:menuTriggerLink', None), ('ui:message', None), ('ui:modal', None), ('ui:output', None), ('ui:outputCheckbox', None), ('ui:outputCurrency', None), ('ui:outputDate', None), ('ui:outputDateTime', None), ('ui:outputEmail', None), ('ui:outputLabel', None), ('ui:outputMultiSelect', None), ('ui:outputNumber', None), ('ui:outputPercent', None), ('ui:outputPhone', None), ('ui:outputRichText', None), ('ui:outputSelect', None), ('ui:outputText', None), ('ui:outputTextArea', None), ('ui:outputURL', None), ('ui:pager', None), ('ui:pagerJumpToPage', None), ('ui:pagerNextPrevious', None), ('ui:pagerPageInfo', None), ('ui:pagerPageSize', None), ('ui:panel', None), ('ui:panelManager2', None), ('ui:picklistLabel', None), ('ui:pill', None), ('ui:pillContainer', None), ('ui:pillContainerAutoComplete', None), ('ui:pillContainerAutoCompleteOption', None), ('ui:popup', None), ('ui:popupTarget', None), ('ui:popupTrigger', None), ('ui:radioMenuItem', None), ('ui:radioToggleMenuItem', None), ('ui:resizeObserver', None), ('ui:scroller', None), ('ui:scrollerDeprecated', None), ('ui:scrollerWrapper', None), ('ui:spinner', None), ('ui:stamp', None), ('ui:tab', None), ('ui:tabBar', None), ('ui:tabItem', None), ('ui:tabOverflowMenuItem', None), ('ui:tabset', None), ('ui:timePicker', None), ('ui:toolbar', None), ('ui:tooltip', None), ('ui:tooltipAdvanced', None), ('ui:tree', None), ('ui:treeNode', None), ('ui:vbox', None), ('ui:virtualDataGrid', None), ('ui:virtualDataTable', None), ('ui:virtualList', None), ('ui:virtualMenuWrapper', None), ('uiExamples:autocompleteDataProvider', None), ('uiExamples:autocompleteExample', None), ('uiExamples:autocompleteOptionExample', None), ('uiExamples:autocompleteOptionExampleExtended', None), ('uiExamples:buttonExample', None), ('uiExamples:carouselExample', None), ('uiExamples:checkbox', None), ('uiExamples:columnResizing', None), ('uiExamples:currency', None), ('uiExamples:dataGridDynamicColumns', None), ('uiExamples:dataGridKitchenSink', None), ('uiExamples:dataGridKitchenSinkDataProvider', None), ('uiExamples:dataProviderExample', None), ('uiExamples:date', None), ('uiExamples:datePicker', None), ('uiExamples:datetime', None), ('uiExamples:detailPopover', None), ('uiExamples:dragAndDropExample', None), ('uiExamples:dragAndDropProvider', None), ('uiExamples:email', None), ('uiExamples:gridActionCell', None), ('uiExamples:headerGridActionCell', None), ('uiExamples:iconCmp', None), ('uiExamples:infiniteDataProvider', None), ('uiExamples:infiniteList', None), ('uiExamples:infiniteListDataProvider', None), ('uiExamples:infiniteListRow', None), ('uiExamples:inputExample', None), ('uiExamples:inputNumberExample', None), ('uiExamples:inputTextExample', None), ('uiExamples:iterationExample', None), ('uiExamples:libraryExample', None), ('uiExamples:mobileViewport', None), ('uiExamples:modalContent', None), ('uiExamples:outputExample', None), ('uiExamples:panelContent', None), ('uiExamples:panelFooter', None), ('uiExamples:panelHeader', None), ('uiExamples:panelPositioningExample', None), ('uiExamples:phone', None), ('uiExamples:popupExample', None), ('uiExamples:radio', None), ('uiExamples:registerCustomPanel', None), ('uiExamples:renderIfExample', None), ('uiExamples:secret', None), ('uiExamples:tabsetExample', None), ('uiExamples:text', None), ('uiExamples:textarea', None), ('uiExamples:tooltipExample', None), ('uiExamples:url', None), ('uiExamples:virtualDataGridKitchenSink', None), ('uiExamples:virtualDataTable', None), ('uiExamples:virtualListExample', None), ('uns:activitiesCard', None), ('uns:activitiesManager', None), ('uns:cardQueue', None), ('uns:defaultNotificationManager', None), ('uns:eventsCard', None), ('uns:eventsManager', None), ('uns:notificationCardFrame', None), ('uns:notificationDefaultCard', None), ('uns:notifications', None), ('uns:notificationsCounter', None), ('uns:notificationsDataProvider', None), ('uns:notificationsListRow', None), ('uns:notificationsPanel', None), ('uns:notificationsVirtualList', None), ('uns:tasksCard', None), ('uns:tasksManager', None), ('userProvisioningUI:analyze', None), ('userProvisioningUI:approval', None), ('userProvisioningUI:break', None), ('userProvisioningUI:collect', None), ('userProvisioningUI:commit', None), ('userProvisioningUI:connector', None), ('userProvisioningUI:errorMessage', None), ('userProvisioningUI:linking', None), ('userProvisioningUI:operation', None), ('userProvisioningUI:summary', None), ('userProvisioningUI:welcome', None), ('visualEditor:accordionSectionsEditor', None), ('visualEditor:appBuilderProvider', None), ('visualEditor:assignmentTable', None), ('visualEditor:attributeDataProvider', None), ('visualEditor:baseBuilder', None), ('visualEditor:baseEditor', None), ('visualEditor:baseEditorPanel', None), ('visualEditor:booleanEditor', None), ('visualEditor:booleanEditorDataProvider', None), ('visualEditor:booleanPicklistEditor', None), ('visualEditor:clientAttributeTypeProvider', None), ('visualEditor:colorEditor', None), ('visualEditor:columnsEditor', None), ('visualEditor:componentPropertiesEditor', None), ('visualEditor:componentPropertiesEditorSection', None), ('visualEditor:containerComponentEditorItem', None), ('visualEditor:containerComponentEditorItemAttributesEditor', None), ('visualEditor:criteriaEditor', None), ('visualEditor:criteriaEditorPanelBody', None), ('visualEditor:dateTimeEditor', None), ('visualEditor:dialogErrors', None), ('visualEditor:doubleEditor', None), ('visualEditor:draggable', None), ('visualEditor:droppable', None), ('visualEditor:duelingList', None), ('visualEditor:duelingListItem', None), ('visualEditor:entityNameEditor', None), ('visualEditor:facetEditor', None), ('visualEditor:fieldEditor', None), ('visualEditor:fieldTraverser', None), ('visualEditor:flowArgumentsEditor', None), ('visualEditor:flowArgumentsRecordIdInput', None), ('visualEditor:focusablePanel', None), ('visualEditor:guardrailsContainer', None), ('visualEditor:highlightsPanelDesignInfo', None), ('visualEditor:highlightsPanelDesignInfoDialogContent', None), ('visualEditor:inboxTabsetEditor', None), ('visualEditor:infoComponent', None), ('visualEditor:infoHeader', None), ('visualEditor:infoList', None), ('visualEditor:integerEditor', None), ('visualEditor:itemList', None), ('visualEditor:itemListRow', None), ('visualEditor:jQueryUIInteraction', None), ('visualEditor:labelEditor', None), ('visualEditor:modal', None), ('visualEditor:modelData', None), ('visualEditor:modelHost', None), ('visualEditor:modelRemoteData', None), ('visualEditor:modelRemoteHost', None), ('visualEditor:motifPicker', None), ('visualEditor:motifPickerItem', None), ('visualEditor:motifPickerList', None), ('visualEditor:multiLineTextEditor', None), ('visualEditor:multiselectEditor', None), ('visualEditor:multiselectPicklistEditor', None), ('visualEditor:pageAssignmentBaseDataProvider', None), ('visualEditor:pageAssignmentBaseStep', None), ('visualEditor:pageAssignmentProfilePickerStepDataProvider', None), ('visualEditor:pageAssignmentWizard', None), ('visualEditor:pageAssignmentWizardFooter', None), ('visualEditor:palette', None), ('visualEditor:paletteItem', None), ('visualEditor:paletteItemRow', None), ('visualEditor:paletteSection', None), ('visualEditor:picklistAutocompleteDeprecated', None), ('visualEditor:picklistAutocompleteOption', None), ('visualEditor:picklistAutocompleteSpecialOption', None), ('visualEditor:picklistEditor', None), ('visualEditor:picklistEditorDataProvider', None), ('visualEditor:picklistEditorDataProviderDeprecated', None), ('visualEditor:picklistEditorDeprecated', None), ('visualEditor:postmessageManager', None), ('visualEditor:propertyEditor', None), ('visualEditor:propertyEditorItem', None), ('visualEditor:readOnlyEditor', None), ('visualEditor:recordHomeTabsDesignInfo', None), ('visualEditor:relatedFieldSummary', None), ('visualEditor:relatedFieldTraversalDialog', None), ('visualEditor:resizable', None), ('visualEditor:richTextCkEditor', None), ('visualEditor:richTextQuillEditor', None), ('visualEditor:ruleEditor', None), ('visualEditor:ruleInfo', None), ('visualEditor:ruleList', None), ('visualEditor:selectableTable', None), ('visualEditor:serverPaletteItemsProvider', None), ('visualEditor:serverPropertyEditorProvider', None), ('visualEditor:sortable', None), ('visualEditor:sortableList', None), ('visualEditor:sortableListItem', None), ('visualEditor:stringEditor', None), ('visualEditor:style', None), ('visualEditor:tableActionCell', None), ('visualEditor:tabsetEditor', None), ('visualEditor:template', None), ('voice:baseCallHandlerInConsole', None), ('voice:callAudioLevel', None), ('voice:callDisposition', None), ('voice:callDispositionList', None), ('voice:callDispositionListContainer', None), ('voice:callDispositionListItem', None), ('voice:callFeedback', None), ('voice:callHandlerContainer', None), ('voice:callHistoryList', None), ('voice:callListContainer', None), ('voice:callListItem', None), ('voice:callPanel', None), ('voice:callSavePanel', None), ('voice:callTemplateEditor', None), ('voice:callTemplatePanel', None), ('voice:coachingListContainer', None), ('voice:coachingPanel', None), ('voice:coachingRecord', None), ('voice:compactRecord', None), ('voice:connectedPanel', None), ('voice:createCallList', None), ('voice:dialPad', None), ('voice:durationRenderer', None), ('voice:feedbackPanel', None), ('voice:getVendorLine', None), ('voice:incomingPanel', None), ('voice:keyPad', None), ('voice:launchSms', None), ('voice:manageLogACall', None), ('voice:networkConnectivity', None), ('voice:numberManagement', None), ('voice:outputDuration', None), ('voice:outputPhone', None), ('voice:phoneNumberPanel', None), ('voice:phoneRenderer', None), ('voice:phoneRowEntry', None), ('voice:phoneSettings', None), ('voice:powerDialer', None), ('voice:profileCallLogQuickAction', None), ('voice:quickSetupButton', None), ('voice:recordingDurationRenderer', None), ('voice:recordingManagement', None), ('voice:recordingMassDelete', None), ('voice:recordingSettings', None), ('voice:releaseNumber', None), ('voice:replaceRecording', None), ('voice:replaceRecordingSetup', None), ('voice:selectPhone', None), ('voice:simpleActivityTimeline', None), ('voice:sliderCheckBox', None), ('voice:softphone', None), ('voice:talkChannelConfigSetup', None), ('voice:talkEditUsers', None), ('voice:talkEnabledSuccessModal', None), ('voice:talkNumberSetup', None), ('voice:talkSetupErrorHeader', None), ('voice:talkSetupErrorMessage', None), ('voice:talkSetupLogicDiagramPanel', None), ('voice:talkSetupPage', None), ('voice:trialTerms', None), ('voice:unknownContact', None), ('voice:usageRenderer', None), ('voice:usageReport', None), ('voice:voiceAudioPlayer', None), ('voice:voiceLocalPresencePage', None), ('voice:voiceMailItem', None), ('voice:voiceMailList', None), ('voice:voiceMailRecorder', None), ('voice:voiceMailSettings', None), ('voice:voiceSetupPage', None), ('voice:voicemailMessageListContainer', None), ('voice:voicemailMessageListItem', None), ('wave:analyticsGettingStartedSetup', None), ('wave:analyticsGettingStartedSetupAssistantPage', None), ('wave:analyticsGettingStartedSetupAssistantTileCollection', None), ('wave:analyticsGettingStartedSetupEnablementPanel', None), ('wave:annotationFeedControl', None), ('wave:annotationPanel', None), ('wave:annotationPublisher', None), ('wave:annotationPublisherControl', None), ('wave:appNameRenderer', None), ('wave:asset', None), ('wave:feedItemFullView', None), ('wave:filterEditor', None), ('wave:loadingSpinnerCard', None), ('wave:recordActions', None), ('wave:sdk', None), ('wave:sdkExample', None), ('wave:sharingInheritanceCoverage', None), ('wave:sharingInheritanceCoverageEmptyCard', None), ('wave:sharingInheritanceCoverageReportTable', None), ('wave:sharingInheritanceCoverageTypeTab', None), ('wave:stepTile', None), ('wave:tempDepend', None), ('wave:waveAddRecipients', None), ('wave:waveAssetRecordHome', None), ('wave:waveConnectToQuip', None), ('wave:waveDashboard', None), ('wave:waveHelpTrayWrapper', None), ('wave:waveHomeEacFreeTab', None), ('wave:waveHomeHvsTab', None), ('wave:waveHomeTab', None), ('wave:waveSubscriptionRecipientsLookup', None), ('wave:waveSubscriptionRecipientsLookupDataProvider', None), ('wave:waveTemplate', None), ('wave:waveVFPageWrapper', None), ('waveapps:clickableDatatable', None), ('waveapps:clientSegmentation', None), ('waveapps:color', None), ('waveapps:demoLearningAdventure', None), ('waveapps:demoSalesAnalytics', None), ('wfm:cpDeleteDialog', None), ('wfm:cpDeleteDialogFooter', None), ('wfm:cpSaveDialog', None), ('wfm:cpSaveDialogFooter', None), ('wfm:createWorkForecast', None), ('wfm:fcChooseConfigGroup', None), ('wfm:fcChooseField', None), ('wfm:fcChooseFieldValue', None), ('wfm:fcChooseInterval', None), ('wfm:fcExportDialog', None), ('wfm:fcExportDialogFooter', None), ('wfm:fcNameAndSave', None), ('wfm:fcNewForecastWizard', None), ('wfm:fcSaveSuccess', None), ('wfm:fcSelectDateRange', None), ('wfm:fcSetupAggFilter', None), ('wfm:fcSetupConfigGroups', None), ('wfm:fcSetupConfigGroupsListView', None), ('wfm:fcSetupNameAndSave', None), ('wfm:fcSetupNewForecastConfig', None), ('wfm:fcSetupSaveSuccess', None), ('wfm:fcSetupSelectEntity', None), ('wfm:fcSetupSelectFields', None), ('wfm:workForecastRecordHome', None), ('wits:execsTeamMember', None), ('wits:feedbackButton', None), ('wits:news', None), ('wits:newsActionsMenu', None), ('wits:newsArticleImage', None), ('wits:newsCardsContainer', None), ('wits:newsCarouselItem', None), ('wits:newsCategoryList', None), ('wits:newsItem', None), ('wits:newsLanding', None), ('wits:newsList', None), ('wits:newsListItem', None), ('wits:newsPanel', None), ('wits:newsReportDialog', None), ('wits:newsTeaserCard', None), ('wits:newsTweetCarouselItem', None), ('wits:newsTweetItem', None), ('wits:newsTweetListItem', None), ('wits:suggestedNameField', None), ('wits:suggestionsController', None), ('wits:suggestionsDataProvider', None), ('wits:suggestionsMatchProvider', None), ('wits:tempDepend', None), ('work:coachedByField', None), ('work:customMetricDueDateField', None), ('work:customMetricProgressField', None), ('work:goalImage', None), ('work:metricNameField', None), ('work:metricProgress', None), ('work:relatedMetricV2ListRecord', None), ('work:relatedWorkBadgeListRecord', None), ('workAloha:editMetricWeights', None), ('workAloha:metricWeightItem', None)], blank=True, null=True)
    hover_text = models.CharField(max_length=255, blank=True, null=True)
    header_text = models.CharField(max_length=255, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ChatterExtension'
        verbose_name = 'Chatter Extension'
        verbose_name_plural = 'Chatter Extensions'
        # keyPrefix = '0MY'



class ChatterExtensionConfig(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='chatterextensionconfig_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='chatterextensionconfig_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    chatter_extension = models.ForeignKey(ChatterExtension, models.DO_NOTHING, blank=True, null=True)  # Master Detail Relationship *
    network = models.ForeignKey('Network', models.DO_NOTHING, blank=True, null=True)  # Master Detail Relationship *
    can_create = models.BooleanField(default=models.DefaultedOnCreate(False))
    can_read = models.BooleanField(default=models.DefaultedOnCreate(False))
    position = models.IntegerField(default=models.DEFAULTED_ON_CREATE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ChatterExtensionConfig'
        verbose_name = 'Chatter Extension Configuration'
        verbose_name_plural = 'Chatter Extension Configurations'
        # keyPrefix = '0Ob'



class ClientBrowser(models.Model):
    users = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    full_user_agent = models.CharField(max_length=1024, sf_read_only=models.READ_ONLY, blank=True, null=True)
    proxy_info = models.CharField(max_length=1024, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_update = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ClientBrowser'
        verbose_name = 'Client Browser'
        verbose_name_plural = 'Client Browser'
        # keyPrefix = '713'



class CollaborationGroup(models.Model):
    name = models.CharField(max_length=40)
    member_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroup_owner_set')
    collaboration_type = models.CharField(max_length=40, verbose_name='Access Type', choices=[('Public', 'Public'), ('Private', 'Private')])
    description = models.TextField(blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroup_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroup_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    full_photo_url = models.URLField(verbose_name='Url for full-sized Photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    medium_photo_url = models.URLField(verbose_name='Url for medium profile photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    small_photo_url = models.URLField(verbose_name='Photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_feed_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY)
    information_title = models.CharField(max_length=30, blank=True, null=True)
    information_body = models.TextField(verbose_name='Information', blank=True, null=True)
    has_private_fields_access = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    can_have_guests = models.BooleanField(verbose_name='Allow customers', default=models.DefaultedOnCreate(False))
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_archived = models.BooleanField(verbose_name='Archive', default=models.DefaultedOnCreate(False))
    is_auto_archive_disabled = models.BooleanField(verbose_name='Disable automatic archiving', default=models.DefaultedOnCreate(False))
    announcement = models.ForeignKey(Announcement, models.DO_NOTHING, blank=True, null=True)
    banner_photo_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_broadcast = models.BooleanField(verbose_name='Broadcast Only', default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'CollaborationGroup'
        verbose_name = 'Group'
        verbose_name_plural = 'Groups'
        # keyPrefix = '0F9'



class CollaborationGroupFeed(models.Model):
    parent = models.ForeignKey(CollaborationGroup, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey('ContentVersion', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CollaborationGroupFeed'
        verbose_name = 'Group Feed'
        verbose_name_plural = 'Group Feed'
        # keyPrefix = 'None'



class CollaborationGroupMember(models.Model):
    collaboration_group = models.ForeignKey(CollaborationGroup, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    member = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupmember_member_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    collaboration_role = models.CharField(max_length=40, verbose_name='Group Member Role', choices=[('Admin', 'Manager'), ('Standard', 'Member')], blank=True, null=True)
    notification_frequency = models.CharField(max_length=40, default=models.DefaultedOnCreate('N'), choices=[('P', 'Email on Each Post'), ('D', 'Daily Digests'), ('W', 'Weekly Digests'), ('N', 'Never')], blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupmember_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupmember_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_feed_access_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CollaborationGroupMember'
        verbose_name = 'Group Member'
        verbose_name_plural = 'Group Members'
        # keyPrefix = '0FB'



class CollaborationGroupMemberRequest(models.Model):
    collaboration_group = models.ForeignKey(CollaborationGroup, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    requester = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupmemberrequest_requester_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    response_message = models.CharField(max_length=255, sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    status = models.CharField(max_length=40, sf_read_only=models.NOT_CREATEABLE, choices=[('Pending', None), ('Accepted', None), ('Declined', None)])
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupmemberrequest_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgroupmemberrequest_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'CollaborationGroupMemberRequest'
        verbose_name = 'Group Member Request'
        verbose_name_plural = 'Group Member Requests'
        # keyPrefix = '0I5'



class CollaborationGroupRecord(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgrouprecord_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationgrouprecord_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    collaboration_group = models.ForeignKey(CollaborationGroup, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    record = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CollaborationGroupRecord'
        verbose_name = 'Group Record'
        verbose_name_plural = 'Group Records'
        # keyPrefix = '0Aa'



class CollaborationInvitation(models.Model):
    parent = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    shared_entity = models.ForeignKey(CollaborationGroup, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [CollaborationGroup, User] Master Detail Relationship *
    inviter = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationinvitation_inviter_set', sf_read_only=models.READ_ONLY)
    invited_user_email = models.CharField(max_length=240, verbose_name='Invited Email', sf_read_only=models.NOT_UPDATEABLE)
    invited_user_email_normalized = models.EmailField(verbose_name='Invited Email (Normalized)', sf_read_only=models.READ_ONLY)
    status = models.CharField(max_length=40, verbose_name='Invitation Status', sf_read_only=models.READ_ONLY, choices=[('Sent', None), ('Accepted', None), ('Canceled', None)])
    optional_message = models.CharField(max_length=255, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationinvitation_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    last_modified_date = models.DateTimeField(verbose_name='Modified Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='collaborationinvitation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'CollaborationInvitation'
        verbose_name = 'Chatter Invitation'
        verbose_name_plural = 'Chatter Invitations'
        # keyPrefix = '0H1'



class ColorDefinition(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Color Definition Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    tab_definition_id = models.CharField(max_length=512, verbose_name='Tab Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    color = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    theme = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    context = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ColorDefinition'
        verbose_name = 'Color Definition'
        verbose_name_plural = 'Color Definitions'
        # keyPrefix = '05k'



class CombinedAttachment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Account, CollaborationGroup, ContentWorkspace, Dashboard, DashboardComponent, EmailTemplate, EnhancedLetterhead, Event, Knowledge__ka, Knowledge__kav, LinkedArticle, ListEmail, Network, Organization, Report, Site, Task, User] Master Detail Relationship *
    record_type = models.CharField(max_length=30, verbose_name='Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(verbose_name='Created', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='combinedattachment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(verbose_name='Content Modified Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='combinedattachment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    file_type = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_size = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_url = models.URLField(verbose_name='Content URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_data_source_name = models.CharField(max_length=80, verbose_name='External Data Source', sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_data_source_type = models.CharField(max_length=80, verbose_name='Class ID', sf_read_only=models.READ_ONLY, choices=[('contentHubItem', None), ('Datajourney', None), ('Identity', None), ('OpenSearch', None), ('outgoingemail', None), ('recommendation', None), ('SimpleURL', None), ('Wrapper', None)], blank=True, null=True)
    sharing_option = models.CharField(max_length=40, verbose_name='Prevent others from sharing and unsharing', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('A'), choices=[('A', 'Freeze Sharing Off'), ('R', 'Freeze Sharing On')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CombinedAttachment'
        verbose_name = 'Note, Attachment, Google Doc And File'
        verbose_name_plural = 'Notes, Attachments, Google Docs And Files'
        # keyPrefix = 'None'



class Community(models.Model):
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='community_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='community_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_published = models.BooleanField(verbose_name='Show In Portal', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Community'
        verbose_name = 'Zone'
        verbose_name_plural = 'Zones'
        # keyPrefix = '09a'



class ConferenceNumber(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='conferencenumber_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='conferencenumber_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    external_event = models.ForeignKey('ExternalEvent', models.DO_NOTHING, blank=True, null=True)  # Master Detail Relationship *
    label = models.CharField(max_length=255, blank=True, null=True)
    number = models.CharField(max_length=40, blank=True, null=True)
    access_code = models.CharField(max_length=255, blank=True, null=True)
    vendor = models.CharField(max_length=255, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ConferenceNumber'
        verbose_name = 'Conference Number'
        verbose_name_plural = 'Conference Numbers'
        # keyPrefix = '0Ah'



class ConnectedApplication(models.Model):
    name = models.CharField(max_length=80, verbose_name='Connected App Name', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'ConnectedApplication'
        verbose_name = 'Connected App'
        verbose_name_plural = 'Connected Apps'
        # keyPrefix = '0H4'



class ContentAsset(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Unique Name')
    language = models.CharField(max_length=40, verbose_name='Master Language', default=models.DEFAULTED_ON_CREATE, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    master_label = models.CharField(max_length=80, verbose_name='Label')
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentasset_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentasset_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    content_document = models.ForeignKey('ContentDocument', models.DO_NOTHING, related_name='contentasset_contentdocument_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_visible_by_external_users = models.BooleanField(verbose_name='Let unauthenticated users see this asset file', default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ContentAsset'
        verbose_name = 'Asset File'
        verbose_name_plural = 'Asset Files'
        # keyPrefix = '03S'



class ContentBody(models.Model):
    class Meta(models.Model.Meta):
        db_table = 'ContentBody'
        verbose_name = 'Content Body'
        verbose_name_plural = 'Content Bodies'
        # keyPrefix = '05T'



class ContentDistribution(models.Model):
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdistribution_createdby_set', sf_read_only=models.READ_ONLY)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdistribution_owner_set')  # Master Detail Relationship *
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdistribution_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    name = models.CharField(max_length=100, verbose_name='Content Delivery Name')
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    content_version = models.ForeignKey('ContentVersion', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    content_document = models.ForeignKey('ContentDocument', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    related_record = models.ForeignKey(Account, models.DO_NOTHING, blank=True, null=True)  # Reference to tables [Account, ListEmail] Master Detail Relationship *
    preferences_allow_pdfdownload = models.BooleanField(db_column='PreferencesAllowPDFDownload', verbose_name='Allow Download as PDF')
    preferences_allow_original_download = models.BooleanField(verbose_name='Allow Download in Original Format')
    preferences_password_required = models.BooleanField(verbose_name='Require Password to Access Content')
    preferences_notify_on_visit = models.BooleanField(verbose_name='Notify Me of First View or Download')
    preferences_link_latest_version = models.BooleanField(verbose_name='Content Delivery Opens Latest Version')
    preferences_allow_view_in_browser = models.BooleanField(verbose_name='Allow View in the Browser')
    preferences_expires = models.BooleanField(verbose_name='Content Delivery Expires')
    preferences_notify_rndtn_complete = models.BooleanField(verbose_name='Email when Preview Images are Ready')
    expiry_date = models.DateTimeField(verbose_name='Expiration Date', blank=True, null=True)
    password = models.CharField(max_length=36, sf_read_only=models.READ_ONLY, blank=True, null=True)
    view_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_view_date = models.DateTimeField(verbose_name='First Viewed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_view_date = models.DateTimeField(verbose_name='Last Viewed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    distribution_public_url = models.CharField(max_length=256, verbose_name='External Link', sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_download_url = models.CharField(max_length=256, verbose_name='File Download Link', sf_read_only=models.READ_ONLY, blank=True, null=True)
    pdf_download_url = models.CharField(max_length=256, verbose_name='PDF Download Link', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentDistribution'
        verbose_name = 'Content Delivery'
        verbose_name_plural = 'Content Deliveries'
        # keyPrefix = '05D'



class ContentDistributionView(models.Model):
    distribution = models.ForeignKey(ContentDistribution, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    parent_view = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(verbose_name='View Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_internal = models.BooleanField(verbose_name='Internal View', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_download = models.BooleanField(verbose_name='File Downloaded', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ContentDistributionView'
        verbose_name = 'Content Delivery View'
        verbose_name_plural = 'Content Delivery Views'
        # keyPrefix = '05H'



class ContentDocument(models.Model):
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdocument_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(verbose_name='Created', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdocument_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_archived = models.BooleanField(sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate(False))
    archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdocument_archivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    archived_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdocument_owner_set', sf_read_only=models.NOT_CREATEABLE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    title = models.CharField(max_length=255, sf_read_only=models.NOT_CREATEABLE)
    publish_status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('U'), choices=[('U', 'Upload Interrupted'), ('P', 'Public'), ('R', 'Private Library')])
    latest_published_version = models.ForeignKey('ContentVersion', models.DO_NOTHING, related_name='contentdocument_latestpublishedversion_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent = models.ForeignKey('ContentWorkspace', models.DO_NOTHING, sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)  # Master Detail Relationship *
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    content_size = models.IntegerField(verbose_name='Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_type = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sharing_option = models.CharField(max_length=40, verbose_name='Prevent others from sharing and unsharing', sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate('A'), choices=[('A', 'Freeze Sharing Off'), ('R', 'Freeze Sharing On')], blank=True, null=True)
    sharing_privacy = models.CharField(max_length=40, verbose_name='File Privacy on Records', sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate('N'), choices=[('N', 'Visible to Anyone With Record Access'), ('P', 'Private on Records')], blank=True, null=True)
    content_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_asset = models.ForeignKey(ContentAsset, models.DO_NOTHING, related_name='contentdocument_contentasset_set', sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentDocument'
        verbose_name = 'Content Document'
        verbose_name_plural = 'Content Documents'
        # keyPrefix = '069'



class ContentDocumentFeed(models.Model):
    parent = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdocumentfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey('ContentVersion', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentdocumentfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentDocumentFeed'
        verbose_name = 'ContentDocument Feed'
        verbose_name_plural = 'ContentDocument Feed'
        # keyPrefix = 'None'



class ContentDocumentHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    content_document = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    field = models.CharField(max_length=255, verbose_name='Changed Field', sf_read_only=models.READ_ONLY, choices=[('ArchivedBy', 'Archived By'), ('ArchivedDate', 'Archived Date'), ('ContentAsset', 'Asset File Details'), ('created', 'Created.'), ('DeletedBy', 'Deleted By'), ('DeletedDate', 'Deleted Date'), ('contentDocPublished', 'Document Added To Library'), ('contentDocFeatured', 'Document Featured'), ('contentDocRepublished', 'Document Re-added To Library'), ('contentDocUnpublished', 'Document Removed From Library'), ('contentDocSubscribed', 'Document Subscribed to'), ('contentDocUnsubscribed', 'Document Unsubscribed to'), ('feedEvent', 'Feed event'), ('individualMerged', 'Individual Merged'), ('IsArchived', 'Is Archived'), ('Owner', 'Owner'), ('ownerAccepted', 'Owner (Accepted)'), ('ownerAssignment', 'Owner (Assignment)'), ('Parent', 'Parent'), ('PublishStatus', 'Publish Status'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('Title', 'Title')])
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentDocumentHistory'
        verbose_name = 'Content Document History'
        verbose_name_plural = 'Content Document History'
        # keyPrefix = 'None'



class ContentDocumentLink(models.Model):
    linked_entity = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Account, CollaborationGroup, ContentWorkspace, Dashboard, DashboardComponent, EmailTemplate, EnhancedLetterhead, Event, Knowledge__ka, Knowledge__kav, LinkedArticle, ListEmail, Network, Organization, OutgoingEmail, Report, Site, Task, Topic, User] Master Detail Relationship *
    content_document = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    share_type = models.CharField(max_length=40, choices=[('V', 'Viewer'), ('C', 'Collaborator'), ('I', 'Inferred')], blank=True, null=True)
    visibility = models.CharField(max_length=40, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Standard Users'), ('SharedUsers', 'Shared Users')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentDocumentLink'
        verbose_name = 'Content Document Link'
        verbose_name_plural = 'Content Document Link'
        # keyPrefix = '06A'



class ContentFolder(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentfolder_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentfolder_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent_content_folder = models.ForeignKey('self', models.DO_NOTHING, blank=True, null=True)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'ContentFolder'
        verbose_name = 'Content Folder'
        verbose_name_plural = 'Content Folders'
        # keyPrefix = '07H'



class ContentFolderItem(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_folder = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent_content_folder = models.ForeignKey(ContentFolder, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    file_type = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_size = models.IntegerField(verbose_name='Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentfolderitem_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentfolderitem_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ContentFolderItem'
        verbose_name = 'Content Folder Item'
        verbose_name_plural = 'Content Folder Items'
        # keyPrefix = 'None'



class ContentFolderLink(models.Model):
    parent_entity = models.ForeignKey('ContentWorkspace', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    content_folder = models.ForeignKey(ContentFolder, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    enable_folder_status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('S', 'Started'), ('C', 'Completed'), ('F', 'Failed')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentFolderLink'
        verbose_name = 'Content Folder Link'
        verbose_name_plural = 'Content Folder Links'
        # keyPrefix = '07v'



class ContentFolderMember(models.Model):
    parent_content_folder = models.ForeignKey(ContentFolder, models.DO_NOTHING, sf_read_only=models.NOT_CREATEABLE)
    child_record = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentfoldermember_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentfoldermember_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ContentFolderMember'
        verbose_name = 'Content Folder Member'
        verbose_name_plural = 'Content Folder Members'
        # keyPrefix = '07I'



class ContentVersion(models.Model):
    content_document = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    is_latest = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    content_url = models.URLField(verbose_name='Content URL', blank=True, null=True)
    content_body = models.ForeignKey(ContentBody, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Master Detail Relationship *
    version_number = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    reason_for_change = models.CharField(max_length=1000, blank=True, null=True)
    sharing_option = models.CharField(max_length=40, verbose_name='Prevent others from sharing and unsharing', default=models.DefaultedOnCreate('A'), choices=[('A', 'Freeze Sharing Off'), ('R', 'Freeze Sharing On')])
    sharing_privacy = models.CharField(max_length=40, verbose_name='File Privacy on Records', default=models.DefaultedOnCreate('N'), choices=[('N', 'Visible to Anyone With Record Access'), ('P', 'Private on Records')])
    path_on_client = models.CharField(max_length=500, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    rating_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    content_modified_date = models.DateTimeField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    content_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentversion_contentmodifiedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    positive_rating_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    negative_rating_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    featured_content_boost = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    featured_content_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='contentversion_owner_set')
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentversion_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentversion_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    tag_csv = models.TextField(verbose_name='Tags', blank=True, null=True)
    file_type = models.CharField(max_length=20, sf_read_only=models.READ_ONLY)
    publish_status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('U'), choices=[('U', 'Upload Interrupted'), ('P', 'Public'), ('R', 'Private Library')])
    version_data = models.TextField(blank=True, null=True)
    content_size = models.IntegerField(verbose_name='Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_publish_location = models.ForeignKey(Account, models.DO_NOTHING, related_name='contentversion_firstpublishlocation_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Reference to tables [Account, CollaborationGroup, ContentWorkspace, Dashboard, DashboardComponent, EmailTemplate, EnhancedLetterhead, Event, Knowledge__ka, Knowledge__kav, LinkedArticle, ListEmail, Network, Organization, OutgoingEmail, Report, Site, Task, Topic, User]
    origin = models.CharField(max_length=40, verbose_name='Content Origin', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate('C'), choices=[('C', 'Content'), ('H', 'Chatter')])
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    content_location = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate('S'), choices=[('S', 'Salesforce'), ('E', 'External'), ('L', 'Social Customer Service')])
    text_preview = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_document_info1 = models.CharField(max_length=1000, blank=True, null=True)
    external_document_info2 = models.CharField(max_length=1000, blank=True, null=True)
    external_data_source = models.ForeignKey('ExternalDataSource', models.DO_NOTHING, blank=True, null=True)
    checksum = models.CharField(max_length=50, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_major_version = models.BooleanField(verbose_name='Major Version', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    is_encrypted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_asset_enabled = models.BooleanField(verbose_name='Asset File Enabled', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    co_branded_account = models.ForeignKey(Account, models.DO_NOTHING, db_column='CoBranded_Account__c', custom=True, related_name='contentversion_cobrandedaccount_set', blank=True, null=True)
    cobranded_collateral = models.BooleanField(custom=True, db_column='Cobranded_Collateral__c', verbose_name='Cobranded Collateral', default=models.DefaultedOnCreate(False))
    partner_focus_end_date = models.DateField(custom=True, db_column='PartnerFocus_End_Date__c', verbose_name='PartnerFocus End Date', blank=True, null=True)
    partner_focus_start_date = models.DateField(custom=True, db_column='PartnerFocus_Start_Date__c', verbose_name='PartnerFocus Start Date', blank=True, null=True)
    partner_focus_type = models.CharField(custom=True, db_column='PartnerFocus_Type__c', max_length=255, verbose_name='PartnerFocus Type', choices=[('Employer', 'Employer'), ('Partner', 'Partner')], blank=True, null=True)
    saved_to_laserfiche = models.BooleanField(custom=True, default=models.DefaultedOnCreate(False))
    insurance_type = models.CharField(custom=True, db_column='Insurance_Type__c', max_length=255, verbose_name='Insurance Type', choices=[('Small Group', 'Small Group'), ('Large Group', 'Large Group'), ('Individual', 'Individual')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentVersion'
        verbose_name = 'Content Version'
        verbose_name_plural = 'Content Versions'
        # keyPrefix = '068'



class ContentVersionHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    content_version = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    field = models.CharField(max_length=255, verbose_name='Changed Field', sf_read_only=models.READ_ONLY, choices=[('CoBranded_Account__c', 'CoBranded Account'), ('Cobranded_Collateral__c', 'Cobranded Collateral'), ('ContentUrl', 'Content URL'), ('created', 'Created.'), ('Description', 'Description'), ('ExternalDataSource', 'External Data Source'), ('ExternalDocumentInfo1', 'External Document Info1'), ('ExternalDocumentInfo2', 'External Document Info2'), ('feedEvent', 'Feed event'), ('SharingPrivacy', 'File Privacy on Records'), ('individualMerged', 'Individual Merged'), ('Insurance_Type__c', 'Insurance Type'), ('Language', 'Language'), ('IsMajorVersion', 'Major Version'), ('Owner', 'Owner'), ('ownerAccepted', 'Owner (Accepted)'), ('ownerAssignment', 'Owner (Assignment)'), ('PartnerFocus_End_Date__c', 'PartnerFocus End Date'), ('PartnerFocus_Start_Date__c', 'PartnerFocus Start Date'), ('PartnerFocus_Type__c', 'PartnerFocus Type'), ('SharingOption', 'Prevent others from sharing and unsharing'), ('ReasonForChange', 'Reason For Change'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('SavedToLaserfiche__c', 'Saved To Laserfiche'), ('Title', 'Title'), ('contentVersionCommented', 'Version Commented'), ('contentVersionCreated', 'Version Created'), ('contentVersionDataReplaced', 'Version Data Replaced'), ('contentVersionDeleted', 'Version Deleted'), ('contentVersionDownloaded', 'Version Downloaded'), ('contentVersionRated', 'Version Rated'), ('contentVersionUpdated', 'Version Updated'), ('contentVersionViewed', 'Version Viewed')])
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentVersionHistory'
        verbose_name = 'Content Version History'
        verbose_name_plural = 'Content Version History'
        # keyPrefix = 'None'



class ContentWorkspace(models.Model):
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    tag_model = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('U'), choices=[('U', 'Unrestricted'), ('G', 'Guided'), ('R', 'Restricted')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentworkspace_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentworkspace_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    default_record_type = models.ForeignKey('RecordType', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_restrict_content_types = models.BooleanField(verbose_name='Restrict Record Types', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_restrict_linked_content_types = models.BooleanField(verbose_name='Restrict Linked Record Types', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    workspace_type = models.CharField(max_length=40, verbose_name='Library Type', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('R'), choices=[('R', 'Regular'), ('B', 'Asset System')], blank=True, null=True)
    should_add_creator_membership = models.BooleanField(verbose_name='Add Creator Membership', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    last_workspace_activity_date = models.DateTimeField(verbose_name='Last Activity', sf_read_only=models.READ_ONLY, blank=True, null=True)
    root_content_folder = models.ForeignKey(ContentFolder, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=80, verbose_name='Unique Name', blank=True, null=True)
    workspace_image = models.ForeignKey(ContentAsset, models.DO_NOTHING, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentWorkspace'
        verbose_name = 'Library'
        verbose_name_plural = 'Libraries'
        # keyPrefix = '058'



class ContentWorkspaceDoc(models.Model):
    content_workspace = models.ForeignKey(ContentWorkspace, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    content_document = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_owner = models.BooleanField(verbose_name='Is Owning Library', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ContentWorkspaceDoc'
        verbose_name = 'Library Document'
        verbose_name_plural = 'Library Documents'
        # keyPrefix = '059'



class ContentWorkspaceMember(models.Model):
    content_workspace = models.ForeignKey(ContentWorkspace, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    content_workspace_permission = models.ForeignKey('ContentWorkspacePermission', models.DO_NOTHING, blank=True, null=True)
    member = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    member_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('U', 'User'), ('G', 'Group')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ContentWorkspaceMember'
        verbose_name = 'Library Member'
        verbose_name_plural = 'Library Members'
        # keyPrefix = '05A'



class ContentWorkspacePermission(models.Model):
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Custom'), choices=[('Admin', 'Library Administrator'), ('Author', 'Author'), ('Viewer', 'Viewer'), ('Custom', 'Custom')], blank=True, null=True)
    permissions_manage_workspace = models.BooleanField(verbose_name='Manage Library', sf_read_only=models.READ_ONLY)
    permissions_add_content = models.BooleanField(verbose_name='Add Content', sf_read_only=models.READ_ONLY)
    permissions_add_content_obo = models.BooleanField(db_column='PermissionsAddContentOBO', verbose_name='Add Content on Behalf of Others', sf_read_only=models.READ_ONLY)
    permissions_archive_content = models.BooleanField(verbose_name='Archive Content', sf_read_only=models.READ_ONLY)
    permissions_delete_content = models.BooleanField(verbose_name='Delete Content', sf_read_only=models.READ_ONLY)
    permissions_feature_content = models.BooleanField(verbose_name='Feature Content', sf_read_only=models.READ_ONLY)
    permissions_view_comments = models.BooleanField(verbose_name='View Comment', sf_read_only=models.READ_ONLY)
    permissions_add_comment = models.BooleanField(verbose_name='Add Comment', sf_read_only=models.READ_ONLY)
    permissions_modify_comments = models.BooleanField(verbose_name='Modify Comments', sf_read_only=models.READ_ONLY)
    permissions_tag_content = models.BooleanField(verbose_name='Tag Content', sf_read_only=models.READ_ONLY)
    permissions_deliver_content = models.BooleanField(verbose_name='Deliver Content', sf_read_only=models.READ_ONLY)
    permissions_chatter_sharing = models.BooleanField(verbose_name='Attach or Share Content', sf_read_only=models.READ_ONLY)
    permissions_organize_file_and_folder = models.BooleanField(verbose_name='Organize File and Content Folder', sf_read_only=models.READ_ONLY)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentworkspacepermission_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='contentworkspacepermission_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ContentWorkspacePermission'
        verbose_name = 'Library Permission'
        verbose_name_plural = 'Library Permissions'
        # keyPrefix = '05P'



class CronJobDetail(models.Model):
    name = models.CharField(max_length=255, verbose_name='Job Name', sf_read_only=models.READ_ONLY)
    job_type = models.CharField(max_length=40, verbose_name='Type', sf_read_only=models.READ_ONLY, choices=[('1', 'Data Export'), ('3', 'Dashboard Refresh'), ('4', 'Reporting Snapshot'), ('6', 'Scheduled Flow'), ('7', 'Scheduled Apex'), ('8', 'Report Run'), ('9', 'Batch Job'), ('A', 'Reporting Notification')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CronJobDetail'
        verbose_name = 'Cron Job'
        verbose_name_plural = 'Cron Job'
        # keyPrefix = '08a'



class CronTrigger(models.Model):
    cron_job_detail = models.ForeignKey(CronJobDetail, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    next_fire_time = models.DateTimeField(verbose_name='Next Run Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    previous_fire_time = models.DateTimeField(verbose_name='Previous Run Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    state = models.CharField(max_length=16, verbose_name='Job State', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_time = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    end_time = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    cron_expression = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    time_zone_sid_key = models.CharField(max_length=40, verbose_name='Java Time Zone Id', sf_read_only=models.READ_ONLY, choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')], blank=True, null=True)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='crontrigger_owner_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='crontrigger_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='crontrigger_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    times_triggered = models.IntegerField(verbose_name='Job Fired Count', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CronTrigger'
        verbose_name = 'Scheduled Jobs'
        verbose_name_plural = 'Scheduled Jobs'
        # keyPrefix = '08e'



class CustomBrand(models.Model):
    parent = models.ForeignKey('NavigationMenuItem', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [NavigationMenuItem, Network, Organization, Stamp, Topic] Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custombrand_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(verbose_name='Modified Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custombrand_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'CustomBrand'
        verbose_name = 'Custom Brand'
        verbose_name_plural = 'Custom Brand'
        # keyPrefix = '07W'



class CustomBrandAsset(models.Model):
    custom_brand = models.ForeignKey(CustomBrand, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    asset_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('MotifZeronaryColor', 'Zeronary motif color'), ('MotifPrimaryColor', 'Primary motif color'), ('MotifSecondaryColor', 'Secondary motif color'), ('MotifTertiaryColor', 'Tertiary motif color'), ('MotifQuaternaryColor', 'Quaternary motif color'), ('MotifZeronaryComplementColor', 'Zeronary motif colors compelement color'), ('MotifPrimaryComplementColor', 'Primary motif colors compelement color'), ('MotifTertiaryComplementColor', 'Tertiary motif colors compelement color'), ('MotifQuaternaryComplementColor', 'Quaternary motif colors complement color'), ('PageHeader', 'Page Header'), ('PageFooter', 'Page Footer'), ('LoginFooterText', 'Footer text displayed on the login page'), ('LoginLogoImageId', 'Logo image displayed on the login page'), ('LargeLogoImageId', 'Large logo image'), ('MediumLogoImageId', 'Medium logo image'), ('SmallLogoImageId', 'Small logo image'), ('StaticLogoImageUrl', 'Static logo image url'), ('LoginQuaternaryColor', 'Login background color'), ('LoginRightFrameUrl', 'Login right frame url'), ('LogoAssetId', 'Logo asset image'), ('LoginPrimaryColor', 'Login primary color'), ('LoginBackgroundImageUrl', 'Background image url')])
    text_asset = models.CharField(max_length=333, sf_read_only=models.READ_ONLY, blank=True, null=True)
    asset_source = models.ForeignKey(ContentAsset, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custombrandasset_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(verbose_name='Modified Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custombrandasset_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'CustomBrandAsset'
        verbose_name = 'Custom Brand Asset'
        verbose_name_plural = 'Custom Brand Asset'
        # keyPrefix = '07X'



class CustomHelpMenuItem(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='customhelpmenuitem_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='customhelpmenuitem_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent = models.ForeignKey('CustomHelpMenuSection', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    master_label = models.CharField(max_length=100, verbose_name='Item Label', sf_read_only=models.READ_ONLY)
    link_url = models.URLField(sf_read_only=models.READ_ONLY)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'CustomHelpMenuItem'
        verbose_name = 'Custom Help Menu Item'
        verbose_name_plural = 'Custom Help Menu Items'
        # keyPrefix = '2Ca'



class CustomHelpMenuSection(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Section Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='customhelpmenusection_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='customhelpmenusection_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'CustomHelpMenuSection'
        verbose_name = 'Custom Help Menu Section'
        verbose_name_plural = 'Custom Help Menu Sections'
        # keyPrefix = '2Cx'



class CustomHttpHeader(models.Model):
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='customhttpheader_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='customhttpheader_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent = models.ForeignKey('ExternalDataSource', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [ExternalDataSource, NamedCredential] Master Detail Relationship *
    header_field_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    header_field_value = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CustomHttpHeader'
        verbose_name = 'Custom HTTP Header'
        verbose_name_plural = 'Custom HTTP Headers'
        # keyPrefix = '0XH'



class CustomObjectUserLicenseMetrics(models.Model):
    metrics_date = models.DateField(sf_read_only=models.READ_ONLY)
    user_license = models.ForeignKey('UserLicense', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    custom_object_id = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    custom_object_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Enterprise', 'Enterprise'), ('Light', 'Light')], blank=True, null=True)
    custom_object_name = models.CharField(max_length=120, sf_read_only=models.READ_ONLY, blank=True, null=True)
    object_count = models.IntegerField(verbose_name='Count of Objects assigned', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CustomObjectUserLicenseMetrics'
        verbose_name = 'Custom Object Usage By User License Metric'
        verbose_name_plural = 'Custom Object Usage By User License Metrics'
        # keyPrefix = '3NA'



class CustomPermission(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_protected = models.BooleanField(verbose_name='Protected Component', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custompermission_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custompermission_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'CustomPermission'
        verbose_name = 'Custom Permission'
        verbose_name_plural = 'Custom Permissions'
        # keyPrefix = '0CP'



class CustomPermissionDependency(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custompermissiondependency_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='custompermissiondependency_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    custom_permission = models.ForeignKey(CustomPermission, models.DO_NOTHING, related_name='custompermissiondependency_custompermission_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    required_custom_permission = models.ForeignKey(CustomPermission, models.DO_NOTHING, related_name='custompermissiondependency_requiredcustompermission_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'CustomPermissionDependency'
        verbose_name = 'Custom Permission Dependency'
        verbose_name_plural = 'Custom Permission Dependencies'
        # keyPrefix = '0PD'



class Dashboard(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    folder = models.ForeignKey('Folder', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Folder, User]
    folder_name = models.CharField(max_length=256, sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='Dashboard Unique Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    left_size = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Narrow', 'Narrow'), ('Medium', 'Medium'), ('Wide', 'Wide')])
    middle_size = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Narrow', 'Narrow'), ('Medium', 'Medium'), ('Wide', 'Wide')], blank=True, null=True)
    right_size = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Narrow', 'Narrow'), ('Medium', 'Medium'), ('Wide', 'Wide')])
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboard_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboard_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    running_user = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboard_runninguser_set', sf_read_only=models.READ_ONLY)
    title_color = models.IntegerField(sf_read_only=models.READ_ONLY)
    title_size = models.IntegerField(sf_read_only=models.READ_ONLY)
    text_color = models.IntegerField(sf_read_only=models.READ_ONLY)
    background_start = models.IntegerField(verbose_name='Starting Color', sf_read_only=models.READ_ONLY)
    background_end = models.IntegerField(verbose_name='Ending Color', sf_read_only=models.READ_ONLY)
    background_direction = models.CharField(max_length=40, verbose_name='Background Fade Direction', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Diagonal'), choices=[('TopToBottom', 'Top to Bottom'), ('LeftToRight', 'Left to Right'), ('Diagonal', 'Diagonal')])
    type = models.CharField(max_length=40, verbose_name='Dashboard Running User', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('SpecifiedUser'), choices=[('SpecifiedUser', 'Run as specified user'), ('LoggedInUser', 'Run as logged-in user'), ('MyTeamUser', 'Let authorized users change running user')])
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    dashboard_result_refreshed_date = models.CharField(max_length=256, verbose_name='Last refreshed for this user', sf_read_only=models.READ_ONLY, blank=True, null=True)
    dashboard_result_running_user = models.CharField(max_length=256, verbose_name='Running as', sf_read_only=models.READ_ONLY, blank=True, null=True)
    color_palette = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Default', 'Default Palette'), ('gray', 'Gray Palette'), ('colorSafe', 'Color Safe Palette'), ('unity', 'Aurora Palette'), ('justice', 'Wildflowers Palette'), ('nightfall', 'Nightfall Palette'), ('sunrise', 'Sunrise Palette'), ('bluegrass', 'Bluegrass Palette'), ('tropic', 'Ocean Palette'), ('heat', 'Heat Palette'), ('dusk', 'Dusk Palette'), ('pond', 'Pond Palette'), ('watermelon', 'Watermelon Palette'), ('fire', 'Fire Palette'), ('water', 'Water Palette'), ('earth', 'Lake Palette'), ('accessible', 'Mineral(Accessible) Palette')], blank=True, null=True)
    chart_theme = models.CharField(max_length=40, verbose_name='Chart Background', sf_read_only=models.READ_ONLY, choices=[('light', 'Light Background'), ('dark', 'Dark Background')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Dashboard'
        verbose_name = 'Dashboard'
        verbose_name_plural = 'Dashboards'
        # keyPrefix = '01Z'



class DashboardComponent(models.Model):
    name = models.CharField(max_length=80, verbose_name='Dashboard Component Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    dashboard = models.ForeignKey(Dashboard, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'DashboardComponent'
        verbose_name = 'Dashboard Component'
        verbose_name_plural = 'Dashboard Components'
        # keyPrefix = '01a'



class DashboardComponentFeed(models.Model):
    parent = models.ForeignKey(DashboardComponent, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboardcomponentfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboardcomponentfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DashboardComponentFeed'
        verbose_name = 'Dashboard Component Feed'
        verbose_name_plural = 'Dashboard Component Feed'
        # keyPrefix = 'None'



class DashboardFeed(models.Model):
    parent = models.ForeignKey(Dashboard, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboardfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dashboardfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DashboardFeed'
        verbose_name = 'Dashboard Feed'
        verbose_name_plural = 'Dashboard Feed'
        # keyPrefix = 'None'



class DataIntegrationRecordPurchasePermission(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dataintegrationrecordpurchasepermission_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='dataintegrationrecordpurchasepermission_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='dataintegrationrecordpurchasepermission_user_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    external_object = models.CharField(max_length=255, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account_Bundle__c', None), ('AFocus_AccountNew_FromCase__mdt', None), ('Afocus_AccountShare__mdt', None), ('AFocus_BenAdminIntegrationSetup__mdt', None), ('AFocus_BrokerOpportunity__mdt', None), ('AFocus_CarrierLibrary_State_Carrier__mdt', None), ('AFocus_Credentials__mdt', None), ('AFocus_EnrollmentMethod__mdt', None), ('AFocus_InactiveReasons__mdt', None), ('AFocus_Opportunity__mdt', None), ('AFocus_OpsTeam__mdt', None), ('AFocus_Renewal_Process__mdt', None), ('Agent_Affiliation__c', None), ('Alert__c', None), ('ambition__AmbitionEmailRecipient__c', None), ('ambition__AmbitionEntity__c', None), ('ambition__AmbitionEntityField__c', None), ('ambition__AmbitionGeneralConfig__c', None), ('ambition__AmbitionLogEntry__c', None), ('ambition__AmbitionPushableObject__c', None), ('ambition__AmbitionPushableObjectField__c', None), ('ambition__AmbitionPushableObjectTestObject__c', None), ('ambition__AmbitionReportFilter__c', None), ('ambition__AmbitionReportInstance__c', None), ('ambition__AmbitionReportInstanceChunk__c', None), ('ambition__AmbitionReportRunConfig__c', None), ('ambition__log_entry__c', None), ('AMS_Account_Team__c', None), ('ANTS_Letters_and_Attachments__c', None), ('Apex_Error__c', None), ('Authorization__c', None), ('Benefits_Upsell_Opportunity__c', None), ('Broker_Commission__c', None), ('Broker_Email_Archive__c', None), ('Broker_Favorites__c', None), ('Broker_Trip_Status__c', None), ('BrokerOpportunity__c', None), ('BrokerSales__c', None), ('Bypass_Apex_Trigger__mdt', None), ('Carrier__c', None), ('Carrier_Data_Mapping__c', None), ('Carrier_RFP__c', None), ('CarrierLibrary__c', None), ('Case__hd', None), ('Case_Dimension_Email__c', None), ('Case_Route__c', None), ('Checklist__c', None), ('Class__c', None), ('Commission__c', None), ('Community_Message__c', None), ('CommunityTiles__c', None), ('Connection_Credential__c', None), ('Course__c', None), ('Credential__c', None), ('Email_Signature_Attachments__c', None), ('Enrollment__c', None), ('Feedback__c', None), ('Group_Calendar__c', None), ('INQ__Criteria_Fields_Status__c', None), ('INQ__Data_Mapping_Configuration__c', None), ('INQ__Data_Transfer_Criteria__c', None), ('INQ__Data_Transfer_Criteria_Detail__c', None), ('INQ__Email_Template_Mapping_Configuration__c', None), ('INQ__Exception_Logger__c', None), ('INQ__iConnectionStatus__c', None), ('INQ__Inquisium_Activity_Tracker__c', None), ('INQ__Respondent__c', None), ('INQ__Respondent_Field_Mapping__c', None), ('INQ__Survey_Answer__c', None), ('INQ__Survey_Criteria__c', None), ('INQ__Survey_Criteria_Detail__c', None), ('INQ__Survey_Program__c', None), ('INQ__Survey_Program_Question__c', None), ('INQ__Survey_Staging__c', None), ('INQ__Trigger_Object_Exclusion__c', None), ('Intake__c', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('Lead_Assignment_Rules__c', None), ('LiveChatButtons__mdt', None), ('LiveChatOptions__mdt', None), ('MapofTypeandContent__mdt', None), ('Menu__c', None), ('Migration_Task__c', None), ('mkto_si__Best_Bets_View__c', None), ('mkto_si__Best_Bets_View_Detail__c', None), ('mkto_si__BestBetsCache__c', None), ('mkto_si__EmailActivityCache__c', None), ('mkto_si__GroupedWebActivityCache__c', None), ('mkto_si__InterestingMomentsCache__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c', None), ('mkto_si__ScoringCache__c', None), ('mkto_si__Value__c', None), ('mkto_si__WebActivityCache__c', None), ('myobj__c', None), ('Notification__c', None), ('OE_Error__c', None), ('Office__c', None), ('Opportunity__hd', None), ('Opportunity_Pipeline_Snapshot__c', None), ('Out_Of_Office__c', None), ('Payroll_Price_Book__c', None), ('Plan_Selection__c', None), ('Plan_Type__c', None), ('Platform_History__c', None), ('Postal_Code__c', None), ('qbdialer__ContactScore__c', None), ('qbdialer__DialerQuery__c', None), ('qbdialer__DialerQueryAttendee__c', None), ('qbdialer__DialerQueryItem__c', None), ('qbdialer__ISDC_SF_Setting__mdt', None), ('qbdialer__isDialerConfig__c', None), ('qbdialer__isTriggerConfig__mdt', None), ('qbdialer__SeekInitiative__c', None), ('qbdialer__SeekInitiativeAttendee__c', None), ('qbdialer__SeekInitiativeItem__c', None), ('Quote_Line_Item__c', None), ('Referral__c', None), ('sbv2__Group__c', None), ('sbv2__List_Object__c', None), ('sbv2__Quality_Sample__c', None), ('sbv2__Sample_Criteria_Filter__c', None), ('sbv2__Score_List__c', None), ('sbv2__Summary_Score__c', None), ('sbv2__Team__c', None), ('sbv2__Team_User__c', None), ('Security_Questions__c', None), ('seismic__Debug_Log__c', None), ('Services__c', None), ('Shipment__c', None), ('SIC_Code__c', None), ('sma__AvailableField__c', None), ('sma__MA_Metadata__mdt', None), ('sma__MAAJAXDebugLog__c', None), ('sma__MAAnalytic__c', None), ('sma__MAArcGISBatchPushLog__c', None), ('sma__MAArcGISBatchPushSetting__c', None), ('sma__MAArcGISBatchPushTest__c', None), ('sma__MAAssignmentDebugLog__c', None), ('sma__MAAssignmentPlan__c', None), ('sma__MAAssignmentRule__c', None), ('sma__MABaseObject__c', None), ('sma__MAButtonSet__c', None), ('sma__MACache__c', None), ('sma__MAClick2Create__c', None), ('sma__MACustomAction__c', None), ('sma__MADataLayerSetting__c', None), ('sma__MADataLoad__c', None), ('sma__MADataLoadSegment__c', None), ('sma__MADriveProfile__c', None), ('sma__MAEventBaseObj__c', None), ('sma__MAEventLookup__c', None), ('sma__MAExport__c', None), ('sma__MAExportRow__c', None), ('sma__MAFolder__c', None), ('sma__MAFolderPermission__c', None), ('sma__MALayer__c', None), ('sma__MALocation__c', None), ('sma__MALocationFolder__c', None), ('sma__MALog__c', None), ('sma__MAMiniMapSetting__c', None), ('sma__MARelatedList__c', None), ('sma__MARoute__c', None), ('sma__MASavedQry__c', None), ('sma__MASavedQryComponent__c', None), ('sma__MAScheduledJob__c', None), ('sma__MASettingsAssignments__c', None), ('sma__MASettingsGroup__c', None), ('sma__MAShift__c', None), ('sma__MATerritory__c', None), ('sma__MATerritoryAggregation__c', None), ('sma__MATerritoryAggregationSetting__c', None), ('sma__MATerritoryCollection__c', None), ('sma__MATerritoryCollectionBaseObject__c', None), ('sma__MATerritoryCollectionFieldUpdate__c', None), ('sma__MATerritoryGeometry__c', None), ('sma__MATerritoryNode__c', None), ('sma__MATerritoryRollup__c', None), ('sma__MATerritoryRollupComponent__c', None), ('sma__MATerritoryRollupFolder__c', None), ('sma__MATerritoryRollupRun__c', None), ('sma__MATerritoryRollupValue__c', None), ('sma__MAWaypoint__c', None), ('Source_Account_Team__c', None), ('SourceSystemURL__mdt', None), ('TaxNotice__c', None), ('trailheadapp__Badge__c', None), ('trailheadapp__Debug_Log__c', None), ('trailheadapp__Setting__mdt', None), ('trailheadapp__Trail__c', None), ('trailheadapp__Trailhead_User_Data__c', None), ('trailheadapp__Trailmix__c', None), ('trailheadapp__Trailmix_Assignment__c', None), ('trailheadapp__User_Badge__c', None), ('trailheadapp__User_Trailmix__c', None), ('TrainingEnrollment__c', None), ('Trip_Status_Eligibility__c', None), ('Twilio_Voice_Response__c', None), ('Upsell_Opportunity__c', None), ('User_Login_Snapshot__c', None), ('vidyard__Video_View__c', None), ('XactlyCorp__XactlyUserBusiness__c', None), ('XactlyCorp__XCIncentBusiness__c', None)], blank=True, null=True)
    user_record_purchase_limit = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DataIntegrationRecordPurchasePermission'
        verbose_name = 'DataIntegrationRecordPurchasePermission'
        verbose_name_plural = 'DataIntegrationRecordPurchasePermissions'
        # keyPrefix = '0Gy'



class DataStatistics(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='ExternalId', sf_read_only=models.READ_ONLY, blank=True, null=True)
    stat_type = models.CharField(max_length=255, verbose_name='StatType', sf_read_only=models.READ_ONLY, choices=[('RecordCount', 'RecordCount'), ('UserAccessRecordCount', 'UserAccessRecordCount'), ('DeletedCount', 'DeletedCount')], blank=True, null=True)
    user = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('AacObjectSetting', None), ('AcceptedEventRelation', None), ('AcceptedRecommendation', None), ('Account', None), ('AccountBrand', None), ('AccountContactRole', None), ('AccountPartner', None), ('AccountRecordUserAccess', None), ('AccountTeamMember', None), ('ActionApex', None), ('ActionAssignEscalate', None), ('ActionAssignTeam', None), ('ActionChatterPost', None), ('ActionChatterPostRecipient', None), ('ActionEmail', None), ('ActionEmailRecipient', None), ('ActionFieldUpdate', None), ('ActionFlow', None), ('ActionFlowParam', None), ('ActionKnowledgeSubmit', None), ('ActionLink', None), ('ActionLinkGroup', None), ('ActionLinkGroupAssoc', None), ('ActionLinkGroupTemplate', None), ('ActionLinkTemplate', None), ('ActionLinkTemplateBinding', None), ('ActionLinkUserState', None), ('ActionOutboundMessage', None), ('ActionOverride', None), ('ActionOverrideMetrics', None), ('ActionQuickCreate', None), ('ActionResponse', None), ('ActionSend', None), ('ActionTask', None), ('Activity', None), ('ActivityEngagementRollup', None), ('ActivityHistory', None), ('ActivityMetricRollupBase', None), ('ActivityRecurrence2', None), ('ActivityRecurrence2Exception', None), ('ActivityRelation', None), ('AdditionalNumber', None), ('AddressableEventInterface', None), ('AddressCountry', None), ('AddressState', None), ('AEJobTracker', None), ('AgentWork', None), ('AggregateResult', None), ('AllInstalledPackageVersion', None), ('AllManagedClassRelationship', None), ('AllManagedMemberOption', None), ('AllManagedPackageMember', None), ('AllOrganization', None), ('AllOrganizationValue', None), ('AllPackage', None), ('AllPackageVersion', None), ('AllPackageVersionLm', None), ('AllUsersBasic', None), ('AnalyticAction', None), ('AnalyticActionConfiguration', None), ('AnalyticCondition', None), ('AnalyticNotification', None), ('AnalyticNotificationTracker', None), ('AnalyticRecordUserAccess', None), ('AnalyticThreshold', None), ('AndroidPushApplicationSetup', None), ('AnimationRule', None), ('Announcement', None), ('ApexClass', None), ('ApexClassIdentifier', None), ('ApexClassIdentifierRelationship', None), ('ApexClassMember', None), ('ApexCodeCoverage', None), ('ApexCodeCoverageAggregate', None), ('ApexComponent', None), ('ApexComponentAttribute', None), ('ApexComponentMember', None), ('ApexDebuggerBreakpoint', None), ('ApexDebuggerEvent', None), ('ApexDebuggerLicense', None), ('ApexDebuggerRequest', None), ('ApexDebuggerSession', None), ('ApexEmailNotification', None), ('ApexExecutionOverlayAction', None), ('ApexExecutionOverlayResult', None), ('ApexHammerOrgResult', None), ('ApexHammerResult', None), ('ApexLog', None), ('ApexOrgWideCoverage', None), ('ApexPackage', None), ('ApexPackageIdentifier', None), ('ApexPage', None), ('ApexPageInfo', None), ('ApexPageMember', None), ('ApexTestQueueItem', None), ('ApexTestResult', None), ('ApexTestResultLimits', None), ('ApexTestRunResult', None), ('ApexTestRunResultMetrics', None), ('ApexTestSuite', None), ('ApexTrigger', None), ('ApexTriggerMember', None), ('ApiCapture', None), ('ApiEvent', None), ('ApiEventStream', None), ('ApiLoginKey', None), ('ApiUsage', None), ('AppAnalyticsQueryRequest', None), ('AppBrand', None), ('AppCapabilityConfig', None), ('AppDefinition', None), ('AppIpRange', None), ('AppleDomainVerification', None), ('AppleEcKey', None), ('ApplePushApplicationSetup', None), ('Application', None), ('ApplicationDependency', None), ('AppManifest', None), ('AppManifestVersion', None), ('AppMenuItem', None), ('AppNotificationType', None), ('AppNotifTypeOrgSetting', None), ('AppNotifTypeUserSetting', None), ('Approval', None), ('AppTabMember', None), ('AqtImportRequest', None), ('AqtImportRequestIndex', None), ('AQTWorkloadMetadata', None), ('ArticleMapInfo', None), ('Asset', None), ('AssetRelationship', None), ('AssetTokenEvent', None), ('AssignmentRule', None), ('AssistantInteraction', None), ('AssistantProgress', None), ('AssistantRecommendation', None), ('AssistantRecommendationType', None), ('AssociationQueueItem', None), ('AsyncApexJob', None), ('AsyncApiBatch', None), ('AsyncApiBatchOptions', None), ('AsyncApiChunkResults', None), ('AsyncApiJob', None), ('AsyncApiJobOptions', None), ('AsyncApiQueryResult', None), ('AsyncApiTransformationSpec', None), ('AsyncOperationEvent', None), ('AsyncOperationStatus', None), ('AsyncRequest', None), ('AsyncRequestFFX', None), ('AsyncRequestFFXResult', None), ('AttachedContentDocument', None), ('Attachment', None), ('Audience', None), ('AudienceCriteria', None), ('AudienceCustomFormula', None), ('AudienceMembership', None), ('AudiencePermissionCriteria', None), ('Auditable', None), ('AuraDefinition', None), ('AuraDefinitionBundle', None), ('AuraDefinitionBundleInfo', None), ('AuraDefinitionChange', None), ('AuraDefinitionInfo', None), ('AuraResource', None), ('AuthConfig', None), ('AuthConfigProviders', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('AuthProvider', None), ('AuthSecurityLevel', None), ('AuthSession', None), ('AutoActivityCaptureMetrics', None), ('AutoResponseRule', None), ('AvroSchema', None), ('BackgroundOperation', None), ('BackgroundOperationResult', None), ('BaseEventInterface', None), ('BaseEventPackageInterface', None), ('BaseSessionInterface', None), ('BatchApexErrorEvent', None), ('BatchApexRelationship', None), ('BigObjectCounter', None), ('BigObjectsRecordMetrics', None), ('BlacklistedConsumer', None), ('BrandingSet', None), ('BrandingSetProperty', None), ('BrandingValue', None), ('BrandTemplate', None), ('BulkDedupeBlob', None), ('BulkDedupeFilter', None), ('BulkDedupeFilterItem', None), ('BulkDedupeOperation', None), ('BusinessHours', None), ('BusinessProcess', None), ('BusinessProcessPicklist', None), ('C2CPermissionBinding', None), ('Calendar', None), ('CalendarModel', None), ('CalendarShare', None), ('CalendarSharing', None), ('CalendarView', None), ('CallCenter', None), ('Campaign', None), ('CampaignInfluence', None), ('CampaignInfluenceAdjustment', None), ('CampaignInfluenceModel', None), ('CampaignMember', None), ('CampaignMemberStatus', None), ('Canvas', None), ('CanvasFeedItem', None), ('CaptchaKey', None), ('CartPricingResponseEvent', None), ('Case', None), ('CaseArticle', None), ('CaseContactRole', None), ('CaseEscalation', None), ('CaseExternalDocument', None), ('CaseHistory2', None), ('CaseMilestone', None), ('CaseSolution', None), ('CaseStatus', None), ('CaseSubjectParticle', None), ('CategoryAccess', None), ('CategoryData', None), ('CategoryJobTask', None), ('CategoryNode', None), ('CciTable', None), ('CciTableField', None), ('Certificate', None), ('CertificateIp', None), ('ChangeSetDeployHistory', None), ('ChangeSetDeployMessage', None), ('ChangeSetUploadHistory', None), ('ChannelAccountMetrics', None), ('ChatterActivity', None), ('ChatterActivityDailyMetrics', None), ('ChatterConversation', None), ('ChatterConversationMember', None), ('ChatterExtension', None), ('ChatterExtensionConfig', None), ('ChatterExtensionInstance', None), ('ChatterGroupConMetrics', None), ('ChatterMessage', None), ('ChatterMessageThread', None), ('ChatterMetrics', None), ('ChatterOrgWideMetrics', None), ('ChatterUniqueContributorDailyMetrics', None), ('ChatterUserNetworkMetrics', None), ('ChunkableEntityChunk', None), ('ChunkableEntityChunk2', None), ('ChunkableEntityTally', None), ('ChunkableEntityTally2', None), ('ChunkableTask', None), ('ChunkableTask2', None), ('CleanActivityLog', None), ('CleanDataService', None), ('CleanEntityError', None), ('CleanInfo', None), ('CleanRule', None), ('ClientBrowser', None), ('CMSConnectAsset', None), ('CMSConnectLanguage', None), ('CMSConnectPersonalization', None), ('CMSConnectResourceDefinition', None), ('CMSConnectResourceType', None), ('CMSConnectSource', None), ('CollaborationGroup', None), ('CollaborationGroupMember', None), ('CollaborationGroupMemberRequest', None), ('CollaborationGroupRank', None), ('CollaborationGroupRecord', None), ('CollaborationInvitation', None), ('CollaborativeFilteringItem_to_Item', None), ('CollaborativeFilteringItem2Item', None), ('ColorDefinition', None), ('CombinedAttachment', None), ('CommChannelLayout', None), ('CommChannelLayoutItem', None), ('CommChannelLayoutMapping', None), ('CommerceIntegrationEvent', None), ('CommerceIntegrationResponse', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Community', None), ('CommunityCustomThemeLayoutType', None), ('CommunityIqCtrMetric', None), ('CommunityTemplateBundleInfo', None), ('CommunityTemplateComponentBundle', None), ('CommunityTemplateDefinition', None), ('CommunityTemplatePageSetting', None), ('CommunityTemplateRelationship', None), ('CommunityThemeDefinition', None), ('CommunityThemeRouteOverride', None), ('CommunityThemeSetting', None), ('CommunityWorkspacesNode', None), ('CompactLayout', None), ('CompactLayoutInfo', None), ('CompactLayoutItem', None), ('CompactLayoutItemInfo', None), ('CompactLayoutMapping', None), ('ComponentAppVersion', None), ('ComponentFeatureDependency', None), ('ComponentInstance', None), ('ComponentInstanceProperty', None), ('ComponentInstancePropertyListItem', None), ('ComponentObjectDependency', None), ('ComponentResourceLink', None), ('ComponentResponseCache', None), ('ConditionalFormattingProperty', None), ('ConditionalFormattingPropertyBin', None), ('ConditionalFormattingPropertyPredicate', None), ('ConferenceNumber', None), ('ConnectedApplication', None), ('ConnectedApplication2', None), ('ConnectedAppOauthPolicy', None), ('ConnectedAppPlugin', None), ('ConnectedAppSessionPolicy', None), ('ConnectivityAttributes', None), ('ConnectivityDevConfig', None), ('ConsoleConfig', None), ('ConsoleConfigItem', None), ('ConsolePersonalization', None), ('ConsoleSidebarContainer', None), ('ConsolidatedCustomIndex', None), ('Contact', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointEntityAssocSnapshotLocator', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('ContainerAsyncRequest', None), ('ContentAsset', None), ('ContentBody', None), ('ContentDispositionAssignment', None), ('ContentDistribution', None), ('ContentDistributionView', None), ('ContentDocument', None), ('ContentDocumentLink', None), ('ContentDocumentListViewMapping', None), ('ContentDocumentSubscription', None), ('ContentExternalStorage', None), ('ContentFolder', None), ('ContentFolderDistribution', None), ('ContentFolderItem', None), ('ContentFolderLink', None), ('ContentFolderMember', None), ('ContentHubItem', None), ('ContentHubRepository', None), ('ContentLogMetricsByFileType', None), ('ContentLogMetricsByOrg', None), ('ContentMetrics', None), ('ContentNote', None), ('ContentNotification', None), ('ContentNotificationParam', None), ('ContentOrgMetrics', None), ('ContentReference', None), ('ContentRenditionPolicy', None), ('ContentTagName', None), ('ContentTagSubscription', None), ('ContentUserSubscription', None), ('ContentVersion', None), ('ContentVersionComment', None), ('ContentVersioningPolicy', None), ('ContentVersionMap', None), ('ContentVersionRating', None), ('ContentVersionRenditionContent', None), ('ContentVersionTagName', None), ('ContentWorkspace', None), ('ContentWorkspaceAllowedRecType', None), ('ContentWorkspaceDoc', None), ('ContentWorkspaceMember', None), ('ContentWorkspacePermission', None), ('ContentWorkspaceRecentEvent', None), ('ContentWorkspaceSubscription', None), ('ContextFieldAttributes', None), ('Contract', None), ('ContractContactRole', None), ('ContractLineItem', None), ('ContractStatus', None), ('ConversationContextEntry', None), ('ConversationEntry', None), ('CopyEntityTally', None), ('CopyEntityTally2', None), ('CopyExport', None), ('CopyExportChunk', None), ('CopyExportChunk2', None), ('CopyExportObserverInfo', None), ('CopyImport', None), ('CopyImportChunk', None), ('CopyImportChunk2', None), ('CopySuspension', None), ('CorsWhitelistEntry', None), ('CredentialStuffingEvent', None), ('CredentialStuffingEventStore', None), ('CronJobDetail', None), ('CronTrigger', None), ('CrtColumn', None), ('CrtLayoutSection', None), ('CrtObject', None), ('CsnDomain', None), ('CspFrameAncestor', None), ('CspTrustedSite', None), ('CustIdxCandidate', None), ('CustIdxCandidateInfo', None), ('CustomAppMetrics', None), ('CustomBrand', None), ('CustomBrandAsset', None), ('CustomConsoleComponent', None), ('CustomDataType', None), ('CustomDataTypeComponent', None), ('CustomEntityDefinition', None), ('CustomEntityTranslation', None), ('CustomEntityTruncateInfo', None), ('CustomFieldDataColumn', None), ('CustomFieldDefinition', None), ('CustomFieldMap', None), ('CustomFieldMember', None), ('CustomHelpMenuItem', None), ('CustomHelpMenuSection', None), ('CustomHttpHeader', None), ('CustomIndex', None), ('CustomIndexCreator', None), ('CustomIndexDefinition', None), ('CustomIndexFieldDefinition', None), ('CustomIndexInfo', None), ('CustomIndexUsage', None), ('CustomNotificationType', None), ('CustomObjectUsageMetrics', None), ('CustomObjectUserLicenseMetrics', None), ('CustomObjTeamMemberMetric', None), ('CustomPage', None), ('CustomPageItem', None), ('CustomPageProfile', None), ('CustomPermission', None), ('CustomPermissionDependency', None), ('CustomPermissionSet', None), ('CustomReportType', None), ('CustomSetup', None), ('CustomSetupDefinition', None), ('CustomShareRowCause', None), ('CustomTabDefinition', None), ('Dashboard', None), ('DashboardCompColResult', None), ('DashboardComponent', None), ('DashboardComponentColumn', None), ('DashboardComponentResult', None), ('DashboardComponentSort', None), ('DashboardFilter', None), ('DashboardFilterItem', None), ('DashboardFilterRepCol', None), ('DashboardGridComponent', None), ('DashboardGridLayout', None), ('DashboardSavedView', None), ('DashboardStickyFilter', None), ('DataAssessmentBIMetrics', None), ('DataAssessmentConfigItem', None), ('DataAssessmentFieldMetric', None), ('DataAssessmentMetric', None), ('DataAssessmentRecord', None), ('DataAssessmentValueMetric', None), ('DataCategory', None), ('DataCategoryGroup', None), ('DataCategoryMapping', None), ('DatacloudAddress', None), ('DataDotComListPoolMetrics', None), ('DataExportEventInterface', None), ('Dataflow', None), ('DataflowGroupDependency', None), ('DataflowGroupMember', None), ('DataflowGroupTrigger', None), ('DataflowInstance', None), ('DataflowNode', None), ('DataflowNotification', None), ('DataflowRequest', None), ('DataflowTrigger', None), ('DataflowTriggerSource', None), ('DataflowVersion', None), ('DataIntegrationPurchasedRecord', None), ('DataIntegrationRecordPurchasePermission', None), ('DataPrepRecipe', None), ('DataPrepServiceLocator', None), ('DatasetAccess', None), ('DatasetDarkLaunch', None), ('DatasetExport', None), ('DatasetExportEvent', None), ('DatasetExportPart', None), ('DatasetFetch', None), ('DatasetRegister', None), ('DataStatistics', None), ('DataType', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DateMetadata', None), ('DBCThumbnail', None), ('DBCThumbnailFilter', None), ('DbLockUsage', None), ('DebugLevel', None), ('DeclarativePlatformMetrics', None), ('DeclinedEventRelation', None), ('DeflectionSignal', None), ('DelegateGroup', None), ('DelegateGroupGrant', None), ('DelegateGroupMember', None), ('DeleteEvent', None), ('DependentPicklist', None), ('DeployDirection', None), ('DeployMessage', None), ('DeployRequest', None), ('DeployTestResult', None), ('DevelopmentPackageVersion', None), ('DialerBasicAudioRecMetrics', None), ('DialerBasicFeatureMetrics', None), ('DialerMinutesMetrics', None), ('Dimension', None), ('DimensionCustomAction', None), ('DimensionMember', None), ('DimensionSalesforceAction', None), ('DirectGroupMember', None), ('DirectMessage', None), ('DirectMessageMember', None), ('DirectMessageMemberActivity', None), ('DivTransferEvent', None), ('DmPermissionSetAssignmentMetrics', None), ('DmPermissionSetMetrics', None), ('DmProfileMetric', None), ('DmUser', None), ('DmUserCustomizationMetrics', None), ('DmUserLicenseMetrics', None), ('DmUserLoginMetrics', None), ('DmUserRoleMetrics', None), ('Document', None), ('DocumentAttachmentMap', None), ('Domain', None), ('DomainProvision', None), ('DomainSite', None), ('DoradoRequest', None), ('DoradoRequestEvent', None), ('DuplicateErrorLog', None), ('DuplicateJob', None), ('DuplicateJobDefinition', None), ('DuplicateJobMatchingRule', None), ('DuplicateJobMatchingRuleDefinition', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('DuplicateRule', None), ('DuplicateRuleFilter', None), ('DuplicateRuleFilterItem', None), ('DuplicateRuleMatchRule', None), ('EaasEvent', None), ('EclairNgMap', None), ('EclairNgMapGeoJson', None), ('EdgeExternalDataFile', None), ('EdgeMart', None), ('EdgeMartData', None), ('EdgeMartDataFile', None), ('EdgeMartDataShard', None), ('EdgeMartDataShardFile', None), ('EdgeMartMetadata', None), ('EdgeMartOrganization', None), ('EltWorkflow', None), ('EltWorkflowAudit', None), ('EltWorkflowJobDetail', None), ('EltWorkflowJobHistory', None), ('EltWorkflowJobTracker', None), ('EltWorkflowNode', None), ('EmailBrand', None), ('EmailCapture', None), ('EmailConfigEntitySetting', None), ('EmailDisclaimer', None), ('EmailDomainFilter', None), ('EmailDomainKey', None), ('EmailMessage', None), ('EmailMessageRelation', None), ('EmailRelay', None), ('EmailRoutingAddress', None), ('EmailServicesAddress', None), ('EmailServicesFunction', None), ('EmailStatus', None), ('EmailSyncAdvancedSetting', None), ('EmailSyncConfig', None), ('EmailSyncEntitySetting', None), ('EmailSyncFieldMapping', None), ('EmailSyncValueMapping', None), ('EmailTemplate', None), ('EmailUserEntitySetting', None), ('EmbeddedServiceBranding', None), ('EmbeddedServiceConfig', None), ('EmbeddedServiceCustomComponent', None), ('EmbeddedServiceCustomLabel', None), ('EmbeddedServiceDetail', None), ('EmbeddedServiceFlow', None), ('EmbeddedServiceFlowConfig', None), ('EmbeddedServiceLabel', None), ('EmbeddedServiceLiveAgent', None), ('EmbeddedServiceMenuItem', None), ('EmbeddedServiceMenuSettings', None), ('EmbeddedServiceQuickAction', None), ('EncryptableDataProblem', None), ('EncryptableDataProblemChunk', None), ('EncryptionFeedTrackingStatistics', None), ('EncryptionFeedTrackingStatisticsChunk', None), ('EncryptionFieldHistoryStatistics', None), ('EncryptionFieldHistoryStatisticsChunk', None), ('EncryptionStatistics', None), ('EncryptionStatisticsChunk', None), ('Endorsement', None), ('EngagementChannelType', None), ('EngagementEvent', None), ('EnhancedLetterhead', None), ('Entitlement', None), ('EntitlementContact', None), ('EntitlementTemplate', None), ('EntityAssociationDefinitionVersion', None), ('EntityAttributes', None), ('EntityAudienceMapping', None), ('EntityBlacklist', None), ('EntityCategoryGroup', None), ('EntityDataSize', None), ('EntityDefinition', None), ('EntityEventInterface', None), ('EntityFeedLayout', None), ('EntityHistory', None), ('EntityImplements', None), ('EntityIndexingPriority', None), ('EntityLimit', None), ('EntityLock', None), ('EntityParticle', None), ('EntitySharingModel', None), ('EntitySubscription', None), ('EscalationRule', None), ('Event', None), ('EventAssociationItem', None), ('EventAttendee', None), ('EventBusSubscriber', None), ('EventComments', None), ('EventDelivery', None), ('EventDeliveryData', None), ('EventDestination', None), ('EventLogFile', None), ('EventParameter', None), ('EventParameterData', None), ('EventRecurrenceException', None), ('EventRelation', None), ('EventSubscription', None), ('EventSubscriptionData', None), ('EventSubscriptionHandleData', None), ('EventType', None), ('EventTypeDefinition', None), ('EventTypeFieldDefinition', None), ('EventTypeParameter', None), ('EventWhoRelation', None), ('ExchangeUserMapping', None), ('ExecutionPlan', None), ('ExecutionPlanTask', None), ('Experiment', None), ('ExpressionFilter', None), ('ExpressionFilterCriteria', None), ('ExternalActionParameter', None), ('ExternalCredential', None), ('ExternalDataSource', None), ('ExternalDataUserAuth', None), ('ExternalEvent', None), ('ExternalEventMapping', None), ('ExternalizedReference', None), ('ExternalServiceAction', None), ('ExternalServiceDataType', None), ('ExternalServiceListType', None), ('ExternalServiceMapType', None), ('ExternalServiceObjectType', None), ('ExternalServiceOperation', None), ('ExternalServiceParameter', None), ('ExternalServiceProperty', None), ('ExternalServiceRegistration', None), ('ExternalServiceSimpleType', None), ('ExternalServiceType', None), ('ExternalSocialAccount', None), ('ExternalString', None), ('ExtIdentityLoginMetrics', None), ('FeatureLicense', None), ('FeedActionDefinition', None), ('FeedActionState', None), ('FeedAttachment', None), ('FeedChannel', None), ('FeedChannelSubscription', None), ('FeedClumpInfo', None), ('FeedClumpMapping', None), ('FeedComment', None), ('FeedCrossReference', None), ('FeedEntityRead', None), ('FeedEntityUnpublished', None), ('FeedEntry', None), ('FeedFavorite', None), ('FeedFieldHistory', None), ('FeedFilterCriterion', None), ('FeedFilterDefinition', None), ('FeedItem', None), ('FeedLike', None), ('FeedMapping', None), ('FeedMute', None), ('FeedPollChoice', None), ('FeedPollVote', None), ('FeedPost', None), ('FeedPostTemplate', None), ('FeedPostTemplateItem', None), ('FeedRead', None), ('FeedRecommendationInfo', None), ('FeedRevision', None), ('FeedSignal', None), ('FeedTrackedChange', None), ('FieldAttributes', None), ('FieldBasedPAC', None), ('FieldDefinition', None), ('FieldHistory', None), ('FieldHistoryArchive', None), ('FieldImplements', None), ('FieldMapping', None), ('FieldMappingField', None), ('FieldMappingRow', None), ('FieldPermissions', None), ('FieldSecurityClassification', None), ('FieldSet', None), ('FieldSetItem', None), ('FileFieldData', None), ('FileInspectionResult', None), ('FileSearchActivity', None), ('FiscalYearSettings', None), ('FlexiPage', None), ('FlexipageComponentMetrics', None), ('FlexipagePageTypeMetrics', None), ('FlexiPageRegion', None), ('FlexQueueItem', None), ('FlowApexClassDescriptor', None), ('FlowApexClassPropertyDesc', None), ('FlowCategory', None), ('FlowCategoryItem', None), ('FlowDefinition', None), ('FlowDefinitionView', None), ('FlowElementTestCoverage', None), ('FlowExecutionErrorEvent', None), ('FlowExecutionEvent', None), ('FlowExecutionEventMetric', None), ('FlowExtension', None), ('FlowExtensionGenericType', None), ('FlowExtensionParam', None), ('FlowExtensionProcessType', None), ('FlowInterview', None), ('FlowRecordRelation', None), ('FlowSaveTrigger', None), ('FlowStageRelation', None), ('FlowTestCoverage', None), ('FlowTriggerTypeDefinition', None), ('FlowVariableAssignment', None), ('FlowVariableView', None), ('FlowVersionView', None), ('Folder', None), ('FolderClosure', None), ('FolderedContentDocument', None), ('ForecastingAdjustment', None), ('ForecastingCategoryMapping', None), ('ForecastingCompositeKey', None), ('ForecastingDisplayedFamily', None), ('ForecastingFact', None), ('ForecastingItem', None), ('ForecastingItemPivot', None), ('ForecastingOwnerAdjustment', None), ('ForecastingQuota', None), ('ForecastingShare', None), ('ForecastingType', None), ('ForecastingTypeMetrics', None), ('ForecastingTypeToCategory', None), ('ForecastingUserPreference', None), ('ForecastShare', None), ('FormulaFunction', None), ('FormulaFunctionAllowedType', None), ('FormulaFunctionCategory', None), ('FormulaOperator', None), ('FormulaParticle', None), ('FormulaVariable', None), ('FTestGenBodyInterface', None), ('FTestGenInterface', None), ('GatherStatsTaskInfo', None), ('GenericContentFolder', None), ('GenericContentFolderItem', None), ('GenericContentFolderMember', None), ('GenericRecordUserAccess', None), ('GeoLocationPAC', None), ('GlobalDbKey', None), ('GlobalOrganization', None), ('GlobalVariable', None), ('GlobalVariableType', None), ('GrantedByLicense', None), ('GridforceJob', None), ('Group', None), ('GroupBlowout', None), ('GroupGroupTrans', None), ('GroupMember', None), ('GroupSubscription', None), ('HadoopCounter', None), ('HadoopJob', None), ('HammerResultStatus', None), ('HistoricalDataFilter', None), ('HistoricalDataFilterItem', None), ('HistoricalEntityConfig', None), ('HistoricalFieldConfig', None), ('HistoricalSelector', None), ('HistoricalSelectorValue', None), ('HistoricalStaging', None), ('HistoricalTransactionPrefix', None), ('HistoryRetentionJob', None), ('Holiday', None), ('IconDefinition', None), ('Idea', None), ('IdeaMetrics', None), ('IdeaReputationLevel', None), ('IdentityVerificationEvent', None), ('IDEPerspective', None), ('IDEWorkspace', None), ('IdpEventLog', None), ('IframeWhiteListUrl', None), ('Image', None), ('ImportQueue', None), ('InboundChangeSet', None), ('InboundSocialPost', None), ('IncrementalCandidate', None), ('IndexKeyDefinition', None), ('IndexKeyDefinitionItem', None), ('Individual', None), ('InsightsApplication', None), ('InsightsExternalData', None), ('InsightsExternalDataPart', None), ('InstalledMobileApp', None), ('InstalledPackageVersion', None), ('InstalledSubscriberPackage', None), ('InstalledSubscriberPackageVersion', None), ('InstanceDirective', None), ('InstancePerm', None), ('InstanceSizeJob', None), ('IntegrationAuditingEvent', None), ('InteractionActionCall', None), ('InteractionActionCallParam', None), ('InteractionAllocation', None), ('InteractionAllocator', None), ('InteractionApexCall', None), ('InteractionChoice', None), ('InteractionChoiceLookup', None), ('InteractionCondition', None), ('InteractionConnector', None), ('InteractionConstant', None), ('InteractionCountReport', None), ('InteractionDataColumn', None), ('InteractionDataInput', None), ('InteractionDataOutput', None), ('InteractionDataSource', None), ('InteractionDecision', None), ('InteractionDefinitionVersion', None), ('InteractionDynTypeMapping', None), ('InteractionFieldMetaData', None), ('InteractionFieldValue', None), ('InteractionForm', None), ('InteractionFormula', None), ('InteractionLanguageMetrics', None), ('InteractionLayoutDetail', None), ('InteractionLayoutGroup', None), ('InteractionLCMetrics', None), ('InteractionLoop', None), ('InteractionMetadataValue', None), ('InteractionOperand', None), ('InteractionQuestion', None), ('InteractionReference', None), ('InteractionRefOrValue', None), ('InteractionResource', None), ('InteractionScreenFieldParam', None), ('InteractionScreenRule', None), ('InteractionScreenRuleAction', None), ('InteractionStage', None), ('InteractionStart', None), ('InteractionStatement', None), ('InteractionSwitch', None), ('InteractionTodo', None), ('InteractionTranslMetrics', None), ('InteractionUsageMetrics', None), ('InteractionValueList', None), ('InteractionValueListEntry', None), ('InteractionVariable', None), ('InteractionVisibilityRule', None), ('InteractionWait', None), ('InteractionWaitEvent', None), ('InteractionWaitEventParam', None), ('InvocableAction', None), ('InvocableActionGenericType', None), ('InvocableActionParameter', None), ('InvocableActionPicklist', None), ('InvoiceUsageMetrics', None), ('IpWhitelist', None), ('JiffyTrace', None), ('JigsawSavedSearch', None), ('KanbanView', None), ('Keyword', None), ('KeywordList', None), ('KnowledgeableUser', None), ('KnowledgeArticleHistory', None), ('KnowledgeExport', None), ('KnowledgeExportArticle', None), ('KnowledgeExportFile', None), ('KnowledgeExportLanguage', None), ('KnowledgeExportLog', None), ('KnowledgeImport', None), ('KnowledgeImportFile', None), ('KnowledgeImportLog', None), ('KnowledgeKeywordSearchHistory', None), ('KnowledgeLanguageConfig', None), ('KnowledgeMigrationJob', None), ('KnowledgeMigrationStat', None), ('KnowledgeSearchEventHistory', None), ('KnowledgeViewEventHistory', None), ('KnowledgeVoteEventHistory', None), ('LabelData', None), ('LabelDefinition', None), ('Layout', None), ('LayoutItem', None), ('LayoutItemActionRef', None), ('LayoutItemColumn', None), ('LayoutParticle', None), ('LayoutRightPanel', None), ('LayoutSection', None), ('LayoutSectionState', None), ('LbpmMetrics', None), ('Lead', None), ('LeadConvertMapping', None), ('LeadConvertSettings', None), ('LeadStatus', None), ('Lens', None), ('LensDeveloper', None), ('LensEdgeMart', None), ('LensFile', None), ('LicensedCustomPermission', None), ('LicenseDefinition', None), ('LicenseManagementOrgCertificate', None), ('LightningBolt', None), ('LightningBoltFeature', None), ('LightningBoltImage', None), ('LightningBoltItem', None), ('LightningComponentBundle', None), ('LightningComponentMetrics', None), ('LightningComponentResource', None), ('LightningComponentTarget', None), ('LightningExperienceTheme', None), ('LightningMessageChannel', None), ('LightningMessageField', None), ('LightningOnboardingConfig', None), ('LightningServiceMetrics', None), ('LightningUriEvent', None), ('LightningUriEventStream', None), ('LimitSnapshot', None), ('LimitUsageHistory', None), ('LimitUsageTracker', None), ('LinkedArticle', None), ('LinkedInLeadGen', None), ('LinkedInLeadGenAdAccount', None), ('LinkedInLeadGenConfig', None), ('LinkedInLeadGenToken', None), ('LinkReference', None), ('LinkState', None), ('LinkStateData', None), ('ListColumn', None), ('ListEmail', None), ('ListEmailIndividualRecipient', None), ('ListEmailRecipientSource', None), ('ListEmailSentResult', None), ('ListLayout', None), ('ListLayoutItem', None), ('ListPoolUsage', None), ('ListView', None), ('ListViewChart', None), ('ListViewChartInstance', None), ('ListViewCriterion', None), ('ListViewDisplayColumn', None), ('ListViewEvent', None), ('ListViewEventStream', None), ('LiveAgentSession', None), ('LiveChatBlockingRule', None), ('LiveChatButton', None), ('LiveChatButtonCriteria', None), ('LiveChatButtonDeployment', None), ('LiveChatButtonSkill', None), ('LiveChatDeployment', None), ('LiveChatFileToken', None), ('LiveChatSdApexPage', None), ('LiveChatSdTabSet', None), ('LiveChatSensitiveDataRule', None), ('LiveChatTranscript', None), ('LiveChatTranscriptEvent', None), ('LiveChatTranscriptSkill', None), ('LiveChatUserConfig', None), ('LiveChatUserConfigProfile', None), ('LiveChatUserConfigUser', None), ('LiveChatVisitor', None), ('LmaApiSession', None), ('LocalizedValue', None), ('LocalNamespace', None), ('LogAnalysisItem', None), ('LogAnalysisRun', None), ('LoginAsEvent', None), ('LoginAsEventStream', None), ('LoginBrand', None), ('LoginBrandAsset', None), ('LoginEvent', None), ('LoginEventStream', None), ('LoginFlow', None), ('LoginGeo', None), ('LoginHistory', None), ('LoginHours', None), ('LoginIp', None), ('LoginIpEmail', None), ('LoginIpRange', None), ('LogoutEvent', None), ('LogoutEventStream', None), ('LogSearch', None), ('LogSearchResult', None), ('LookedUpFromActivity', None), ('LpuAccessMapping', None), ('Macro', None), ('MacroAction', None), ('MacroInstruction', None), ('MacroUsage', None), ('MailAppExchangeUserMap', None), ('MailAppExchangeWhitelist', None), ('MailAppOwaWhitelist', None), ('MailAppSettings', None), ('MailAssociationItem', None), ('MailmergeTemplate', None), ('ManagedContent', None), ('ManagedContentBlock', None), ('ManagedContentBlockVersion', None), ('ManagedContentBodyLink', None), ('ManagedContentChannel', None), ('ManagedContentFolderDefinition', None), ('ManagedContentFolderLink', None), ('ManagedContentFolderMember', None), ('ManagedContentMigration', None), ('ManagedContentNode', None), ('ManagedContentNodeRefTree', None), ('ManagedContentNodeRendition', None), ('ManagedContentNodeType', None), ('ManagedContentQueryCriterion', None), ('ManagedContentQueryDefinition', None), ('ManagedContentRelease', None), ('ManagedContentReleaseItem', None), ('ManagedContentSet', None), ('ManagedContentSetLink', None), ('ManagedContentSpace', None), ('ManagedContentSpaceChannel', None), ('ManagedContentSpaceContentType', None), ('ManagedContentSpaceFolder', None), ('ManagedContentSpaceFolderMember', None), ('ManagedContentSpaceItem', None), ('ManagedContentSpaceLanguage', None), ('ManagedContentSpaceLink', None), ('ManagedContentSpaceMember', None), ('ManagedContentSpacePermission', None), ('ManagedContentSpaceRole', None), ('ManagedContentTranslationJob', None), ('ManagedContentTranslationTask', None), ('ManagedContentType', None), ('ManagedContentTypeSearchBlackList', None), ('ManagedContentTypeVersion', None), ('ManagedContentVariant', None), ('ManagedContentVersion', None), ('ManagedContentVersionLanguage', None), ('ManagedTopicLocation', None), ('MassMail', None), ('MassOperationsJobInfo', None), ('MassOperationsNotification', None), ('MassOperationsSubsetResults', None), ('MatchIndexDefinition', None), ('MatchIndexValue', None), ('MatchingInformation', None), ('MatchingRule', None), ('MatchingRuleItem', None), ('MaterializedFeedEntry', None), ('Measure', None), ('MenuItem', None), ('MessageIdentifier', None), ('MetadataChangeTemplate', None), ('MetadataComponentDependency', None), ('MetadataContainer', None), ('MetadataContainerMember', None), ('MetadataContainerMemberWithBinaryBody', None), ('MetadataContainerMemberWithBody', None), ('MetadataContainerMemberWithSymbolTable', None), ('MetadataContent', None), ('MetadataIdentifier', None), ('MetadataPackage', None), ('MetadataPackageVersion', None), ('MetaMindConnection', None), ('MetricsDataFile', None), ('MetricsInMQMetrics', None), ('MetricsTransmissionHistory', None), ('Milestone', None), ('MilestoneCondition', None), ('MilestoneSuccessAction', None), ('MilestoneTimeAction', None), ('MilestoneTimeTrigger', None), ('MilestoneType', None), ('MobileApplicationDetail', None), ('MobileConfig', None), ('MobileEvent', None), ('MobileMarkedRecord', None), ('MobilePushServiceDevice', None), ('MobilePushSetupRegistry', None), ('MobileSecurityUserMetric', None), ('ModerationRule', None), ('ModerationRuleEntityTypeMapping', None), ('ModerationRuleKeywordCriteriaMapping', None), ('ModerationRuleUserCriteriaMapping', None), ('Module', None), ('ModuleDependency', None), ('Mru', None), ('MultiCurrency', None), ('MutingPermissionSet', None), ('MyDomainDiscoverableLogin', None), ('Name', None), ('Nameable', None), ('NamedCredential', None), ('NamedFilter', None), ('NameUnion', None), ('NavigationLinkSet', None), ('NavigationMenuItem', None), ('Network', None), ('NetworkActiveMemberMetrics', None), ('NetworkActivityAudit', None), ('NetworkActivityDailyMetrics', None), ('NetworkAffinity', None), ('NetworkCustMemberMetrics', None), ('NetworkCustomerDailyLoginMetrics', None), ('NetworkCustomerLoginMetrics', None), ('NetworkDashboardSetting', None), ('NetworkDefaultBadgeSetting', None), ('NetworkDiscoverableLogin', None), ('NetworkMember', None), ('NetworkMemberGroup', None), ('NetworkMembershipDailyMetrics', None), ('NetworkModeration', None), ('NetworkPageOverride', None), ('NetworkPartnerDailyLoginMetrics', None), ('NetworkPartnerLoginMetrics', None), ('NetworkPartnerMemberMetrics', None), ('NetworkPCustDailyLoginMetrics', None), ('NetworkPowerCustomerLoginMetrics', None), ('NetworkPowerCustomerMemberMetrics', None), ('NetworkPublicUsageDailyMetrics', None), ('NetworkPulseActionsMapping', None), ('NetworkPulseSetting', None), ('NetworkRegularMemberMetrics', None), ('NetworkSearchQueryFrequency', None), ('NetworkSelfRegistration', None), ('NetworkTenantUsageEntitlementWklyMetrics', None), ('NetworkUniqueContributorDailyMetrics', None), ('NetworkUserHistory', None), ('NetworkUserHistoryRecent', None), ('NetworkUserParticipationDailyMetrics', None), ('NetworkWorkspaceMetricSetting', None), ('NewsFeed', None), ('NextBestActionUsageMetrics', None), ('NLPhrase', None), ('NLQueryFragment', None), ('Note', None), ('NoteAndAttachment', None), ('NotifDeliveryUserPref', None), ('NotificationMember', None), ('NotifTypeOrgSetting', None), ('NotifTypeUserSetting', None), ('OauthClientRegistration', None), ('OauthConsumer', None), ('OauthConsumerAsset', None), ('OauthConsumerScope', None), ('OauthCustomScope', None), ('OauthCustomScopeApp', None), ('OauthToken', None), ('OauthTokenLocal', None), ('ObjectMapping', None), ('ObjectMappingField', None), ('ObjectPermissions', None), ('OnboardingMetrics', None), ('OpenActivity', None), ('OperationLog', None), ('Opportunity', None), ('OpportunityAlert', None), ('OpportunityCompetitor', None), ('OpportunityContactRole', None), ('OpportunityHistory', None), ('OpportunityLineItem', None), ('OpportunityMetrics', None), ('OpportunityPartner', None), ('OpportunitySplitMetrics', None), ('OpportunityStage', None), ('OpportunityTeamMember', None), ('OpportunityUpdateReminder', None), ('OpptyAndPricingMetrics', None), ('OracleAwrSqlignore', None), ('OracleAwrSqlstat', None), ('OracleAwrSqltext', None), ('Organization', None), ('OrganizationValue', None), ('OrganizationValueInfo', None), ('OrgDeleteRequest', None), ('OrgEmailAddressSecurity', None), ('OrgLifecycleNotification', None), ('OrgMetric', None), ('OrgMetricScanResult', None), ('OrgMetricScanSummary', None), ('OrgObjectsMetrics', None), ('OrgRecommendation', None), ('OrgSigningKey', None), ('OrgSizingDataHolder', None), ('OrgSizingInfo', None), ('OrgWideEmailAddress', None), ('OutboundField', None), ('OutboundMessage', None), ('OutgoingEmail', None), ('OutgoingEmailRelation', None), ('OvenExperiment', None), ('OverridableEntities', None), ('OwnedContentDocument', None), ('Owner', None), ('OwnerChangeOptionInfo', None), ('PacCrudPermission', None), ('Package2Member', None), ('Package2OauthConsumer', None), ('Package2UpgradeExport', None), ('PackageBooleanValue', None), ('PackageDateValue', None), ('PackageDependency', None), ('PackageEvent', None), ('PackageExtension', None), ('PackageIdMapping', None), ('PackageInstallRequest', None), ('PackageIntegerValue', None), ('PackageLicense', None), ('PackageMember', None), ('PackageOperationError', None), ('PackageSupportAccess', None), ('PackageUploadRequest', None), ('PackageVersionInstallRequestError', None), ('PackageVersionPatchOrg', None), ('PackageVersionUninstallRequestError', None), ('PackagingHammerResult', None), ('PageAssignment', None), ('PageAssignmentCriteria', None), ('PageComponent', None), ('ParallelJobItemData', None), ('ParallelJobStatus', None), ('PartitionLevelMember', None), ('PartitionLevelScheme', None), ('PartitionStatus', None), ('Partner', None), ('PartnerNetworkForwardChild', None), ('PartnerNetworkQueue', None), ('PartnerNetworkSetup', None), ('PartnerRole', None), ('PartyConsent', None), ('PathAssistant', None), ('PathAssistantStepInfo', None), ('PathAssistantStepItem', None), ('PaymentIdempotent', None), ('PendingServiceRouting', None), ('Period', None), ('PermissionDependency', None), ('PermissionSet', None), ('PermissionSetAssignment', None), ('PermissionSetGroup', None), ('PermissionSetGroupComponent', None), ('PermissionSetGroupMetrics', None), ('PermissionSetLicense', None), ('PermissionSetLicenseAssign', None), ('PermissionSetLicenseMetrics', None), ('PermissionSetMetricsByOrg', None), ('PermissionSetProfileMetrics', None), ('PermissionSetTabSetting', None), ('PersonAccountMetrics', None), ('Personalization', None), ('PersonalizationActivity', None), ('PersonalizationResource', None), ('PersonalizationTargetInfo', None), ('PersonalizationTargetSet', None), ('PersonalizedUnswdQuestion', None), ('Photo', None), ('PhotoItem', None), ('PicklistItemProperty', None), ('PicklistMaster', None), ('PicklistSet', None), ('PicklistValueInfo', None), ('PinnedEntity', None), ('PinPlan', None), ('PlatformAction', None), ('PlatformActionList', None), ('PlatformActionListItem', None), ('PlatformActionMetrics', None), ('PlatformCachePartition', None), ('PlatformCachePartitionType', None), ('PlatformCacheTrial', None), ('PlatformEventChannel', None), ('PlatformEventChannelMember', None), ('PlatformEventConduitMetrics', None), ('PlatformOrgObjectMetrics', None), ('PlatformStatusAlertEvent', None), ('PlinyPhysicalDeleteJob', None), ('Portal', None), ('PortalAccount', None), ('PortalDelegablePermissionSet', None), ('PortalMember', None), ('PortalStyleConfig', None), ('PostArchivalDeletionRequest', None), ('PredictiveModel', None), ('PresenceConfigDeclineReason', None), ('PresenceDeclineReason', None), ('PresenceUserConfig', None), ('PresenceUserConfigInfo', None), ('PresenceUserConfigProfile', None), ('PresenceUserConfigUser', None), ('Pricebook', None), ('Pricebook2', None), ('Pricebook2Old', None), ('PricebookEntry', None), ('PricebookShare', None), ('PrivacyConsent', None), ('PrivacyConsentRow', None), ('PrmAppInstallationStatus', None), ('ProcessActionItem', None), ('ProcessAllowedSubmitter', None), ('ProcessCartPricingEvent', None), ('ProcessDefinition', None), ('ProcessInstance', None), ('ProcessInstanceHistory', None), ('ProcessInstanceNode', None), ('ProcessInstanceStep', None), ('ProcessInstanceWorkitem', None), ('ProcessMetrics', None), ('ProcessNode', None), ('ProcessNodeSecurity', None), ('ProcessPlugin', None), ('ProcessPluginParameter', None), ('ProcessTimeQueue', None), ('ProcessTransition', None), ('ProcessTransitionAction', None), ('ProcessTransitionApprover', None), ('ProcessTransitionCondition', None), ('ProcessTransitionSecurity', None), ('ProcessTypeDefinition', None), ('ProcessWorkitemProperties', None), ('ProdDbHammerFlaggedRequest', None), ('Product', None), ('Product2', None), ('ProductEntitlementTemplate', None), ('Profile', None), ('ProfileActionOverride', None), ('ProfileClientSettings', None), ('ProfileIpRestrictionMetrics', None), ('ProfileLayout', None), ('ProfilePasswordPolicy', None), ('ProfilePortalDelegate', None), ('ProfileRecordType', None), ('ProfileSessionSetting', None), ('ProfileTabSetConfiguration', None), ('Project', None), ('Prompt', None), ('PromptAction', None), ('PromptVersion', None), ('ProposedEventResponse', None), ('ProposedEventTime', None), ('PublicSolution', None), ('PublishableEntity', None), ('Publisher', None), ('PushIntent', None), ('PushProfileMapping', None), ('PushTopic', None), ('PushUpgradeExcludedOrg', None), ('PushUpgradeJob', None), ('PushUpgradeJobError', None), ('PushUpgradeRequest', None), ('QmosEntityDefinition', None), ('QmosInColMap1', None), ('QmosMatCol1', None), ('QmosMatEntityMeta', None), ('QmosQuery1', None), ('QmosQueryCol1', None), ('QmosQueryStatus', None), ('QmosSelCol1', None), ('QoptimizerLimitOverride', None), ('QoptimizerOption', None), ('QuerySet', None), ('QuerySetItem', None), ('Queue', None), ('QueueMember', None), ('QueueRoutingConfig', None), ('QueueSobject', None), ('QuickActionDefinition', None), ('QuickActionList', None), ('QuickActionListItem', None), ('QuickActionMetrics', None), ('QuickText', None), ('QuickTextUsage', None), ('Quote', None), ('QuoteDocument', None), ('QuoteLineItem', None), ('QuoteTemplateRichTextData', None), ('RateLimitingNotification', None), ('RateLimitIntBuckets', None), ('RawEmail', None), ('ReadOnlyLoginIpEmail', None), ('RecalcCampaignStats', None), ('RecentlyViewed', None), ('Recommendation', None), ('RecommendationAudience', None), ('RecommendationBlacklist', None), ('RecommendationDefinition', None), ('RecommendationMetric', None), ('RecommendationReaction', None), ('RecommendationSimilarity', None), ('RecommendationStrategy', None), ('RecommendationStrategyNode', None), ('RecommendationUserActivity', None), ('RecordAction', None), ('RecordActionDefaultItem', None), ('RecordActionDeployment', None), ('RecordActionDeploymentChannel', None), ('RecordActionDeploymentContext', None), ('RecordActionHistory', None), ('RecordActionRecommendation', None), ('RecordActionSelectableItem', None), ('RecordDisplayLookup', None), ('RecordMergeHistory', None), ('RecordOrigin', None), ('RecordSalt', None), ('RecordType', None), ('RecordTypePicklist', None), ('RecordUserAccessInterface', None), ('RecordVisibility', None), ('RecoveryCopyJob', None), ('RecoveryFlashback', None), ('RedirectWhitelistUrl', None), ('RelatedEntity', None), ('RelationshipDomain', None), ('RelationshipInfo', None), ('RemoteProxy', None), ('Renderer', None), ('Report', None), ('ReportAggregate', None), ('ReportAnomalyEvent', None), ('ReportAnomalyEventStore', None), ('ReportBlock', None), ('ReportBlockAggregate', None), ('ReportBreak', None), ('ReportBucketField', None), ('ReportBucketFieldSourceValue', None), ('ReportBucketFieldValue', None), ('ReportChart', None), ('ReportColorRange', None), ('ReportColumn', None), ('ReportCustomDetailField', None), ('ReportEvent', None), ('ReportEventStream', None), ('ReportFilterItem', None), ('ReportFormattingRule', None), ('ReportFormattingRuleValue', None), ('ReportInstance', None), ('ReportInstanceCsvResult', None), ('ReportInstanceQuery', None), ('ReportJob', None), ('ReportJobFieldMap', None), ('ReportJobRun', None), ('ReportJobRunError', None), ('ReportObjectFilterItem', None), ('ReportParam', None), ('ReportResultBlob', None), ('ReportRunTracker', None), ('ReputationLevel', None), ('ReputationPointsRule', None), ('RequestsForAccessSIQ', None), ('RequestThrottle', None), ('RequestTrace', None), ('RetentionPolicy', None), ('RichTextAreaFieldData', None), ('RuleFilter', None), ('RuleFilterAction', None), ('RuleFilterItem', None), ('S2XAdminError', None), ('S2XContactMap', None), ('S2XEventMap', None), ('S2XEventRecordMap', None), ('S2XEventTxnProps', None), ('S2XExchOAuthCredential', None), ('S2XGoogleServiceAccount', None), ('S2XPushSubscription', None), ('S2XRecordMap', None), ('S2XSandmanError', None), ('S2XServiceAccount', None), ('S2XTransaction', None), ('S2XTransactionLock', None), ('S2XUserMap', None), ('SalesforceIqDataSource', None), ('SalesforceIqOrgBlacklist', None), ('SalesforceIqSyncFailure', None), ('SalesforceIqUser', None), ('SamlSsoConfig', None), ('SampledEntity', None), ('SamplingStrategy', None), ('Sandbox', None), ('SandboxDimensionMetrics', None), ('SandboxInfo', None), ('SandboxObserver', None), ('SandboxObserver2', None), ('SandboxOrgDimensionMetrics', None), ('SandboxProcess', None), ('SandboxRelayObserver', None), ('SandOmBulkExport', None), ('SandOmExportedBlob', None), ('SandOmImportInfo', None), ('SandOmImportInfoDetail', None), ('SandOmInfo', None), ('SandOmInfoDetail', None), ('SandOmObserver', None), ('SandstormWhitelist', None), ('ScheduledRecommendation', None), ('SchemaBuilderLayout', None), ('SchemaBuilderLayoutItem', None), ('Scontrol', None), ('Scorecard', None), ('ScorecardAssociation', None), ('ScorecardMetric', None), ('ScrutinyPkChunkData', None), ('ScrutinyRun', None), ('SCSInboundSettings', None), ('SCSTermsOfService', None), ('SearchActivity', None), ('SearchLayout', None), ('SearchPromotionRule', None), ('SearchQuerySuggestion', None), ('SearchSchemaOverride', None), ('SecureAgentsCluster', None), ('SecurityCustomBaseline', None), ('SecurityHealthCheck', None), ('SecurityHealthCheckRisks', None), ('SegmentSpace', None), ('SegmentSpaceChunk', None), ('SendEmailActionDefinition', None), ('Service', None), ('ServiceChannel', None), ('ServiceChannelStatus', None), ('ServiceContract', None), ('ServiceDataType', None), ('ServiceDeskAttributes', None), ('ServiceDeskComponent', None), ('ServiceDeskCustomStyling', None), ('ServiceDeskHotkey', None), ('ServiceFieldDataType', None), ('ServicePresenceStatus', None), ('ServicePresenceStatusInfo', None), ('ServiceProvider', None), ('ServiceVersion', None), ('SessionHijackingEvent', None), ('SessionHijackingEventStore', None), ('SessionLevelPolicy', None), ('SessionPermSetActivation', None), ('SettingsTemplate', None), ('SetupAssistantAnswer', None), ('SetupAssistantProgress', None), ('SetupAuditTrail', None), ('SetupEntityAccess', None), ('SetupFlowProgress', None), ('SetupNode', None), ('SfdcOutboundMessage', None), ('SfdcPartner', None), ('SharedPicklistDefinition', None), ('ShareInterface', None), ('SharingCoverageJob', None), ('SharingMetrics', None), ('SharingOperation', None), ('SharingOrgDefaultMetrics', None), ('SharingOrgStandardMetrics', None), ('SharingPortalMetrics', None), ('SharingRowCauseMetrics', None), ('SharingSet', None), ('SharingUserCoverage', None), ('SharingUserMetrics', None), ('SidebarComponentLayout', None), ('SiqExchangeConnection', None), ('SiqExchangeSetting', None), ('SiqUserBlacklist', None), ('Site', None), ('SiteAsset', None), ('SiteChangelist', None), ('SiteChangelistComponent', None), ('SiteComponent', None), ('SiteDetail', None), ('SiteDomain', None), ('SiteIframeWhiteListUrl', None), ('SitePageOverride', None), ('SitePub', None), ('SitePubAsset', None), ('SitePubComponent', None), ('SitePubDomain', None), ('SitePubDomainSite', None), ('SiteRedirectMapping', None), ('Skill', None), ('SkillProfile', None), ('SkillUser', None), ('SkinnyIndex', None), ('SkinnyIndexColumn', None), ('SkinnyTable', None), ('SkinnyTableExt', None), ('SkinnyTableField', None), ('SlaProcess', None), ('SlaProcessFilter', None), ('SlaProcessFilterItem', None), ('SlaProcessPushRule', None), ('SmartAnswerSlaMetric', None), ('SocialPersona', None), ('SocialPost', None), ('SocialUserAuth', None), ('SoftDeletable', None), ('SoftDeletedStat', None), ('SoftLimitsApiUsageMetrics', None), ('SoftphoneLayout', None), ('SoftphoneLayoutCallType', None), ('SoftphoneLayoutInfoField', None), ('SoftphoneLayoutItem', None), ('SoftphoneLayoutSection', None), ('SoftphoneScreenPopOption', None), ('Solution', None), ('SolutionStatus', None), ('SourceObjectAttributes', None), ('Split', None), ('SplitAction', None), ('SplitActionResult', None), ('SplitFrameworkResult', None), ('SplitMapping', None), ('SplitOrganization', None), ('SplitPod', None), ('SPSamlAttributes', None), ('SqlInfoPfes', None), ('Stamp', None), ('StampAssignment', None), ('StandardAction', None), ('StandardReportType', None), ('StandardValueSet', None), ('StaticResource', None), ('StrategyContext', None), ('StrategyContextArgument', None), ('StrategyExecutionEvent', None), ('StrategyMonthlyStats', None), ('StreamActivityAccess', None), ('StreamEmail', None), ('StreamEvent', None), ('StreamingChannel', None), ('Subinteraction', None), ('SubinteractionVariableAssignment', None), ('SubscriberPackage', None), ('SubscriberPackageVersion', None), ('SubscriberPackageVersionInstallRequest', None), ('SubscriberPackageVersionUninstallRequest', None), ('SubscriberTabSetMember', None), ('SummaryLayout', None), ('SummaryLayoutItem', None), ('SummaryLayoutSliceInfo', None), ('SupervisorAgentConfigSkill', None), ('SupportOrgWideMetrics', None), ('SurveyResponseUsageMetrics', None), ('SyncTransactionLog', None), ('Synonym', None), ('SynonymDictionary', None), ('SynonymGroup', None), ('SystemStreamingChannel', None), ('TabDefinition', None), ('TabSet', None), ('TabSetMember', None), ('Task', None), ('TaskAssociationItem', None), ('TaskGroup', None), ('TaskPriority', None), ('TaskRecurrenceException', None), ('TaskRelation', None), ('TaskStatus', None), ('TaskWhoRelation', None), ('TemplateDeployment', None), ('TemplateDeploymentItem', None), ('TempStore', None), ('TenantAddOnLicense', None), ('TenantEditionLicense', None), ('TenantLicensingRequest', None), ('TenantPlatformLicense', None), ('TenantSecret', None), ('TenantUsageEntitlement', None), ('TenantUserLicense', None), ('TestSuiteMembership', None), ('ThirdPartyAccountLink', None), ('ThirdPartyAccountLinkLocal', None), ('TimeStop', None), ('TodayGoal', None), ('Tombstone', None), ('Topic', None), ('TopicAssignment', None), ('TopicComputeStatus', None), ('TopicDataCategoryRule', None), ('TopicGroupActivity', None), ('TopicIndex', None), ('TopicNameChange', None), ('TopicOntology', None), ('TopicRecordSetting', None), ('TopicSuggestionSetting', None), ('TopicTerm', None), ('TopicUserActivity', None), ('TopicUserEvent', None), ('TraceFlag', None), ('Training', None), ('TransactionSecurityAction', None), ('TransactionSecurityActionEvent', None), ('TransactionSecurityEventInterface', None), ('TransactionSecurityPolicy', None), ('Translation', None), ('TrendingTopic', None), ('TrendIntervalLookup', None), ('TrialMaster', None), ('TwoFactorAuthPairing', None), ('TwoFactorInfo', None), ('TwoFactorMethodsInfo', None), ('TwoFactorMethodsInfoLocal', None), ('TwoFactorMetrics', None), ('TwoFactorTempCode', None), ('TwoFactorU2F', None), ('UiFormulaCriterion', None), ('UiFormulaRule', None), ('UndecidedEventRelation', None), ('UninstallExport', None), ('UriEvent', None), ('UriEventStream', None), ('User', None), ('UserAccountTeamMember', None), ('UserActivityTimelineFilter', None), ('UserAppInfo', None), ('UserAppMenuCustomization', None), ('UserAppMenuItem', None), ('UserComponentData', None), ('UserConfigTransferButton', None), ('UserConfigTransferSkill', None), ('UserCriteria', None), ('UserCriteriaGroup', None), ('UserCustomBadge', None), ('UserDimMetrics', None), ('UserEmailPreferredPerson', None), ('UserEntityAccess', None), ('UserFavorite', None), ('UserFeedChannel', None), ('UserFieldAccess', None), ('UserLicense', None), ('UserLicenseMetrics', None), ('UserListPreference', None), ('UserListPrefs', None), ('UserListView', None), ('UserListViewCriterion', None), ('UserLogin', None), ('UserMembershipSharingRule', None), ('UserMetrics', None), ('UserNavItem', None), ('UserPackageLicense', None), ('UserPermissionAccess', None), ('UserPreference', None), ('UserProfile', None), ('UserProfileFeed', None), ('UserProvAccount', None), ('UserProvAccountStaging', None), ('UserProvisioningConfig', None), ('UserProvisioningLog', None), ('UserProvisioningRequest', None), ('UserProvMockTarget', None), ('UserRecommendation', None), ('UserRecordAccess', None), ('UserRecSummary', None), ('UserRole', None), ('UserRoleGroupLockUsage', None), ('UserRoleTrans', None), ('UserServicePresence', None), ('UserSetupAppInfo', None), ('UserSetupEntityAccess', None), ('UserTeamMember', None), ('UserVerificationMessageUse', None), ('UtilityBarMetrics', None), ('ValidationFormula', None), ('ValidationRuleMember', None), ('VerificationHistory', None), ('VerificationMessageCreditMetrics', None), ('VersionSet', None), ('VisibilityUpdateEvent', None), ('VisualforceAccessMetrics', None), ('VisualforceMetrics', None), ('Vote', None), ('VoteConfig', None), ('VoteStats', None), ('WaveAnnotation', None), ('WaveAnnotationTarget', None), ('WaveAssetEvent', None), ('WaveAssetVersion', None), ('WaveAutoInstallRequest', None), ('WaveBaseDataset', None), ('WaveBaseField', None), ('WaveCompatibilityCheckItem', None), ('WaveDataConnector', None), ('WaveExternalConnProperty', None), ('WaveFeaturedAsset', None), ('WaveNotificationConfig', None), ('WaveReplicationFilterItem', None), ('WaveTemplate', None), ('WaveTemplateDetails', None), ('WaveTemplateExternalData', None), ('WaveTemplateValues', None), ('WaveTrendedReport', None), ('WebAppResource', None), ('WebLink', None), ('WebServiceDefinition', None), ('WindowsPushApplicationSetup', None), ('WorkflowAlertMember', None), ('WorkflowFieldUpdateMember', None), ('WorkflowOutboundMessageMember', None), ('WorkflowRule', None), ('WorkflowRuleMember', None), ('WorkflowTaskMember', None), ('WorkflowTimeAction', None), ('WorkflowTimeQueue', None), ('WorkflowTimeTrigger', None), ('WsdlDataType', None), ('XCleanBulkJob', None), ('XCleanMatchRateMetrics', None), ('XinstanceInfo', None), ('Xmd', None), ('XmdDate', None), ('XmdDimension', None), ('XmdDimensionCustomAction', None), ('XmdDimensionMember', None), ('XmdDimRecordDisplayLookup', None), ('XmdDimSalesforceAction', None), ('XmdMeasure', None), ('XmdOrganization', None), ('XmlSchema', None)], blank=True, null=True)
    stat_value = models.IntegerField(verbose_name='StatValue', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DataStatistics'
        verbose_name = 'Data Statistics'
        verbose_name_plural = 'Data Statistics'
        # keyPrefix = '05a'



class DataType(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Data Type Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=70, verbose_name='Data Type Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_complex = models.BooleanField(verbose_name='Is this Data Type Complex?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    context_service_data_type_id = models.CharField(max_length=70, verbose_name='Service Data Type ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    context_wsdl_data_type_id = models.CharField(max_length=70, verbose_name='WSDL Data Type ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DataType'
        verbose_name = 'Data Type'
        verbose_name_plural = 'Data Types'
        # keyPrefix = '4dt'



class DatacloudAddress(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='Data.com Address ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    address_line1 = models.CharField(max_length=255, verbose_name=' Address Line 1 ', sf_read_only=models.READ_ONLY, blank=True, null=True)
    address_line2 = models.CharField(max_length=255, verbose_name=' Address Line 2 ', sf_read_only=models.READ_ONLY, blank=True, null=True)
    city = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    state = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    country = models.CharField(max_length=255, verbose_name='Country/Territory', sf_read_only=models.READ_ONLY, blank=True, null=True)
    postal_code = models.CharField(max_length=255, verbose_name='PostalCode', sf_read_only=models.READ_ONLY, blank=True, null=True)
    latitude = models.CharField(max_length=11, verbose_name=' Latitude ', sf_read_only=models.READ_ONLY, blank=True, null=True)
    longitude = models.CharField(max_length=11, verbose_name='Longitude ', sf_read_only=models.READ_ONLY, blank=True, null=True)
    geo_accuracy_code = models.CharField(max_length=15, verbose_name=' GeoAccuracy Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    geo_accuracy_num = models.CharField(max_length=3, verbose_name=' GeoAccuracy Num', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DatacloudAddress'
        verbose_name = 'Data.com Address'
        verbose_name_plural = 'Data.com Addresses'
        # keyPrefix = '07m'



class DatasetExport(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='datasetexport_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='datasetexport_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    publisher_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    metadata_length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    compressed_metadata_length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    owner = models.CharField(max_length=18, sf_read_only=models.READ_ONLY, blank=True, null=True)
    publisher_info = models.CharField(unique=True, max_length=1000, sf_read_only=models.READ_ONLY)
    metadata = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DatasetExport'
        verbose_name = 'Dataset Export'
        verbose_name_plural = 'Dataset Exports'
        # keyPrefix = '0Px'



class DatasetExportPart(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='datasetexportpart_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='datasetexportpart_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    dataset_export = models.ForeignKey(DatasetExport, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    data_file_length = models.IntegerField(sf_read_only=models.READ_ONLY)
    compressed_data_file_length = models.IntegerField(sf_read_only=models.READ_ONLY)
    part_number = models.IntegerField(sf_read_only=models.READ_ONLY)
    owner = models.CharField(max_length=18, sf_read_only=models.READ_ONLY)
    data_file = models.TextField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'DatasetExportPart'
        verbose_name = 'Dataset Export Part'
        verbose_name_plural = 'Dataset Export Parts'
        # keyPrefix = '0Py'



class DeclinedEventRelation(models.Model):
    relation = models.ForeignKey(Calendar, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Calendar, User]
    event = models.ForeignKey('Event', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    responded_date = models.DateTimeField(verbose_name='Response Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    response = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='declinedeventrelation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='declinedeventrelation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    type = models.CharField(max_length=50, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DeclinedEventRelation'
        verbose_name = 'Declined Event Relation'
        verbose_name_plural = 'Declined Event Relations'
        # keyPrefix = 'None'



class Domain(models.Model):
    domain_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('DNS', 'Domain Name System (DNS)')])
    domain = models.CharField(max_length=765, verbose_name='Domain Name', sf_read_only=models.READ_ONLY)
    options_external_https = models.BooleanField(verbose_name='Enable External HTTPS', sf_read_only=models.READ_ONLY)
    cname_target = models.CharField(max_length=765, verbose_name='CNAME Target', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='domain_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='domain_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Domain'
        verbose_name = 'Domain'
        verbose_name_plural = 'Domains'
        # keyPrefix = '0I4'



class DomainSite(models.Model):
    domain = models.ForeignKey(Domain, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    site = models.ForeignKey('Site', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    path_prefix = models.CharField(max_length=255, verbose_name='Path', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='domainsite_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='domainsite_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'DomainSite'
        verbose_name = 'Custom URL'
        verbose_name_plural = 'Custom URLs'
        # keyPrefix = '0Jf'



class DuplicateJob(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Duplicate Job Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejob_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejob_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    duplicate_job_definition = models.ForeignKey('DuplicateJobDefinition', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    start_date_time = models.DateTimeField(verbose_name='Duplicate Job Started', sf_read_only=models.READ_ONLY)
    end_date_time = models.DateTimeField(verbose_name='Duplicate Job Completed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    duplicate_job_status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('NotStarted'), choices=[('NotStarted', None), ('InProgress', None), ('Completed', None), ('Failed', None), ('Canceled', None), ('ResultsDeleted', None)])
    num_records_scanned = models.IntegerField(verbose_name='Number of Duplicate Records Scanned', sf_read_only=models.READ_ONLY)
    num_duplicate_record_sets = models.IntegerField(verbose_name='Number of Duplicate Record Sets', sf_read_only=models.READ_ONLY)
    num_duplicate_record_items = models.IntegerField(verbose_name='Number of Duplicate Record Items', sf_read_only=models.READ_ONLY)
    result_list_view = models.ForeignKey('ListView', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DuplicateJob'
        verbose_name = 'Duplicate Job'
        verbose_name_plural = 'Duplicate Jobs'
        # keyPrefix = '0PB'



class DuplicateJobDefinition(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sobject_type = models.CharField(max_length=40, verbose_name='Object Type', sf_read_only=models.READ_ONLY, choices=[('Account', None)])
    developer_name = models.CharField(max_length=80, verbose_name='Unique Duplicate Job Definition Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Duplicate Job Definition Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejobdefinition_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejobdefinition_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    sobject_subtype = models.CharField(max_length=255, verbose_name='Object Subtype', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('None'), choices=[('None', 'None'), ('PersonAccount', 'Person Account')])
    class Meta(models.Model.Meta):
        db_table = 'DuplicateJobDefinition'
        verbose_name = 'Duplicate Job Definition'
        verbose_name_plural = 'Duplicate Job Definitions'
        # keyPrefix = '0PO'



class DuplicateJobMatchingRule(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Duplicate Job Matching Rule Name', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejobmatchingrule_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejobmatchingrule_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    duplicate_job = models.ForeignKey(DuplicateJob, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    duplicate_job_match_rule_def = models.ForeignKey('DuplicateJobMatchingRuleDefinition', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    matching_rule_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    matching_rule_description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    matching_rule_boolean_filter = models.TextField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'DuplicateJobMatchingRule'
        verbose_name = 'Duplicate Job Matching Rule'
        verbose_name_plural = 'Duplicate Job Matching Rules'
        # keyPrefix = '0PC'



class DuplicateJobMatchingRuleDefinition(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejobmatchingruledefinition_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicatejobmatchingruledefinition_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    duplicate_job_definition = models.ForeignKey(DuplicateJobDefinition, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    matching_rule = models.ForeignKey('MatchingRule', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DuplicateJobMatchingRuleDefinition'
        verbose_name = 'Duplicate Job Matching Rule Definition'
        verbose_name_plural = 'Duplicate Job Matching Rule Definitions'
        # keyPrefix = '0PP'



class DuplicateRule(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sobject_type = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account', None)])
    developer_name = models.CharField(max_length=80, verbose_name='Object Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Rule Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicaterule_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='duplicaterule_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sobject_subtype = models.CharField(max_length=255, verbose_name='Object Subtype', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('None'), choices=[('None', 'None'), ('PersonAccount', 'Person Account')], blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'DuplicateRule'
        verbose_name = 'Duplicate Rule'
        verbose_name_plural = 'Duplicate Rules'
        # keyPrefix = '0Bm'



class EmailServicesAddress(models.Model):
    is_active = models.BooleanField(verbose_name='Active', default=models.DefaultedOnCreate(False))
    local_part = models.CharField(max_length=64, verbose_name='Email address')
    email_domain_name = models.CharField(max_length=255, verbose_name='Email address domain', sf_read_only=models.READ_ONLY, blank=True, null=True)
    authorized_senders = models.TextField(verbose_name='Accept Email From', blank=True, null=True)
    run_as_user = models.ForeignKey('User', models.DO_NOTHING, related_name='emailservicesaddress_runasuser_set')
    function = models.ForeignKey('EmailServicesFunction', models.DO_NOTHING)
    developer_name = models.CharField(max_length=25, verbose_name='Email Address Name', default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailservicesaddress_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailservicesaddress_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'EmailServicesAddress'
        verbose_name = 'Email Services Address'
        verbose_name_plural = 'Email Services Address'
        # keyPrefix = '093'



class EmailServicesFunction(models.Model):
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    function_name = models.CharField(max_length=64, verbose_name='Email Service Name', sf_read_only=models.READ_ONLY)
    authorized_senders = models.TextField(verbose_name='Accept Email From', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_authentication_required = models.BooleanField(verbose_name='Advanced Email Security Settings', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_tls_required = models.BooleanField(verbose_name='TLS Required', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    attachment_option = models.CharField(max_length=40, verbose_name='Accept Attachments', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('All'), choices=[('None', 'None'), ('TextOnly', 'Text attachments only'), ('BinaryOnly', 'Binary attachments only'), ('All', 'All'), ('NoContent', 'Attachment names only, no content')])
    apex_class = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    over_limit_action = models.CharField(max_length=40, verbose_name='Over Email Rate Limit Action', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('UseSystemDefault'), choices=[('UseSystemDefault', 'Use System Default'), ('Bounce', 'Bounce message'), ('Discard', 'Discard message'), ('Requeue', 'Requeue message')], blank=True, null=True)
    function_inactive_action = models.CharField(max_length=40, verbose_name='Deactivated Email Service Action', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('UseSystemDefault'), choices=[('UseSystemDefault', 'Use System Default'), ('Bounce', 'Bounce message'), ('Discard', 'Discard message'), ('Requeue', 'Requeue message')], blank=True, null=True)
    address_inactive_action = models.CharField(max_length=40, verbose_name='Deactivated Email Address Action', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('UseSystemDefault'), choices=[('UseSystemDefault', 'Use System Default'), ('Bounce', 'Bounce message'), ('Discard', 'Discard message'), ('Requeue', 'Requeue message')], blank=True, null=True)
    authentication_failure_action = models.CharField(max_length=40, verbose_name='Unauthenticated Sender Action', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('UseSystemDefault'), choices=[('UseSystemDefault', 'Use System Default'), ('Bounce', 'Bounce message'), ('Discard', 'Discard message'), ('Requeue', 'Requeue message')], blank=True, null=True)
    authorization_failure_action = models.CharField(max_length=40, verbose_name='Unauthorized Sender Action', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('UseSystemDefault'), choices=[('UseSystemDefault', 'Use System Default'), ('Bounce', 'Bounce message'), ('Discard', 'Discard message'), ('Requeue', 'Requeue message')], blank=True, null=True)
    is_error_routing_enabled = models.BooleanField(verbose_name='Enable Error Routing', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    error_routing_address = models.EmailField(verbose_name='Route Error Emails to This Email Address', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_text_attachments_as_binary = models.BooleanField(verbose_name='Convert Text Attachments to Binary Attachments', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailservicesfunction_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailservicesfunction_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'EmailServicesFunction'
        verbose_name = 'Email Service'
        verbose_name_plural = 'Email Services'
        # keyPrefix = '091'



class EmailStatus(models.Model):
    task = models.ForeignKey('Task', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailstatus_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailstatus_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    times_opened = models.IntegerField(verbose_name='# Times Opened', sf_read_only=models.READ_ONLY)
    first_open_date = models.DateTimeField(verbose_name='Date Opened', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_open_date = models.DateTimeField(verbose_name='Last Opened', sf_read_only=models.READ_ONLY, blank=True, null=True)
    email_template_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EmailStatus'
        verbose_name = 'Email Status'
        verbose_name_plural = 'Email Status'
        # keyPrefix = '018'



class EmailTemplate(models.Model):
    name = models.CharField(max_length=80, verbose_name='Email Template Name')
    developer_name = models.CharField(max_length=80, verbose_name='Template Unique Name', default=models.DEFAULTED_ON_CREATE)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='emailtemplate_owner_set')
    folder = models.ForeignKey('Folder', models.DO_NOTHING)  # Reference to tables [Folder, Organization, User]
    folder_name = models.CharField(max_length=256, sf_read_only=models.READ_ONLY, blank=True, null=True)
    brand_template = models.ForeignKey(BrandTemplate, models.DO_NOTHING, blank=True, null=True)
    enhanced_letterhead = models.ForeignKey('EnhancedLetterhead', models.DO_NOTHING, blank=True, null=True)
    template_style = models.CharField(max_length=40, verbose_name='Style', sf_read_only=models.NOT_UPDATEABLE, choices=[('none', 'No Email Layout'), ('freeForm', 'Free Form Letter'), ('formalLetter', 'Formal Letter'), ('promotionRight', 'Promotion (Right)'), ('promotionLeft', 'Promotion (Left)'), ('newsletter', 'Newsletter'), ('products', 'Products')])
    is_active = models.BooleanField(verbose_name='Available For Use', default=models.DefaultedOnCreate(False))
    template_type = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('text', 'Text'), ('html', 'HTML'), ('custom', 'Custom'), ('visualforce', 'Visualforce')])
    encoding = models.CharField(max_length=40, choices=[('UTF-8', 'Unicode (UTF-8)'), ('ISO-8859-1', 'General US & Western Europe (ISO-8859-1, ISO-LATIN-1)'), ('Shift_JIS', 'Japanese (Shift-JIS)'), ('ISO-2022-JP', 'Japanese (JIS)'), ('EUC-JP', 'Japanese (EUC)'), ('ks_c_5601-1987', 'Korean (ks_c_5601-1987)'), ('Big5', 'Traditional Chinese (Big5)'), ('GB2312', 'Simplified Chinese (GB2312)'), ('Big5-HKSCS', 'Traditional Chinese Hong Kong (Big5-HKSCS)'), ('x-SJIS_0213', 'Japanese (Shift-JIS_2004)')], blank=True, null=True)
    description = models.CharField(max_length=4000, blank=True, null=True)
    subject = models.CharField(max_length=255, blank=True, null=True)
    html_value = models.TextField(verbose_name='HTML Value', blank=True, null=True)
    body = models.TextField(verbose_name='Email Body', blank=True, null=True)
    times_used = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_used_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailtemplate_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='emailtemplate_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    api_version = models.DecimalField(max_digits=18, decimal_places=1, verbose_name='API Version', blank=True, null=True)
    markup = models.TextField(blank=True, null=True)
    ui_type = models.CharField(max_length=40, verbose_name='UI Type', default=models.DEFAULTED_ON_CREATE, choices=[('Aloha', 'Aloha'), ('SFX', 'SFX'), ('SFX_Sample', 'SFXSample')], blank=True, null=True)
    related_entity_type = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', choices=[('AcceptedEventRelation', None), ('AcceptedRecommendation', None), ('Account', None), ('AccountPartner', None), ('AccountTeamMember', None), ('ActionLink', None), ('ActionLinkGroup', None), ('ActionLinkGroupAssoc', None), ('ActionLinkTemplateBinding', None), ('ActionLinkUserState', None), ('Activity', None), ('ActivityEngagementRollup', None), ('ActivityHistory', None), ('ActivityRecurrence2', None), ('ActivityRecurrence2Exception', None), ('ActivityRelation', None), ('AddressableEventInterface', None), ('AgentWork', None), ('AggregateResult', None), ('AnalyticAction', None), ('AnalyticActionConfiguration', None), ('AnalyticCondition', None), ('AnalyticNotification', None), ('AnalyticRecordUserAccess', None), ('AnalyticThreshold', None), ('Announcement', None), ('ApexTestQueueItem', None), ('AssistantInteraction', None), ('AssistantProgress', None), ('AssistantRecommendation', None), ('AsyncApexJob', None), ('AsyncApiBatch', None), ('AsyncApiJob', None), ('AsyncApiQueryResult', None), ('AttachedContentDocument', None), ('Attachment', None), ('AudienceMembership', None), ('Auditable', None), ('AvroSchema', None), ('BackgroundOperation', None), ('BaseEventInterface', None), ('BaseEventPackageInterface', None), ('BaseSessionInterface', None), ('BulkDedupeOperation', None), ('CalendarModel', None), ('CalendarView', None), ('CanvasFeedItem', None), ('CaseEscalation', None), ('ChatterConversation', None), ('ChatterConversationMember', None), ('ChatterExtensionInstance', None), ('ChatterMessage', None), ('ChatterMessageThread', None), ('CleanActivityLog', None), ('CleanEntityError', None), ('CleanInfo', None), ('CollaborationGroup', None), ('CollaborationGroupMember', None), ('CollaborationGroupMemberRequest', None), ('CollaborationGroupRank', None), ('CollaborationGroupRecord', None), ('CollaborationInvitation', None), ('CollaborativeFilteringItem_to_Item', None), ('CollaborativeFilteringItem2Item', None), ('CombinedAttachment', None), ('CommerceIntegrationEvent', None), ('CommerceIntegrationResponse', None), ('CommunityIqCtrMetric', None), ('ComponentResponseCache', None), ('ConferenceNumber', None), ('ContentBody', None), ('ContentDistribution', None), ('ContentDistributionView', None), ('ContentDocument', None), ('ContentDocumentLink', None), ('ContentDocumentSubscription', None), ('ContentExternalStorage', None), ('ContentFolder', None), ('ContentFolderDistribution', None), ('ContentFolderItem', None), ('ContentFolderLink', None), ('ContentFolderMember', None), ('ContentNote', None), ('ContentNotification', None), ('ContentNotificationParam', None), ('ContentReference', None), ('ContentVersion', None), ('ContentVersionComment', None), ('ContentVersionMap', None), ('ContentVersionRating', None), ('ContentVersionRenditionContent', None), ('ContentVersionTagName', None), ('ContentWorkspaceDoc', None), ('ContentWorkspaceRecentEvent', None), ('Dashboard', None), ('DashboardComponent', None), ('DashboardFilter', None), ('DashboardFilterItem', None), ('DashboardFilterRepCol', None), ('DataAssessmentFieldMetric', None), ('DataAssessmentMetric', None), ('DataAssessmentValueMetric', None), ('DataExportEventInterface', None), ('DBCThumbnail', None), ('DBCThumbnailFilter', None), ('DeclinedEventRelation', None), ('DeflectionSignal', None), ('DeleteEvent', None), ('DirectMessage', None), ('DirectMessageMember', None), ('DirectMessageMemberActivity', None), ('DuplicateErrorLog', None), ('DuplicateJob', None), ('DuplicateJobMatchingRule', None), ('EmailStatus', None), ('Endorsement', None), ('EnhancedLetterhead', None), ('EntityBlacklist', None), ('EntityEventInterface', None), ('EntityHistory', None), ('EntityLock', None), ('EntitySubscription', None), ('Event', None), ('EventAssociationItem', None), ('EventAttendee', None), ('EventComments', None), ('EventDeliveryData', None), ('EventRecurrenceException', None), ('EventRelation', None), ('EventSubscriptionData', None), ('EventSubscriptionHandleData', None), ('EventWhoRelation', None), ('ExchangeUserMapping', None), ('ExternalCredential', None), ('ExternalEvent', None), ('ExternalEventMapping', None), ('ExternalServiceDataType', None), ('FeedActionState', None), ('FeedAttachment', None), ('FeedChannel', None), ('FeedChannelSubscription', None), ('FeedClumpInfo', None), ('FeedClumpMapping', None), ('FeedComment', None), ('FeedCrossReference', None), ('FeedEntry', None), ('FeedFavorite', None), ('FeedItem', None), ('FeedLike', None), ('FeedMute', None), ('FeedPollChoice', None), ('FeedPollVote', None), ('FeedPost', None), ('FeedRecommendationInfo', None), ('FeedRevision', None), ('FeedSignal', None), ('FeedTrackedChange', None), ('FileSearchActivity', None), ('FlowExecutionEventMetric', None), ('FlowInterview', None), ('FlowStageRelation', None), ('FolderedContentDocument', None), ('ForecastingAdjustment', None), ('ForecastingCompositeKey', None), ('ForecastingItem', None), ('ForecastingOwnerAdjustment', None), ('ForecastingQuota', None), ('ForecastShare', None), ('FTestGenBodyInterface', None), ('FTestGenInterface', None), ('GenericContentFolder', None), ('GenericContentFolderItem', None), ('GenericContentFolderMember', None), ('GroupSubscription', None), ('HammerResultStatus', None), ('InboundSocialPost', None), ('IncrementalCandidate', None), ('InstalledMobileApp', None), ('InteractionCountReport', None), ('JigsawSavedSearch', None), ('KnowledgeableUser', None), ('KnowledgeArticleHistory', None), ('KnowledgeKeywordSearchHistory', None), ('KnowledgeSearchEventHistory', None), ('KnowledgeViewEventHistory', None), ('KnowledgeVoteEventHistory', None), ('LinkedArticle', None), ('LinkedInLeadGen', None), ('LinkReference', None), ('ListEmail', None), ('ListEmailRecipientSource', None), ('ListEmailSentResult', None), ('LiveChatFileToken', None), ('LookedUpFromActivity', None), ('MailAssociationItem', None), ('ManagedContent', None), ('ManagedContentChannel', None), ('ManagedContentFolderLink', None), ('ManagedContentFolderMember', None), ('ManagedContentNode', None), ('ManagedContentNodeRendition', None), ('ManagedContentSpace', None), ('ManagedContentSpaceFolder', None), ('ManagedContentSpaceFolderMember', None), ('ManagedContentSpaceMember', None), ('ManagedContentVersion', None), ('ManagedTopicLocation', None), ('MatchingInformation', None), ('MaterializedFeedEntry', None), ('MetadataContainerMember', None), ('MetadataContainerMemberWithBinaryBody', None), ('MetadataContainerMemberWithBody', None), ('MetadataContainerMemberWithSymbolTable', None), ('MobileEvent', None), ('MobileMarkedRecord', None), ('MultiCurrency', None), ('Name', None), ('Nameable', None), ('NameUnion', None), ('NetworkActivityAudit', None), ('NetworkDiscoverableLogin', None), ('NetworkModeration', None), ('NetworkSearchQueryFrequency', None), ('NetworkSelfRegistration', None), ('NetworkUserHistoryRecent', None), ('NewsFeed', None), ('Note', None), ('NoteAndAttachment', None), ('NotifDeliveryUserPref', None), ('NotificationMember', None), ('OpenActivity', None), ('OwnedContentDocument', None), ('PaymentIdempotent', None), ('PendingServiceRouting', None), ('PersonalizationResource', None), ('PersonalizedUnswdQuestion', None), ('Photo', None), ('PhotoItem', None), ('PortalAccount', None), ('Pricebook2Old', None), ('ProcessInstance', None), ('ProcessInstanceHistory', None), ('ProcessInstanceNode', None), ('ProcessInstanceStep', None), ('ProcessInstanceWorkitem', None), ('PromptAction', None), ('ProposedEventResponse', None), ('ProposedEventTime', None), ('PublishableEntity', None), ('PushIntent', None), ('PushProfileMapping', None), ('Recommendation', None), ('RecommendationAudience', None), ('RecommendationDefinition', None), ('RecommendationMetric', None), ('RecommendationSimilarity', None), ('RecordAction', None), ('RecordOrigin', None), ('RecordUserAccessInterface', None), ('Renderer', None), ('Report', None), ('ReportAggregate', None), ('ReportBlock', None), ('ReportBlockAggregate', None), ('ReportBreak', None), ('ReportBucketField', None), ('ReportBucketFieldSourceValue', None), ('ReportBucketFieldValue', None), ('ReportChart', None), ('ReportColorRange', None), ('ReportColumn', None), ('ReportFilterItem', None), ('ReportJobRun', None), ('ReportJobRunError', None), ('ReportObjectFilterItem', None), ('ReportParam', None), ('ReportResultBlob', None), ('ReportRunTracker', None), ('S2XContactMap', None), ('S2XEventMap', None), ('S2XEventRecordMap', None), ('S2XEventTxnProps', None), ('S2XRecordMap', None), ('S2XSandmanError', None), ('S2XTransaction', None), ('SalesforceIqSyncFailure', None), ('ScheduledRecommendation', None), ('SearchActivity', None), ('SetupAssistantProgress', None), ('SetupFlowProgress', None), ('ShareInterface', None), ('SiteAsset', None), ('SiteChangelistComponent', None), ('SitePub', None), ('SitePubAsset', None), ('SitePubComponent', None), ('SitePubDomain', None), ('SitePubDomainSite', None), ('SocialPersona', None), ('SoftDeletable', None), ('SyncTransactionLog', None), ('SystemStreamingChannel', None), ('Task', None), ('TaskAssociationItem', None), ('TaskRecurrenceException', None), ('TaskRelation', None), ('TaskWhoRelation', None), ('TempStore', None), ('TodayGoal', None), ('Tombstone', None), ('Topic', None), ('TopicAssignment', None), ('TopicDataCategoryRule', None), ('TopicGroupActivity', None), ('TopicUserActivity', None), ('TopicUserEvent', None), ('TransactionSecurityEventInterface', None), ('TrendingTopic', None), ('UndecidedEventRelation', None), ('UserAppInfo', None), ('UserAppMenuCustomization', None), ('UserEmailPreferredPerson', None), ('UserFeedChannel', None), ('UserMetrics', None), ('UserNavItem', None), ('UserProfileFeed', None), ('UserProvAccount', None), ('UserProvAccountStaging', None), ('UserProvisioningLog', None), ('UserProvisioningRequest', None), ('UserProvMockTarget', None), ('UserRecSummary', None), ('UserServicePresence', None), ('UserSetupAppInfo', None), ('Vote', None), ('VoteStats', None), ('WaveAutoInstallRequest', None), ('WaveCompatibilityCheckItem', None), ('XinstanceInfo', None)], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EmailTemplate'
        verbose_name = 'Email Template'
        verbose_name_plural = 'Email Templates'
        # keyPrefix = '00X'



class EmbeddedServiceDetail(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Embedded Service Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    site = models.CharField(max_length=18, sf_read_only=models.READ_ONLY, blank=True, null=True)
    primary_color = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    secondary_color = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    contrast_primary_color = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    contrast_inverted_color = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    nav_bar_color = models.CharField(max_length=255, verbose_name='NavBar Color', sf_read_only=models.READ_ONLY, blank=True, null=True)
    font = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_live_agent_enabled = models.BooleanField(verbose_name='Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_field_service_enabled = models.BooleanField(verbose_name='Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    width = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    height = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_prechat_enabled = models.BooleanField(verbose_name='Pre-Chat Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    custom_prechat_component = models.CharField(max_length=18, verbose_name='Custom Prechat Component Developer Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    avatar_img = models.CharField(max_length=255, verbose_name='Avatar Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    small_company_logo_img = models.CharField(max_length=255, verbose_name='Small Company Logo Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    prechat_background_img = models.CharField(max_length=255, verbose_name='Prechat Background Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    waiting_state_background_img = models.CharField(max_length=255, verbose_name='Waiting State Background Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    header_background_img = models.CharField(max_length=255, verbose_name='Header Background Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    font_size = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Small', None), ('Medium', None), ('Large', None)], blank=True, null=True)
    offline_case_background_img = models.CharField(max_length=255, verbose_name='Offline Case Background Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_offline_case_enabled = models.BooleanField(verbose_name='Offline Case Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_queue_position_enabled = models.BooleanField(verbose_name='Queue Position Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    should_show_new_appointment = models.BooleanField(verbose_name='Show New Appointment', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    should_show_existing_appointment = models.BooleanField(verbose_name='Show Existing Appointment', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    field_service_home_img = models.CharField(max_length=255, verbose_name='Field Service Home Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    field_service_logo_img = models.CharField(max_length=255, verbose_name='Field Service Logo Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    field_service_confirm_card_img = models.CharField(max_length=255, verbose_name='Field Service Confirmation Card Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    should_hide_auth_dialog = models.BooleanField(verbose_name='Hide Authentication Dialog', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    custom_minimized_component = models.CharField(max_length=18, verbose_name='Custom Minimized Component Developer Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EmbeddedServiceDetail'
        verbose_name = 'Embedded Service'
        verbose_name_plural = 'Embedded Services'
        # keyPrefix = '0Lq'



class EmbeddedServiceLabel(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Embedded Service Label Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    embedded_service_config_developer_name = models.CharField(max_length=80, verbose_name=' Embedded Service Config Developer Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    label_key = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('LA_Container_Base_Close', None), ('LA_Container_Base_Minimize', None), ('LA_Container_Base_EndOfDialog', None), ('LA_Container_Base_MinimizedContainerAssistiveText', None), ('LA_Chat_Body_ChatWindowAgent', None), ('LA_Chat_Body_InputTextPlaceholder', None), ('LA_Chat_Body_AgentTypingUpdate', None), ('LA_Chat_Body_Send', None), ('LA_Chat_Body_ChatStartTime', None), ('LA_Chat_Body_MessageAreaTransferred', None), ('LA_Chat_Body_FileTransferCanceled', None), ('LA_Chat_Body_FileTransferSuccess', None), ('LA_Chat_Body_FileTransferFailure', None), ('LA_Chat_Body_FileTransferRequested', None), ('LA_Chat_Body_TransferFailed', None), ('LA_Chat_ExtendedHeader_ShowExtendedHeader', None), ('LA_Chat_ExtendedHeader_HideExtendedHeader', None), ('LA_Chat_ExtendedHeader_ChatStateHeaderGreeting', None), ('LA_Chat_ExtendedHeader_SaveTranscript', None), ('LA_Chat_ExtendedHeader_EndChatAction', None), ('LA_Chat_FileTransfer_FileUpload', None), ('LA_Chat_FileTransfer_UploadFile', None), ('LA_Chat_FileTransfer_SelectNewFile', None), ('LA_Chat_FileTransfer_UsePreviousElementToUploadFile', None), ('LA_Chat_FileTransfer_RemoveFile', None), ('LA_Chat_Minimized_MessageNotification', None), ('LA_Chat_Minimized_SingleMessageNotification', None), ('LA_Chat_Minimized_AgentSaysNotification', None), ('LA_Chat_Minimized_IdleTimeoutMinimizedWarning', None), ('LA_Chat_Minimized_IdleTimeoutMinimizedEndChat', None), ('LA_Chat_Ended_ChatEnd', None), ('LA_Chat_Ended_ChatEndAgent', None), ('LA_Chat_Ended_ChatEndConnection', None), ('LA_Chat_Ended_ChatButtonClose', None), ('LA_Chat_Ended_PostChatButton', None), ('LA_Chat_Ended_IdleTimeoutEndChatMessage', None), ('LA_Chat_Reconnecting_ReconnectingChasitorIssue', None), ('LA_Chat_Reconnecting_ReconnectingMinimizedMessage', None), ('LA_Chat_Timeout_IdleTimeoutWarningQuestion', None), ('LA_Chat_AgentTransfer_BannerInProgressTransfer', None), ('LA_Chat_AgentTransfer_MinimizedInProgressTransfer', None), ('LA_Chat_AgentTransfer_BannerTransferred', None), ('LA_Chat_AgentTransfer_BannerReconnected', None), ('LA_Chat_CloseConfirmation_ChatStateHeader', None), ('LA_Chat_CloseConfirmation_ChatStateBody', None), ('LA_Chat_CloseConfirmation_ChatStateResume', None), ('LA_Chat_CloseConfirmation_ChatStateEnd', None), ('LA_Chat_UnseenMessage_UnseenMessage', None), ('LA_Chat_UnseenMessage_SingleUnseenMessage', None), ('LA_OfflineSupport_SupportForm_HeaderText', None), ('LA_OfflineSupport_Error_ErrorDialogTitle', None), ('LA_OfflineSupport_Error_ErrorDialogBody', None), ('LA_OfflineSupport_Error_ErrorDialogButton', None), ('LA_OfflineSupport_SupportForm_SupportFormTitle', None), ('LA_OfflineSupport_SupportForm_SupportFormSubtitle', None), ('LA_OfflineSupport_SupportForm_SupportFormButton', None), ('LA_OfflineSupport_SupportForm_BannerAltText', None), ('LA_OfflineSupport_CloseConfirmation_ConfirmationDialogTitle', None), ('LA_OfflineSupport_CloseConfirmation_ConfirmationDialogBody', None), ('LA_OfflineSupport_CloseConfirmation_ConfirmationDialogButton', None), ('LA_OfflineSupport_Minimized_ConfirmationMinimizedText', None), ('LA_OfflineSupport_Minimized_ErrorMinimizedText', None), ('LA_PostChat_Base_PostChat', None), ('LA_PreChat_Base_LiveChat', None), ('LA_PreChat_Base_Instructions', None), ('LA_PreChat_Base_BannerAltText', None), ('LA_PreChat_Base_PrechatAssistiveText', None), ('LA_PreChat_Base_StartChat', None), ('LA_PreChat_Base_FieldError', None), ('LA_Waiting_WithoutQueuePos_WaitingGreeting', None), ('LA_Waiting_WithoutQueuePos_WaitingDefaultName', None), ('LA_Waiting_WithoutQueuePos_WaitingMessage', None), ('LA_Waiting_WithoutQueuePos_WaitingCancelChatRequest', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosMessageFirstLine', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosMessageSecondLine', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosZeroMessage', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosConnectingMessage', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosMaxNumber', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosMaxMessageFirstLine', None), ('LA_Waiting_WithQueuePos_WaitingQueuePosMaxMessageSecondLine', None), ('LA_Waiting_Minimized_MinimizedWaitingMessage', None), ('LA_Waiting_Minimized_MinimizedQueuePosMessage', None), ('LA_Waiting_Minimized_MinimizedQueuePosZeroMessage', None), ('LA_Waiting_Minimized_MinimizedQueuePosAssistiveMessage', None), ('LA_Waiting_Minimized_MinimizedQueuePosZeroAssistiveMessage', None), ('LA_Waiting_Error_ErrorNoAgentTitle', None), ('LA_Waiting_Error_ErrorNoAgentHeader', None), ('LA_Waiting_Error_ErrorNoAgentBodyApology', None), ('LA_Waiting_Error_ErrorBlockedTitleAndHeader', None), ('LA_Waiting_Error_ErrorBlockedBody', None), ('LA_Waiting_Error_ErrorBlockedCloseButton', None), ('LA_Waiting_Error_ErrorNoConnectionTitle', None), ('LA_Waiting_Error_ErrorNoConnectionHeader', None), ('LA_Waiting_Error_ErrorNoConnectionBodyApology', None), ('LA_Waiting_Error_ErrorTryAgainButton', None), ('LA_Waiting_Error_ErrorExitChatButton', None), ('LA_Waiting_CloseConfirmation_WaitingStateHeader', None), ('LA_Waiting_CloseConfirmation_WaitingStateBodyApology', None), ('LA_Waiting_CloseConfirmation_WaitingStateLeave', None), ('LA_Waiting_CloseConfirmation_WaitingStateContinue', None), ('LA_Chat_Timeout_IdleTimeoutWarningRequest', None), ('LA_Waiting_Error_ErrorNoAgentBodyRequest', None), ('LA_Waiting_Error_ErrorNoConnectionBodyRequest', None), ('LA_Waiting_CloseConfirmation_WaitingStateBodyWarning', None), ('LA_General_CloseSessionWarningTitle', None), ('LA_General_CloseSessionWarningBody', None), ('LA_General_CloseSessionWarningButton', None), ('LA_Chat_Body_ChooseOption', None), ('LA_Waiting_Base_BannerAssistiveText', None), ('LA_Chat_Group_Chat_HeaderTitle', None), ('LA_Chat_Group_Chat_ExtendedHeaderGreeting', None), ('LA_Chat_Group_Chat_AgentJoinedChat', None), ('LA_Chat_Group_Chat_AgentLeftChat', None), ('LA_Chat_Group_Chat_MinimizedStateMessage', None), ('LA_Chat_WithQueuePos_QueuePosTransferringMessage', None), ('LA_Chat_Ended_ChatEndChatbot', None), ('LA_Chat_Body_InputTextAssistiveText', None), ('FS_Container_Base_Back', None), ('FS_Container_AuthenticationFailure_Title', None), ('FS_Container_AuthenticationFailure_Body', None), ('FS_Container_AuthenticationFailure_Button', None), ('FS_AppointmentDetail_Error_AccessDenied', None), ('FS_AppointmentDetail_Error_NoAppointmentFound', None), ('FS_AppointmentDetail_Error_ButtonOK', None), ('FS_AppointmentList_Base_ActiveAppointmentTab', None), ('FS_AppointmentList_Base_ClosedAppointmentTab', None), ('FS_AppointmentList_Base_Header', None), ('FS_AppointmentList_Base_NewAppointmentButtonLabel', None), ('FS_AppointmentList_Error_GenericErrorStatement', None), ('FS_AppointmentList_Empty_NoAppointmentsTitleUpcomingTab', None), ('FS_AppointmentList_Empty_NoAppointmentsDescriptionUpcomingTab', None), ('FS_AppointmentList_Empty_NoAppointmentsTitlePastTab', None), ('FS_AppointmentList_Empty_NoAppointmentsDescriptionPastTab', None), ('FS_Confirmation_Base_Scheduled', None), ('FS_Confirmation_Base_Assigned', None), ('FS_Confirmation_Base_Arriving', None), ('FS_Confirmation_Base_InProgress', None), ('FS_Confirmation_Base_Dispatched', None), ('FS_Confirmation_Base_Completed', None), ('FS_Confirmation_Base_HeaderText', None), ('FS_Confirmation_Base_AddCalendar', None), ('FS_Confirmation_Base_ViewAppointment', None), ('FS_Flows_Error_Title', None), ('FS_Flows_Error_Body', None), ('FS_Flows_Error_ConfirmButton', None), ('FS_Flows_Error_CancelOrModifyError', None), ('FS_Flows_NewAppointmentCloseConfirmation_Title', None), ('FS_Flows_NewAppointmentCloseConfirmation_Body', None), ('FS_Flows_NewAppointmentCloseConfirmation_ButtonClose', None), ('FS_Flows_NewAppointmentCloseConfirmation_ButtonCancel', None), ('FS_Flows_CancelAppointmentCloseConfirmation_Title', None), ('FS_Flows_CancelAppointmentCloseConfirmation_Body', None), ('FS_Flows_CancelAppointmentCloseConfirmation_ButtonClose', None), ('FS_Flows_CancelAppointmentCloseConfirmation_ButtonCancel', None), ('FS_Flows_CancelAppointmentCloseConfirmation_Footer', None), ('FS_Flows_ModifyAppointmentCloseConfirmation_Title', None), ('FS_Flows_ModifyAppointmentCloseConfirmation_Body', None), ('FS_Flows_ModifyAppointmentCloseConfirmation_ButtonClose', None), ('FS_Flows_ModifyAppointmentCloseConfirmation_ButtonCancel', None), ('FS_Flows_ModifyAppointmentCloseConfirmation_Footer', None), ('FS_Scheduling_Base_HeaderText', None), ('FS_Scheduling_Base_RecommendedTab', None), ('FS_Scheduling_Base_ByDateTab', None), ('FS_Scheduling_Base_PreviousWeekAssistiveText', None), ('FS_Scheduling_Base_NextWeekAssistiveText', None), ('FS_Scheduling_Base_DatePickerAssistiveText', None), ('FS_Scheduling_Error_UnexpectedError', None), ('FS_Scheduling_Error_NoAvailableTimeslotsError', None), ('FS_Scheduling_Error_NoAvailableTimeslotsByDateError', None), ('FS_Welcome_Base_GreetingTitle', None), ('FS_Welcome_Base_NewAppointmentButton', None), ('FS_Welcome_Base_ExistingAppointmentsButton', None), ('FS_Confirmation_Base_DoneButton', None), ('FS_AppointmentList_Error_GenericErrorRequest', None), ('FS_AppointmentHome_Base_CancelAppointmentButton', None), ('FS_AppointmentHome_Base_ModifyAppointmentButton', None), ('FS_AppointmentHome_Base_ErrorTitle', None), ('FS_Scheduling_Base_TimePickerAssistiveText', None), ('FS_ResourceDetail_Base_Header', None), ('FS_AppointmentHome_Base_DefaultCardHeaderText', None), ('FS_Error_Dialog_Title', None), ('FS_Error_Dialog_Body', None), ('FS_Error_Dialog_Confirm_Button', None), ('CM_Container_Header_Primary_Greeting', None), ('CM_Container_Header_Secondary_Greeting', None), ('CM_Container_MenuItems_WebChatAvailable', None), ('CM_Container_MenuItems_WebChatUnavailable', None), ('CM_Container_MenuItems_WebChatLoading', None), ('CM_Container_MenuItems_ChannelLabel', None), ('CM_Container_Button_AssistiveText', None)], blank=True, null=True)
    custom_label_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EmbeddedServiceLabel'
        verbose_name = 'Embedded Service Label'
        verbose_name_plural = 'Embedded Service Labels'
        # keyPrefix = '0Uu'



class EnhancedLetterhead(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='enhancedletterhead_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='enhancedletterhead_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    letterhead_header = models.TextField(verbose_name='Header', sf_read_only=models.READ_ONLY, blank=True, null=True)
    letterhead_footer = models.TextField(verbose_name='Footer', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EnhancedLetterhead'
        verbose_name = 'Enhanced Letterhead'
        verbose_name_plural = 'Enhanced Letterheads'
        # keyPrefix = '0Rn'



class EnhancedLetterheadFeed(models.Model):
    parent = models.ForeignKey(EnhancedLetterhead, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='enhancedletterheadfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='enhancedletterheadfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EnhancedLetterheadFeed'
        verbose_name = 'Enhanced Letterhead Feed'
        verbose_name_plural = 'Enhanced Letterhead Feed'
        # keyPrefix = 'None'



class EntitlementTemplate(models.Model):
    name = models.CharField(max_length=120, verbose_name='Entitlement Template Name', sf_read_only=models.READ_ONLY)
    business_hours = models.ForeignKey(BusinessHours, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Phone Support'), choices=[('Phone Support', 'Phone Support'), ('Web Support', 'Web Support')], blank=True, null=True)
    sla_process = models.ForeignKey('SlaProcess', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_per_incident = models.BooleanField(verbose_name='Per Incident', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    cases_per_entitlement = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    term = models.IntegerField(verbose_name='Term (Days)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='entitlementtemplate_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='entitlementtemplate_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EntitlementTemplate'
        verbose_name = 'Entitlement Template'
        verbose_name_plural = 'Entitlement Template'
        # keyPrefix = '551'



class EntityDefinition(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    qualified_api_name = models.CharField(max_length=70, verbose_name='Qualified API Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    master_label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    plural_label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    default_compact_layout_id = models.CharField(max_length=70, verbose_name='Compact Layout ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_customizable = models.BooleanField(verbose_name='Is Customizable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_apex_triggerable = models.BooleanField(verbose_name='Is Apex Triggerable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_workflow_enabled = models.BooleanField(verbose_name='Is Workflow Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_process_enabled = models.BooleanField(verbose_name='Is Approval Process Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_compact_layoutable = models.BooleanField(verbose_name='Is Compact Layout Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    deployment_status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('InDevelopment', None), ('Deployed', None)], blank=True, null=True)
    key_prefix = models.CharField(max_length=3, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_custom_setting = models.BooleanField(verbose_name='Is Custom Setting?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deprecated_and_hidden = models.BooleanField(verbose_name='Is Deprecated And Hidden?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_replicateable = models.BooleanField(verbose_name='Is Replicateable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_retrieveable = models.BooleanField(verbose_name='Is Retrieveable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_search_layoutable = models.BooleanField(verbose_name='Is Search Layoutable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_searchable = models.BooleanField(verbose_name='Is Searchable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_triggerable = models.BooleanField(verbose_name='Is Triggerable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_id_enabled = models.BooleanField(verbose_name='Is Id Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_ever_creatable = models.BooleanField(verbose_name='Is Ever Creatable via API?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_ever_updatable = models.BooleanField(verbose_name='Is Ever Updatable via API?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_ever_deletable = models.BooleanField(verbose_name='Is Ever Deletable via API?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_feed_enabled = models.BooleanField(verbose_name='Is Feed Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_queryable = models.BooleanField(verbose_name='Queryable', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_mru_enabled = models.BooleanField(verbose_name='Is MRU List Functionality Enabled for This Object?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    detail_url = models.URLField(verbose_name='Detail URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    edit_url = models.URLField(verbose_name='Edit URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_url = models.URLField(verbose_name='New URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    edit_definition_url = models.URLField(verbose_name='Edit Definition URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    help_setting_page_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    help_setting_page_url = models.URLField(verbose_name='Help Setting Page URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    running_user_entity_access_id = models.CharField(max_length=150, verbose_name='User Entity Access ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    publisher_id = models.CharField(max_length=70, verbose_name='Publisher ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_layoutable = models.BooleanField(verbose_name='Is Layout Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    record_types_supported = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    internal_sharing_model = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByLeadOrContact', 'ControlledByLeadOrContact'), ('ControlledByCampaign', 'ControlledByCampaign')])
    external_sharing_model = models.CharField(max_length=255, verbose_name='External sharing Model', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByLeadOrContact', 'ControlledByLeadOrContact'), ('ControlledByCampaign', 'ControlledByCampaign')])
    has_subtypes = models.BooleanField(verbose_name='Has Subtypes?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_subtype = models.BooleanField(verbose_name='Is Subtype?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_auto_activity_capture_enabled = models.BooleanField(verbose_name='Is Einstein Activity Capture Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'EntityDefinition'
        verbose_name = 'Entity Definition'
        verbose_name_plural = 'Entity Definitions'
        # keyPrefix = '4ie'



class EntityParticle(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    qualified_api_name = models.CharField(max_length=70, verbose_name='Qualified API Name', sf_read_only=models.READ_ONLY)
    entity_definition_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    field_definition_id = models.CharField(max_length=70, verbose_name='Field Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    master_label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    data_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    service_data_type_id = models.CharField(max_length=70, verbose_name='Data Type ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    value_type_id = models.CharField(max_length=70, verbose_name='Data Type ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    extra_type_info = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_autonumber = models.BooleanField(verbose_name='Is Field an Autonumber?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    byte_length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_case_sensitive = models.BooleanField(verbose_name='Is Field Case Sensitive?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_unique = models.BooleanField(verbose_name='Is Field Unique?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_creatable = models.BooleanField(verbose_name='Is Field Creatable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_updatable = models.BooleanField(verbose_name='Is Field Updatable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_defaulted_on_create = models.BooleanField(verbose_name='Is Field Defaulted On Create?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_write_requires_master_read = models.BooleanField(verbose_name='Does Write Require Master Read?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_calculated = models.BooleanField(verbose_name='Is Field calculated?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_high_scale_number = models.BooleanField(verbose_name='Is Field a high scale number?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_html_formatted = models.BooleanField(verbose_name='Is Field a HTML formatted?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_name_field = models.BooleanField(verbose_name='Is Field a Name field?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_nillable = models.BooleanField(verbose_name='Is Field a nillable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_permissionable = models.BooleanField(verbose_name='Is Field Permissionable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_encrypted = models.BooleanField(verbose_name='Is Field Encrypted?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    digits = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    inline_help_text = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    relationship_name = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    reference_target_field = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    mask = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    mask_type = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_workflow_filterable = models.BooleanField(verbose_name='Is Workflow Filterable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_compact_layoutable = models.BooleanField(verbose_name='Is Compact Layout Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    precision = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    scale = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_field_history_tracked = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_api_filterable = models.BooleanField(verbose_name='Is Field Filterable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_api_sortable = models.BooleanField(verbose_name='Is Field Sortable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_api_groupable = models.BooleanField(verbose_name='Is Field Groupable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_list_visible = models.BooleanField(verbose_name='Is Field visible in Lists?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_layoutable = models.BooleanField(verbose_name='Is Layout Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_dependent_picklist = models.BooleanField(verbose_name='Is Field a Dependent Picklist?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deprecated_and_hidden = models.BooleanField(verbose_name='Is Field a Deprecated and Hidden?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_display_location_in_decimal = models.BooleanField(verbose_name='Is Field Displays Location in Decimals?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    default_value_formula = models.CharField(max_length=150, verbose_name='Default Value if Formula is Not Used', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_id_lookup = models.BooleanField(verbose_name='Can this Field be Used to Specify a Record in Upsert?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_name_pointing = models.BooleanField(verbose_name='Does this Field Contain the Name of the Parent?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    relationship_order = models.IntegerField(verbose_name='Type of Relationship for a Master-Detail Relationship', sf_read_only=models.READ_ONLY, blank=True, null=True)
    reference_to = models.TextField(verbose_name='Entities Referenced by Relationship', sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    is_component = models.BooleanField(verbose_name='Is Field a component of a compound field', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_compound = models.BooleanField(verbose_name='Is Field a compound field', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'EntityParticle'
        verbose_name = 'Entity Particle'
        verbose_name_plural = 'Entity Particles'
        # keyPrefix = '0Nv'



class EntitySubscription(models.Model):
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Account, CollaborationGroup, ContentDocument, Dashboard, DashboardComponent, EnhancedLetterhead, Event, Knowledge__ka, LinkedArticle, Report, Site, Task, Topic, User] Master Detail Relationship *
    subscriber = models.ForeignKey('User', models.DO_NOTHING, related_name='entitysubscription_subscriber_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='entitysubscription_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EntitySubscription'
        verbose_name = 'Entity Subscription'
        verbose_name_plural = 'Entity Subscriptions'
        # keyPrefix = '0E8'



class Event(models.Model):
    what = models.ForeignKey(Account, models.DO_NOTHING, related_name='event_what_set', blank=True, null=True)  # Reference to tables [Account, ListEmail] Master Detail Relationship *
    subject = models.CharField(max_length=255, choices=[('Call', 'Call'), ('Email', 'Email'), ('Meeting', 'Meeting'), ('Send Letter', 'Send Letter'), ('Send Quote', 'Send Quote'), ('Pending Item', 'Pending Item'), ('After Payroll Solutions', 'After Payroll Solutions'), ('Audit', 'Audit'), ('Client Training', 'Client Training'), ('Specialized Training', 'Specialized Training'), ('Service Hand-Off', 'Service Hand-Off'), ('Other', 'Other')], blank=True, null=True)
    location = models.CharField(max_length=255, blank=True, null=True)
    is_all_day_event = models.BooleanField(verbose_name='All-Day Event', default=models.DefaultedOnCreate(False))
    activity_date_time = models.DateTimeField(verbose_name='Due Date Time', blank=True, null=True)
    activity_date = models.DateField(verbose_name='Due Date Only', blank=True, null=True)
    duration_in_minutes = models.IntegerField(verbose_name='Duration', blank=True, null=True)
    start_date_time = models.DateTimeField(blank=True, null=True)
    end_date_time = models.DateTimeField(blank=True, null=True)
    end_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(blank=True, null=True)
    account = models.ForeignKey(Account, models.DO_NOTHING, related_name='event_account_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey(Calendar, models.DO_NOTHING)  # Reference to tables [Calendar, User]
    type = models.CharField(max_length=40, default=models.DefaultedOnCreate('Other'), choices=[('Agent BMALL Visit', 'Agent BMALL Visit'), ('BDM Meeting', 'BDM Meeting'), ('Call', 'Call'), ('Client Visit', 'Client Visit'), ('Cold Call', 'Cold Call'), ('Drop Information', 'Drop Information'), ('Email', 'Email'), ('Established Partner Meeting', 'Established Partner Meeting'), ('Fax', 'Fax'), ('First Meeting', 'First Meeting'), ('Follow-up', 'Follow-up'), ('General Meeting', 'General Meeting'), ('Open Enrollment Meeting', 'Open Enrollment Meeting'), ('Other', 'Other'), ('Product Demo', 'Product Demo'), ('Proposal Meeting', 'Proposal Meeting'), ('Q2E internal training', 'Q2E internal training'), ('Q2E with broker', 'Q2E with broker'), ('Renewal Meeting', 'Renewal Meeting')], blank=True, null=True)
    is_private = models.BooleanField(verbose_name='Private', default=models.DefaultedOnCreate(False))
    show_as = models.CharField(max_length=40, verbose_name='Show Time As', default=models.DefaultedOnCreate('Busy'), choices=[('Busy', 'Busy'), ('OutOfOffice', 'Out of Office'), ('Free', 'Free')], blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_child = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_group_event = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    group_event_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('0'), choices=[('0', 'Non-group Event'), ('1', 'Group Event'), ('2', 'Proposed Event'), ('3', 'IsRecurrence2 Series Pattern')], blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='event_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='event_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_archived = models.BooleanField(verbose_name='Archived', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    recurrence_activity = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_recurrence = models.BooleanField(verbose_name='Create Recurring Series of Events', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    recurrence_start_date_time = models.DateTimeField(verbose_name='Recurrence Start', blank=True, null=True)
    recurrence_end_date_only = models.DateField(verbose_name='Recurrence End', blank=True, null=True)
    recurrence_time_zone_sid_key = models.CharField(max_length=40, verbose_name='Recurrence Time Zone', choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')], blank=True, null=True)
    recurrence_type = models.CharField(max_length=40, choices=[('RecursDaily', 'Recurs Daily'), ('RecursEveryWeekday', 'Recurs Every Weekday'), ('RecursMonthly', 'Recurs Monthly'), ('RecursMonthlyNth', 'Recurs Monthy Nth'), ('RecursWeekly', 'Recurs Weekly'), ('RecursYearly', 'Recurs Yearly'), ('RecursYearlyNth', 'Recurs Yearly Nth')], blank=True, null=True)
    recurrence_interval = models.IntegerField(blank=True, null=True)
    recurrence_day_of_week_mask = models.IntegerField(verbose_name='Recurrence Day of Week Mask', blank=True, null=True)
    recurrence_day_of_month = models.IntegerField(verbose_name='Recurrence Day of Month', blank=True, null=True)
    recurrence_instance = models.CharField(max_length=40, choices=[('First', '1st'), ('Second', '2nd'), ('Third', '3rd'), ('Fourth', '4th'), ('Last', 'last')], blank=True, null=True)
    recurrence_month_of_year = models.CharField(max_length=40, verbose_name='Recurrence Month of Year', choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], blank=True, null=True)
    original_instance_date_time = models.DateTimeField(verbose_name='Original Instance DateTime', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_exception = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_client_managed = models.BooleanField(default=models.DefaultedOnCreate(False))
    client_guid = models.CharField(max_length=255, verbose_name='Client GUID', blank=True, null=True)
    reminder_date_time = models.DateTimeField(verbose_name='Reminder Date/Time', blank=True, null=True)
    is_reminder_set = models.BooleanField(verbose_name='Reminder Set', default=models.DefaultedOnCreate(False))
    event_subtype = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Event', 'Event')], blank=True, null=True)
    is_recurrence2_exclusion = models.BooleanField(verbose_name='Historical Event, Not Following Recurrence', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    recurrence2_pattern_text = models.TextField(verbose_name='Recurrence Pattern', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence2_pattern_version = models.CharField(max_length=40, verbose_name='Pattern Version', sf_read_only=models.READ_ONLY, choices=[('1', 'RFC 5545 v4 RRULE')], blank=True, null=True)
    is_recurrence2 = models.BooleanField(verbose_name='Repeat', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_recurrence2_exception = models.BooleanField(verbose_name='Is Exception', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    recurrence2_pattern_start_date = models.DateTimeField(verbose_name='Recurrence Pattern Start Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence2_pattern_time_zone = models.CharField(max_length=255, verbose_name='Recurrence Pattern Time Zone Reference', sf_read_only=models.READ_ONLY, blank=True, null=True)
    event_outcome = models.CharField(custom=True, db_column='Event_Outcome__c', max_length=255, verbose_name='Event Outcome', sf_read_only=models.READ_ONLY, help_text='Select the value that best describes the outcome of the event.', choices=[('Meeting Completed', 'Meeting Completed'), ('DM No Show', 'DM No Show'), ('Customer Canceled', 'Customer Canceled'), ('Unable to Contact Customer', 'Unable to Contact Customer')], blank=True, null=True)
    activity_type = models.CharField(custom=True, db_column='Activity_Type__c', max_length=255, verbose_name='Activity Type', blank=True, null=True)
    qbdialer_call_recording_url = models.URLField(db_column='qbdialer__CallRecordingURL__c', custom=True, verbose_name='Call Recording', blank=True, null=True) 
    qbdialer_call_date_time = models.DateTimeField(db_column='qbdialer__Call_Date_Time__c', custom=True, verbose_name='Call Date/Time', blank=True, null=True) 
    qbdialer_call_dial_number = models.DecimalField(db_column='qbdialer__Call_Dial_Number__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Dial Number', blank=True, null=True) 
    qbdialer_call_hour = models.CharField(db_column='qbdialer__Call_Hour__c', custom=True, max_length=8, verbose_name='Call Hour', blank=True, null=True) 
    qbdialer_call_lead_status = models.CharField(db_column='qbdialer__Call_Lead_Status__c', custom=True, max_length=40, verbose_name='Call Lead Status', blank=True, null=True) 
    qbdialer_call_ring_time = models.DecimalField(db_column='qbdialer__Call_Ring_Time__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Ring Time', blank=True, null=True) 
    qbdialer_call_time_zone = models.CharField(db_column='qbdialer__Call_Time_Zone__c', custom=True, max_length=20, verbose_name='Call Time Zone', blank=True, null=True) 
    isdc_dialed_phone_number = models.CharField(custom=True, db_column='isdc_dialed_phone_number__c', max_length=40, verbose_name='Phone Dialed', blank=True, null=True)
    isdc_dialer_call_type = models.CharField(custom=True, db_column='isdc_dialer_call_type__c', max_length=255, verbose_name='Dialer Type', choices=[('Click-to-Call', 'Click-to-Call'), ('Seek', 'Seek'), ('Domino', 'Domino')], blank=True, null=True)
    isdc_dialer_list_name = models.CharField(custom=True, db_column='isdc_dialer_list_name__c', max_length=80, verbose_name='List Name', blank=True, null=True)
    isdc_dialer_query_name = models.CharField(custom=True, db_column='isdc_dialer_query_name__c', max_length=80, verbose_name='Query Name', blank=True, null=True)
    task_external_id = models.CharField(custom=True, db_column='Task_External_Id__c', max_length=255, verbose_name='Task External Id', blank=True, null=True)
    event_external_id = models.CharField(custom=True, db_column='Event_External_Id__c', max_length=255, verbose_name='Event External Id', blank=True, null=True)
    telemarketing_call_type = models.CharField(custom=True, db_column='Telemarketing_Call_Type__c', max_length=255, verbose_name='Telemarketing Call Type', choices=[('Contact', 'Contact'), ('Decision Maker', 'Decision Maker'), ('Disconnected Number', 'Disconnected Number'), ('No Answer', 'No Answer'), ('Set Call Back', 'Set Call Back'), ('Set Event', 'Set Event'), ('Voicemail No Message', 'Voicemail No Message'), ('Wrong Number', 'Wrong Number')], blank=True, null=True)
    audit_error_reason = models.CharField(custom=True, db_column='Audit_Error_Reason__c', max_length=255, verbose_name='Audit Error Reason', choices=[('Address Truncated in IBAS', 'Address Truncated in IBAS'), ('Age Change Basis Incorrect', 'Age Change Basis Incorrect'), ('Ancillary', 'Ancillary'), ('App Not Signed', 'App Not Signed'), ('Benefit Amounts - Not added or Incorrect', 'Benefit Amounts - Not added or Incorrect'), ('Benefit Error', 'Benefit Error'), ('BMLL Box Not Checked', 'BMLL Box Not Checked'), ('Carrier Group Number Incorrect', 'Carrier Group Number Incorrect'), ('Carrier Incorrect Case Setup', 'Carrier Incorrect Case Setup'), ('City Incorrect', 'City Incorrect'), ('COB Not Updated', 'COB Not Updated'), ('Cobra Error', 'Cobra Error'), ('Cobra Med Codes', 'Cobra Med Codes'), ('Contact Phone Number Incorrect', 'Contact Phone Number Incorrect'), ('Contract Date/Period Incorrect or Not Updated', 'Contract Date/Period Incorrect or Not Updated'), ('Coverage Code Incorrect', 'Coverage Code Incorrect'), ('Coverage Code Missing', 'Coverage Code Missing'), ('Coverage Codes Not Termed', 'Coverage Codes Not Termed'), ('Coverage Level Incorrect', 'Coverage Level Incorrect'), ('CT # of Apps Field Not Updated or Incorrect', 'CT # of Apps Field Not Updated or Incorrect'), ('CT Date Sent to Audit Field Not Updated', 'CT Date Sent to Audit Field Not Updated'), ('CT Record Not Updated', 'CT Record Not Updated'), ('Date of Birth Incorrect', 'Date of Birth Incorrect'), ('Date of Hire Incorrect', 'Date of Hire Incorrect'), ('Dependent Date of Birth Incorrect', 'Dependent Date of Birth Incorrect'), ('Dependent Enrolled without Student Cert', 'Dependent Enrolled without Student Cert'), ('Dependent Name Misspelled', 'Dependent Name Misspelled'), ('Dependent Not Enrolled or Not Termed', 'Dependent Not Enrolled or Not Termed'), ('Dependent Not Entered', 'Dependent Not Entered'), ('Dependent SSN Incorrect', 'Dependent SSN Incorrect'), ('Domestic Partner Not Updated', 'Domestic Partner Not Updated'), ('Dual Coverage Not Updated', 'Dual Coverage Not Updated'), ('Effective Date Incorrect', 'Effective Date Incorrect'), ('Eligibility Period Incorrect', 'Eligibility Period Incorrect'), ('Employee Not Enrolled', 'Employee Not Enrolled'), ('ER Contributions', 'ER Contributions'), ('Error Removed', 'Error Removed'), ('Gender Incorrect', 'Gender Incorrect'), ('Group Address Not Updated or Incorrect', 'Group Address Not Updated or Incorrect'), ('Group Contact Incorrect', 'Group Contact Incorrect'), ('Group Size Incorrect', 'Group Size Incorrect'), ('HB1057 Box Not Checked', 'HB1057 Box Not Checked'), ('Home Phone Incorrect', 'Home Phone Incorrect'), ('Incorrect Broker Information', 'Incorrect Broker Information'), ('Incorrect Carrier Code', 'Incorrect Carrier Code'), ('Incorrect Class or Class Missing', 'Incorrect Class or Class Missing'), ('Incorrect HB8', 'Incorrect HB8'), ('Incorrect Or Missing Beneficiary', 'Incorrect Or Missing Beneficiary'), ('Incorrect or Misspelled Group Name', 'Incorrect or Misspelled Group Name'), ('Incorrect PCP Code Used', 'Incorrect PCP Code Used'), ('Incorrect PDF Number', 'Incorrect PDF Number'), ('Incorrect Plan', 'Incorrect Plan'), ('Incorrect Rate', 'Incorrect Rate'), ('Incorrect Tax ID Number', 'Incorrect Tax ID Number'), ('Incorrect Team', 'Incorrect Team'), ('Mapping Not Processed/Incorrect', 'Mapping Not Processed/Incorrect'), ('Member Name Misspelled', 'Member Name Misspelled'), ('Miscellaneous', 'Miscellaneous'), ('Missing Middle Initial', 'Missing Middle Initial'), ('Missing Student Cert Not Requested', 'Missing Student Cert Not Requested'), ('NCA Class Codes Incorrect or Missing', 'NCA Class Codes Incorrect or Missing'), ('Not Verified', 'Not Verified'), ('OFE O/E Not Updated', 'OFE O/E Not Updated'), ('Original Effective Date Not Updated or Incorrect', 'Original Effective Date Not Updated or Incorrect'), ('Overage Dependent Age Incorrect', 'Overage Dependent Age Incorrect'), ('Parallel Non-Parallel Incorrect', 'Parallel Non-Parallel Incorrect'), ('Part Time Eligibility Incorrect or Not Updated', 'Part Time Eligibility Incorrect or Not Updated'), ('PCP Error', 'PCP Error'), ('Plan Not Setup', 'Plan Not Setup'), ('Plan Not Termed', 'Plan Not Termed'), ('Rate(s) Not Termed', 'Rate(s) Not Termed'), ('Rate(s) Termed in Error', 'Rate(s) Termed in Error'), ('Rate Error', 'Rate Error'), ('Request Not Processed', 'Request Not Processed'), ('Retro Date Incorrect', 'Retro Date Incorrect'), ('Salary Incorrect', 'Salary Incorrect'), ('SSN Incorrect', 'SSN Incorrect'), ('State Incorrect', 'State Incorrect'), ('Street Address Incorrect or Misspelled', 'Street Address Incorrect or Misspelled'), ('Student Cert Status Incorrect or Not Updated', 'Student Cert Status Incorrect or Not Updated'), ('Supporting Documentation-Missing Info', 'Supporting Documentation-Missing Info'), ('System Error', 'System Error'), ('Termination Date Incorrect', 'Termination Date Incorrect'), ('Title Missing from Name', 'Title Missing from Name'), ('Transmission/Upload Issue', 'Transmission/Upload Issue'), ('Transmit to Carrier Missed', 'Transmit to Carrier Missed'), ('Wrong CT Record Updated', 'Wrong CT Record Updated'), ('Zip Code Incorrect', 'Zip Code Incorrect')], blank=True, null=True)
    audit_type = models.CharField(custom=True, db_column='Audit_Type__c', max_length=255, verbose_name='Audit Type', choices=[('FYI', 'FYI'), ('Error', 'Error'), ('Group level error', 'Group level error'), ('Enrollment error', 'Enrollment error')], blank=True, null=True)
    call_back_date = models.DateField(custom=True, db_column='Call_Back_Date__c', verbose_name='Call Back Date', blank=True, null=True)
    qbdialer_callback_date_time = models.DateTimeField(db_column='qbdialer__Callback_Date_Time__c', custom=True, verbose_name='Callback Date/Time', blank=True, null=True) 
    qbdialer_impression_id = models.DecimalField(db_column='qbdialer__ImpressionId__c', custom=True, unique=True, max_digits=18, decimal_places=0, verbose_name='Impression ID', blank=True, null=True) 
    qbdialer_smsreminder = models.BooleanField(db_column='qbdialer__SMSReminder__c', custom=True, verbose_name='Send text msg reminder to all attendees', default=models.DefaultedOnCreate(False), help_text='Text message reminders will be sent to all attendees at the set reminder time.') 
    class Meta(models.Model.Meta):
        db_table = 'Event'
        verbose_name = 'Event'
        verbose_name_plural = 'Events'
        # keyPrefix = '00U'



class EventBusSubscriber(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='External ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=80, verbose_name='Subscriber Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    topic = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    position = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    tip = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    retries = models.IntegerField(verbose_name='Retry Attempts', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_error = models.CharField(max_length=255, verbose_name='Last Error Message', sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Running', 'Running'), ('Suspended', 'Suspended'), ('Expired', 'Expired'), ('Error', 'Error')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EventBusSubscriber'
        verbose_name = 'Platform Event Subscription'
        verbose_name_plural = 'Platform Event Subscription'
        # keyPrefix = '0Cd'



class EventFeed(models.Model):
    parent = models.ForeignKey(Event, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='eventfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='eventfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey('FeedComment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'EventFeed'
        verbose_name = 'Event Feed'
        verbose_name_plural = 'Event Feed'
        # keyPrefix = 'None'



class EventRecurrenceException(models.Model):
    is_deletion = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    event = models.ForeignKey(Event, models.DO_NOTHING, related_name='eventrecurrenceexception_event_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_date_original = models.DateTimeField(verbose_name='Original Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_date_time_original = models.DateTimeField(verbose_name='Original Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_all_day_event_original = models.BooleanField(verbose_name='Original All-Day Event', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    recurrence_event = models.ForeignKey(Event, models.DO_NOTHING, related_name='eventrecurrenceexception_recurrenceevent_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='eventrecurrenceexception_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='eventrecurrenceexception_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'EventRecurrenceException'
        verbose_name = 'Event Recurrence Exception'
        verbose_name_plural = 'Event Recurrence Exception'
        # keyPrefix = '10z'



class EventRelation(models.Model):
    relation = models.ForeignKey(Calendar, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Calendar, User] Master Detail Relationship *
    event = models.ForeignKey(Event, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    status = models.CharField(max_length=40, choices=[('New', 'New'), ('Declined', 'Declined'), ('Accepted', 'Accepted'), ('Uninvited', 'Uninvited'), ('Maybe', 'Maybe')], blank=True, null=True)
    responded_date = models.DateTimeField(verbose_name='Response Date', blank=True, null=True)
    response = models.CharField(max_length=255, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='eventrelation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='eventrelation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'EventRelation'
        verbose_name = 'Event Relation'
        verbose_name_plural = 'Event Relations'
        # keyPrefix = '0RE'



class ExternalDataSource(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='External Data Source', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externaldatasource_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externaldatasource_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    type = models.CharField(max_length=255, verbose_name='Class ID', sf_read_only=models.READ_ONLY, choices=[('contentHubItem', None), ('Datajourney', None), ('Identity', None), ('OpenSearch', None), ('outgoingemail', None), ('recommendation', None), ('SimpleURL', None), ('Wrapper', None)])
    endpoint = models.TextField(verbose_name='URL', sf_read_only=models.READ_ONLY, help_text='The URL for connecting to the external system.', blank=True, null=True)
    repository = models.CharField(max_length=255, verbose_name='Default External Repository', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_writable = models.BooleanField(verbose_name='Writable External Objects', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    principal_type = models.CharField(max_length=255, verbose_name='Identity Type', sf_read_only=models.READ_ONLY, help_text='Used to track users accessing the external server. Anonymous implies a user identity is not specified for external server access. Named Principal uses one user identity for all users to access the external server.', choices=[('Anonymous', 'Anonymous'), ('PerUser', 'Per User'), ('NamedUser', 'Named Principal')])
    protocol = models.CharField(max_length=255, verbose_name='Authentication Protocol', sf_read_only=models.READ_ONLY, help_text='Specify how Salesforce should authenticate to the external server. Password Authentication indicates that a username and password are required to authenticate. No Authentication indicates that no credentials are required.', choices=[('NoAuthentication', 'No Authentication'), ('Oauth', 'OAuth 2.0'), ('Password', 'Password Authentication'), ('AwsSv4', 'AWS Signature Version 4'), ('Jwt', 'JWT'), ('JwtExchange', 'JWT Token Exchange')])
    large_icon = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='externaldatasource_largeicon_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    small_icon = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='externaldatasource_smallicon_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    custom_configuration = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ExternalDataSource'
        verbose_name = 'External Data Source'
        verbose_name_plural = 'External Data Sources'
        # keyPrefix = '0XC'



class ExternalDataUserAuth(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externaldatauserauth_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externaldatauserauth_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    external_data_source = models.ForeignKey(ExternalDataSource, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [ExternalDataSource, NamedCredential] Master Detail Relationship *
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='externaldatauserauth_user_set', blank=True, null=True)
    protocol = models.CharField(max_length=255, verbose_name='Authentication Protocol', default=models.DEFAULTED_ON_CREATE, help_text='Specify how Salesforce should authenticate to the external server. Password Authentication indicates that a username and password are required to authenticate. No Authentication indicates that no credentials are required.', choices=[('NoAuthentication', 'No Authentication'), ('Oauth', 'OAuth 2.0'), ('Password', 'Password Authentication'), ('AwsSv4', 'AWS Signature Version 4'), ('Jwt', 'JWT'), ('JwtExchange', 'JWT Token Exchange')], blank=True, null=True)
    username = models.CharField(max_length=255, blank=True, null=True)
    password = models.TextField(blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ExternalDataUserAuth'
        verbose_name = 'External Data User Authentication'
        verbose_name_plural = 'External Data User Authentications'
        # keyPrefix = '0XU'



class ExternalEvent(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externalevent_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externalevent_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    external_id = models.CharField(max_length=255, blank=True, null=True)
    title = models.CharField(max_length=255, blank=True, null=True)
    location = models.CharField(max_length=255, blank=True, null=True)
    notes = models.TextField(blank=True, null=True)
    time = models.CharField(max_length=255, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ExternalEvent'
        verbose_name = 'External Event'
        verbose_name_plural = 'External Events'
        # keyPrefix = '0AY'



class ExternalEventMapping(models.Model):
    owner = models.ForeignKey('Group', models.DO_NOTHING)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externaleventmapping_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externaleventmapping_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    external_id = models.CharField(max_length=255, blank=True, null=True)
    event = models.ForeignKey(Event, models.DO_NOTHING, blank=True, null=True)  # Master Detail Relationship *
    start_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    is_recurring = models.BooleanField(default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ExternalEventMapping'
        verbose_name = 'External Event Mapping'
        verbose_name_plural = 'External Event Mappings'
        # keyPrefix = '08N'



class ExternalEventMappingShare(models.Model):
    parent = models.ForeignKey(ExternalEventMapping, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ExternalEventMappingShare'
        verbose_name = 'External Event Mapping Share'
        verbose_name_plural = 'External Event Mapping Share'
        # keyPrefix = 'None'



class ExternalSocialAccount(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externalsocialaccount_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='externalsocialaccount_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    external_account_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    username = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    provider = models.CharField(max_length=255, verbose_name='Social Network', sf_read_only=models.READ_ONLY, choices=[('Twitter', 'Twitter'), ('Facebook', 'Facebook'), ('LinkedIn', 'LinkedIn'), ('YouTube', 'YouTube'), ('Klout', 'Klout'), ('Rypple', 'Rypple'), ('GooglePlus', 'Google+'), ('SinaWeibo', 'Sina Weibo'), ('WeChat', 'WeChat'), ('Line', 'Line'), ('WhatsApp', 'WhatsApp'), ('Pinterest', 'Pinterest'), ('Instagram', 'Instagram'), ('vKontakte', 'vKontakte'), ('Azure', 'Azure'), ('Skype', 'Skype'), ('Telegram', 'Telegram'), ('Snapchat', 'Snapchat'), ('Messenger', 'Messenger'), ('Kik', 'Kik'), ('KakaoTalk', 'KakaoTalk'), ('QQ', 'QQ'), ('SMS', 'SMS'), ('Spark', 'Spark'), ('InstagramBusiness', 'InstagramBusiness'), ('GoogleRtc', 'GoogleRTC'), ('Other', 'Other Media Type')])
    provider_user_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    external_picture_url = models.URLField(db_column='ExternalPictureURL', verbose_name='Provider External Picture URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_active = models.BooleanField(verbose_name='Is Active Account', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    social_property_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_authenticated = models.BooleanField(verbose_name='Is Account Authenticated', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    topic_id = models.CharField(max_length=255, verbose_name='Topic Profile Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    data_source_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    rule_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_data_source_active = models.BooleanField(verbose_name='Active Data Source', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    unique_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    default_response_account = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    profile_url = models.URLField(verbose_name='Profile URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    authorized_by = models.CharField(max_length=255, verbose_name='Authorized by', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_case_creation_enabled = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ExternalSocialAccount'
        verbose_name = 'Managed Social Account'
        verbose_name_plural = 'Managed Social Accounts'
        # keyPrefix = '0AL'



class FeedAttachment(models.Model):
    feed_entity = models.ForeignKey(AccountFeed, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedComment, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Attachment Type', sf_read_only=models.NOT_UPDATEABLE, choices=[('Content', None), ('InlineImage', None), ('Link', None), ('FeedEntity', None), ('ChatterExtension', None), ('Record', None)])
    record = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Reference to tables [ContentDocument, ContentVersion, FeedItem, Knowledge__ka]
    title = models.CharField(max_length=255, verbose_name='Feed Attachment Title', blank=True, null=True)
    value = models.CharField(max_length=1000, verbose_name='Feed Attachment Value', blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'FeedAttachment'
        verbose_name = 'Feed Attachment'
        verbose_name_plural = 'Feed Attachments'
        # keyPrefix = '08M'



class FeedComment(models.Model):
    feed_item = models.ForeignKey(AccountFeed, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Account, CollaborationGroup, ContentDocument, Dashboard, DashboardComponent, EnhancedLetterhead, Event, Knowledge__ka, LinkedArticle, Report, Site, Task, Topic, User]
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedcomment_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    revision = models.IntegerField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    last_edit_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedcomment_lasteditby_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    last_edit_date = models.DateTimeField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    comment_body = models.TextField()
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedcomment_insertedby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    comment_type = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('TextComment', None), ('ContentComment', None)], blank=True, null=True)
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    is_rich_text = models.BooleanField(default=models.DefaultedOnCreate(False))
    is_verified = models.BooleanField(verbose_name='Is a Verified Comment', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_entity_links = models.BooleanField(verbose_name='Has entity links', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    status = models.CharField(max_length=40, default=models.DEFAULTED_ON_CREATE, choices=[('Published', 'Published'), ('PendingReview', 'PendingReview'), ('Draft', 'Draft')], blank=True, null=True)
    thread_parent = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Master Detail Relationship *
    thread_level = models.IntegerField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    thread_children_count = models.IntegerField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    thread_last_updated_date = models.DateTimeField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FeedComment'
        verbose_name = 'Feed Comment'
        verbose_name_plural = 'Feed Comments'
        # keyPrefix = '0D7'



class FeedItem(models.Model):
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Account, CollaborationGroup, ContentDocument, Dashboard, DashboardComponent, EnhancedLetterhead, Event, Knowledge__ka, LinkedArticle, Report, Site, Task, Topic, User] Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.NOT_UPDATEABLE, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feeditem_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    revision = models.IntegerField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    last_edit_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feeditem_lasteditby_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    last_edit_date = models.DateTimeField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, blank=True, null=True)
    body = models.TextField(blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    is_rich_text = models.BooleanField(default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feeditem_insertedby_set', sf_read_only=models.READ_ONLY)
    network_scope = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, related_name='feeditem_bestcomment_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    has_content = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_link = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_feed_entity = models.BooleanField(verbose_name='Has Feed Entity Attachment', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_verified_comment = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_closed = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    status = models.CharField(max_length=40, default=models.DEFAULTED_ON_CREATE, choices=[('Published', 'Published'), ('PendingReview', 'PendingReview'), ('Draft', 'Draft')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FeedItem'
        verbose_name = 'Feed Item'
        verbose_name_plural = 'Feed Items'
        # keyPrefix = '0D5'



class FeedLike(models.Model):
    feed_item = models.ForeignKey(AccountFeed, models.DO_NOTHING, related_name='feedlike_feeditem_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    feed_entity = models.ForeignKey(AccountFeed, models.DO_NOTHING, related_name='feedlike_feedentity_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedComment, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedlike_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedlike_insertedby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'FeedLike'
        verbose_name = 'Feed Like'
        verbose_name_plural = 'Feed Likes'
        # keyPrefix = '0I0'



class FeedRevision(models.Model):
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    feed_entity = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [FeedComment, FeedItem] Master Detail Relationship *
    origin_network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    revision = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    action = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Changed', None)], blank=True, null=True)
    edited_attribute = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('FeedCommentBody', None), ('FeedElementBody', None), ('FeedElementQuestionTitle', None), ('FeedElementVisibility', None), ('FeedElementParent', None)], blank=True, null=True)
    value = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_value_rich_text = models.BooleanField(verbose_name='Is Value RichText', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'FeedRevision'
        verbose_name = 'Feed Revision'
        verbose_name_plural = 'Feed Revisions'
        # keyPrefix = '08U'



class FeedSignal(models.Model):
    feed_item = models.ForeignKey(AccountFeed, models.DO_NOTHING, related_name='feedsignal_feeditem_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    feed_entity = models.ForeignKey(AccountFeed, models.DO_NOTHING, related_name='feedsignal_feedentity_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedComment, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    signal_value = models.IntegerField(verbose_name='Signal value', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    signal_type = models.CharField(max_length=40, verbose_name='Signal type', sf_read_only=models.NOT_UPDATEABLE, choices=[('UpDownVote', None), ('Verified', None), ('UserVerified', None)], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedsignal_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='feedsignal_insertedby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'FeedSignal'
        verbose_name = 'Feed Signal'
        verbose_name_plural = 'Feed Signals'
        # keyPrefix = '0QJ'



class FeedTrackedChange(models.Model):
    feed_item = models.ForeignKey(AccountFeed, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [AccountFeed, CollaborationGroupFeed, ContentDocumentFeed, DashboardComponentFeed, DashboardFeed, EnhancedLetterheadFeed, EventFeed, FeedItem, LinkedArticleFeed, ReportFeed, SiteFeed, TaskFeed, TopicFeed, UserFeed] Master Detail Relationship *
    field_name = models.CharField(max_length=120, verbose_name='Field', sf_read_only=models.READ_ONLY)
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FeedTrackedChange'
        verbose_name = 'Feed Tracked Change'
        verbose_name_plural = 'Feed Tracked Changes'
        # keyPrefix = '0D6'



class FieldDefinition(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    qualified_api_name = models.CharField(max_length=70, verbose_name='Qualified API Name', sf_read_only=models.READ_ONLY)
    entity_definition_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    master_label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    label = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    data_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    service_data_type_id = models.CharField(max_length=70, verbose_name='Data Type ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    value_type_id = models.CharField(max_length=70, verbose_name='Data Type ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    extra_type_info = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_calculated = models.BooleanField(verbose_name='Is Field calculated?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_high_scale_number = models.BooleanField(verbose_name='Is Field a high scale number?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_html_formatted = models.BooleanField(verbose_name='Is Field a HTML formatted?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_name_field = models.BooleanField(verbose_name='Is Field a Name field?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_nillable = models.BooleanField(verbose_name='Is Field a nillable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_workflow_filterable = models.BooleanField(verbose_name='Is Workflow Filterable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_compact_layoutable = models.BooleanField(verbose_name='Is Compact Layout Enabled?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    precision = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    scale = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_field_history_tracked = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_indexed = models.BooleanField(verbose_name='Is Field indexed?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_api_filterable = models.BooleanField(verbose_name='Is Field Filterable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_api_sortable = models.BooleanField(verbose_name='Is Field Sortable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_list_filterable = models.BooleanField(verbose_name='Is Field Filterable in Lists?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_list_sortable = models.BooleanField(verbose_name='Is Field Sortable in Lists?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_api_groupable = models.BooleanField(verbose_name='Is Field Groupable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_list_visible = models.BooleanField(verbose_name='Is Field visible in Lists?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    controlling_field_definition_id = models.CharField(max_length=150, verbose_name='Field Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    publisher_id = models.CharField(max_length=70, verbose_name='Publisher ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    running_user_field_access_id = models.CharField(max_length=150, verbose_name='User Field Access ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    relationship_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    reference_to = models.TextField(verbose_name='Entities Referenced by Relationship', sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    reference_target_field = models.CharField(max_length=80, verbose_name='Target Field on Entities to Which the Foreign Key Points', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_compound = models.BooleanField(verbose_name='Is Field a compound field', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_search_prefilterable = models.BooleanField(verbose_name='Is Field Search Prefilterable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_polymorphic_foreign_key = models.BooleanField(verbose_name='Is ForeignKey Polymorphic?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    business_owner = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Group, User]
    business_status = models.CharField(max_length=40, verbose_name='Field Usage', sf_read_only=models.READ_ONLY, choices=[('Active', 'Active'), ('DeprecateCandidate', 'DeprecateCandidate'), ('Hidden', 'Hidden')], blank=True, null=True)
    security_classification = models.CharField(max_length=40, verbose_name='Data Sensitivity Level', sf_read_only=models.READ_ONLY, choices=[('Public', 'Public'), ('Internal', 'Internal'), ('Confidential', 'Confidential'), ('Restricted', 'Restricted'), ('MissionCritical', 'MissionCritical')], blank=True, null=True)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FieldDefinition'
        verbose_name = 'Field Definition'
        verbose_name_plural = 'Field Definitions'
        # keyPrefix = '4fe'



class FieldPermissions(models.Model):
    parent = models.ForeignKey('PermissionSet', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    sobject_type = models.CharField(max_length=40, verbose_name='Sobject Type Name', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('AccountBrand', None), ('AccountTeamMember', None), ('Asset', None), ('AssetRelationship', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('Campaign', None), ('CampaignInfluence', None), ('CampaignMember', None), ('Case', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Contact', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('Contract', None), ('ContractLineItem', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('EmailMessage', None), ('EngagementChannelType', None), ('Entitlement', None), ('Event', None), ('Idea', None), ('Image', None), ('Individual', None), ('Lead', None), ('LinkedArticle', None), ('LiveAgentSession', None), ('LiveChatTranscript', None), ('LiveChatVisitor', None), ('Macro', None), ('Opportunity', None), ('OpportunityContactRole', None), ('OpportunityLineItem', None), ('OpportunityTeamMember', None), ('PartyConsent', None), ('Pricebook2', None), ('PricebookEntry', None), ('Product2', None), ('QuickText', None), ('Quote', None), ('QuoteLineItem', None), ('Recommendation', None), ('ServiceContract', None), ('SocialPersona', None), ('SocialPost', None), ('Solution', None), ('Task', None), ('User', None)])
    field = models.CharField(max_length=40, verbose_name='Field Name', sf_read_only=models.READ_ONLY, choices=[('Account.Account_Auto_Number__c', None), ('Account.Account_Bundle__c', None), ('Account.Account_Classification__c', None), ('Account.Account_Executive__c', None), ('Account.Account_Name_f__c', None), ('Account.Accountant__c', None), ('Account.Accounting_ID__c', None), ('Account.AccountNumber', None), ('Account.AccountSource', None), ('Account.Active_Assigned_DM_or_BSE__c', None), ('Account.Additional_Online_Quoting_States__c', None), ('Account.Additional_Product_States__c', None), ('Account.Additional_Product_Types__c', None), ('Account.Advisory_Notice__c', None), ('Account.Affiliate__c', None), ('Account.Affiliation_Type__c', None), ('Account.AFocus_administratorUserId__c', None), ('Account.AFocus_BP_Last_Sync_Date_Time__c', None), ('Account.AFocus_CreatedFromCase__c', None), ('Account.AFocus_CRQS_CRC_ID__c', None), ('Account.AFocus_Department_ID__c', None), ('Account.AFocus_Earliest_Renewal_Date__c', None), ('Account.AFocus_Enable_CRQS_CRC__c', None), ('Account.AFocus_Enable_EmployerFocus__c', None), ('Account.AFocus_Inactive_Status_Reason__c', None), ('Account.AFocus_Lead_Record_Type__c', None), ('Account.AFocus_Lead_Source__c', None), ('Account.AFocus_Loaded_with_Bulk_API__c', None), ('Account.AFocus_Market_Segment__c', None), ('Account.AFocus_Most_Recent_Effective_Date__c', None), ('Account.Afocus_Office_Id__c', None), ('Account.AFocus_primaryContactUserId__c', None), ('Account.AFocus_primarySalesLeadUserId__c', None), ('Account.AFocus_primaryServiceLeadUserId__c', None), ('Account.AFocus_Trip_Status_Rolls_Up_to_Agency__c', None), ('Account.Agency_ID__c', None), ('Account.Agency_Rank_BoB_in_State__c', None), ('Account.Agency_View_Broker__c', None), ('Account.AgencyFocus_Auto_Lead_Convert__c', None), ('Account.Agent__c', None), ('Account.Agent_Rank__c', None), ('Account.AMS_ID__c', None), ('Account.AMS_Primary_Carrier__c', None), ('Account.Annualized_Payroll_Revenue__c', None), ('Account.Annualized_Premium__c', None), ('Account.Annualized_Premium_Agency_Total__c', None), ('Account.Annualized_Premium_for_Agency_s_Agents__c', None), ('Account.Annualized_Premium_for_Agent_Agency__c', None), ('Account.Annualized_Revenue_Agency_Total__c', None), ('Account.Annualized_Revenue_for_Agency_s_Agents__c', None), ('Account.Annualized_Revenue_for_Agent_Agency__c', None), ('Account.AnnualRevenue', None), ('Account.Applications__c', None), ('Account.ASD_Account_Coordinator__c', None), ('Account.ASD_Account_Executive__c', None), ('Account.ASD_Acct_Exec_Market__c', None), ('Account.ASD_Attrition_Reason__c', None), ('Account.ASD_End_Date__c', None), ('Account.ASD_Market_Director__c', None), ('Account.ASD_Regional_Vice_President__c', None), ('Account.ASD_Sales_Director__c', None), ('Account.ASD_Service_Team__c', None), ('Account.ASD_Split__c', None), ('Account.ASD_Start_Date__c', None), ('Account.ASD_Type__c', None), ('Account.Assistant_phone__c', None), ('Account.Associated_Agents__c', None), ('Account.At_Risk_for_Deactivation__c', None), ('Account.Attrition_Other_Reason__c', None), ('Account.Attrition_Reason__c', None), ('Account.Authorized_for_PartnerFocus__c', None), ('Account.AutorabitExtId__c', None), ('Account.Back_Office_Partner_Code__c', None), ('Account.Bank__c', None), ('Account.Bankruptcy__c', None), ('Account.BenAdmin_Annual_Subscription_Fee__c', None), ('Account.BenAdmin_Integrated__c', None), ('Account.BenAdmin_Subscription_s__c', None), ('Account.BenAdmin_System__c', None), ('Account.BenAdmin_Tier__c', None), ('Account.Benefit_Administration_System__c', None), ('Account.Benefit_Enrollment_Date__c', None), ('Account.BenefitPointID__c', None), ('Account.Benefits_Carrier__c', None), ('Account.Benefits_Offered__c', None), ('Account.Billing__c', None), ('Account.Billing_Contact__c', None), ('Account.Billing_Contact_Email__c', None), ('Account.Billing_Contact_Phone__c', None), ('Account.Billing_Type__c', None), ('Account.BillingAddress', None), ('Account.BIP_End_Date__c', None), ('Account.BIP_Mkt__c', None), ('Account.BIP_Name__c', None), ('Account.BIP_Start_Date__c', None), ('Account.BIP_Status__c', None), ('Account.Birthdate__c', None), ('Account.BMAS_ID__c', None), ('Account.BMLL_Business_Size__c', None), ('Account.BP_Account_Request__c', None), ('Account.BP_Account_Response__c', None), ('Account.BP_Created_Date__c', None), ('Account.BP_ID__c', None), ('Account.BP_Integration_Error__c', None), ('Account.BP_Integration_Status__c', None), ('Account.BP_Primary_Carrier__c', None), ('Account.Branch__c', None), ('Account.Broker__c', None), ('Account.Broker_Class__c', None), ('Account.Broker_Commission_Count__c', None), ('Account.Broker_Commission_Email__c', None), ('Account.Broker_Executive__c', None), ('Account.Broker_ID__c', None), ('Account.Broker_Partnership_Level__c', None), ('Account.Broker_Payroll_Referral_Program__c', None), ('Account.Broker_Referral_Program__c', None), ('Account.Broker_Workspace_Username__c', None), ('Account.Broker2__c', None), ('Account.BSE_Assigned__c', None), ('Account.BSE_Assigned_Email__c', None), ('Account.BSE_Email__c', None), ('Account.BSE_First_Name__c', None), ('Account.BSE_Last_Name__c', None), ('Account.BSE_Phone__c', None), ('Account.BSE_UserId__c', None), ('Account.BSR_Email__c', None), ('Account.BSR_First_Name__c', None), ('Account.BSR_Last_Name__c', None), ('Account.BSR_Phone__c', None), ('Account.BSR_UserId__c', None), ('Account.Bundle__c', None), ('Account.Business_Focus__c', None), ('Account.Business_Segment__c', None), ('Account.Business_Segment_old__c', None), ('Account.Business_Type__c', None), ('Account.BWS_Principle_Agent_Agency__c', None), ('Account.Cannabis_Business__c', None), ('Account.Carrier_Announcements__c', None), ('Account.Carrier_Code__c', None), ('Account.Carrier_Contact_Name__c', None), ('Account.Carrier_Data_Mapping__c', None), ('Account.Carrier_Description__c', None), ('Account.Carrier_Email__c', None), ('Account.Carrier_Logo_URL__c', None), ('Account.Carrier_Notes__c', None), ('Account.Carrier_Phone__c', None), ('Account.Carrier_Preferences__c', None), ('Account.Carrier_Rating__c', None), ('Account.Carrier_Rating_Classification__c', None), ('Account.Carrier_Rating_Company_Name__c', None), ('Account.Carrier_Rating_Description__c', None), ('Account.Carrier_Status__c', None), ('Account.Cascading_Updates__c', None), ('Account.Cascading_Updates_New__c', None), ('Account.Cases_Policies_Renewals__c', None), ('Account.City__c', None), ('Account.Client__c', None), ('Account.Client_Code__c', None), ('Account.Client_Contact_Title__c', None), ('Account.Client_ID__c', None), ('Account.Client_Notification_Opt_Out__c', None), ('Account.Client_Notification_Override__c', None), ('Account.Client_Volume__c', None), ('Account.Comments__c', None), ('Account.Commission_Rate_Dollar_Amt__c', None), ('Account.Complexity_Indicator__c', None), ('Account.Consolidate__c', None), ('Account.Consumer_Products_Division_BSE_Name__c', None), ('Account.Contact_Email__c', None), ('Account.Contact_First_Name__c', None), ('Account.Contact_Last_Name__c', None), ('Account.Contact_Phone__c', None), ('Account.Contact_UserId__c', None), ('Account.Contract_Entrance_Date__c', None), ('Account.Contract_Limitations__c', None), ('Account.Contract_Number__c', None), ('Account.Contract_Status__c', None), ('Account.Contract_Term_Date__c', None), ('Account.Contracted_Pricing_Schedule__c', None), ('Account.Contracted_Products__c', None), ('Account.Contracted_State__c', None), ('Account.Convert_Record_Type__c', None), ('Account.Corporate_City__c', None), ('Account.Corporate_Name__c', None), ('Account.Corporate_State_Province__c', None), ('Account.Corporate_Street__c', None), ('Account.Corporate_Zip_Postal_Code__c', None), ('Account.Country__c', None), ('Account.County__c', None), ('Account.Coverage__c', None), ('Account.CPAY_Business_Size__c', None), ('Account.CPD_BSE__c', None), ('Account.Cross_Sell_Account__c', None), ('Account.CRQS_Quote_Proposals__c', None), ('Account.CS_Team__c', None), ('Account.Current_Account_ParentId__c', None), ('Account.Current_BSE__c', None), ('Account.Current_BSE_Name__c', None), ('Account.Current_BSR__c', None), ('Account.Current_BSR_Name__c', None), ('Account.Current_Contact__c', None), ('Account.Current_Contact_Name__c', None), ('Account.Current_HR_System__c', None), ('Account.Current_Market_Director_or_Admin_Name__c', None), ('Account.Current_MD_or_Admin__c', None), ('Account.Current_Payroll_Provider__c', None), ('Account.Current_Time_System__c', None), ('Account.Current_Year_Sales__c', None), ('Account.CurrentUser_AccountId__c', None), ('Account.Data_com_NAICS__c', None), ('Account.Data_com_NAICS_Description__c', None), ('Account.Data_com_SIC_c__c', None), ('Account.Data_com_SIC_Description__c', None), ('Account.Date_Authorized_for_PartnerFocus__c', None), ('Account.Date_of_Direct_Deposit__c', None), ('Account.Date_of_First_Payroll__c', None), ('Account.Days_Since_Last_Bfits_NB_Case_Closed__c', None), ('Account.Days_Since_Last_Bfits_NB_Case_Created__c', None), ('Account.Days_Since_Last_Oppty_Modified__c', None), ('Account.Days_Since_Last_Task_Completed__c', None), ('Account.DBA__c', None), ('Account.Department__c', None), ('Account.Deprecated_SSN__c', None), ('Account.Description', None), ('Account.Direct_Deposit__c', None), ('Account.Direct_Deposit_ACH_Term__c', None), ('Account.Disable_Web_Access__c', None), ('Account.Display_End_Date__c', None), ('Account.Display_End_Time__c', None), ('Account.Display_Start_Date__c', None), ('Account.Display_Start_Time__c', None), ('Account.DM_Assigned__c', None), ('Account.DM_Assigned_Email__c', None), ('Account.DM_Engagement_Status__c', None), ('Account.DM_First_Name__c', None), ('Account.DM_Last_Name__c', None), ('Account.DNS_Formula__c', None), ('Account.DNS_Trigger__c', None), ('Account.Do_Not_Contact__c', None), ('Account.Do_Not_Sell__c', None), ('Account.DUNS_Number__c', None), ('Account.EC_Annual_Subscription_Fee__c', None), ('Account.EC_Subscription_Start_Date__c', None), ('Account.EC_Subscription_Term_Date__c', None), ('Account.EE_w_deductions__c', None), ('Account.EF_Annual_Subscription_Fee__c', None), ('Account.EF_Fee_Waived__c', None), ('Account.EF_Subscription_Start_Date__c', None), ('Account.EF_Subscription_Term_Date__c', None), ('Account.EIN__c', None), ('Account.Eligible_for_Trip_Status__c', None), ('Account.Eligible_Weighted_Lives__c', None), ('Account.Email__c', None), ('Account.EmployerFocus_Effective_Date__c', None), ('Account.EmployerFocus_Start_Date__c', None), ('Account.EmployerFocus_Term_Date__c', None), ('Account.EN_Annual_Subscription_Fee__c', None), ('Account.EN_Subscription_Start_Date__c', None), ('Account.EN_Subscription_Term_Date__c', None), ('Account.Enable_OBMS_Website_Link__c', None), ('Account.End_Date__c', None), ('Account.Enterprise__c', None), ('Account.Entitlement__c', None), ('Account.Entitlement_Program__c', None), ('Account.Epic_Last_Modified_Date__c', None), ('Account.Events_Invitations__c', None), ('Account.Exchange__c', None), ('Account.Extension__c', None), ('Account.Fax', None), ('Account.FFM__c', None), ('Account.File_Thru_Date__c', None), ('Account.Financial_Stress_Score_Percentile__c', None), ('Account.First_Meeting_Completed__c', None), ('Account.First_Name__c', None), ('Account.First_Payroll_of_Transactions__c', None), ('Account.Frequency_of_Payroll__c', None), ('Account.FT_Employees_Count_Last_Updated__c', None), ('Account.GA_or_Fee__c', None), ('Account.General_Communication_Preference__c', None), ('Account.HasAdministeredPlan__c', None), ('Account.Health_Deductions__c', None), ('Account.High_Visibility__c', None), ('Account.HighVis_YesNo__c', None), ('Account.HIPAA_Acceptance__c', None), ('Account.HIPAA_Agreement__c', None), ('Account.Home_phone__c', None), ('Account.IBAS_Division_ID__c', None), ('Account.IBAS_ID__c', None), ('Account.Implementation_Fee__c', None), ('Account.Inactive_Status_Reason__c', None), ('Account.Individual_Online_Quoting_States__c', None), ('Account.Individual_Product_States__c', None), ('Account.Individual_Product_Types__c', None), ('Account.Industry', None), ('Account.Inherit_Account_Team__c', None), ('Account.Inherit_ASD_Acct_Team__c', None), ('Account.Inherit_EF_Subscription_Fields__c', None), ('Account.INQ__NumberofLocations__c', None), ('Account.INQ__SLASerialNumber__c', None), ('Account.Inquisium_Descriptor__c', None), ('Account.Insurance_Types__c', None), ('Account.Integrated_Account__c', None), ('Account.Integrated_Benefits_Administration__c', None), ('Account.Integrated_End_Date__c', None), ('Account.Integrated_Start_Date__c', None), ('Account.Internal_BD_Restrictions__c', None), ('Account.Is_Account_Team_Updated__c', None), ('Account.Is_Active_In_COPR__c', None), ('Account.Is_Cascading_Batch_Error__c', None), ('Account.IsLeadConvert__c', None), ('Account.Issued__c', None), ('Account.Jigsaw', None), ('Account.Large_Group_Notifications__c', None), ('Account.Large_Group_Online_Quoting_States__c', None), ('Account.Large_Group_Product_States__c', None), ('Account.Large_Group_Product_Types__c', None), ('Account.Last_allCompliance_Demo__c', None), ('Account.Last_Bfits_NB_Case_Closed__c', None), ('Account.Last_Bfits_NB_Case_Created__c', None), ('Account.Last_Check_Date__c', None), ('Account.Last_HRFocus_Demo__c', None), ('Account.Last_Name__c', None), ('Account.Last_NSF_Date__c', None), ('Account.Last_Oppty_Modified__c', None), ('Account.Last_Process_Date__c', None), ('Account.Last_Task_Completed__c', None), ('Account.Last_TimeFocus_Demo__c', None), ('Account.LastSentToBPTime__c', None), ('Account.Lead_Agency__c', None), ('Account.Lead_Referral_Date__c', None), ('Account.Lead_Referral_ID__c', None), ('Account.Legacy_ID__c', None), ('Account.Legislative_Corporate_Announcements__c', None), ('Account.License_Verified__c', None), ('Account.License_Verified_States__c', None), ('Account.Lines_of_Coverage__c', None), ('Account.Local_Code__c', None), ('Account.Location__c', None), ('Account.Loss_Notes__c', None), ('Account.Loss_Reason__c', None), ('Account.Mailing_City__c', None), ('Account.Mailing_Country__c', None), ('Account.Mailing_Postal_Code__c', None), ('Account.Mailing_State_Province__c', None), ('Account.Mailing_Street__c', None), ('Account.Market_Benefit__c', None), ('Account.Market_Director__c', None), ('Account.Market_Director_Email__c', None), ('Account.Market_Director_First_Name__c', None), ('Account.Market_Director_Last_Name__c', None), ('Account.Market_Director_or_Admin_BPID__c', None), ('Account.Market_Director_Phone__c', None), ('Account.Market_Director_UserId__c', None), ('Account.Market_Segment__c', None), ('Account.Marketing_Engaged__c', None), ('Account.Marketing_Engaged_Date__c', None), ('Account.Maximum_Discount_Allowable__c', None), ('Account.Medicare_Number__c', None), ('Account.Middle_Name__c', None), ('Account.Migration_Flag__c', None), ('Account.Mobile__c', None), ('Account.NAICS_Code__c', None), ('Account.NAICS_Description__c', None), ('Account.National_Code__c', None), ('Account.National_Producer__c', None), ('Account.New_Documents_Availability__c', None), ('Account.New_Existing_Broker__c', None), ('Account.New_Existing_Client__c', None), ('Account.New_Method__c', None), ('Account.New_Provider__c', None), ('Account.Newsletters__c', None), ('Account.Next_Check_Date__c', None), ('Account.Next_Schedule_Date__c', None), ('Account.NoofAttachment__c', None), ('Account.NoofFiles__c', None), ('Account.NPN__c', None), ('Account.NSF_Count__c', None), ('Account.Number_of_FT_Employees__c', None), ('Account.Number_Of_Full_Time_Equivalents__c', None), ('Account.Number_Of_Full_Time_Equivalents_AsOfDate__c', None), ('Account.Number_of_Lives__c', None), ('Account.NumberOfEmployees', None), ('Account.Office__c', None), ('Account.Office_Benefit__c', None), ('Account.Officer__c', None), ('Account.Old_Client_Number__c', None), ('Account.Old_Data_Location__c', None), ('Account.Old_Date_of_First_Payroll__c', None), ('Account.Old_PID__c', None), ('Account.Old_Service_Location__c', None), ('Account.Old_Service_Rep__c', None), ('Account.Old_Source_System__c', None), ('Account.Original_BSE2__c', None), ('Account.Original_BSR2__c', None), ('Account.Original_Contact2__c', None), ('Account.Original_Date_of_First_Payroll__c', None), ('Account.Original_MD_or_Admin__c', None), ('Account.OSP_Comments__c', None), ('Account.OSP_Review_Required__c', None), ('Account.Other_New_Method__c', None), ('Account.Other_New_Provider__c', None), ('Account.Other_Phone__c', None), ('Account.Outsourced_Partner__c', None), ('Account.Ownership', None), ('Account.PAM_CPO_Partner_Code__c', None), ('Account.Parent', None), ('Account.Partner_Category__c', None), ('Account.Partner_CoBranding__c', None), ('Account.Partner_Code__c', None), ('Account.Partner_Subcategory__c', None), ('Account.Partner_Type__c', None), ('Account.PartnerFocus_Access_End_Date__c', None), ('Account.PartnerFocus_Email_Notif_Opt_Out__c', None), ('Account.PartnerFocus_Trial__c', None), ('Account.Pay_Agency__c', None), ('Account.Paydex_Score__c', None), ('Account.PayFocus_HR_features__c', None), ('Account.Payment_Schedule__c', None), ('Account.Payroll_Anniversary_Date__c', None), ('Account.Payroll_Platform__c', None), ('Account.Payroll_Reminder_Send_Date__c', None), ('Account.Payroll_Sales_Representative__c', None), ('Account.Payroll_Specialist__c', None), ('Account.Payroll_URL__c', None), ('Account.PEO_BSE__c', None), ('Account.PeopleFocus__c', None), ('Account.PeopleFocus_Effective_Date__c', None), ('Account.PeopleFocus_Term_Date__c', None), ('Account.Phone', None), ('Account.Platform_Created_Date__c', None), ('Account.PlatformIntegrationID__c', None), ('Account.PP_Revenue_Share_Percentage__c', None), ('Account.Preferred_Marketing_Method__c', None), ('Account.Preferred_Name__c', None), ('Account.Preferred_Quote_Delivery_Method__c', None), ('Account.Premium__c', None), ('Account.Previous_Provider__c', None), ('Account.Primary_BSE__c', None), ('Account.Primary_BSE_BPID__c', None), ('Account.Primary_BSR__c', None), ('Account.Primary_BSR_BPID__c', None), ('Account.Primary_Contact_BPID__c', None), ('Account.Primary_NBA__c', None), ('Account.Primary_Partner__c', None), ('Account.Primary_Partner_is_an_Affiliate__c', None), ('Account.Primary_Partner_Type__c', None), ('Account.Primary_Partner_Type_f__c', None), ('Account.Primary_State_of_Residence__c', None), ('Account.Print_Location__c', None), ('Account.Prior_Platform_Id__c', None), ('Account.Processing_Deadline__c', None), ('Account.Processing_Discount__c', None), ('Account.Processing_Type__c', None), ('Account.Product_Lines_of_Interest__c', None), ('Account.Product_of_Interest__c', None), ('Account.Products__c', None), ('Account.Products_Offered_Lost__c', None), ('Account.Products_Offered_Open__c', None), ('Account.Products_Offered_Won__c', None), ('Account.Promotions__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_0__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_1__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_2__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_3__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_4__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_5__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_6__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_7__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_8__c', None), ('Account.PS_Scheduled_Delivery_Date_Time_9__c', None), ('Account.PS_Service_0__c', None), ('Account.PS_Service_1__c', None), ('Account.PS_Service_2__c', None), ('Account.PS_Service_3__c', None), ('Account.PS_Service_4__c', None), ('Account.PS_Service_5__c', None), ('Account.PS_Service_6__c', None), ('Account.PS_Service_7__c', None), ('Account.PS_Service_8__c', None), ('Account.PS_Service_9__c', None), ('Account.PS_Ship_To_Address_0__c', None), ('Account.PS_Ship_To_Address_1__c', None), ('Account.PS_Ship_To_Address_2__c', None), ('Account.PS_Ship_To_Address_3__c', None), ('Account.PS_Ship_To_Address_4__c', None), ('Account.PS_Ship_To_Address_5__c', None), ('Account.PS_Ship_To_Address_6__c', None), ('Account.PS_Ship_To_Address_7__c', None), ('Account.PS_Ship_To_Address_8__c', None), ('Account.PS_Ship_To_Address_9__c', None), ('Account.PS_Ship_To_Attention_0__c', None), ('Account.PS_Ship_To_Attention_1__c', None), ('Account.PS_Ship_To_Attention_2__c', None), ('Account.PS_Ship_To_Attention_3__c', None), ('Account.PS_Ship_To_Attention_4__c', None), ('Account.PS_Ship_To_Attention_5__c', None), ('Account.PS_Ship_To_Attention_6__c', None), ('Account.PS_Ship_To_Attention_7__c', None), ('Account.PS_Ship_To_Attention_8__c', None), ('Account.PS_Ship_To_Attention_9__c', None), ('Account.PS_Tracking_Number_0__c', None), ('Account.PS_Tracking_Number_1__c', None), ('Account.PS_Tracking_Number_2__c', None), ('Account.PS_Tracking_Number_3__c', None), ('Account.PS_Tracking_Number_4__c', None), ('Account.PS_Tracking_Number_5__c', None), ('Account.PS_Tracking_Number_6__c', None), ('Account.PS_Tracking_Number_7__c', None), ('Account.PS_Tracking_Number_8__c', None), ('Account.PS_Tracking_Number_9__c', None), ('Account.qbdialer__CloseDate__c', None), ('Account.qbdialer__CloseScore__c', None), ('Account.qbdialer__Dials__c', None), ('Account.qbdialer__LastCallTime__c', None), ('Account.qbdialer__Related_Contact_Dials__c', None), ('Account.qbdialer__Related_Contact_LastCallTime__c', None), ('Account.qbdialer__ResponseTime__c', None), ('Account.Quarter_End_Hold__c', None), ('Account.Quoting_Proposal_Preferences__c', None), ('Account.QuotIT_Broker_ID__c', None), ('Account.Rating', None), ('Account.Rating_Date__c', None), ('Account.Reason_Type__c', None), ('Account.Reciprocal_Referral__c', None), ('Account.Reciprocal_Referral_Checked__c', None), ('Account.Record_Type_Name__c', None), ('Account.Referral_NPS__c', None), ('Account.Referred_Products__c', None), ('Account.Referrer_Email__c', None), ('Account.Referrer_ID__c', None), ('Account.Referrer_Name__c', None), ('Account.Referrer_Other__c', None), ('Account.Referrer_Phone__c', None), ('Account.Referring_Employee__c', None), ('Account.Region__c', None), ('Account.Region_Benefit__c', None), ('Account.Renewal__c', None), ('Account.Report_running_parent_AccountId__c', None), ('Account.Report_Running_UserId__c', None), ('Account.Requested_Level_of_Access__c', None), ('Account.Resend_Email__c', None), ('Account.Retail_Broker__c', None), ('Account.Revenue_Share_Percentage__c', None), ('Account.Reverse_Integration_Error__c', None), ('Account.Schedule_Day__c', None), ('Account.Secondary_Partner__c', None), ('Account.Secondary_Partner_Type__c', None), ('Account.Secondary_Partner_Type_f__c', None), ('Account.Security_Line_of_Business__c', None), ('Account.Selling_Line_of_Business__c', None), ('Account.Selling_Status__c', None), ('Account.Send_to_ICM__c', None), ('Account.Senior_Online_Quoting_States__c', None), ('Account.Senior_Product_States__c', None), ('Account.Senior_Product_Types__c', None), ('Account.Service_Location__c', None), ('Account.Service_NPS__c', None), ('Account.Services_Active__c', None), ('Account.Services_Inactive__c', None), ('Account.Services_with_Vendor__c', None), ('Account.SFI_ID__c', None), ('Account.Shipment_Date__c', None), ('Account.ShippingAddress', None), ('Account.Sic', None), ('Account.SicDesc', None), ('Account.Site', None), ('Account.sma__MAAssignmentRule__c', None), ('Account.Small_Group_Notifications__c', None), ('Account.Small_Group_Online_Quoting_States__c', None), ('Account.Small_Group_Product_States__c', None), ('Account.Small_Group_Product_Types__c', None), ('Account.Source_Service_Rep__c', None), ('Account.Source_System__c', None), ('Account.SSN__c', None), ('Account.SSN_Search__c', None), ('Account.Stage2URL__c', None), ('Account.Start_Date__c', None), ('Account.State__c', None), ('Account.State_SDI_Filing__c', None), ('Account.State_SUI_Filing__c', None), ('Account.State_SWT_Filing__c', None), ('Account.Status__c', None), ('Account.Stop_Loss_Online_Quoting_States__c', None), ('Account.Stop_Loss_Product_States__c', None), ('Account.Stop_Loss_Product_Types__c', None), ('Account.Strategic_Alliance__c', None), ('Account.Street__c', None), ('Account.Submitted__c', None), ('Account.Tax_Type__c', None), ('Account.Telemarketer__c', None), ('Account.Telemarketing_Disposition__c', None), ('Account.Telemarketing_Lead__c', None), ('Account.Termination_Date__c', None), ('Account.Text_Notification_Mobile__c', None), ('Account.TickerSymbol', None), ('Account.Top_100__c', None), ('Account.Total_Cases_Sold__c', None), ('Account.Total_Employees_on_Payroll__c', None), ('Account.TPA_Notification_Email__c', None), ('Account.Tracking_Number_s__c', None), ('Account.Training_Announcements__c', None), ('Account.Type', None), ('Account.Union_Affliation__c', None), ('Account.UpdateFlag__c', None), ('Account.VanillaSoft_Lead__c', None), ('Account.Vesting__c', None), ('Account.WC_Carrier__c', None), ('Account.WC_Renewal_Date__c', None), ('Account.Website', None), ('Account.WL_YTD_Agency_Total__c', None), ('Account.WL_YTD_for_Agency_s_Agents__c', None), ('Account.WL_YTD_for_Agent_Agency__c', None), ('Account.Work_phone__c', None), ('Account.XP_PP_Corp_ID_Range__c', None), ('Account.XP_PP_Partner_Code__c', None), ('Account.Year_End_Hold__c', None), ('Account.ZChangeOrigin__c', None), ('Account.Zip_Postal_Code__c', None), ('Agent_Affiliation__c.Agent__c', None), ('Agent_Affiliation__c.AMS_ID__c', None), ('Agent_Affiliation__c.BP_ID__c', None), ('Agent_Affiliation__c.IBAS_ID__c', None), ('Agent_Affiliation__c.Payout__c', None), ('Agent_Affiliation__c.Primary__c', None), ('Agent_Affiliation__c.Service__c', None), ('Alert__c.Client_Code__c', None), ('Alert__c.Destination_Contact__c', None), ('Alert__c.Destination_Email__c', None), ('Alert__c.Detail_Link__c', None), ('Alert__c.HTML_for_Template_Body__c', None), ('Alert__c.Notification_Method__c', None), ('Alert__c.Notification_Type__c', None), ('Alert__c.Recipient_Email__c', None), ('Alert__c.Recipient_Name__c', None), ('Alert__c.Recipient_Phone__c', None), ('Alert__c.Source_System__c', None), ('Alert__c.Status__c', None), ('Alert__c.Template_Name__c', None), ('Alert__c.URL_String__c', None), ('ambition__AmbitionEmailRecipient__c.ambition__Email__c', None), ('ambition__AmbitionEntity__c.ambition__AmbitionEntityId__c', None), ('ambition__AmbitionEntityField__c.ambition__FieldName__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__AuthToken__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__CalloutLimit__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__LogLevel__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__MaxPostSize__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__PushCount__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__PusherInterval__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__PusherState__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__QueryLimit__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__ReplicationEnabled__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__TabUrl__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__UploadUrl__c', None), ('ambition__AmbitionGeneralConfig__c.ambition__WidgetsUrl__c', None), ('ambition__AmbitionLogEntry__c.ambition__Data__c', None), ('ambition__AmbitionPushableObject__c.ambition__CommonObjectName__c', None), ('ambition__AmbitionPushableObject__c.ambition__IsCurrent__c', None), ('ambition__AmbitionPushableObject__c.ambition__ObjectId__c', None), ('ambition__AmbitionPushableObject__c.ambition__ObjectName__c', None), ('ambition__AmbitionPushableObject__c.ambition__Replicateable__c', None), ('ambition__AmbitionPushableObject__c.ambition__RoutingToken__c', None), ('ambition__AmbitionPushableObject__c.ambition__Timestamp__c', None), ('ambition__AmbitionPushableObject__c.ambition__TimestampName__c', None), ('ambition__AmbitionPushableObject__c.ambition__UserField__c', None), ('ambition__AmbitionPushableObject__c.ambition__WhereClause__c', None), ('ambition__AmbitionPushableObjectField__c.ambition__FieldName__c', None), ('ambition__AmbitionPushableObjectField__c.ambition__ObjectName__c', None), ('ambition__AmbitionPushableObjectTestObject__c.ambition__timestamp_for_unittest__c', None), ('ambition__AmbitionReportFilter__c.ambition__Column__c', None), ('ambition__AmbitionReportFilter__c.ambition__Operator__c', None), ('ambition__AmbitionReportFilter__c.ambition__ReportRunConfigUid__c', None), ('ambition__AmbitionReportFilter__c.ambition__Value__c', None), ('ambition__AmbitionReportInstance__c.ambition__ReportId__c', None), ('ambition__AmbitionReportInstance__c.ambition__ReportInstanceId__c', None), ('ambition__AmbitionReportInstance__c.ambition__RunConfigUid__c', None), ('ambition__AmbitionReportInstance__c.ambition__Timestamp__c', None), ('ambition__AmbitionReportInstanceChunk__c.ambition__Body__c', None), ('ambition__AmbitionReportInstanceChunk__c.ambition__ReportInstanceId__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__EnableChunking__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__LastRun__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__LastUpload__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__ReportId__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__RoutingToken__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__RunConfigUid__c', None), ('ambition__AmbitionReportRunConfig__c.ambition__RunInterval__c', None), ('ambition__log_entry__c.ambition__entry__c', None), ('AMS_Account_Team__c.AMS_ID__c', None), ('ANTS_Letters_and_Attachments__c.AntsCreatedBy__c', None), ('ANTS_Letters_and_Attachments__c.AntsCreatedDate__c', None), ('ANTS_Letters_and_Attachments__c.AttachmentLetterDescription__c', None), ('ANTS_Letters_and_Attachments__c.AttachmentLetterName__c', None), ('ANTS_Letters_and_Attachments__c.AttComposite__c', None), ('ANTS_Letters_and_Attachments__c.SentTo__c', None), ('ANTS_Letters_and_Attachments__c.Type__c', None), ('Apex_Error__c.AFocus_EmailBody__c', None), ('Apex_Error__c.Application_Name__c', None), ('Apex_Error__c.Carrier_Library_Filters__c', None), ('Apex_Error__c.Create_Date_Time__c', None), ('Apex_Error__c.Created_Date_Text_GMT__c', None), ('Apex_Error__c.Created_Hour_Number_GMT__c', None), ('Apex_Error__c.Created_Min_Number_GMT__c', None), ('Apex_Error__c.Error_Description__c', None), ('Apex_Error__c.Error_message__c', None), ('Apex_Error__c.Fixed_Date__c', None), ('Apex_Error__c.Integration_Header__c', None), ('Apex_Error__c.Integration_Request__c', None), ('Apex_Error__c.Integration_Request_ID__c', None), ('Apex_Error__c.Integration_Request_Method__c', None), ('Apex_Error__c.Integration_Response__c', None), ('Apex_Error__c.Integration_Status__c', None), ('Apex_Error__c.Integration_Tracking_ID__c', None), ('Apex_Error__c.Integration_User__c', None), ('Apex_Error__c.Log_Comments__c', None), ('Apex_Error__c.Long_Error_Message__c', None), ('Apex_Error__c.Method_name__c', None), ('Apex_Error__c.Omitted__c', None), ('Apex_Error__c.Record_Id__c', None), ('Asset.Account', None), ('Asset.AssetLevel', None), ('Asset.AssetProvidedBy', None), ('Asset.AssetServicedBy', None), ('Asset.Contact', None), ('Asset.Description', None), ('Asset.DigitalAssetStatus', None), ('Asset.InstallDate', None), ('Asset.IsCompetitorProduct', None), ('Asset.IsInternal', None), ('Asset.Price', None), ('Asset.Product2', None), ('Asset.ProductCode', None), ('Asset.ProductDescription', None), ('Asset.ProductFamily', None), ('Asset.PurchaseDate', None), ('Asset.Quantity', None), ('Asset.SerialNumber', None), ('Asset.Status', None), ('Asset.StockKeepingUnit', None), ('Asset.UsageEndDate', None), ('AssetRelationship.RelationshipType', None), ('Authorization__c.Account__c', None), ('Authorization__c.Case__c', None), ('Authorization__c.Contact__c', None), ('Authorization__c.Manager_Override_Status__c', None), ('Authorization__c.Notes__c', None), ('Authorization__c.Secondary_Questions__c', None), ('Authorization__c.Secondary_Questions_Status__c', None), ('Authorization__c.Security__c', None), ('AuthorizationForm.DefaultAuthFormText', None), ('AuthorizationForm.EffectiveFromDate', None), ('AuthorizationForm.EffectiveToDate', None), ('AuthorizationForm.IsSignatureRequired', None), ('AuthorizationForm.RevisionNumber', None), ('AuthorizationFormConsent.DocumentVersion', None), ('AuthorizationFormConsent.Status', None), ('AuthorizationFormText.ContentDocument', None), ('AuthorizationFormText.FullAuthorizationFormUrl', None), ('AuthorizationFormText.Locale', None), ('AuthorizationFormText.SummaryAuthFormText', None), ('Benefits_Upsell_Opportunity__c.Line_of_Coverage__c', None), ('Benefits_Upsell_Opportunity__c.Priority__c', None), ('Broker_Commission__c.AgencyFocus_ID__c', None), ('Broker_Commission__c.Annual_Commission__c', None), ('Broker_Commission__c.Annual_Premium__c', None), ('Broker_Commission__c.Carrier_Name__c', None), ('Broker_Commission__c.Check_Number__c', None), ('Broker_Commission__c.Client_Account__c', None), ('Broker_Commission__c.Commission_Amount__c', None), ('Broker_Commission__c.Date_Paid__c', None), ('Broker_Commission__c.Line_of_Coverage__c', None), ('Broker_Commission__c.Lives__c', None), ('Broker_Commission__c.Paid_Rate__c', None), ('Broker_Commission__c.Paid_Split__c', None), ('Broker_Commission__c.Payee_ID__c', None), ('Broker_Commission__c.Policy__c', None), ('Broker_Commission__c.Posting_Record_ID__c', None), ('Broker_Commission__c.Premium__c', None), ('Broker_Commission__c.Premium_Month__c', None), ('Broker_Commission__c.Three_Month_Commission__c', None), ('Broker_Commission__c.Three_Month_Premium__c', None), ('Broker_Commission__c.YTD_Commissions_Paid_Calculation__c', None), ('Broker_Commission__c.YTD_Premium_Paid_Calculation__c', None), ('Broker_Email_Archive__c.Active__c', None), ('Broker_Email_Archive__c.Body__c', None), ('Broker_Email_Archive__c.Category__c', None), ('Broker_Email_Archive__c.Date__c', None), ('Broker_Email_Archive__c.State__c', None), ('Broker_Email_Archive__c.Subject__c', None), ('Broker_Favorites__c.sObject_Id__c', None), ('Broker_Favorites__c.Type__c', None), ('Broker_Favorites__c.User_Id__c', None), ('Broker_Trip_Status__c.Agency_Roll_up_Excluded_WLs__c', None), ('Broker_Trip_Status__c.Agency_Roll_up_Payroll_WLs__c', None), ('Broker_Trip_Status__c.Agency_Roll_up_Weighted_Lives__c', None), ('Broker_Trip_Status__c.Agency_Total_Excluded_WLs__c', None), ('Broker_Trip_Status__c.Agency_Total_Payroll_WLs__c', None), ('Broker_Trip_Status__c.Agency_Total_WLs__c', None), ('Broker_Trip_Status__c.Benefits_WL_s__c', None), ('Broker_Trip_Status__c.Broker_Trip_Status_Unique_ID__c', None), ('Broker_Trip_Status__c.Cases_Sold__c', None), ('Broker_Trip_Status__c.Current_Promotion__c', None), ('Broker_Trip_Status__c.Excluded_WL_s__c', None), ('Broker_Trip_Status__c.Individual_Total_WLs__c', None), ('Broker_Trip_Status__c.Online_Enrollment__c', None), ('Broker_Trip_Status__c.Override__c', None), ('Broker_Trip_Status__c.Payroll_WL_s__c', None), ('Broker_Trip_Status__c.Target_Exceeded__c', None), ('Broker_Trip_Status__c.Total_WL_s__c', None), ('Broker_Trip_Status__c.Trip_Status_Eligibility__c', None), ('Broker_Trip_Status__c.Weighted_Lives__c', None), ('BrokerOpportunity__c.AFocus_Address_2__c', None), ('BrokerOpportunity__c.AFocus_Closed__c', None), ('BrokerOpportunity__c.AFocus_Lines_of_Coverage__c', None), ('BrokerOpportunity__c.AFocus_SIC_Code__c', None), ('BrokerOpportunity__c.AFocus_street__c', None), ('BrokerOpportunity__c.Archived__c', None), ('BrokerOpportunity__c.Average_Total_of_Employees__c', None), ('BrokerOpportunity__c.CC_Email__c', None), ('BrokerOpportunity__c.City__c', None), ('BrokerOpportunity__c.Client_Account__c', None), ('BrokerOpportunity__c.Client_Id__c', None), ('BrokerOpportunity__c.Client_Name__c', None), ('BrokerOpportunity__c.Close_Date__c', None), ('BrokerOpportunity__c.Effective_Date__c', None), ('BrokerOpportunity__c.First_Name__c', None), ('BrokerOpportunity__c.Group_Zip_Postal_Code__c', None), ('BrokerOpportunity__c.Last_Name__c', None), ('BrokerOpportunity__c.Latest_Quote__c', None), ('BrokerOpportunity__c.Opp_id__c', None), ('BrokerOpportunity__c.Opportunity__c', None), ('BrokerOpportunity__c.OpptyExtID__c', None), ('BrokerOpportunity__c.Pay_Period__c', None), ('BrokerOpportunity__c.Proposal_Link__c', None), ('BrokerOpportunity__c.Quote_Id__c', None), ('BrokerOpportunity__c.Send_To_Email__c', None), ('BrokerOpportunity__c.Source_System__c', None), ('BrokerOpportunity__c.StageName__c', None), ('BrokerOpportunity__c.State__c', None), ('BrokerOpportunity__c.Status__c', None), ('BrokerOpportunity__c.Total_Employees__c', None), ('BrokerSales__c.AgencyFocus_ID__c', None), ('BrokerSales__c.Broker_Location__c', None), ('BrokerSales__c.Broker_Rep__c', None), ('BrokerSales__c.Broker_Trip_Status__c', None), ('BrokerSales__c.CareFirst_WL_s__c', None), ('BrokerSales__c.Carrier_Name__c', None), ('BrokerSales__c.Cases_Sold__c', None), ('BrokerSales__c.Client__c', None), ('BrokerSales__c.Effective_Date__c', None), ('BrokerSales__c.Eligible_WL_s__c', None), ('BrokerSales__c.Life_Status__c', None), ('BrokerSales__c.Lives_Approved__c', None), ('BrokerSales__c.Online_Enrollment__c', None), ('BrokerSales__c.Premium_Approved__c', None), ('BrokerSales__c.Total_WL_s__c', None), ('BrokerSales__c.Weighted_Lifes_Approved__c', None), ('Campaign.ActualCost', None), ('Campaign.Allow_Additional_Field_Authority__c', None), ('Campaign.Allow_as_Primary_Campaign__c', None), ('Campaign.AmountAllOpportunities', None), ('Campaign.AmountWonOpportunities', None), ('Campaign.BudgetedCost', None), ('Campaign.Corporate_Campaign_Discount__c', None), ('Campaign.Description', None), ('Campaign.Division__c', None), ('Campaign.EndDate', None), ('Campaign.ExpectedResponse', None), ('Campaign.ExpectedRevenue', None), ('Campaign.Free_1st_Year_W2s__c', None), ('Campaign.Free_Months_Payroll__c', None), ('Campaign.HierarchyActualCost', None), ('Campaign.HierarchyAmountAllOpportunities', None), ('Campaign.HierarchyAmountWonOpportunities', None), ('Campaign.HierarchyBudgetedCost', None), ('Campaign.HierarchyExpectedRevenue', None), ('Campaign.HierarchyNumberOfContacts', None), ('Campaign.HierarchyNumberOfConvertedLeads', None), ('Campaign.HierarchyNumberOfLeads', None), ('Campaign.HierarchyNumberOfOpportunities', None), ('Campaign.HierarchyNumberOfResponses', None), ('Campaign.HierarchyNumberOfWonOpportunities', None), ('Campaign.HierarchyNumberSent', None), ('Campaign.IsActive', None), ('Campaign.Marketing_Engaged_Campaign__c', None), ('Campaign.Maximum_Field_Authority_Allowed__c', None), ('Campaign.NumberOfContacts', None), ('Campaign.NumberOfConvertedLeads', None), ('Campaign.NumberOfLeads', None), ('Campaign.NumberOfOpportunities', None), ('Campaign.NumberOfResponses', None), ('Campaign.NumberOfWonOpportunities', None), ('Campaign.NumberSent', None), ('Campaign.Other_Campaign_Type__c', None), ('Campaign.Parent', None), ('Campaign.StartDate', None), ('Campaign.Status', None), ('Campaign.Total_Discount__c', None), ('Campaign.Type', None), ('CampaignInfluence.Contact', None), ('CampaignInfluence.Influence', None), ('CampaignInfluence.RevenueShare', None), ('CampaignMember.Acct_Referral_NPS__c', None), ('CampaignMember.Acct_Service_NPS__c', None), ('CampaignMember.AcctId__c', None), ('CampaignMember.Marketing_Engaged_Campaign_del__c', None), ('Carrier__c.AMS_ID__c', None), ('Carrier__c.AutorabitExtId__c', None), ('Carrier__c.BP_ID__c', None), ('Carrier__c.Carrier_Account__c', None), ('Carrier__c.Carrier_Code__c', None), ('Carrier__c.CarrierID__c', None), ('Carrier__c.Source_System__c', None), ('Carrier__c.Trigger_EDI_Case_Creation__c', None), ('Carrier_Data_Mapping__c.Annual_Premium__c', None), ('Carrier_Data_Mapping__c.AutorabitExtId__c', None), ('Carrier_Data_Mapping__c.Bmall_Cutoff_Date__c', None), ('Carrier_Data_Mapping__c.BmallCutoffDate__c', None), ('Carrier_Data_Mapping__c.Broker_Portal_Display_Until_Date__c', None), ('Carrier_Data_Mapping__c.Carrier_Account_Name__c', None), ('Carrier_Data_Mapping__c.Carrier_Acct__c', None), ('Carrier_Data_Mapping__c.Commission_Schedule__c', None), ('Carrier_Data_Mapping__c.Commission_Type__c', None), ('Carrier_Data_Mapping__c.Contract_Type__c', None), ('Carrier_Data_Mapping__c.Cutoff_Date__c', None), ('Carrier_Data_Mapping__c.Cutoff_Date_Type__c', None), ('Carrier_Data_Mapping__c.Default_Type__c', None), ('Carrier_Data_Mapping__c.Effective_Date__c', None), ('Carrier_Data_Mapping__c.First_Year__c', None), ('Carrier_Data_Mapping__c.Group_Size__c', None), ('Carrier_Data_Mapping__c.Lines_of_Coverage__c', None), ('Carrier_Data_Mapping__c.Max_Eligible_Lives__c', None), ('Carrier_Data_Mapping__c.Min_Eligible_Lives__c', None), ('Carrier_Data_Mapping__c.Note__c', None), ('Carrier_Data_Mapping__c.Override_PEPM__c', None), ('Carrier_Data_Mapping__c.Override_Percent_Premium__c', None), ('Carrier_Data_Mapping__c.Plan_Type__c', None), ('Carrier_Data_Mapping__c.Renewal__c', None), ('Carrier_Data_Mapping__c.RTS_Carrier_Name__c', None), ('Carrier_Data_Mapping__c.RTS_CompTypeDetails__c', None), ('Carrier_Data_Mapping__c.RTS_ID__c', None), ('Carrier_Data_Mapping__c.RTS_LineOfCoverage__c', None), ('Carrier_Data_Mapping__c.RTS_PlanType__c', None), ('Carrier_Data_Mapping__c.State__c', None), ('Carrier_Data_Mapping__c.State_Code__c', None), ('Carrier_Data_Mapping__c.Status__c', None), ('Carrier_Data_Mapping__c.Submitted_Mechanism__c', None), ('Carrier_RFP__c.Case__c', None), ('Carrier_RFP__c.Notes__c', None), ('Carrier_RFP__c.Opportunity__c', None), ('Carrier_RFP__c.Quoted_Carrier__c', None), ('Carrier_RFP__c.Received_from_Carrier__c', None), ('Carrier_RFP__c.Sent_to_Agent__c', None), ('Carrier_RFP__c.Sent_to_Carrier__c', None), ('Carrier_RFP__c.Status__c', None), ('CarrierLibrary__c.Approved_for_Broker_Community__c', None), ('CarrierLibrary__c.Broker_Portal_Display_Until_Date__c', None), ('CarrierLibrary__c.Carrier__c', None), ('CarrierLibrary__c.Date__c', None), ('CarrierLibrary__c.Document_Type__c', None), ('CarrierLibrary__c.External__c', None), ('CarrierLibrary__c.File_ID__c', None), ('CarrierLibrary__c.File_Name__c', None), ('CarrierLibrary__c.File_Source__c', None), ('CarrierLibrary__c.Insurance_Type__c', None), ('CarrierLibrary__c.Product_Type__c', None), ('CarrierLibrary__c.Public_URL__c', None), ('CarrierLibrary__c.Publish__c', None), ('CarrierLibrary__c.State__c', None), ('CarrierLibrary__c.State_Code__c', None), ('Case__hd.ClosedDate__hpr', None), ('Case__hd.ClosedDate__hst', None), ('Case__hd.CreatedDate__hpr', None), ('Case__hd.CreatedDate__hst', None), ('Case_Dimension_Email__c.Case_Dimension_Email_Id__c', None), ('Case_Dimension_Email__c.Is_Communication_Open__c', None), ('Case_Dimension_Email__c.Responding_EmailMessage_Date__c', None), ('Case_Dimension_Email__c.Responding_EmailMessage_Id__c', None), ('Case_Dimension_Email__c.Time_Communication_Duration__c', None), ('Case_Route__c.Case_Default_Amount__c', None), ('Case_Route__c.Case_Overflow_Amount__c', None), ('Case_Route__c.Default_Queue_Email__c', None), ('Case_Route__c.Is_Active_Primary__c', None), ('Case_Route__c.Is_Active_Secondary__c', None), ('Case_Route__c.Manager__c', None), ('Case_Route__c.Queue_Business_Hours__c', None), ('Case_Route__c.Route_Id__c', None), ('Case_Route__c.Support_Email__c', None), ('Case_Route__c.User_Owner_Primary__c', None), ('Case_Route__c.User_Owner_Secondary__c', None), ('Case.Account', None), ('Case.Account_Identifier__c', None), ('Case.Account_Installation_Auditor__c', None), ('Case.Account_Owner__c', None), ('Case.Account_Setup_Verified__c', None), ('Case.Account_Setup_Verified_F__c', None), ('Case.Account_State__c', None), ('Case.Account_Type_at_Case_Creation__c', None), ('Case.Account_Verified_Date__c', None), ('Case.Acct_Partner_Type__c', None), ('Case.Acknowledge_Disclaimer__c', None), ('Case.Acknowledgement_of_Receipt__c', None), ('Case.Acquisition_Code__c', None), ('Case.Additional_Follow_Up_Complete__c', None), ('Case.Additional_Follow_Up_Scheduled__c', None), ('Case.Additional_Info_from_Agent_Requested__c', None), ('Case.Additional_Info_Received_from_Agent__c', None), ('Case.Additional_Info_Requested_from_Agent__c', None), ('Case.Additional_Info_Sent_to_Carrier__c', None), ('Case.Afocus_Carrier_Name__c', None), ('Case.AFocus_Case_Type__c', None), ('Case.AFocus_CaseOrigin_Formula__c', None), ('Case.AFocus_CaseType_Formula__c', None), ('Case.AFocus_ClientName__c', None), ('Case.AFocus_EIN__c', None), ('Case.AFocus_Quote__c', None), ('Case.AFocus_QuoteName__c', None), ('Case.Age_AI_Complete_Audit__c', None), ('Case.Age_Assigned_NBA_Req_MI__c', None), ('Case.Age_Audit_Audit_Approved__c', None), ('Case.Age_Audit_Carrier__c', None), ('Case.Age_Carrier_AI__c', None), ('Case.Age_EnrollmentComp_SubmittedtoCarrier__c', None), ('Case.Age_IAQA_QAComplete__c', None), ('Case.Age_NB_QA__c', None), ('Case.Age_NBQA_QA__c', None), ('Case.Age_Rcvd_Assigned_IAQA__c', None), ('Case.Age_Rcvd_Assigned_NBA__c', None), ('Case.Age_Rcvd_Assigned_NBQA__c', None), ('Case.Age_Recvd_IAQA_Complete__c', None), ('Case.Age_Recvd_MI_Sent_to_Carrier__c', None), ('Case.Age_Recvd_NBQAComplete__c', None), ('Case.Agency__c', None), ('Case.AgencyDepartment__c', None), ('Case.AgencyFocus_Status__c', None), ('Case.AgencyLocal__c', None), ('Case.Agent_Notification_Date__c', None), ('Case.Agent_Notified_of_Audit__c', None), ('Case.AI_Tech__c', None), ('Case.Al_Enrollment_Tech__c', None), ('Case.AltAddress__c', None), ('Case.AltEmail__c', None), ('Case.Amount_Paid__c', None), ('Case.Amount_Pending_UW__c', None), ('Case.Amount_Requested__c', None), ('Case.Amount_Written_Off__c', None), ('Case.Approval_Request_To_Branch_Mgr__c', None), ('Case.Approval_Status__c', None), ('Case.Approved_Amount__c', None), ('Case.Approved_Date__c', None), ('Case.Arrears__c', None), ('Case.ASD_AE__c', None), ('Case.ASD_Renewal_Status__c', None), ('Case.Asset', None), ('Case.Assigned_Date__c', None), ('Case.Assigned_to_Carrier_Install__c', None), ('Case.AssignedRed__c', None), ('Case.Assignment_Status__c', None), ('Case.Audit_Complete_Date_Time__c', None), ('Case.Audit_Score_Demos__c', None), ('Case.Audit_Score_Shell__c', None), ('Case.Audit_Score_Wages__c', None), ('Case.Auto_Approval_Status__c', None), ('Case.AutorabitExtId__c', None), ('Case.Average_Override__c', None), ('Case.Average_Override_Percentage__c', None), ('Case.Backdated_Payroll_Processed__c', None), ('Case.Backup_Demo_Date_Time__c', None), ('Case.Balance__c', None), ('Case.Bank_Account_Number__c', None), ('Case.Bank_Name__c', None), ('Case.Bank_Routing_Number__c', None), ('Case.Ben_Admin_Error__c', None), ('Case.Ben_Admin_Error_Details__c', None), ('Case.Benefit_Amount_Approved__c', None), ('Case.Benefit_Amount_Requested__c', None), ('Case.Benefit_Approved_Date__c', None), ('Case.BenefitMall_Error__c', None), ('Case.Bill_req_in_mass__c', None), ('Case.Billing_Type__c', None), ('Case.Billing_w_Package__c', None), ('Case.Binder_Check__c', None), ('Case.BMAS_Policy__c', None), ('Case.BMAS_Updated__c', None), ('Case.BMLL_Effective_Date__c', None), ('Case.BMLL_Liability_Amount__c', None), ('Case.BMLL_Sub_Category__c', None), ('Case.BOR_Type__c', None), ('Case.BP_Plan_ID__c', None), ('Case.Branch_Mgr_Approval__c', None), ('Case.Broker__c', None), ('Case.Broker_ID__c', None), ('Case.Broker_State__c', None), ('Case.Broker_Status_Update__c', None), ('Case.BSE__c', None), ('Case.BSS__c', None), ('Case.Business_Group__c', None), ('Case.Business_Impact__c', None), ('Case.Business_Impact_Sub_Category__c', None), ('Case.Business_Rank__c', None), ('Case.Business_Type__c', None), ('Case.BusinessHours', None), ('Case.Carrier__c', None), ('Case.Carrier_Approval__c', None), ('Case.Carrier_Approved__c', None), ('Case.Carrier_Cutoff__c', None), ('Case.Carrier_Followup__c', None), ('Case.Carrier_Group_Number__c', None), ('Case.Carrier_Install_Complete__c', None), ('Case.Carrier_Install_Started__c', None), ('Case.Carrier_Installation_Status__c', None), ('Case.Carrier_Issue__c', None), ('Case.Carrier_Issue_Recieved__c', None), ('Case.Carrier_Requires_Additional_Information__c', None), ('Case.Carrier_Response__c', None), ('Case.Carrier_Response_Date__c', None), ('Case.Carrier_RFP_Follow_Up__c', None), ('Case.Case_Age__c', None), ('Case.Case_Category__c', None), ('Case.Case_Comment_Updated__c', None), ('Case.Case_Disposition__c', None), ('Case.Case_Disposition_Sub_Category__c', None), ('Case.Case_Entitlement_Program__c', None), ('Case.Case_ID__c', None), ('Case.Case_Resolved__c', None), ('Case.Case_Time_in_Assigned__c', None), ('Case.Case_Time_in_Queue__c', None), ('Case.Case_Type__c', None), ('Case.Case_View_Quick_Notes__c', None), ('Case.Case_Withdrawn_Reason__c', None), ('Case.CaseOwnedByQueue__c', None), ('Case.CaseOwnerMgrEmail__c', None), ('Case.Category__c', None), ('Case.Census_Enrollment__c', None), ('Case.Certification_Audit__c', None), ('Case.Channel__c', None), ('Case.Chart_of_Accounts_Included__c', None), ('Case.Chatter_Recipient__c', None), ('Case.Check_Date__c', None), ('Case.Check_In__c', None), ('Case.Check_Location__c', None), ('Case.City__c', None), ('Case.Client_Approved_Date__c', None), ('Case.Client_Code__c', None), ('Case.Client_Products__c', None), ('Case.Client_Type_Status__c', None), ('Case.Clone_Attachments__c', None), ('Case.Closed_Quarter_Wages_Balanced__c', None), ('Case.Closed_Quarter_Wages_Loaded__c', None), ('Case.ClosedDate', None), ('Case.Comments__c', None), ('Case.Comments_to_Client__c', None), ('Case.Commission__c', None), ('Case.Commission_Start_Date__c', None), ('Case.Contact', None), ('Case.Conversion_Batch__c', None), ('Case.Conversion_Begin_Date__c', None), ('Case.Conversion_Complete_Date__c', None), ('Case.Conversion_Status__c', None), ('Case.Cost_Savings__c', None), ('Case.Could_have_processed_in_EF__c', None), ('Case.Count_of_Emails_Received__c', None), ('Case.Count_of_Emails_Sent__c', None), ('Case.Count_of_Escalations__c', None), ('Case.CreatorOwnsCase__c', None), ('Case.Credit_Applied_to_Invoice__c', None), ('Case.Credit_Approval__c', None), ('Case.Credit_Check_Date__c', None), ('Case.Credit_Check_Request__c', None), ('Case.Credit_Check_Response__c', None), ('Case.Credit_Check_Result__c', None), ('Case.Credit_Date__c', None), ('Case.Credit_Decision_Date__c', None), ('Case.CRQS_Quote_ID__c', None), ('Case.CSA_Signed__c', None), ('Case.CSA_Type__c', None), ('Case.Current_Benefit_Amount__c', None), ('Case.Current_Tier__c', None), ('Case.Customer_Group__c', None), ('Case.Customization_Required__c', None), ('Case.CXC_Setup_Completion_Date__c', None), ('Case.Data_Entry_BSS__c', None), ('Case.Date_1st_follow_up_Scheduled__c', None), ('Case.Date_2nd_follow_up_Scheduled__c', None), ('Case.Date_3rd_follow_up__c', None), ('Case.Date_3rd_follow_up_Scheduled__c', None), ('Case.Date_AI_Completed_Corrections__c', None), ('Case.Date_Assigned_to_Acct_Installation_QA__c', None), ('Case.Date_Assigned_to_AI_Enrollment__c', None), ('Case.Date_Assigned_to_AI_QA__c', None), ('Case.Date_Assigned_to_AI_Tech__c', None), ('Case.Date_Assigned_to_AIM__c', None), ('Case.Date_Assigned_to_NBA__c', None), ('Case.Date_Assigned_to_New_Business_QA__c', None), ('Case.Date_Binder_Submitted__c', None), ('Case.Date_BMAS_Updated__c', None), ('Case.Date_Case_Information_Rcvd_from_Carrier__c', None), ('Case.Date_Census_Notice_Received__c', None), ('Case.Date_Certification_Audit_Returned__c', None), ('Case.Date_Certification_Audit_Sent_to_Broke__c', None), ('Case.Date_Certification_Audit_Sent_to_Broker__c', None), ('Case.Date_Client_EF_Training_Complete__c', None), ('Case.Date_Closed__c', None), ('Case.Date_Complete_Certification_Audit_Sent__c', None), ('Case.Date_Dallas_EF_Support_Notified_Complete__c', None), ('Case.Date_EF_Set_up_Reviewed_with_Client__c', None), ('Case.Date_Enrollment_Processed__c', None), ('Case.Date_Enrollment_Sent_to_Carrier__c', None), ('Case.Date_Escalated_to_Mgmt__c', None), ('Case.Date_External_Followup__c', None), ('Case.Date_Final_Acct_Installation_QA_Complete__c', None), ('Case.Date_Final_New_Business_QA_Complete__c', None), ('Case.Date_Final_QA_Complete__c', None), ('Case.Date_GA_Case_Complete__c', None), ('Case.Date_GA_Enrollment_Complete__c', None), ('Case.Date_Group_Submitted_to_Carrier__c', None), ('Case.Date_Imaged__c', None), ('Case.Date_Integration_Configured__c', None), ('Case.Date_Missing_Information_Received__c', None), ('Case.Date_Missing_Information_Requested__c', None), ('Case.Date_Needed__c', None), ('Case.Date_PayFocus_EmployerFocus_Audit_Comp__c', None), ('Case.Date_Payment_Processed__c', None), ('Case.Date_plan_info_received__c', None), ('Case.Date_plan_info_requested__c', None), ('Case.Date_Pushed_to_ANTS__c', None), ('Case.Date_QA_complete__c', None), ('Case.Date_Received__c', None), ('Case.Date_Received_from_External_Partner__c', None), ('Case.Date_Renewal_Distributed_to_Agent__c', None), ('Case.Date_Renewal_Received_from_Carrier__c', None), ('Case.Date_Reported__c', None), ('Case.Date_Returned_to_AI_for_Correction__c', None), ('Case.Date_Returned_to_QA__c', None), ('Case.Date_Revisions_Complete__c', None), ('Case.Date_Sent_to_Carrier__c', None), ('Case.Date_Submitted_to_Acct_Installation_QA__c', None), ('Case.Date_Submitted_to_AI__c', None), ('Case.Date_Submitted_to_Case_Installation__c', None), ('Case.Date_Submitted_to_New_Business_QA__c', None), ('Case.Date_Time_Assigned__c', None), ('Case.Date_Time_Escalated__c', None), ('Case.Date_Transition_Letter_Sent_to_Carrier__c', None), ('Case.Date_Transmitted_to_Carrier__c', None), ('Case.Demo_Complete__c', None), ('Case.Demo_Notes__c', None), ('Case.Demo_Scheduled_DateTime__c', None), ('Case.Dental_of_Lives__c', None), ('Case.Department__c', None), ('Case.Department_Responsible_for_Error__c', None), ('Case.Deprecated_SSN__c', None), ('Case.DeptFreqNotice__c', None), ('Case.DeptFreqSys__c', None), ('Case.Description', None), ('Case.Destination_Client_Code__c', None), ('Case.Destination_System__c', None), ('Case.Digital_Support_Category__c', None), ('Case.Direct_Deposit_Amount__c', None), ('Case.Disclaimer__c', None), ('Case.Discount__c', None), ('Case.Discount_Amount__c', None), ('Case.Display_in_Payroll_MyOpen_List_View__c', None), ('Case.DnBi_Application_Id__c', None), ('Case.Document__c', None), ('Case.Drop_Month__c', None), ('Case.Due_Date__c', None), ('Case.Due_DateTime__c', None), ('Case.DUNS_Number__c', None), ('Case.Duration_days__c', None), ('Case.Early_Renewal__c', None), ('Case.Effective_Check_Date__c', None), ('Case.Effective_Date__c', None), ('Case.Effective_Date_Requested__c', None), ('Case.Effective_Month__c', None), ('Case.Effective_Termination_Date__c', None), ('Case.Eligibility__c', None), ('Case.Employee_Applications_Date_Recieved__c', None), ('Case.Employee_First_Name__c', None), ('Case.Employee_Hire_Date__c', None), ('Case.Employee_Last_Name__c', None), ('Case.Employee_Name__c', None), ('Case.Employee_SSN__c', None), ('Case.EmployerFocus__c', None), ('Case.Enrolling_Employees__c', None), ('Case.Enrollment__c', None), ('Case.Enrollment_Method__c', None), ('Case.Entitlement', None), ('Case.Entitlement_Program__c', None), ('Case.Entity_Change_Reason_Picklist__c', None), ('Case.EOI_Date_Not_Returned_Letter__c', None), ('Case.EOI_Received_from_Group__c', None), ('Case.EOI_Sent_to_Group__c', None), ('Case.EOI_Status__c', None), ('Case.Errors_Found__c', None), ('Case.Escalated__c', None), ('Case.Escalated_Ticket__c', None), ('Case.Estimated_2nd_Check_Date__c', None), ('Case.Estimated_Setup_Days__c', None), ('Case.Estimated_Tax_Liability__c', None), ('Case.Exception__c', None), ('Case.Exchange__c', None), ('Case.External_Partner__c', None), ('Case.Fee__c', None), ('Case.Field_Rep__c', None), ('Case.File_Processed__c', None), ('Case.File_Specifications_Included__c', None), ('Case.File_Through_Date__c', None), ('Case.File_Uploaded__c', None), ('Case.Final_Approval_from_Client__c', None), ('Case.Finalize_Federal_Return__c', None), ('Case.Finalize_Locality_ies__c', None), ('Case.Finalize_State_s_Disability__c', None), ('Case.Finalize_State_s_Unemployment__c', None), ('Case.Finalize_State_s_Withholding__c', None), ('Case.FinalYrW2__c', None), ('Case.First_Filing_Year__c', None), ('Case.First_follow_up__c', None), ('Case.First_Name__c', None), ('Case.First_Premium_Check_Date_Received__c', None), ('Case.Forecast_Type__c', None), ('Case.Fraud_Check_Date__c', None), ('Case.Fraud_Check_Status__c', None), ('Case.Free_Payroll__c', None), ('Case.Free_W_2s_or_1099s__c', None), ('Case.From_System__c', None), ('Case.Full_Time_Employees__c', None), ('Case.Garnishment_Type__c', None), ('Case.GL_Application__c', None), ('Case.GL_Location_Code__c', None), ('Case.GL_Other_Application__c', None), ('Case.Group_BP_Id__c', None), ('Case.Group_Broker_Notified__c', None), ('Case.Group_or_Individual__c', None), ('Case.Hardcopy_Submission__c', None), ('Case.Has_100k_Aggregate_Payroll__c', None), ('Case.Has_Related_Accounts__c', None), ('Case.HC_Quote_ID__c', None), ('Case.Head_of_Household__c', None), ('Case.High_Visibility__c', None), ('Case.High_Visibility_F__c', None), ('Case.IBAS_Policy__c', None), ('Case.IGS_Setup_Complete__c', None), ('Case.IGS_Setup_Complete_Date__c', None), ('Case.ImmediateIssue__c', None), ('Case.Implementation_Manager__c', None), ('Case.Incomplete__c', None), ('Case.Information_pending_from__c', None), ('Case.Information_Received__c', None), ('Case.Information_Requested__c', None), ('Case.Inquiry_Contact__c', None), ('Case.Inquiry_Contact_Email__c', None), ('Case.Inquiry_Contact_Phone__c', None), ('Case.Installation_Revision_Needed__c', None), ('Case.Instructions__c', None), ('Case.Intake_Incomplete__c', None), ('Case.Intake_Red_End__c', None), ('Case.Intake_Red_Start__c', None), ('Case.Intake_Status__c', None), ('Case.Intake_Status_Flag__c', None), ('Case.Intake_Time_in_Red_Status__c', None), ('Case.Intake_Updated_Date__c', None), ('Case.Internal_Followup__c', None), ('Case.Introduction__c', None), ('Case.Invoice_Date__c', None), ('Case.IRSStateWHNotice__c', None), ('Case.Is_Acknowledgment_Sent__c', None), ('Case.Is_Assigned_ASD_AE__c', None), ('Case.Is_Created_From_Auto_Reply__c', None), ('Case.Is_Full_Service__c', None), ('Case.IsAccountOnEnrollment__c', None), ('Case.IsClosedOnCreate', None), ('Case.IsEscalated', None), ('Case.IsPayrollTax__c', None), ('Case.IsStopped', None), ('Case.Last_Name__c', None), ('Case.Last_Quote_Link__c', None), ('Case.Lead__c', None), ('Case.Level_of_Effort__c', None), ('Case.Life_of_Lives__c', None), ('Case.Line_of_Coverage__c', None), ('Case.Lines_of_Coverage__c', None), ('Case.Live_DD_One_Pay__c', None), ('Case.Live_DD_One_Pay_Decision__c', None), ('Case.Load_Employees_Data__c', None), ('Case.LOCs_Count__c', None), ('Case.LOE__c', None), ('Case.LTD_of_Lives__c', None), ('Case.Main_GL_Account__c', None), ('Case.Market_Account__c', None), ('Case.Market_Segment__c', None), ('Case.Market_Segment_2__c', None), ('Case.Master_Application_Date_Reviewed__c', None), ('Case.Medical_of_Lives__c', None), ('Case.Milestone_Step__c', None), ('Case.MilestoneStatus', None), ('Case.MilestoneStatusIcon', None), ('Case.Missing_Info_Received_from_Field__c', None), ('Case.Missing_Info_Requested_from_Field__c', None), ('Case.Missing_Information_Aging__c', None), ('Case.Missing_Information_Received__c', None), ('Case.Missing_Information_Received_from_Agent__c', None), ('Case.Missing_Information_Received_from_NBA__c', None), ('Case.Missing_Information_Received_from_Sales__c', None), ('Case.Missing_Information_Requested__c', None), ('Case.Missing_Information_Requested_from_Agent__c', None), ('Case.Missing_Information_Requested_from_NBA__c', None), ('Case.Missing_Information_Requested_from_Sales__c', None), ('Case.Monthly_Premium__c', None), ('Case.MRB__c', None), ('Case.NBA_Rep__c', None), ('Case.Needs_Analysis__c', None), ('Case.Needs_Analysis_Received__c', None), ('Case.Net_Fee__c', None), ('Case.New_Accounts_Related__c', None), ('Case.New_Business__c', None), ('Case.New_Business_Auditor__c', None), ('Case.New_Document_Date_Time_Received__c', None), ('Case.New_Document_Received__c', None), ('Case.New_Renewal_Date__c', None), ('Case.Next_2_hour_alert__c', None), ('Case.Next_Check_Date__c', None), ('Case.Next_Schedule_Date__c', None), ('Case.Next_Step__c', None), ('Case.No_Of_Requested_1st_Check_Date__c', None), ('Case.Non_Distribution_Conclusion__c', None), ('Case.Non_Distribution_Reason__c', None), ('Case.Non_Revenue__c', None), ('Case.NoofAttachment__c', None), ('Case.NoofFiles__c', None), ('Case.Notes__c', None), ('Case.NoticeGarnishment__c', None), ('Case.NoticeIDNumberSysIDNumber__c', None), ('Case.NoticeIssueDate__c', None), ('Case.NoticeType__c', None), ('Case.NSF__c', None), ('Case.NSF_Billing_Amount__c', None), ('Case.NSF_DD_OnePay_Amount__c', None), ('Case.NSF_Debit_Date__c', None), ('Case.NSF_Fee__c', None), ('Case.NSF_OnePay_Amount__c', None), ('Case.NSF_Other_Amount__c', None), ('Case.NSF_PayComp_Amount__c', None), ('Case.NSF_Reason__c', None), ('Case.NSF_Section_125_Amount__c', None), ('Case.NSF_Tax_Amount__c', None), ('Case.NSF_Total__c', None), ('Case.NSF_Type__c', None), ('Case.NSFCheckDate__c', None), ('Case.Num_Active_EEs__c', None), ('Case.Num_Inactive_EEs__c', None), ('Case.Number_of_Applications_Submitted__c', None), ('Case.Number_of_Apps__c', None), ('Case.Number_of_Eligible_Employees__c', None), ('Case.Number_of_Lives__c', None), ('Case.Number_of_Rollbacks__c', None), ('Case.OE_Error_Found__c', None), ('Case.OE_Error_Resolution__c', None), ('Case.OE_Errors_Description__c', None), ('Case.OE_Errors_Status__c', None), ('Case.of_Disposable_Income__c', None), ('Case.of_Employees__c', None), ('Case.Office_Account__c', None), ('Case.Old_Source_System__c', None), ('Case.One_Pay_Amount__c', None), ('Case.One_Time_Billing_Amount__c', None), ('Case.Open_Carrier_RFPs__c', None), ('Case.Open_Quarter_Wages_Balanced__c', None), ('Case.Open_Quarter_Wages_Loaded__c', None), ('Case.Opp_External_Id__c', None), ('Case.Opportunity__c', None), ('Case.Origin', None), ('Case.Original_First_Check_Date__c', None), ('Case.Original_Renewal_Date__c', None), ('Case.Other_Garnishment_Notes__c', None), ('Case.Outcome__c', None), ('Case.Owner_Assigned_Time__c', None), ('Case.Owner_s_Application_Supported__c', None), ('Case.Owner_s_Manager__c', None), ('Case.Owner_s_Team_Name__c', None), ('Case.Parent', None), ('Case.Participant_Notified__c', None), ('Case.PartnerFocus_Status__c', None), ('Case.PartnerFocus_User_Status__c', None), ('Case.Payroll_of_Lives__c', None), ('Case.Pending_Info_From__c', None), ('Case.Pending_Reason__c', None), ('Case.PEPM_Billed_Date__c', None), ('Case.PEPM_Setup_Date__c', None), ('Case.PEPY_Bill_Month__c', None), ('Case.PEPY_Bill_Week_of_Month__c', None), ('Case.PEPY_Billed_Date__c', None), ('Case.PEPY_Setup_Date__c', None), ('Case.Per_Payroll_Billing_Amount__c', None), ('Case.Phase__c', None), ('Case.Phone__c', None), ('Case.Plan_Routing__c', None), ('Case.Plan_Type__c', None), ('Case.Plan_Type_Name__c', None), ('Case.Policy_Approved_by_Carrier__c', None), ('Case.Policy_Group_Number__c', None), ('Case.Post_Demo_Rating_by_Demo_Requestor__c', None), ('Case.Post_Demo_Rating_Demo_Provider__c', None), ('Case.Pre_Demo_Preparation_Rating__c', None), ('Case.Pre_Implementation_Mtg_with_Client__c', None), ('Case.Prefferred_Demo_Date_Time__c', None), ('Case.Premium_BOB__c', None), ('Case.PreNoticeComposite__c', None), ('Case.Primary_Partner__c', None), ('Case.Primary_Partner_Type__c', None), ('Case.Print_Location__c', None), ('Case.Prior_Client_ID__c', None), ('Case.Prior_to_BMLL_Service__c', None), ('Case.Prior_Wage_Quarters__c', None), ('Case.Priority', None), ('Case.Processed_by_Internal__c', None), ('Case.Processed_by_Vendor__c', None), ('Case.Processing_Type__c', None), ('Case.Product', None), ('Case.Project_Tracking_ID__c', None), ('Case.PTS_Released__c', None), ('Case.qbdialer__Dials__c', None), ('Case.qbdialer__LastCallTime__c', None), ('Case.Queue_Assigned_Time__c', None), ('Case.Queue_Type__c', None), ('Case.Quick_Start__c', None), ('Case.Quote_Line_Item__c', None), ('Case.Quote_Only__c', None), ('Case.Rapid_Start__c', None), ('Case.Re_Quote_Reason__c', None), ('Case.Ready_for_Training_Date__c', None), ('Case.Reason', None), ('Case.Reason_for_Distribution_Delay__c', None), ('Case.ReceiveDateOfNotice__c', None), ('Case.Red_Items_Missing__c', None), ('Case.Region_Account__c', None), ('Case.Rejected_Date__c', None), ('Case.Rejected_Reason__c', None), ('Case.Related_Objects__c', None), ('Case.Release__c', None), ('Case.Release_Date__c', None), ('Case.Release_Type__c', None), ('Case.Renewal_Distributed_to_Group__c', None), ('Case.Renewal_Increase__c', None), ('Case.Renewal_Month__c', None), ('Case.Renewal_Not_Distributed_to_Agent__c', None), ('Case.Reply_Received__c', None), ('Case.Req_1st_Process_Date_Change_Counter__c', None), ('Case.Request_Reason__c', None), ('Case.Requested_1st_Check_Date__c', None), ('Case.Requested_1st_Process_Date__c', None), ('Case.Requested_Username__c', None), ('Case.Responsible_Department__c', None), ('Case.Revenue_Generation__c', None), ('Case.RFP_Status__c', None), ('Case.Route_Case__c', None), ('Case.Sales_NAC_Checklist__c', None), ('Case.Sample_Included__c', None), ('Case.Script_Type__c', None), ('Case.Second_Family__c', None), ('Case.Second_follow_up__c', None), ('Case.Send_Email_Notifications__c', None), ('Case.Sent_to_Carrier_Date__c', None), ('Case.Sent_to_Carrier_Via__c', None), ('Case.Service_Level__c', None), ('Case.Service_Request_Type__c', None), ('Case.Services__c', None), ('Case.Setup_BSE__c', None), ('Case.Setup_BSR__c', None), ('Case.Setup_Completed_Date__c', None), ('Case.Setup_Completion_Date__c', None), ('Case.Setup_Documents_Received__c', None), ('Case.Setup_Items_Complete_Date_Time__c', None), ('Case.Setup_Items_Started_Date_Time__c', None), ('Case.Setup_Market__c', None), ('Case.Setup_Must_Start_By__c', None), ('Case.Setup_Office__c', None), ('Case.Setup_Region__c', None), ('Case.Setup_Verified_by_Acct_Mgr__c', None), ('Case.SetupWithFund__c', None), ('Case.Shell__c', None), ('Case.SlaExitDate', None), ('Case.SlaStartDate', None), ('Case.Solution__c', None), ('Case.Solved_by_Helpdesk__c', None), ('Case.Source', None), ('Case.Source_of_Error__c', None), ('Case.Source_Service_Rep__c', None), ('Case.SourceSystem__c', None), ('Case.SSN_Search__c', None), ('Case.SSN_verified__c', None), ('Case.State__c', None), ('Case.State_Issued_From__c', None), ('Case.STD_of_Lives__c', None), ('Case.StopStartDate', None), ('Case.Street__c', None), ('Case.Sub_Approval2__c', None), ('Case.Sub_Category__c', None), ('Case.Sub_Reason__c', None), ('Case.Subject', None), ('Case.Submission_Type__c', None), ('Case.Submitted_Direct_to_Carrier__c', None), ('Case.Submitted_for_Approval_By__c', None), ('Case.Submitted_from_BMall_Address__c', None), ('Case.Submitted_From_eForms__c', None), ('Case.Submitter__c', None), ('Case.SUINotice__c', None), ('Case.SUIRateNotice__c', None), ('Case.SUIRateSys__c', None), ('Case.Summarize_DD__c', None), ('Case.Summary__c', None), ('Case.SuppliedCompany', None), ('Case.SuppliedEmail', None), ('Case.SuppliedName', None), ('Case.SuppliedPhone', None), ('Case.Support_Method_s__c', None), ('Case.Support_State__c', None), ('Case.Target_Resolution_Date__c', None), ('Case.Tax_ACA_Related__c', None), ('Case.Tax_Agency_Close_Date__c', None), ('Case.Tax_Fee__c', None), ('Case.Tax_Money_Collected__c', None), ('Case.Tax_Status__c', None), ('Case.TaxCode__c', None), ('Case.TaxPeriod__c', None), ('Case.TaxType__c', None), ('Case.TaxYear__c', None), ('Case.Team_Escalated__c', None), ('Case.Term_Reason__c', None), ('Case.Termed_as_Of__c', None), ('Case.Termination_Date__c', None), ('Case.Third_follow_up__c', None), ('Case.Tier_1_Owner__c', None), ('Case.Tier_2_Owner__c', None), ('Case.Tier_2_Team__c', None), ('Case.Time_to_Assigned__c', None), ('Case.Time_to_Close__c', None), ('Case.Time_to_Escalated__c', None), ('Case.To_Address__c', None), ('Case.Tool_Requirements__c', None), ('Case.Total_Amount__c', None), ('Case.Total_EEs_for_Setup__c', None), ('Case.TPA_Status__c', None), ('Case.Training_Completion_Date__c', None), ('Case.Training_Status__c', None), ('Case.Transition_Due_Date__c', None), ('Case.Treasury_Rejected_Reason__c', None), ('Case.Treasury_Status__c', None), ('Case.Type', None), ('Case.Type_of_Enhancement__c', None), ('Case.Type_of_Sale__c', None), ('Case.Type_of_Sale2__c', None), ('Case.Updated_Notes_and_Attachments__c', None), ('Case.Use_Case_Requirements__c', None), ('Case.Use_Classes__c', None), ('Case.Use_Jobs__c', None), ('Case.User_Submitting_Case__c', None), ('Case.Verified_Date__c', None), ('Case.Vision_of_Lives__c', None), ('Case.Visual_Check_In_Age__c', None), ('Case.Wage_and_Tax_Date_Reconciled__c', None), ('Case.Waiver_Required__c', None), ('Case.White_Glove_Service__c', None), ('Case.X1st_Check_Date__c', None), ('Case.X1st_Payroll_Error__c', None), ('Case.X1st_Payroll_Error_Comment__c', None), ('Case.X1st_Payroll_Error_Detail__c', None), ('Case.X1st_Payroll_Error_Sub_Detail__c', None), ('Case.X1st_Successful_Payroll__c', None), ('Case.X2nd_Check_Date__c', None), ('Case.X2nd_Payroll_Error__c', None), ('Case.X2nd_Payroll_Error_Comment__c', None), ('Case.X2nd_Payroll_Error_Detail__c', None), ('Case.X2nd_Payroll_Error_Sub_Detail__c', None), ('Case.X2nd_Successful_Payroll__c', None), ('Case.Zip_Postal_Code__c', None), ('Checklist__c.Account__c', None), ('Checklist__c.Amendment_Owner__c', None), ('Checklist__c.Amendment_Reason__c', None), ('Checklist__c.Amount_Billed_to_BMall__c', None), ('Checklist__c.Amount_Billed_to_Client__c', None), ('Checklist__c.Approve_Benefit_Plan_Summary_Renewal__c', None), ('Checklist__c.Approve_Benefit_Plan_Summary_Renewal_Due__c', None), ('Checklist__c.ASD_AE__c', None), ('Checklist__c.Assignment_Date_to_QAT__c', None), ('Checklist__c.Audit_1st_month_invoice_Due_Date__c', None), ('Checklist__c.Audit_1st_month_invoice_S__c', None), ('Checklist__c.Billing_entered_in_system__c', None), ('Checklist__c.Branch_Pending__c', None), ('Checklist__c.Branch_Resolved__c', None), ('Checklist__c.Case_ASD_AE_Id__c', None), ('Checklist__c.Case_Owner__c', None), ('Checklist__c.Case_Owner_Id__c', None), ('Checklist__c.Case_Renewal_Date__c', None), ('Checklist__c.Check_List_Attached__c', None), ('Checklist__c.Client_Approval_Received__c', None), ('Checklist__c.Client_Communication_Sent__c', None), ('Checklist__c.Client_Pending__c', None), ('Checklist__c.Comments__c', None), ('Checklist__c.Complete_Sold_Spread__c', None), ('Checklist__c.Complete_Sold_Spread_Due_Date__c', None), ('Checklist__c.Copies_sent_to_client__c', None), ('Checklist__c.Create_Submit_Termination_Letters__c', None), ('Checklist__c.Create_Submit_Termination_Letters_S__c', None), ('Checklist__c.Deliver_Renewal_Package__c', None), ('Checklist__c.Deliver_Renewal_Package_Due_Date__c', None), ('Checklist__c.Discuss_ACA_Reporting__c', None), ('Checklist__c.Discuss_ACA_Reporting_Due_Date__c', None), ('Checklist__c.Discuss_Adds_Terms_with_Client__c', None), ('Checklist__c.Discuss_Adds_Terms_with_Client_Due_Dat__c', None), ('Checklist__c.Discuss_HealthcareExchange_com__c', None), ('Checklist__c.Discuss_HealthcareExchange_com_Due_Date__c', None), ('Checklist__c.Discuss_HSA_Vendor_HRA_FSA__c', None), ('Checklist__c.Discuss_HSA_Vendor_HRA_FSA_Due_Date__c', None), ('Checklist__c.Discuss_Pre_renewal_Strategy__c', None), ('Checklist__c.Discuss_Pre_renewal_Strategy_Due_Date__c', None), ('Checklist__c.ERISA_Plan_Document__c', None), ('Checklist__c.ERISA_Plan_Document_Due_Date__c', None), ('Checklist__c.Finalize_Contribution_Analysis__c', None), ('Checklist__c.Finalize_Contribution_Analysis_Due_Date__c', None), ('Checklist__c.Manage_SBC_Delivery__c', None), ('Checklist__c.Manage_SBC_Delivery_Due_Date__c', None), ('Checklist__c.Manage_Verify_OE_Election_File_Process__c', None), ('Checklist__c.Manage_Verify_OE_Election_File_Process_S__c', None), ('Checklist__c.Prepare_Deliver_Request_for_Proposal__c', None), ('Checklist__c.Prepare_Deliver_RFP_Due_Date__c', None), ('Checklist__c.Prepare_Distribute_Required_Notices__c', None), ('Checklist__c.Prepare_Distribute_Required_Notices_Du__c', None), ('Checklist__c.Prepare_Implementation_Renew_Paperwork__c', None), ('Checklist__c.Prepare_Implementation_Renewal_Paperwork__c', None), ('Checklist__c.Prepare_OE_Communications__c', None), ('Checklist__c.Prepare_OE_Communications_Due_Date__c', None), ('Checklist__c.Prepare_OE_Presentation__c', None), ('Checklist__c.Prepare_OE_Presentation_Due_Date__c', None), ('Checklist__c.Proof_Manage_ID_Card_Release__c', None), ('Checklist__c.Proof_Manage_ID_Card_Release_Due_Date__c', None), ('Checklist__c.Received_Date__c', None), ('Checklist__c.Report_of_Forms_Completed__c', None), ('Checklist__c.Request_Approve_Benefit_Summaries_SBC__c', None), ('Checklist__c.Request_Approve_Benefit_Summaries_SBC_S__c', None), ('Checklist__c.Request_Census__c', None), ('Checklist__c.Request_Census_Due_Date__c', None), ('Checklist__c.Request_HB2015__c', None), ('Checklist__c.Request_HB2015_TX_Only_Due_Date__c', None), ('Checklist__c.Request_Renewal_Report_Accumulator_file__c', None), ('Checklist__c.Request_Renewal_Report_Accumulator_S__c', None), ('Checklist__c.Resolved_TSC_Client_Pending__c', None), ('Checklist__c.Review_Deliver_Policy_Booklets_SPD_Due__c', None), ('Checklist__c.Review_Deliver_Policy_Booklets_SPD_S__c', None), ('Checklist__c.Schedule_Conduct_OE_Meetings__c', None), ('Checklist__c.Schedule_Conduct_OE_Meetings_Due_Date__c', None), ('Checklist__c.Send_Email_Reminder_Medicare_Part_D_Cert__c', None), ('Checklist__c.Send_Email_Reminder_Medicare_Part_D_S__c', None), ('Checklist__c.Submitted_by_Supervisor__c', None), ('Checklist__c.Supervisor_Approval__c', None), ('Checklist__c.TSC_of_1099_s_and_or_W2C__c', None), ('Checklist__c.Value_of_Amendment__c', None), ('Checklist__c.Verify_COBRA_State_Continuation_OE__c', None), ('Checklist__c.Verify_COBRA_State_Continuation_OE_S__c', None), ('Checklist__c.When_amendment_was_completed__c', None), ('Checklist__c.X125_Conversation_with_Client__c', None), ('Checklist__c.X125_Conversation_with_Client_Due_Date__c', None), ('Class__c.Duration__c', None), ('Class__c.End_Date_Time__c', None), ('Class__c.Location__c', None), ('Class__c.Notes__c', None), ('Class__c.Start_Date_Time__c', None), ('Class__c.Trainer__c', None), ('Class__c.Type__c', None), ('Commission__c.BenefitMall_Revenue__c', None), ('Commission__c.Client_Check_Date__c', None), ('Commission__c.Client_Code__c', None), ('Commission__c.Commission_Period__c', None), ('Commission__c.Commission_Rate__c', None), ('Commission__c.Commissionable_Revenue__c', None), ('Commission__c.Commissions_Payroll_Platform__c', None), ('Commission__c.Date_to_Display__c', None), ('Commission__c.First_Payroll_Date__c', None), ('Commission__c.Month__c', None), ('Commission__c.Notes__c', None), ('Commission__c.Partner_Account__c', None), ('Commission__c.Partner_Commission__c', None), ('Commission__c.Partner_Payment_Date__c', None), ('Commission__c.PartnerFocus_ID__c', None), ('Commission__c.Payroll_Frequency__c', None), ('Commission__c.Payroll_Platform__c', None), ('CommSubscription.DataUsePurpose', None), ('CommSubscription.IsDefault', None), ('CommSubscriptionConsent.EffectiveToDate', None), ('CommSubscriptionTiming.Offset', None), ('CommSubscriptionTiming.PreferredTimeEnd', None), ('CommSubscriptionTiming.PreferredTimeStart', None), ('CommSubscriptionTiming.PreferredTimeZone', None), ('Community_Message__c.Body__c', None), ('Community_Message__c.Button_Name__c', None), ('Community_Message__c.Click_Through_URL__c', None), ('Community_Message__c.Enabled__c', None), ('Community_Message__c.End_Date__c', None), ('Community_Message__c.State__c', None), ('CommunityTiles__c.Content__c', None), ('CommunityTiles__c.ContentTitle__c', None), ('CommunityTiles__c.Custom_Logic__c', None), ('CommunityTiles__c.Custom_Logic_Name__c', None), ('CommunityTiles__c.GroupId__c', None), ('CommunityTiles__c.Icon__c', None), ('CommunityTiles__c.ImageOnly__c', None), ('CommunityTiles__c.ImageURL__c', None), ('CommunityTiles__c.Is_External_Link__c', None), ('CommunityTiles__c.Is_User_Specific_Tile__c', None), ('CommunityTiles__c.isSSO__c', None), ('CommunityTiles__c.Link__c', None), ('CommunityTiles__c.Order__c', None), ('CommunityTiles__c.ShowinAFCommunity__c', None), ('CommunityTiles__c.State__c', None), ('CommunityTiles__c.User_Specific_Icon__c', None), ('CommunityTiles__c.User_Specific_Static_Message__c', None), ('CommunityTiles__c.User_Specific_Tile_Behavior__c', None), ('CommunityTiles__c.User_Specific_Tiles__c', None), ('Connection_Credential__c.Endpoint__c', None), ('Connection_Credential__c.Password__c', None), ('Connection_Credential__c.User_name__c', None), ('Contact.Acc_PlatformInt_Id__c', None), ('Contact.Accepted__c', None), ('Contact.Accepted_Count__c', None), ('Contact.Accepted_Date__c', None), ('Contact.Accepted_Original_Date__c', None), ('Contact.Account', None), ('Contact.Account_Authorized_for_PartnerFocus__c', None), ('Contact.AcctId__c', None), ('Contact.Active_in_AgencyFocus__c', None), ('Contact.Active_in_PartnerFocus__c', None), ('Contact.Admin_Only_User__c', None), ('Contact.Advisory_Notice__c', None), ('Contact.AFocus_Can_View_Commission__c', None), ('Contact.AFocus_CRQS_Broker_Id__c', None), ('Contact.AFocus_IsUpdateFromUser__c', None), ('Contact.AFocus_Notification_Only_ClassValue__c', None), ('Contact.AFocus_NotificationOnly_Preference__c', None), ('Contact.Agency_Admin__c', None), ('Contact.AgencyFocus_User__c', None), ('Contact.AgencyFocus_User_Type__c', None), ('Contact.AssistantName', None), ('Contact.AssistantPhone', None), ('Contact.Authorized_Contact__c', None), ('Contact.Authorized_for_PartnerFocus__c', None), ('Contact.Behavior_Score__c', None), ('Contact.BenefitPointAccountID__c', None), ('Contact.BenefitPointContactID__c', None), ('Contact.Birthdate', None), ('Contact.BP_Contact_Response__c', None), ('Contact.BP_Integration_Error__c', None), ('Contact.BP_Integration_Status__c', None), ('Contact.Broker_Workspace_Username__c', None), ('Contact.Business_Focus__c', None), ('Contact.Can_View_Commission__c', None), ('Contact.Can_View_Commissions__c', None), ('Contact.Carrier_Announcements__c', None), ('Contact.Carrier_Contact_Type__c', None), ('Contact.Case__c', None), ('Contact.Case_Policies_Renewals__c', None), ('Contact.Check_Duplication_On_Account__c', None), ('Contact.Client_Code__c', None), ('Contact.Closed_Lost_Original_Date__c', None), ('Contact.Closed_Won_Original_Date__c', None), ('Contact.Commissions_Notifications__c', None), ('Contact.Commissions_Text_Notification__c', None), ('Contact.Contact_Date_of_First_Payroll__c', None), ('Contact.Contact_Lifecycle_Status__c', None), ('Contact.Contact_Status__c', None), ('Contact.Contact_Type__c', None), ('Contact.ContactIntegrationID__c', None), ('Contact.Contract_Status__c', None), ('Contact.CRQS_Quote_Proposals__c', None), ('Contact.Customer_Type__c', None), ('Contact.Data_Sent_To_Ben_Admin_Notification__c', None), ('Contact.Date_of_First_Payroll__c', None), ('Contact.Delete_or_Merge__c', None), ('Contact.Delete_or_Merge_Reason__c', None), ('Contact.Demographic_Score__c', None), ('Contact.Department', None), ('Contact.Description', None), ('Contact.Disable_Web_Access__c', None), ('Contact.Disqualified_Reason__c', None), ('Contact.Document_Upload_Text_Notification__c', None), ('Contact.DoNotCall', None), ('Contact.Eloqua_Inquiry_Date__c', None), ('Contact.Email', None), ('Contact.Employee_Elections_Completed_Text_Notifi__c', None), ('Contact.Enable_Benefits_Administration__c', None), ('Contact.Engagement_Status__c', None), ('Contact.Enrollment_Elections_Complete_Notificati__c', None), ('Contact.Enrollment_Withdrawal_Notifications__c', None), ('Contact.Enrollment_Withdrawal_Text_Notification__c', None), ('Contact.Epic_Last_Modified_Date__c', None), ('Contact.Events_Invitations__c', None), ('Contact.Existing_Broker_Workspace_User__c', None), ('Contact.Expired_SLA_Accepted__c', None), ('Contact.Expired_SLA_Marketing_Qualified__c', None), ('Contact.Failed_Ben_Admin_Sync_Notification__c', None), ('Contact.Fast_Track__c', None), ('Contact.Fast_Track_Date__c', None), ('Contact.Fax', None), ('Contact.HasOptedOutOfEmail', None), ('Contact.HasOptedOutOfFax', None), ('Contact.HomePhone', None), ('Contact.Jigsaw', None), ('Contact.Last_Login_Date__c', None), ('Contact.Last_Modified_for_SFI_Sync__c', None), ('Contact.Last_Touch_Accepted__c', None), ('Contact.Last_Touch_Marketing_Qualified__c', None), ('Contact.Last_Touch_Program__c', None), ('Contact.Last_Touch_Qualified__c', None), ('Contact.LeadSource', None), ('Contact.Legacy_ID__c', None), ('Contact.Legislative_Corporate_Announcements__c', None), ('Contact.MailingAddress', None), ('Contact.Manual_Sync_with_Outlook__c', None), ('Contact.Market__c', None), ('Contact.Market_Segment__c', None), ('Contact.Marketing_Engaged__c', None), ('Contact.Marketing_Engaged_Date__c', None), ('Contact.Marketing_Qualified__c', None), ('Contact.Marketing_Qualified_Count__c', None), ('Contact.Marketing_Qualified_Date__c', None), ('Contact.Marketing_Qualified_Original_Date__c', None), ('Contact.Master_Admin__c', None), ('Contact.Migration_Flag__c', None), ('Contact.mkto_si__HideDate__c', None), ('Contact.mkto_si__Last_Interesting_Moment__c', None), ('Contact.mkto_si__Last_Interesting_Moment_Date__c', None), ('Contact.mkto_si__Last_Interesting_Moment_Desc__c', None), ('Contact.mkto_si__Last_Interesting_Moment_Source__c', None), ('Contact.mkto_si__Last_Interesting_Moment_Type__c', None), ('Contact.mkto_si__Priority__c', None), ('Contact.mkto_si__Relative_Score__c', None), ('Contact.mkto_si__Relative_Score_Value__c', None), ('Contact.mkto_si__Sales_Insight__c', None), ('Contact.mkto_si__Urgency__c', None), ('Contact.mkto_si__Urgency_Value__c', None), ('Contact.mkto_si__View_in_Marketo__c', None), ('Contact.mkto71_Acquisition_Date__c', None), ('Contact.mkto71_Acquisition_Program__c', None), ('Contact.mkto71_Acquisition_Program_Id__c', None), ('Contact.mkto71_Inferred_City__c', None), ('Contact.mkto71_Inferred_Company__c', None), ('Contact.mkto71_Inferred_Country__c', None), ('Contact.mkto71_Inferred_Metropolitan_Area__c', None), ('Contact.mkto71_Inferred_Phone_Area_Code__c', None), ('Contact.mkto71_Inferred_Postal_Code__c', None), ('Contact.mkto71_Inferred_State_Region__c', None), ('Contact.mkto71_Lead_Score__c', None), ('Contact.mkto71_Original_Referrer__c', None), ('Contact.mkto71_Original_Search_Engine__c', None), ('Contact.mkto71_Original_Search_Phrase__c', None), ('Contact.mkto71_Original_Source_Info__c', None), ('Contact.mkto71_Original_Source_Type__c', None), ('Contact.MobilePhone', None), ('Contact.MQL__c', None), ('Contact.MQL_Date__c', None), ('Contact.New_Documents_Availability__c', None), ('Contact.Newsletters__c', None), ('Contact.Notification_Only_User__c', None), ('Contact.Other_Trusted_Advisor_Type__c', None), ('Contact.OtherAddress', None), ('Contact.OtherPhone', None), ('Contact.Outstanding_Account_Notifications__c', None), ('Contact.Outstanding_Account_Text_Notification__c', None), ('Contact.PartnerFocus_Email_Notif_Opt_Out__c', None), ('Contact.PartnerFocus_Role__c', None), ('Contact.PartnerFocus_User__c', None), ('Contact.Pause_Lifecycle__c', None), ('Contact.Payroll_Quote_Notifications__c', None), ('Contact.Payroll_Quote_Text_Notification__c', None), ('Contact.Payroll_UPS_Shipment_Notifications__c', None), ('Contact.Phone', None), ('Contact.Policy_Renewal_Notifications__c', None), ('Contact.Policy_Renewal_Text_Notification__c', None), ('Contact.Preferred_Day_of_Week_for_Contact__c', None), ('Contact.Preferred_Time_of_Day_for_Contact__c', None), ('Contact.Primary_Partner__c', None), ('Contact.Primary_State_of_Business__c', None), ('Contact.Product_Lines_of_Interest__c', None), ('Contact.qbdialer__CloseDate__c', None), ('Contact.qbdialer__CloseScore__c', None), ('Contact.qbdialer__ContactDate__c', None), ('Contact.qbdialer__ContactScore__c', None), ('Contact.qbdialer__ContactScoreId__c', None), ('Contact.qbdialer__Dials__c', None), ('Contact.qbdialer__LastCallTime__c', None), ('Contact.qbdialer__ResponseTime__c', None), ('Contact.Qualified__c', None), ('Contact.Qualified_Count__c', None), ('Contact.Qualified_Date__c', None), ('Contact.Qualified_Original_Date__c', None), ('Contact.Quoting_Only_User__c', None), ('Contact.RCM_Stage__c', None), ('Contact.Recycle_Original_Date__c', None), ('Contact.Recycle_Reason__c', None), ('Contact.Referral_NPS__c', None), ('Contact.Region__c', None), ('Contact.Remove_from_User_List__c', None), ('Contact.ReportsTo', None), ('Contact.Requested_Level_of_Access__c', None), ('Contact.Service_Location__c', None), ('Contact.Service_NPS__c', None), ('Contact.SourceSystem__c', None), ('Contact.Termination_Date__c', None), ('Contact.Text_Notification_Mobile__c', None), ('Contact.Title', None), ('Contact.Trainings_Announcements__c', None), ('Contact.Trusted_Advisor_Type__c', None), ('Contact.Type__c', None), ('Contact.VanillaSoft_Contact_Id__c', None), ('Contact.ZChangeOrigin__c', None), ('ContactPointConsent.DataUsePurpose', None), ('ContactPointConsent.DoubleConsentCaptureDate', None), ('ContactPointConsent.EffectiveFrom', None), ('ContactPointConsent.EffectiveTo', None), ('ContactPointEmail.ActiveFromDate', None), ('ContactPointEmail.ActiveToDate', None), ('ContactPointEmail.BestTimeToContactEndTime', None), ('ContactPointEmail.BestTimeToContactStartTime', None), ('ContactPointEmail.BestTimeToContactTimezone', None), ('ContactPointEmail.EmailDomain', None), ('ContactPointEmail.EmailLatestBounceDateTime', None), ('ContactPointEmail.EmailLatestBounceReasonText', None), ('ContactPointEmail.EmailMailBox', None), ('ContactPointEmail.IsPrimary', None), ('ContactPointEmail.Parent', None), ('ContactPointPhone.ActiveFromDate', None), ('ContactPointPhone.AreaCode', None), ('ContactPointPhone.BestTimeToContactEndTime', None), ('ContactPointPhone.BestTimeToContactStartTime', None), ('ContactPointPhone.BestTimeToContactTimezone', None), ('ContactPointPhone.ExtensionNumber', None), ('ContactPointPhone.FormattedInternationalPhoneNumber', None), ('ContactPointPhone.FormattedNationalPhoneNumber', None), ('ContactPointPhone.IsBusinessPhone', None), ('ContactPointPhone.IsFaxCapable', None), ('ContactPointPhone.IsPersonalPhone', None), ('ContactPointPhone.IsPrimary', None), ('ContactPointPhone.IsSmsCapable', None), ('ContactPointPhone.Parent', None), ('ContactPointPhone.PhoneType', None), ('ContactPointTypeConsent.DataUsePurpose', None), ('ContactPointTypeConsent.DoubleConsentCaptureDate', None), ('ContactPointTypeConsent.EffectiveFrom', None), ('ContactPointTypeConsent.EffectiveTo', None), ('Contract.ActivatedBy', None), ('Contract.ActivatedDate', None), ('Contract.BillingAddress', None), ('Contract.CompanySigned', None), ('Contract.CompanySignedDate', None), ('Contract.ContractTerm', None), ('Contract.CustomerSigned', None), ('Contract.CustomerSignedDate', None), ('Contract.CustomerSignedTitle', None), ('Contract.Description', None), ('Contract.EndDate', None), ('Contract.Name', None), ('Contract.OwnerExpirationNotice', None), ('Contract.ShippingAddress', None), ('Contract.SpecialTerms', None), ('Contract.StartDate', None), ('ContractLineItem.Asset', None), ('ContractLineItem.Description', None), ('ContractLineItem.Discount', None), ('ContractLineItem.EndDate', None), ('ContractLineItem.ListPrice', None), ('ContractLineItem.ParentContractLineItem', None), ('ContractLineItem.RootContractLineItem', None), ('ContractLineItem.StartDate', None), ('ContractLineItem.Status', None), ('ContractLineItem.StatusIndicator', None), ('ContractLineItem.Subtotal', None), ('ContractLineItem.TotalPrice', None), ('Course__c.Description__c', None), ('Course__c.Product_Line__c', None), ('Credential__c.Agency_Agent_Name__c', None), ('Credential__c.Agent__c', None), ('Credential__c.Appointed_at_Level__c', None), ('Credential__c.Appointment_Number__c', None), ('Credential__c.BenefitPointCredentialID__c', None), ('Credential__c.BP_Credential_Response__c', None), ('Credential__c.BP_ID__c', None), ('Credential__c.BP_Integration_Error__c', None), ('Credential__c.BP_Integration_Status__c', None), ('Credential__c.BP_Request__c', None), ('Credential__c.Carrier__c', None), ('Credential__c.Carrier_Appointment_State__c', None), ('Credential__c.Direct_Hierarchy__c', None), ('Credential__c.E_O_Expiration_Date__c', None), ('Credential__c.Expiration_Date__c', None), ('Credential__c.FileName__c', None), ('Credential__c.Hierarchy_Agent_Agency__c', None), ('Credential__c.License_Document_Uploaded__c', None), ('Credential__c.License_Number__c', None), ('Credential__c.Line_of_Business__c', None), ('Credential__c.NIPR_Integration_Error__c', None), ('Credential__c.NIPR_Request__c', None), ('Credential__c.NIPR_Response__c', None), ('Credential__c.NIPR_Verified__c', None), ('Credential__c.Notes__c', None), ('Credential__c.NPN__c', None), ('Credential__c.Product_Type__c', None), ('Credential__c.Ready_to_Sell_Year__c', None), ('Credential__c.Special_Arrangement__c', None), ('Credential__c.Start_Date__c', None), ('Credential__c.Start_Date_Plus_One__c', None), ('Credential__c.State__c', None), ('Credential__c.Status__c', None), ('Credential__c.UpsertKey__c', None), ('DataUseLegalBasis.Description', None), ('DataUseLegalBasis.Source', None), ('DataUsePurpose.Description', None), ('DataUsePurpose.IsMaintainablePerContactPoint', None), ('DataUsePurpose.IsMaintainablePerParty', None), ('DataUsePurpose.IsMaintainablePerType', None), ('DataUsePurpose.LegalBasis', None), ('Email_Signature_Attachments__c.Attachment_Id__c', None), ('Email_Signature_Attachments__c.Body__c', None), ('Email_Signature_Attachments__c.Logo__c', None), ('Email_Signature_Attachments__c.Logo_URL__c', None), ('EmailMessage.Support_Emails_Count__c', None), ('EngagementChannelType.ContactPointType', None), ('Enrollment__c.Account_Name__c', None), ('Enrollment__c.Agent_Name__c', None), ('Enrollment__c.AutorabitExtId__c', None), ('Enrollment__c.Ben_Admin__c', None), ('Enrollment__c.Ben_Admin_Error_Details__c', None), ('Enrollment__c.Ben_Admin_Status__c', None), ('Enrollment__c.BenAdminStatus__c', None), ('Enrollment__c.City__c', None), ('Enrollment__c.Client__c', None), ('Enrollment__c.Client_Link__c', None), ('Enrollment__c.Client_Name__c', None), ('Enrollment__c.Client_Type_Status__c', None), ('Enrollment__c.Contact__c', None), ('Enrollment__c.County__c', None), ('Enrollment__c.CRQS_Quote_Id__c', None), ('Enrollment__c.Cut_Off_Date_Passed__c', None), ('Enrollment__c.Cut_Off_Date_Today__c', None), ('Enrollment__c.Cut_Off_Date_Within_5_Days__c', None), ('Enrollment__c.Data_Sync_Status__c', None), ('Enrollment__c.Date_Time_Synced_to_Ben_Admin__c', None), ('Enrollment__c.Effective_Date__c', None), ('Enrollment__c.Effective_Year__c', None), ('Enrollment__c.EIN__c', None), ('Enrollment__c.Employees_Completed__c', None), ('Enrollment__c.Enrollment_Method__c', None), ('Enrollment__c.Enrollment_Origin__c', None), ('Enrollment__c.File_Uploaded__c', None), ('Enrollment__c.Full_Time_Employees__c', None), ('Enrollment__c.Group_Size__c', None), ('Enrollment__c.Group_Type__c', None), ('Enrollment__c.Link_to_Online_Enrollment__c', None), ('Enrollment__c.New_Client_Name__c', None), ('Enrollment__c.Notes__c', None), ('Enrollment__c.Phone__c', None), ('Enrollment__c.Plan_Selection_Complete__c', None), ('Enrollment__c.Quote__c', None), ('Enrollment__c.Quote_Link__c', None), ('Enrollment__c.Quote_Name__c', None), ('Enrollment__c.SIC_Code__c', None), ('Enrollment__c.State__c', None), ('Enrollment__c.Status__c', None), ('Enrollment__c.Street__c', None), ('Enrollment__c.Submission_Contact__c', None), ('Enrollment__c.Submission_Contact_Name__c', None), ('Enrollment__c.Submitted_to_BenefitMall__c', None), ('Enrollment__c.Successful_Sync_To_Ben_Admin__c', None), ('Enrollment__c.Sync_Data_to_BenAdmin__c', None), ('Enrollment__c.Sync_Group_Data__c', None), ('Enrollment__c.Type_of_Sale__c', None), ('Enrollment__c.Withdrawal_Reason__c', None), ('Enrollment__c.Withdrawn_Date_Less_Than_15_days__c', None), ('Enrollment__c.withdrawn_date_time__c', None), ('Enrollment__c.withdrawn_User__c', None), ('Enrollment__c.Zip__c', None), ('Entitlement.Asset', None), ('Entitlement.BusinessHours', None), ('Entitlement.CasesPerEntitlement', None), ('Entitlement.ContractLineItem', None), ('Entitlement.EndDate', None), ('Entitlement.IsPerIncident', None), ('Entitlement.RemainingCases', None), ('Entitlement.ServiceContract', None), ('Entitlement.SlaProcess', None), ('Entitlement.StartDate', None), ('Entitlement.Status', None), ('Entitlement.StatusIndicator', None), ('Entitlement.Type', None), ('Event.Activity_Type__c', None), ('Event.Audience__c', None), ('Event.Audit_Error_Reason__c', None), ('Event.Audit_Type__c', None), ('Event.Call_Back_Date__c', None), ('Event.Closed_Date__c', None), ('Event.Description', None), ('Event.Entered_By__c', None), ('Event.Entered_Date__c', None), ('Event.EPIC_Activity_Code__c', None), ('Event.EPIC_Activity_Id__c', None), ('Event.Event_External_Id__c', None), ('Event.Event_Outcome__c', None), ('Event.IsAllDayEvent', None), ('Event.isdc_dialed_phone_number__c', None), ('Event.isdc_dialer_call_type__c', None), ('Event.isdc_dialer_list_name__c', None), ('Event.isdc_dialer_query_name__c', None), ('Event.IsVisibleInSelfService', None), ('Event.Location', None), ('Event.Market_Benefit__c', None), ('Event.Migration_Flag__c', None), ('Event.Number_of_Attendees__c', None), ('Event.Products_Discussed__c', None), ('Event.qbdialer__Call_Date_Time__c', None), ('Event.qbdialer__Call_Dial_Number__c', None), ('Event.qbdialer__Call_Hour__c', None), ('Event.qbdialer__Call_Lead_Status__c', None), ('Event.qbdialer__Call_Ring_Time__c', None), ('Event.qbdialer__Call_Time_Zone__c', None), ('Event.qbdialer__Callback_Date_Time__c', None), ('Event.qbdialer__CallRecordingURL__c', None), ('Event.qbdialer__ImpressionId__c', None), ('Event.qbdialer__SMSReminder__c', None), ('Event.sma__BaseObjectId__c', None), ('Event.sma__LayerId__c', None), ('Event.Task_External_Id__c', None), ('Event.Telemarketing_Call_Type__c', None), ('Event.Type', None), ('Event.Updated_Date__c', None), ('Event.What', None), ('Event.Who', None), ('Feedback__c.Area__c', None), ('Feedback__c.Comments__c', None), ('Group_Calendar__c.Link__c', None), ('Group_Calendar__c.Notes1__c', None), ('Group_Calendar__c.Reason__c', None), ('Idea.Attachment', None), ('Idea.Status', None), ('Individual.BirthDate', None), ('Individual.CanStorePiiElsewhere', None), ('Individual.ChildrenCount', None), ('Individual.ConsumerCreditScore', None), ('Individual.ConsumerCreditScoreProviderName', None), ('Individual.ConvictionsCount', None), ('Individual.DeathDate', None), ('Individual.HasOptedOutGeoTracking', None), ('Individual.HasOptedOutProcessing', None), ('Individual.HasOptedOutProfiling', None), ('Individual.HasOptedOutSolicit', None), ('Individual.HasOptedOutTracking', None), ('Individual.IndividualsAge', None), ('Individual.InfluencerRating', None), ('Individual.IsHomeOwner', None), ('Individual.MasterRecord', None), ('Individual.MilitaryService', None), ('Individual.Occupation', None), ('Individual.SendIndividualData', None), ('Individual.ShouldForget', None), ('Individual.Website', None), ('INQ__Criteria_Fields_Status__c.INQ__Criteria_Fields_Values_JSON__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Answer_Format_Type__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Category__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Field_Type__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Inquisium_Field__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Inquisium_Field_Data_Type__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Inquisium_Field_Key__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Inquisium_Field_Type__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Inquisium_Id__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__INQUISIUM_TO_SALESFORCE_CRITERIA__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Manual_Text__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Mapping_Type__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Operator__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Salesforce_API_Name__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Salesforce_Field__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Salesforce_Field_Data_Type__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Salesforce_Object__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Start_Index__c', None), ('INQ__Data_Mapping_Configuration__c.INQ__Value__c', None), ('INQ__Data_Transfer_Criteria__c.INQ__Filter_Logic__c', None), ('INQ__Data_Transfer_Criteria__c.INQ__Inqusium_To_Salesforce_Criteria__c', None), ('INQ__Data_Transfer_Criteria__c.INQ__SOQL_Query__c', None), ('INQ__Data_Transfer_Criteria__c.INQ__Where_Clause__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Answer_Format_Type__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Category__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Date_Time_Value__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Date_Value__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__DisplayFormatTypeId__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Email_Value__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Field_Type__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Fields__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Inquisium_Field__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Inquisium_Field_Data_Type__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Inquisium_Field_Key__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Inquisium_Field_Type__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Mapping_Type__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Object__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Object_Relationship_Name__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Operator__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Operator_Display_Name__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Order__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Phone_Value__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__SF_Field_API_Name__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Start_Index__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Url_Value__c', None), ('INQ__Data_Transfer_Criteria_Detail__c.INQ__Value__c', None), ('INQ__Email_Template_Mapping_Configuration__c.INQ__Email_Field__c', None), ('INQ__Email_Template_Mapping_Configuration__c.INQ__Object_Relationship_Name__c', None), ('INQ__Email_Template_Mapping_Configuration__c.INQ__Salesforce_API_Name__c', None), ('INQ__Email_Template_Mapping_Configuration__c.INQ__Salesforce_Field__c', None), ('INQ__Email_Template_Mapping_Configuration__c.INQ__Salesforce_Object__c', None), ('INQ__Exception_Logger__c.INQ__Cause__c', None), ('INQ__Exception_Logger__c.INQ__Class_Name__c', None), ('INQ__Exception_Logger__c.INQ__Error_Message__c', None), ('INQ__Exception_Logger__c.INQ__IsRecordProcessed__c', None), ('INQ__Exception_Logger__c.INQ__Line_Number__c', None), ('INQ__Exception_Logger__c.INQ__Stack_Trace__c', None), ('INQ__Exception_Logger__c.INQ__TypeName__c', None), ('INQ__iConnectionStatus__c.INQ__Connected__c', None), ('INQ__iConnectionStatus__c.INQ__Deactivation_Date_Time__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Error_Details__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__isReady__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Pickup_Time__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Retry_Count__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Sender__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__SF_Object_API_Name__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__SF_Record_Id__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Spam_Level__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Spam_Value__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Status__c', None), ('INQ__Inquisium_Activity_Tracker__c.INQ__Trigger_Type__c', None), ('INQ__Respondent__c.INQ__Answer_Count__c', None), ('INQ__Respondent__c.INQ__Author_Company__c', None), ('INQ__Respondent__c.INQ__Author_Email__c', None), ('INQ__Respondent__c.INQ__Author_First_Name__c', None), ('INQ__Respondent__c.INQ__Author_Last_Name__c', None), ('INQ__Respondent__c.INQ__Completed_On__c', None), ('INQ__Respondent__c.INQ__Cvent_Respondent_Id__c', None), ('INQ__Respondent__c.INQ__Dedicated_Object_Record_Id__c', None), ('INQ__Respondent__c.INQ__Email__c', None), ('INQ__Respondent__c.INQ__Error_Details__c', None), ('INQ__Respondent__c.INQ__First_Name__c', None), ('INQ__Respondent__c.INQ__HasOptedOutOfEmail__c', None), ('INQ__Respondent__c.INQ__HasUnsubscribed__c', None), ('INQ__Respondent__c.INQ__Inquisium_Activity_Tracker__c', None), ('INQ__Respondent__c.INQ__Is_Response_Count_Incremented__c', None), ('INQ__Respondent__c.INQ__Language_Code__c', None), ('INQ__Respondent__c.INQ__Last_Modified_Date_In_Inquisium__c', None), ('INQ__Respondent__c.INQ__Last_Name__c', None), ('INQ__Respondent__c.INQ__OPT_Out_URL__c', None), ('INQ__Respondent__c.INQ__Sender__c', None), ('INQ__Respondent__c.INQ__SF_Record_Id__c', None), ('INQ__Respondent__c.INQ__Started_On__c', None), ('INQ__Respondent__c.INQ__Status__c', None), ('INQ__Respondent__c.INQ__Survey_Name__c', None), ('INQ__Respondent__c.INQ__Survey_URL__c', None), ('INQ__Respondent__c.INQ__Trigger_Id__c', None), ('INQ__Respondent__c.INQ__Unsubscribe_URL__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Cvent_Respondent_Field__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Respondent_Field_Display_Data_Type__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Respondent_Field_Type__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Salesforce_API_Name__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Salesforce_Field_Type__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Salesforce_Object__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__SF_Field_Display_Data_Type__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__SF_Respondent_Field__c', None), ('INQ__Respondent_Field_Mapping__c.INQ__Start_Index__c', None), ('INQ__Survey_Answer__c.INQ__Answer_Export_Value__c', None), ('INQ__Survey_Answer__c.INQ__Answer_Text__c', None), ('INQ__Survey_Answer__c.INQ__Batch_Id__c', None), ('INQ__Survey_Answer__c.INQ__Category__c', None), ('INQ__Survey_Answer__c.INQ__Correct_Answer__c', None), ('INQ__Survey_Answer__c.INQ__Full_Answer__c', None), ('INQ__Survey_Answer__c.INQ__Index__c', None), ('INQ__Survey_Answer__c.INQ__Question_Code__c', None), ('INQ__Survey_Answer__c.INQ__Question_Export_Value__c', None), ('INQ__Survey_Answer__c.INQ__Question_Text__c', None), ('INQ__Survey_Answer__c.INQ__Question_Type__c', None), ('INQ__Survey_Answer__c.INQ__Score__c', None), ('INQ__Survey_Answer__c.INQ__Survey_Program_Question__c', None), ('INQ__Survey_Answer__c.INQ__Trigger_Id__c', None), ('INQ__Survey_Answer__c.INQ__URL__c', None), ('INQ__Survey_Criteria__c.INQ__Filter_Logic__c', None), ('INQ__Survey_Criteria__c.INQ__SOQL_Query__c', None), ('INQ__Survey_Criteria__c.INQ__Where_Clause__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Date_Time_Value__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Date_Value__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Email_Value__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Field_Type__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Fields__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Object__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Object_Relationship_Name__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Operator__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Operator_Display_Name__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Order__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Phone_Value__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__SF_Field_API_Name__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Start_Index__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Url_Value__c', None), ('INQ__Survey_Criteria_Detail__c.INQ__Value__c', None), ('INQ__Survey_Program__c.INQ__Author_Company__c', None), ('INQ__Survey_Program__c.INQ__Author_Email__c', None), ('INQ__Survey_Program__c.INQ__Author_First_Name__c', None), ('INQ__Survey_Program__c.INQ__Author_Last_Name__c', None), ('INQ__Survey_Program__c.INQ__Available_Survey_Languages__c', None), ('INQ__Survey_Program__c.INQ__Cvent_Survey_Id__c', None), ('INQ__Survey_Program__c.INQ__Dedicated_Custom_Object__c', None), ('INQ__Survey_Program__c.INQ__Description__c', None), ('INQ__Survey_Program__c.INQ__Display_Error_Message_For_Invalid__c', None), ('INQ__Survey_Program__c.INQ__Email_Delay_Time__c', None), ('INQ__Survey_Program__c.INQ__Email_Delay_Unit__c', None), ('INQ__Survey_Program__c.INQ__End_Date_or_Occurrences__c', None), ('INQ__Survey_Program__c.INQ__Has_Recurrence_End_Date__c', None), ('INQ__Survey_Program__c.INQ__INQUISIUM_TO_SALESFORCE_CRITERIA__c', None), ('INQ__Survey_Program__c.INQ__Invitation_Count__c', None), ('INQ__Survey_Program__c.INQ__Is_Deleted_From_Cvent__c', None), ('INQ__Survey_Program__c.INQ__IsAnonymous__c', None), ('INQ__Survey_Program__c.INQ__IsInvalid__c', None), ('INQ__Survey_Program__c.INQ__Last_Synched__c', None), ('INQ__Survey_Program__c.INQ__Number_of_Occurrences__c', None), ('INQ__Survey_Program__c.INQ__Process_For_Non_Criteria_Fields_Updates__c', None), ('INQ__Survey_Program__c.INQ__Program_Status__c', None), ('INQ__Survey_Program__c.INQ__Questions_Count__c', None), ('INQ__Survey_Program__c.INQ__Reason_For_Invalid__c', None), ('INQ__Survey_Program__c.INQ__Recreate_IAT_Records_In_Staging_Process__c', None), ('INQ__Survey_Program__c.INQ__Recurrence_End_Date__c', None), ('INQ__Survey_Program__c.INQ__Recurrence_Frequency__c', None), ('INQ__Survey_Program__c.INQ__Recurrence_Frequency_Unit__c', None), ('INQ__Survey_Program__c.INQ__Recurrence_Start_Date__c', None), ('INQ__Survey_Program__c.INQ__Recurrence_Type__c', None), ('INQ__Survey_Program__c.INQ__Relative_StartDate_Field__c', None), ('INQ__Survey_Program__c.INQ__Response_Count__c', None), ('INQ__Survey_Program__c.INQ__Response_Rate__c', None), ('INQ__Survey_Program__c.INQ__Responses__c', None), ('INQ__Survey_Program__c.INQ__Sender__c', None), ('INQ__Survey_Program__c.INQ__Spam_Limit_Days__c', None), ('INQ__Survey_Program__c.INQ__Spam_Limit_Frequency__c', None), ('INQ__Survey_Program__c.INQ__Spam_Limit_Level__c', None), ('INQ__Survey_Program__c.INQ__Status__c', None), ('INQ__Survey_Program__c.INQ__Survey_Close_Date__c', None), ('INQ__Survey_Program__c.INQ__Survey_Code__c', None), ('INQ__Survey_Program__c.INQ__Survey_Description__c', None), ('INQ__Survey_Program__c.INQ__Survey_Language__c', None), ('INQ__Survey_Program__c.INQ__Survey_Language_Field_API_Name__c', None), ('INQ__Survey_Program__c.INQ__Survey_Preview_URL__c', None), ('INQ__Survey_Program__c.INQ__Survey_Send_Time__c', None), ('INQ__Survey_Program__c.INQ__Survey_Start_Date__c', None), ('INQ__Survey_Program__c.INQ__Survey_URL__c', None), ('INQ__Survey_Program__c.INQ__Time_Zone__c', None), ('INQ__Survey_Program__c.INQ__Trigger_Type__c', None), ('INQ__Survey_Program_Question__c.INQ__Answer_Format_Type__c', None), ('INQ__Survey_Program_Question__c.INQ__Categories_Text__c', None), ('INQ__Survey_Program_Question__c.INQ__Category_Order__c', None), ('INQ__Survey_Program_Question__c.INQ__Cvent_Id__c', None), ('INQ__Survey_Program_Question__c.INQ__DisplayFormatTypeId__c', None), ('INQ__Survey_Program_Question__c.INQ__Full_Question__c', None), ('INQ__Survey_Program_Question__c.INQ__Include_Answer__c', None), ('INQ__Survey_Program_Question__c.INQ__Inquisium_Field_Type__c', None), ('INQ__Survey_Program_Question__c.INQ__Is_Deleted_From_Cvent__c', None), ('INQ__Survey_Program_Question__c.INQ__Question__c', None), ('INQ__Survey_Program_Question__c.INQ__Question_Code__c', None), ('INQ__Survey_Program_Question__c.INQ__Question_Export_Value__c', None), ('INQ__Survey_Program_Question__c.INQ__Type__c', None), ('INQ__Survey_Staging__c.INQ__Batch_Id__c', None), ('INQ__Survey_Staging__c.INQ__Error_Detail__c', None), ('INQ__Survey_Staging__c.INQ__hasErrors__c', None), ('INQ__Survey_Staging__c.INQ__Payload__c', None), ('INQ__Survey_Staging__c.INQ__ProgramId__c', None), ('INQ__Survey_Staging__c.INQ__Status__c', None), ('INQ__Survey_Staging__c.INQ__TriggerId__c', None), ('INQ__Survey_Staging__c.INQ__Type__c', None), ('Intake__c.Accurals__c', None), ('Intake__c.Average_direct_deposit_amount_on_CSA__c', None), ('Intake__c.Case__c', None), ('Intake__c.Direct_Deposit_Employee_details__c', None), ('Intake__c.GL_Chart_of_Accounts__c', None), ('Intake__c.Incomplete_Employee_Demographic__c', None), ('Intake__c.Incomplete_Fed_and_State_Rate_info__c', None), ('Intake__c.Incomplete_Fed_Info__c', None), ('Intake__c.Incomplete_POAs__c', None), ('Intake__c.Incomplete_State_Info__c', None), ('Intake__c.Incomplete_Wage__c', None), ('Intake__c.Incomplete_YTD_s__c', None), ('Intake__c.Incorrect_billing_detail_on_Page_8__c', None), ('Intake__c.Incorrect_title_signatures_for_the_8655__c', None), ('Intake__c.Industry__c', None), ('Intake__c.Missing_copy_of_voided_check_sample__c', None), ('Intake__c.Missing_Incomplete_TPAs__c', None), ('Intake__c.Missing_POA__c', None), ('Intake__c.Need_Analysis__c', None), ('Intake__c.Original__c', None), ('Intake__c.Other_Green__c', None), ('Intake__c.Other_Red__c', None), ('Intake__c.Other_Yellow__c', None), ('Intake__c.Prior_year_Payroll_Journal__c', None), ('Intake__c.Sales_Checklist_completed__c', None), ('Intake__c.Section_C_Banking_Proof_Voided_Check__c', None), ('Intake__c.Section_D_Net_ACH_limit_left_blank__c', None), ('Intake__c.Section_E_of_the_CSA_Payroll_Schedule__c', None), ('Intake__c.Section_I_Channel_Partner__c', None), ('Intake__c.Section_J_left_blank__c', None), ('Intake__c.Section_P_Billing_DM__c', None), ('Intake__c.Section_P_Billing_Estimated_Revenue__c', None), ('Intake__c.Section_P_Billing_Partner_Code_Name__c', None), ('Intake__c.Section_P_Billing_Previous__c', None), ('Intake__c.Section_P_Billing_Source__c', None), ('Intake__c.Section_P_of_the_CSA_Prior_Wages__c', None), ('Intake__c.Section_Q_of_the_CSA__c', None), ('Intake__c.Status__c', None), ('Intake__c.TPA_for_applicable_states__c', None), ('Intake__c.Valid_ID_s_for_applied__c', None), ('Intake__c.Wage_for_Final_payroll_Prior_Provider__c', None), ('Intake__c.X401k_file_info__c', None), ('Knowledge__kav.Carrier_Library_Document_Type__c', None), ('Knowledge__kav.Carrier_Library_Insurance_Type__c', None), ('Knowledge__kav.Payroll_Chat_Answer__c', None), ('Knowledge__kav.Payroll_Content__c', None), ('Lead_Assignment_Rules__c.Acct_Identifier_Benefits__c', None), ('Lead_Assignment_Rules__c.Acct_Identifier_Payroll__c', None), ('Lead_Assignment_Rules__c.Active_Owner__c', None), ('Lead_Assignment_Rules__c.APS_Lead__c', None), ('Lead_Assignment_Rules__c.APS_Product__c', None), ('Lead_Assignment_Rules__c.Contact__c', None), ('Lead_Assignment_Rules__c.Customer_Account__c', None), ('Lead_Assignment_Rules__c.End_Date__c', None), ('Lead_Assignment_Rules__c.Fields_Concatenation__c', None), ('Lead_Assignment_Rules__c.From_User__c', None), ('Lead_Assignment_Rules__c.From_User_Profile__c', None), ('Lead_Assignment_Rules__c.Group_Account__c', None), ('Lead_Assignment_Rules__c.MACleanCity__c', None), ('Lead_Assignment_Rules__c.MACleanCountry__c', None), ('Lead_Assignment_Rules__c.MACleanCounty__c', None), ('Lead_Assignment_Rules__c.MACleanDistrict__c', None), ('Lead_Assignment_Rules__c.MACleanPostalCode__c', None), ('Lead_Assignment_Rules__c.MACleanState__c', None), ('Lead_Assignment_Rules__c.MACleanStreet__c', None), ('Lead_Assignment_Rules__c.MALatitude__c', None), ('Lead_Assignment_Rules__c.MALongitude__c', None), ('Lead_Assignment_Rules__c.Map_ID__c', None), ('Lead_Assignment_Rules__c.Mapping_Created__c', None), ('Lead_Assignment_Rules__c.Mapping_IsDeleted__c', None), ('Lead_Assignment_Rules__c.Mapping_Last_Modified__c', None), ('Lead_Assignment_Rules__c.MAQuality__c', None), ('Lead_Assignment_Rules__c.MASimilarity__c', None), ('Lead_Assignment_Rules__c.MASkipGeocoding__c', None), ('Lead_Assignment_Rules__c.MAVerifiedLatitude__c', None), ('Lead_Assignment_Rules__c.MAVerifiedLongitude__c', None), ('Lead_Assignment_Rules__c.Mid_Market__c', None), ('Lead_Assignment_Rules__c.Office__c', None), ('Lead_Assignment_Rules__c.Partner__c', None), ('Lead_Assignment_Rules__c.Record_Type_Name__c', None), ('Lead_Assignment_Rules__c.Start_Date__c', None), ('Lead_Assignment_Rules__c.State__c', None), ('Lead_Assignment_Rules__c.To_User__c', None), ('Lead_Assignment_Rules__c.Zip_Code__c', None), ('Lead.Accepted__c', None), ('Lead.Accepted_Count__c', None), ('Lead.Accepted_Date__c', None), ('Lead.Accepted_Original_Date__c', None), ('Lead.Address', None), ('Lead.Agency_ID__c', None), ('Lead.AgencyFocus_Auto_Lead_Convert__c', None), ('Lead.AnnualRevenue', None), ('Lead.APS_401k_Vendor_Email__c', None), ('Lead.APS_Lead_Partner__c', None), ('Lead.APS_POI__c', None), ('Lead.APS_Products__c', None), ('Lead.Assignment_Rule_Used__c', None), ('Lead.Behavior_Score__c', None), ('Lead.BMLL_Business_Size__c', None), ('Lead.Branch__c', None), ('Lead.Broker__c', None), ('Lead.Business_Focus__c', None), ('Lead.Business_Rule_Criteria__c', None), ('Lead.Business_Rule_Criteria_APS_POI__c', None), ('Lead.Business_Rule_Criteria_MidMarketState__c', None), ('Lead.Business_Rule_Criteria_MidMarketStateZip__c', None), ('Lead.Business_Rule_Criteria_MidMarketZip__c', None), ('Lead.Business_Rule_Criteria_MidMarOnlyState__c', None), ('Lead.Business_Rule_Criteria_Partner__c', None), ('Lead.Business_Rule_Criteria_Trusted_Advisor__c', None), ('Lead.BW_Password__c', None), ('Lead.Call_Month__c', None), ('Lead.Client_Referrer_Company__c', None), ('Lead.Client_Referrer_Email_Address__c', None), ('Lead.Client_Referrer_First_Name__c', None), ('Lead.Client_Referrer_Last_Name__c', None), ('Lead.Closed_Lost_Original_Date__c', None), ('Lead.Closed_Won_Original_Date__c', None), ('Lead.Company_Id__c', None), ('Lead.Contacted_Age__c', None), ('Lead.Contacted_End__c', None), ('Lead.Contacted_Start__c', None), ('Lead.Convert_Record_Type__c', None), ('Lead.Convert_Record_Type_Opportunity__c', None), ('Lead.Converted__c', None), ('Lead.CPAY_Business_Size__c', None), ('Lead.Created_By_Email__c', None), ('Lead.Created_to_Contact_Age__c', None), ('Lead.Cross_Sell_Account__c', None), ('Lead.CRQS_Proposal__c', None), ('Lead.CRQS_Quote_ID__c', None), ('Lead.Current_Payroll_Provider__c', None), ('Lead.Current_Sales_Rep__c', None), ('Lead.Currently_has_W_C_Coverage__c', None), ('Lead.Dead__c', None), ('Lead.Demographic_Score__c', None), ('Lead.Department__c', None), ('Lead.Description', None), ('Lead.Disqualified_Reason__c', None), ('Lead.Do_Not_Sell__c', None), ('Lead.Do_Not_Send_to_VanillaSoft__c', None), ('Lead.DoNotCall', None), ('Lead.EIN__c', None), ('Lead.Email', None), ('Lead.Employee_Referral_Email__c', None), ('Lead.Expired_SLA_Accepted__c', None), ('Lead.Expired_SLA_Marketing_Qualified__c', None), ('Lead.Fast_Track__c', None), ('Lead.Fast_Track_Date__c', None), ('Lead.Fast_Track_Date_Populated__c', None), ('Lead.Fax', None), ('Lead.FFM__c', None), ('Lead.Frequency_of_Payroll__c', None), ('Lead.HasOptedOutOfEmail', None), ('Lead.HasOptedOutOfFax', None), ('Lead.HC_Quote_ID__c', None), ('Lead.Hide_From_Marketo__c', None), ('Lead.Industry', None), ('Lead.Inside_Sales_Rep__c', None), ('Lead.InsideSales_Owned__c', None), ('Lead.Is_CurrentUser_LeadCreditUser__c', None), ('Lead.Issuing_Location__c', None), ('Lead.Jigsaw', None), ('Lead.Last_Touch_Accepted__c', None), ('Lead.Last_Touch_Marketing_Qualified__c', None), ('Lead.Last_Touch_Program__c', None), ('Lead.Last_Touch_Qualified__c', None), ('Lead.LastTransferDate', None), ('Lead.Lead_Age__c', None), ('Lead.Lead_Credit_Email__c', None), ('Lead.Lead_Credit_User__c', None), ('Lead.Lead_Credit_User_Area__c', None), ('Lead.Lead_Credit_User_Department__c', None), ('Lead.Lead_Credit_User_Manager__c', None), ('Lead.Lead_Credit_User_Market__c', None), ('Lead.Lead_Credit_User_Region__c', None), ('Lead.Lead_Credit_User_Role__c', None), ('Lead.Lead_Credit_User_Team_Name__c', None), ('Lead.Lead_Credit_User_Title__c', None), ('Lead.Lead_Level__c', None), ('Lead.Lead_Lifecycle_Status__c', None), ('Lead.Lead_Number__c', None), ('Lead.Lead_Owner_Name__c', None), ('Lead.Lead_Rating__c', None), ('Lead.Lead_Referral_Date__c', None), ('Lead.Lead_Referral_ID__c', None), ('Lead.Lead_Source_Category__c', None), ('Lead.Lead_Source_Other__c', None), ('Lead.LeadAssignment_Rule_Used__c', None), ('Lead.LeadAssignmentRuleId__c', None), ('Lead.LeadOwnedByQueue__c', None), ('Lead.LeadSource', None), ('Lead.LegacyId__c', None), ('Lead.LMT_User__c', None), ('Lead.LMT_User_Email__c', None), ('Lead.Market_Benefit__c', None), ('Lead.Market_Director_or_Admin__c', None), ('Lead.Marketing_Engaged__c', None), ('Lead.Marketing_Engaged_Date__c', None), ('Lead.Marketing_Qualified__c', None), ('Lead.Marketing_Qualified_Age__c', None), ('Lead.Marketing_Qualified_Count__c', None), ('Lead.Marketing_Qualified_Date__c', None), ('Lead.Marketing_Qualified_End__c', None), ('Lead.Marketing_Qualified_Original_Date__c', None), ('Lead.Marketing_Qualified_Start__c', None), ('Lead.Migration_Ext_Id__c', None), ('Lead.Migration_Flag__c', None), ('Lead.mkto_si__HideDate__c', None), ('Lead.mkto_si__Last_Interesting_Moment__c', None), ('Lead.mkto_si__Last_Interesting_Moment_Date__c', None), ('Lead.mkto_si__Last_Interesting_Moment_Desc__c', None), ('Lead.mkto_si__Last_Interesting_Moment_Source__c', None), ('Lead.mkto_si__Last_Interesting_Moment_Type__c', None), ('Lead.mkto_si__MSIContactId__c', None), ('Lead.mkto_si__Priority__c', None), ('Lead.mkto_si__Relative_Score__c', None), ('Lead.mkto_si__Relative_Score_Value__c', None), ('Lead.mkto_si__Urgency__c', None), ('Lead.mkto_si__Urgency_Value__c', None), ('Lead.mkto_si__View_in_Marketo__c', None), ('Lead.mkto71_Acquisition_Date__c', None), ('Lead.mkto71_Acquisition_Program__c', None), ('Lead.mkto71_Acquisition_Program_Id__c', None), ('Lead.mkto71_Inferred_City__c', None), ('Lead.mkto71_Inferred_Company__c', None), ('Lead.mkto71_Inferred_Country__c', None), ('Lead.mkto71_Inferred_Metropolitan_Area__c', None), ('Lead.mkto71_Inferred_Phone_Area_Code__c', None), ('Lead.mkto71_Inferred_Postal_Code__c', None), ('Lead.mkto71_Inferred_State_Region__c', None), ('Lead.mkto71_Lead_Score__c', None), ('Lead.mkto71_Original_Referrer__c', None), ('Lead.mkto71_Original_Search_Engine__c', None), ('Lead.mkto71_Original_Search_Phrase__c', None), ('Lead.mkto71_Original_Source_Info__c', None), ('Lead.mkto71_Original_Source_Type__c', None), ('Lead.Mobile_Number_for_Text_Notification__c', None), ('Lead.MobilePhone', None), ('Lead.MQL__c', None), ('Lead.MQL_Date__c', None), ('Lead.NAICS_Code__c', None), ('Lead.NAICS_Description__c', None), ('Lead.Number_Of_Employees__c', None), ('Lead.Number_of_Touches__c', None), ('Lead.Number_of_VanillaSoft_contacts__c', None), ('Lead.NumberOfEmployees', None), ('Lead.Office_Benefit__c', None), ('Lead.Officer__c', None), ('Lead.Open_Age__c', None), ('Lead.Open_End__c', None), ('Lead.Open_Start__c', None), ('Lead.Original_Contact__c', None), ('Lead.Other__c', None), ('Lead.Other_Payroll_Provider__c', None), ('Lead.Other_Unqualified_Reason__c', None), ('Lead.Partner__c', None), ('Lead.Partner_Lead_Assignment__c', None), ('Lead.Partner_Type__c', None), ('Lead.Pass_Value__c', None), ('Lead.Pause_Lifecycle__c', None), ('Lead.Payroll_POI__c', None), ('Lead.Phone', None), ('Lead.Predictive_Sales_Rep__c', None), ('Lead.Preferred_Contact_Method__c', None), ('Lead.Primary_BSE__c', None), ('Lead.Primary_BSR__c', None), ('Lead.Primary_Contact__c', None), ('Lead.Primary_NAICS_Code__c', None), ('Lead.Primary_NAICS_Description__c', None), ('Lead.Primary_Partner_DM_Assigned__c', None), ('Lead.Primary_Partner_Id__c', None), ('Lead.Primary_Partner_Type__c', None), ('Lead.Primary_SIC_Code__c', None), ('Lead.Primary_SIC_Description__c', None), ('Lead.Primary_State_of_Business__c', None), ('Lead.Product_Lines_of_Interest__c', None), ('Lead.Product_of_Interest__c', None), ('Lead.qbdialer__CloseDate__c', None), ('Lead.qbdialer__CloseScore__c', None), ('Lead.qbdialer__ContactDate__c', None), ('Lead.qbdialer__ContactScore__c', None), ('Lead.qbdialer__ContactScoreId__c', None), ('Lead.qbdialer__Dials__c', None), ('Lead.qbdialer__LastCallTime__c', None), ('Lead.qbdialer__ResponseTime__c', None), ('Lead.Qualified__c', None), ('Lead.Qualified_Count__c', None), ('Lead.Qualified_Date__c', None), ('Lead.Qualified_Original_Date__c', None), ('Lead.Qualified2__c', None), ('Lead.Qualifying_Age__c', None), ('Lead.Qualifying_End__c', None), ('Lead.Qualifying_Start__c', None), ('Lead.Rating', None), ('Lead.RCM_Stage__c', None), ('Lead.Re_Visit_Date__c', None), ('Lead.RECID__c', None), ('Lead.Reciprocal_Referral__c', None), ('Lead.Reciprocal_Referral_Checked__c', None), ('Lead.Record_Type__c', None), ('Lead.Recycle_Original_Date__c', None), ('Lead.Recycle_Reason__c', None), ('Lead.Referred_by_a_Partner__c', None), ('Lead.Referred_Products__c', None), ('Lead.Referrer_Email__c', None), ('Lead.Referrer_ID__c', None), ('Lead.Referrer_Name__c', None), ('Lead.Referrer_Phone__c', None), ('Lead.Region_Benefit__c', None), ('Lead.Requested_Level_of_Access__c', None), ('Lead.Route_Lead__c', None), ('Lead.Sales_Owner__c', None), ('Lead.SIC_Code__c', None), ('Lead.SIC_Description__c', None), ('Lead.sma__MAAssignmentRule__c', None), ('Lead.Source_Client_Code__c', None), ('Lead.Source_System__c', None), ('Lead.Source_Table__c', None), ('Lead.Tax_ID_Personal_or_Agency__c', None), ('Lead.Telemarketer__c', None), ('Lead.Telemarketing_Lead__c', None), ('Lead.Test_Lead__c', None), ('Lead.Title', None), ('Lead.Tradeshow__c', None), ('Lead.Trusted_Advisor__c', None), ('Lead.Unqualified_Age__c', None), ('Lead.Unqualified_End__c', None), ('Lead.Unqualified_Reason__c', None), ('Lead.Unqualified_Start__c', None), ('Lead.Update_Sales_Owner__c', None), ('Lead.User__c', None), ('Lead.user_status__c', None), ('Lead.VanillaSoft_Contact_Id__c', None), ('Lead.VanillaSoft_Contact_Id_Copy__c', None), ('Lead.VanillaSoft_Error__c', None), ('Lead.VanillaSoft_Lead__c', None), ('Lead.VanillaSoft_Team__c', None), ('Lead.Website', None), ('Lead.Workers_Comp_Broker__c', None), ('LiveAgentSession.ChatReqAssigned', None), ('LiveAgentSession.ChatReqDeclined', None), ('LiveAgentSession.ChatReqEngaged', None), ('LiveAgentSession.ChatReqTimedOut', None), ('LiveAgentSession.NumFlagLoweredAgent', None), ('LiveAgentSession.NumFlagLoweredSupervisor', None), ('LiveAgentSession.NumFlagRaised', None), ('LiveAgentSession.TimeAtCapacity', None), ('LiveAgentSession.TimeIdle', None), ('LiveAgentSession.TimeInAwayStatus', None), ('LiveAgentSession.TimeInChats', None), ('LiveAgentSession.TimeInOnlineStatus', None), ('LiveChatTranscript.Abandoned', None), ('LiveChatTranscript.Account', None), ('LiveChatTranscript.Account_Id__c', None), ('LiveChatTranscript.AverageResponseTimeOperator', None), ('LiveChatTranscript.AverageResponseTimeVisitor', None), ('LiveChatTranscript.BMAS_ID__c', None), ('LiveChatTranscript.Body', None), ('LiveChatTranscript.Browser', None), ('LiveChatTranscript.BrowserLanguage', None), ('LiveChatTranscript.Case', None), ('LiveChatTranscript.ChatDuration', None), ('LiveChatTranscript.ChatKey', None), ('LiveChatTranscript.Client_Code__c', None), ('LiveChatTranscript.Contact', None), ('LiveChatTranscript.EndedBy', None), ('LiveChatTranscript.EndTime', None), ('LiveChatTranscript.IpAddress', None), ('LiveChatTranscript.Lead', None), ('LiveChatTranscript.Lifecycle', None), ('LiveChatTranscript.LiveChatButton', None), ('LiveChatTranscript.LiveChatDeployment', None), ('LiveChatTranscript.Location', None), ('LiveChatTranscript.MaxResponseTimeOperator', None), ('LiveChatTranscript.MaxResponseTimeVisitor', None), ('LiveChatTranscript.OperatorMessageCount', None), ('LiveChatTranscript.Platform', None), ('LiveChatTranscript.ReferrerUri', None), ('LiveChatTranscript.RequestTime', None), ('LiveChatTranscript.ScreenResolution', None), ('LiveChatTranscript.SessionId__c', None), ('LiveChatTranscript.Skill', None), ('LiveChatTranscript.StartTime', None), ('LiveChatTranscript.Status', None), ('LiveChatTranscript.SupervisorTranscriptBody', None), ('LiveChatTranscript.UserAgent', None), ('LiveChatTranscript.VisitorMessageCount', None), ('LiveChatTranscript.VisitorNetwork', None), ('LiveChatTranscript.WaitTime', None), ('Menu__c.Content__c', None), ('Menu__c.ContentTitle__c', None), ('Menu__c.Custom_Logic__c', None), ('Menu__c.Custom_Logic_Name__c', None), ('Menu__c.GroupId__c', None), ('Menu__c.Icon__c', None), ('Menu__c.ImageOnly__c', None), ('Menu__c.ImageURL__c', None), ('Menu__c.Is_External_Link__c', None), ('Menu__c.Is_User_Specific_Tile__c', None), ('Menu__c.isActive__c', None), ('Menu__c.IsExternalLink__c', None), ('Menu__c.isSSO__c', None), ('Menu__c.Link__c', None), ('Menu__c.Order__c', None), ('Menu__c.Parent_menu__c', None), ('Menu__c.Section__c', None), ('Menu__c.ShowinAFCommunity__c', None), ('Menu__c.State__c', None), ('Menu__c.User_Specific_Icon__c', None), ('Menu__c.User_Specific_Static_Message__c', None), ('Menu__c.User_Specific_Tile_Behavior__c', None), ('Menu__c.User_Specific_Tiles__c', None), ('Migration_Task__c.ActivityDate__c', None), ('Migration_Task__c.Alarm_Date__c', None), ('Migration_Task__c.Alarm_Time__c', None), ('Migration_Task__c.Converted__c', None), ('Migration_Task__c.CreatedById__c', None), ('Migration_Task__c.CreatedDate__c', None), ('Migration_Task__c.Description__c', None), ('Migration_Task__c.Duration_in_Mins__c', None), ('Migration_Task__c.End_Time__c', None), ('Migration_Task__c.is_Reminder_Set__c', None), ('Migration_Task__c.LastModifiedById__c', None), ('Migration_Task__c.LastModifiedDate__c', None), ('Migration_Task__c.Lead__c', None), ('Migration_Task__c.Lead_exists__c', None), ('Migration_Task__c.Lead_External_Id__c', None), ('Migration_Task__c.Migrated__c', None), ('Migration_Task__c.On_Date__c', None), ('Migration_Task__c.On_Time__c', None), ('Migration_Task__c.OwnerId__c', None), ('Migration_Task__c.Phone__c', None), ('Migration_Task__c.Reminder_Time__c', None), ('Migration_Task__c.SFDC_created_By_Alias__c', None), ('Migration_Task__c.SFDC_Last_Modified_by_Alias__c', None), ('Migration_Task__c.Start_Date_time__c', None), ('Migration_Task__c.Subject__c', None), ('Migration_Task__c.Task_External_Id_c__c', None), ('Migration_Task__c.Type__c', None), ('mkto_si__Best_Bets_View__c.mkto_si__IncludeDefaultColumns__c', None), ('mkto_si__Best_Bets_View__c.mkto_si__MaxPages__c', None), ('mkto_si__Best_Bets_View__c.mkto_si__MaxRows__c', None), ('mkto_si__Best_Bets_View__c.mkto_si__Object__c', None), ('mkto_si__Best_Bets_View__c.mkto_si__OwnerFilter__c', None), ('mkto_si__Best_Bets_View__c.mkto_si__ShowRecordsWithNegativeScores__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__FieldLabel__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__FieldName__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__FieldNumber__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__FieldType__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__LookupValue__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__Operator__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__ShowField__c', None), ('mkto_si__Best_Bets_View_Detail__c.mkto_si__Value__c', None), ('mkto_si__BestBetsCache__c.mkto_si__AccountLink__c', None), ('mkto_si__BestBetsCache__c.mkto_si__AccountLinkName__c', None), ('mkto_si__BestBetsCache__c.mkto_si__BestBetsView__c', None), ('mkto_si__BestBetsCache__c.mkto_si__ContactId__c', None), ('mkto_si__BestBetsCache__c.mkto_si__ContactLink__c', None), ('mkto_si__BestBetsCache__c.mkto_si__ContactName__c', None), ('mkto_si__BestBetsCache__c.mkto_si__Id__c', None), ('mkto_si__BestBetsCache__c.mkto_si__LeadScore__c', None), ('mkto_si__BestBetsCache__c.mkto_si__LIMDate__c', None), ('mkto_si__BestBetsCache__c.mkto_si__LIMDesc__c', None), ('mkto_si__BestBetsCache__c.mkto_si__LIMType__c', None), ('mkto_si__BestBetsCache__c.mkto_si__Priority__c', None), ('mkto_si__BestBetsCache__c.mkto_si__RelativeScore__c', None), ('mkto_si__BestBetsCache__c.mkto_si__RowNum__c', None), ('mkto_si__BestBetsCache__c.mkto_si__SObjectType__c', None), ('mkto_si__BestBetsCache__c.mkto_si__Status__c', None), ('mkto_si__BestBetsCache__c.mkto_si__TotalCount__c', None), ('mkto_si__BestBetsCache__c.mkto_si__Urgency__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__AccountLink__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__AccountLinkName__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__ActivityDT__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__Campaign__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__ClickCount__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__ContactLink__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__ContactLinkName__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__Id__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__MessageId__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__MessageThreadIndex__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__MessageType__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__OpenCount__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__RowNum__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__Status__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__Subject__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__ThreadNumber__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__ThreadSubject__c', None), ('mkto_si__EmailActivityCache__c.mkto_si__TotalCount__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__AccountLink__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__AccountLinkName__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__City__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__ContactLink__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__ContactLinkName__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__Country__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__Id__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__IsAnonymous__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__LastVisitDT__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__PageViews__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__RowNum__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__SearchLink__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__SearchLinkName__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__State__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__TotalCount__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__WPageLink__c', None), ('mkto_si__GroupedWebActivityCache__c.mkto_si__WPageLinkName__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__AccountLink__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__AccountLinkName__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__ActivityDT__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__Campaign__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__ContactLink__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__ContactLinkName__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__Id__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__MomentNote__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__MomentType__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__RowNum__c', None), ('mkto_si__InterestingMomentsCache__c.mkto_si__TotalCount__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c.mkto_si__Enable_Marketo_API__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c.mkto_si__Enable_RSS__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c.mkto_si__Test_Configuration__c', None), ('mkto_si__ScoringCache__c.mkto_si__AccountLink__c', None), ('mkto_si__ScoringCache__c.mkto_si__AccountLinkName__c', None), ('mkto_si__ScoringCache__c.mkto_si__ActivityDT__c', None), ('mkto_si__ScoringCache__c.mkto_si__Campaign__c', None), ('mkto_si__ScoringCache__c.mkto_si__ContactLink__c', None), ('mkto_si__ScoringCache__c.mkto_si__ContactLinkName__c', None), ('mkto_si__ScoringCache__c.mkto_si__Id__c', None), ('mkto_si__ScoringCache__c.mkto_si__NewValue__c', None), ('mkto_si__ScoringCache__c.mkto_si__OldValue__c', None), ('mkto_si__ScoringCache__c.mkto_si__Reason__c', None), ('mkto_si__ScoringCache__c.mkto_si__RowNum__c', None), ('mkto_si__ScoringCache__c.mkto_si__ScoreName__c', None), ('mkto_si__ScoringCache__c.mkto_si__TotalCount__c', None), ('mkto_si__Value__c.mkto_si__Boolean__c', None), ('mkto_si__Value__c.mkto_si__Currency__c', None), ('mkto_si__Value__c.mkto_si__Date__c', None), ('mkto_si__Value__c.mkto_si__DateTime__c', None), ('mkto_si__Value__c.mkto_si__Double__c', None), ('mkto_si__Value__c.mkto_si__Email__c', None), ('mkto_si__Value__c.mkto_si__Percent__c', None), ('mkto_si__Value__c.mkto_si__Phone__c', None), ('mkto_si__Value__c.mkto_si__String__c', None), ('mkto_si__Value__c.mkto_si__TextArea__c', None), ('mkto_si__Value__c.mkto_si__Url__c', None), ('mkto_si__Value__c.mkto_si__ValueType__c', None), ('mkto_si__WebActivityCache__c.mkto_si__Account__c', None), ('mkto_si__WebActivityCache__c.mkto_si__AccountLink__c', None), ('mkto_si__WebActivityCache__c.mkto_si__AccountLinkName__c', None), ('mkto_si__WebActivityCache__c.mkto_si__ActivityDT__c', None), ('mkto_si__WebActivityCache__c.mkto_si__Contact__c', None), ('mkto_si__WebActivityCache__c.mkto_si__ContactLink__c', None), ('mkto_si__WebActivityCache__c.mkto_si__ContactLinkName__c', None), ('mkto_si__WebActivityCache__c.mkto_si__Id__c', None), ('mkto_si__WebActivityCache__c.mkto_si__Lead__c', None), ('mkto_si__WebActivityCache__c.mkto_si__Opportunity__c', None), ('mkto_si__WebActivityCache__c.mkto_si__RowNum__c', None), ('mkto_si__WebActivityCache__c.mkto_si__SActivityDT__c', None), ('mkto_si__WebActivityCache__c.mkto_si__SearchLink__c', None), ('mkto_si__WebActivityCache__c.mkto_si__SearchLinkName__c', None), ('mkto_si__WebActivityCache__c.mkto_si__TotalCount__c', None), ('mkto_si__WebActivityCache__c.mkto_si__WPageLink__c', None), ('mkto_si__WebActivityCache__c.mkto_si__WPageLinkName__c', None), ('Notification__c.Account__c', None), ('Notification__c.Body__c', None), ('Notification__c.Case__c', None), ('Notification__c.Comments__c', None), ('Notification__c.Destination_Email_Address__c', None), ('Notification__c.Email_Sender__c', None), ('Notification__c.Subject__c', None), ('Notification__c.Type__c', None), ('OE_Error__c.Case__c', None), ('OE_Error__c.Error_Description__c', None), ('OE_Error__c.Resolved_By__c', None), ('OE_Error__c.Status__c', None), ('OE_Error__c.URL_Link_to_Error__c', None), ('Office__c.BSE__c', None), ('Office__c.BSR__c', None), ('Office__c.Business_Unit__c', None), ('Office__c.Contact__c', None), ('Office__c.Market_Benefit__c', None), ('Office__c.Market_Director__c', None), ('Office__c.Office_Benefit__c', None), ('Office__c.Office_Id__c', None), ('Office__c.Region_Benefit__c', None), ('Office__c.SF_Office__c', None), ('Opportunity__hd.Amount__hpr', None), ('Opportunity__hd.Amount__hst', None), ('Opportunity__hd.CloseDate__hpr', None), ('Opportunity__hd.CloseDate__hst', None), ('Opportunity__hd.ForecastCategoryName__hpr', None), ('Opportunity__hd.ForecastCategoryName__hst', None), ('Opportunity__hd.Probability__hpr', None), ('Opportunity__hd.Probability__hst', None), ('Opportunity__hd.StageName__hpr', None), ('Opportunity__hd.StageName__hst', None), ('Opportunity_Pipeline_Snapshot__c.Account_Name__c', None), ('Opportunity_Pipeline_Snapshot__c.Amount__c', None), ('Opportunity_Pipeline_Snapshot__c.Close_Date__c', None), ('Opportunity_Pipeline_Snapshot__c.Custom_Created_Date__c', None), ('Opportunity_Pipeline_Snapshot__c.Opportunity_Name__c', None), ('Opportunity_Pipeline_Snapshot__c.Opportunity_Owner__c', None), ('Opportunity_Pipeline_Snapshot__c.Stage__c', None), ('Opportunity.ACA_PEPM_Rate__c', None), ('Opportunity.ACA_PEPY_Rate__c', None), ('Opportunity.Account', None), ('Opportunity.Account_Bundle__c', None), ('Opportunity.Account_s_State__c', None), ('Opportunity.Admin_Fee__c', None), ('Opportunity.AFocus_SIC_Code__c', None), ('Opportunity.Agent_Current_BOR_for_Group__c', None), ('Opportunity.allCompliance_Implementation_Date__c', None), ('Opportunity.allCompliance_Status__c', None), ('Opportunity.Allow_Additnl_Field_Auth_from_Campaign__c', None), ('Opportunity.ambition__timestamp_for_unittest__c', None), ('Opportunity.Amount', None), ('Opportunity.App_Pending_Carriers__c', None), ('Opportunity.APS_POI__c', None), ('Opportunity.APS_Products__c', None), ('Opportunity.BenAdmin_System__c', None), ('Opportunity.Billing_Frequency__c', None), ('Opportunity.Billing_Type__c', None), ('Opportunity.BOR__c', None), ('Opportunity.Broker_Commission_Percent__c', None), ('Opportunity.Broker_Opportunity__c', None), ('Opportunity.BSE__c', None), ('Opportunity.Bundle_New__c', None), ('Opportunity.Business_Segment__c', None), ('Opportunity.Campaign', None), ('Opportunity.Carrier_Instructions__c', None), ('Opportunity.Case__c', None), ('Opportunity.Client_Account__c', None), ('Opportunity.Client_Paperwork_Delivered_Date__c', None), ('Opportunity.Client_Paperwork_Generated_Delivered__c', None), ('Opportunity.Client_Products__c', None), ('Opportunity.Client_Referrer_Company__c', None), ('Opportunity.Client_Referrer_Email_Address__c', None), ('Opportunity.Client_Referrer_First_Name__c', None), ('Opportunity.Client_Referrer_Last_Name__c', None), ('Opportunity.Closed_Won_Date__c', None), ('Opportunity.Comments__c', None), ('Opportunity.Commitment_Obtained__c', None), ('Opportunity.Commitment_Obtained_Date__c', None), ('Opportunity.Contact__c', None), ('Opportunity.Contract', None), ('Opportunity.Contract_Type__c', None), ('Opportunity.Convert_Record_Type__c', None), ('Opportunity.Converted__c', None), ('Opportunity.Corporate_Campaign_Discount__c', None), ('Opportunity.Covered_Lives__c', None), ('Opportunity.createdfromVF__c', None), ('Opportunity.Cross_Sell_Discussion_Result__c', None), ('Opportunity.CRQS_Client_Info_Only__c', None), ('Opportunity.CSA_Signed__c', None), ('Opportunity.CSA_Signed_Date__c', None), ('Opportunity.Current_Version_CSA__c', None), ('Opportunity.CurrentNew_Solution_Provider__c', None), ('Opportunity.CurrentNew_Solution_Type__c', None), ('Opportunity.Date_Final_Spreadsheet_Sent_to_Broker__c', None), ('Opportunity.Date_Received_Initial_Request__c', None), ('Opportunity.Days_Since_Oppty_Modified__c', None), ('Opportunity.Dental_Coverage__c', None), ('Opportunity.Dental_Forecasted_Lives__c', None), ('Opportunity.Dental_Weighted_Lives__c', None), ('Opportunity.Description', None), ('Opportunity.Disability_Coverage__c', None), ('Opportunity.Disability_Forecasted_Lives__c', None), ('Opportunity.Disability_Weighted_Lives__c', None), ('Opportunity.Discount__c', None), ('Opportunity.Discount_Approved__c', None), ('Opportunity.Discount_Approved_Date__c', None), ('Opportunity.Discount_Approved_Percent__c', None), ('Opportunity.DNS__c', None), ('Opportunity.Document__c', None), ('Opportunity.DocUniqueId__c', None), ('Opportunity.Effective_Date__c', None), ('Opportunity.EIN__c', None), ('Opportunity.EmployerFocus__c', None), ('Opportunity.EmployerFocus_Implementation_Date__c', None), ('Opportunity.EmployerFocusStatus__c', None), ('Opportunity.Epic_Billing_Carrier__c', None), ('Opportunity.Epic_Line_Status__c', None), ('Opportunity.EPIC_Policy_Id__c', None), ('Opportunity.Epic_Service_Summary_Stage__c', None), ('Opportunity.Est_Net_Future_Year_Annual_Commission__c', None), ('Opportunity.Estimated_1st_Year_Commission_Rate__c', None), ('Opportunity.Estimated_1st_Year_Total_Commission__c', None), ('Opportunity.Estimated_1st_Year_Total_Revenue__c', None), ('Opportunity.Estimated_Annual_Premium__c', None), ('Opportunity.Estimated_Future_Year_Commission_Rate__c', None), ('Opportunity.Estimated_Future_Year_Total_Revenue__c', None), ('Opportunity.Estimated_No_Employees__c', None), ('Opportunity.Estimated_Per_Payroll_Charge__c', None), ('Opportunity.Expected_First_Check_Date__c', None), ('Opportunity.Expected_First_Run__c', None), ('Opportunity.ExpectedRevenue', None), ('Opportunity.Expiration_Date__c', None), ('Opportunity.Fee_Total__c', None), ('Opportunity.Field_Authority_Discount__c', None), ('Opportunity.First_Meeting__c', None), ('Opportunity.First_Meeting_Completed__c', None), ('Opportunity.First_Meeting_Completed_Date__c', None), ('Opportunity.First_Meeting_Expected_Date__c', None), ('Opportunity.First_meeting_Scheduled__c', None), ('Opportunity.First_Meeting_Scheduled_Date__c', None), ('Opportunity.Forecast_Type__c', None), ('Opportunity.Forecasted_Weighted_Lives__c', None), ('Opportunity.Free_1st_Year_W2s__c', None), ('Opportunity.Free_Months_of_Payroll__c', None), ('Opportunity.GA_Commission_Percent__c', None), ('Opportunity.Generated_By__c', None), ('Opportunity.Gift_Card_Fulfilled__c', None), ('Opportunity.Group_Address__c', None), ('Opportunity.Group_City__c', None), ('Opportunity.Group_Contact__c', None), ('Opportunity.Group_EIN__c', None), ('Opportunity.Group_Email__c', None), ('Opportunity.Group_Name__c', None), ('Opportunity.Group_Phone__c', None), ('Opportunity.Group_State__c', None), ('Opportunity.Group_Zip_Postal_Code__c', None), ('Opportunity.HR_Enhanced_Revenue__c', None), ('Opportunity.HRIS_Payroll_Vendor__c', None), ('Opportunity.HRIS_Payroll_Vendor_Implementation_Date__c', None), ('Opportunity.HRIS_Payroll_Vendor_Status__c', None), ('Opportunity.IntegratedProductStatus__c', None), ('Opportunity.Internal_Comments__c', None), ('Opportunity.Investment_Fee__c', None), ('Opportunity.Is_Created_From_Lead_Conversion__c', None), ('Opportunity.IsPrivate', None), ('Opportunity.Issuing_Carrier__c', None), ('Opportunity.Issuing_Location__c', None), ('Opportunity.Last_LincDoc_Date__c', None), ('Opportunity.Latest_Quote_ID__c', None), ('Opportunity.Latest_Quote_Type__c', None), ('Opportunity.Lead_Credit_Email__c', None), ('Opportunity.Lead_Credit_User__c', None), ('Opportunity.Lead_Credit_User_Area__c', None), ('Opportunity.Lead_Credit_User_Department__c', None), ('Opportunity.Lead_Credit_User_Manager__c', None), ('Opportunity.Lead_Credit_User_Market__c', None), ('Opportunity.Lead_Credit_User_Region__c', None), ('Opportunity.Lead_Credit_User_Role__c', None), ('Opportunity.Lead_Credit_User_Team_Name__c', None), ('Opportunity.Lead_Credit_User_Title__c', None), ('Opportunity.Lead_Source_Category__c', None), ('Opportunity.LeadSource', None), ('Opportunity.Legacy_ID__c', None), ('Opportunity.Life_Coverage__c', None), ('Opportunity.Life_Forecasted_Lives__c', None), ('Opportunity.Life_Weighted_Lives__c', None), ('Opportunity.LincDoc_Id__c', None), ('Opportunity.LincDoc_Qualified__c', None), ('Opportunity.Lincdoc_Save_For_Later__c', None), ('Opportunity.LincDoc_Status__c', None), ('Opportunity.Lines_of_Coverage__c', None), ('Opportunity.LMT_User__c', None), ('Opportunity.Market__c', None), ('Opportunity.Market_Segment__c', None), ('Opportunity.Marketing_Engaged__c', None), ('Opportunity.Medical_Coverage__c', None), ('Opportunity.Medical_Forecasted_Lives__c', None), ('Opportunity.Medical_Weighted_Lives__c', None), ('Opportunity.Method_of_Payment__c', None), ('Opportunity.Migration_Flag__c', None), ('Opportunity.Missing_Information_Received_from_Agent__c', None), ('Opportunity.Missing_Information_Requested_from_Agent__c', None), ('Opportunity.mkto_si__MarketoAnalyzer__c', None), ('Opportunity.Multi_EIN__c', None), ('Opportunity.Multiple_Locations__c', None), ('Opportunity.Nature_of_Business__c', None), ('Opportunity.Need_Analysis_Completed__c', None), ('Opportunity.Next_Step__c', None), ('Opportunity.NextStep', None), ('Opportunity.NoofAttachment__c', None), ('Opportunity.NoofFiles__c', None), ('Opportunity.Office__c', None), ('Opportunity.OpptyExtID__c', None), ('Opportunity.Other_Forecasted_Lives__c', None), ('Opportunity.Other_Weighted_Lives__c', None), ('Opportunity.Owner_Role__c', None), ('Opportunity.Partner_Revenue_Share__c', None), ('Opportunity.Payroll_Frequency1__c', None), ('Opportunity.Payroll_Sales_Revenue_Calculate__c', None), ('Opportunity.Payroll_Sales_Revenue_Credits__c', None), ('Opportunity.Pending_Reason__c', None), ('Opportunity.Plan_Eight__c', None), ('Opportunity.Plan_Eight_Carrier_History__c', None), ('Opportunity.Plan_Eight_Current_Benefits__c', None), ('Opportunity.Plan_Eight_Current_Carrier__c', None), ('Opportunity.Plan_Eight_EC_Current__c', None), ('Opportunity.Plan_Eight_EC_Renewal__c', None), ('Opportunity.Plan_Eight_EE_Current__c', None), ('Opportunity.Plan_Eight_EE_Renewal__c', None), ('Opportunity.Plan_Eight_EF_Current__c', None), ('Opportunity.Plan_Eight_EF_Renewal__c', None), ('Opportunity.Plan_Eight_Employer_Contribution__c', None), ('Opportunity.Plan_Eight_ES_Current__c', None), ('Opportunity.Plan_Eight_ES_Renewal__c', None), ('Opportunity.Plan_Eight_Waiting_Period__c', None), ('Opportunity.Plan_Five__c', None), ('Opportunity.Plan_Five_Carrier_History__c', None), ('Opportunity.Plan_Five_Current_Benefits__c', None), ('Opportunity.Plan_Five_Current_Carrier__c', None), ('Opportunity.Plan_Five_EC_Current__c', None), ('Opportunity.Plan_Five_EC_Renewal__c', None), ('Opportunity.Plan_Five_EE_Current__c', None), ('Opportunity.Plan_Five_EE_Renewal__c', None), ('Opportunity.Plan_Five_EF_Current__c', None), ('Opportunity.Plan_Five_EF_Renewal__c', None), ('Opportunity.Plan_Five_Employer_Contribution__c', None), ('Opportunity.Plan_Five_ES_Current__c', None), ('Opportunity.Plan_Five_ES_Renewal__c', None), ('Opportunity.Plan_Five_Waiting_Period__c', None), ('Opportunity.Plan_Four__c', None), ('Opportunity.Plan_Four_Carrier_History__c', None), ('Opportunity.Plan_Four_Current_Benefits__c', None), ('Opportunity.Plan_Four_Current_Carrier__c', None), ('Opportunity.Plan_Four_EC_Current__c', None), ('Opportunity.Plan_Four_EC_Renewal__c', None), ('Opportunity.Plan_Four_EE_Current__c', None), ('Opportunity.Plan_Four_EE_Renewal__c', None), ('Opportunity.Plan_Four_EF_Current__c', None), ('Opportunity.Plan_Four_EF_Renewal__c', None), ('Opportunity.Plan_Four_Employer_Contribution__c', None), ('Opportunity.Plan_Four_ES_Current__c', None), ('Opportunity.Plan_Four_ES_Renewal__c', None), ('Opportunity.Plan_Four_Waiting_Period__c', None), ('Opportunity.Plan_Nine__c', None), ('Opportunity.Plan_Nine_Carrier_History__c', None), ('Opportunity.Plan_Nine_Current_Benefits__c', None), ('Opportunity.Plan_Nine_Current_Carrier__c', None), ('Opportunity.Plan_Nine_EC_Current__c', None), ('Opportunity.Plan_Nine_EC_Renewal__c', None), ('Opportunity.Plan_Nine_EE_Current__c', None), ('Opportunity.Plan_Nine_EE_Renewal__c', None), ('Opportunity.Plan_Nine_EF_Current__c', None), ('Opportunity.Plan_Nine_EF_Renewal__c', None), ('Opportunity.Plan_Nine_Employer_Contribution__c', None), ('Opportunity.Plan_Nine_ES_Current__c', None), ('Opportunity.Plan_Nine_ES_Renewal__c', None), ('Opportunity.Plan_Nine_Waiting_Period__c', None), ('Opportunity.Plan_One__c', None), ('Opportunity.Plan_One_Carrier_History__c', None), ('Opportunity.Plan_One_Current_Benefits__c', None), ('Opportunity.Plan_One_Current_Carrier__c', None), ('Opportunity.Plan_One_EC_Current__c', None), ('Opportunity.Plan_One_EC_Renewal__c', None), ('Opportunity.Plan_One_EE_Current__c', None), ('Opportunity.Plan_One_EE_Renewal__c', None), ('Opportunity.Plan_One_EF_Current__c', None), ('Opportunity.Plan_One_EF_Renewal__c', None), ('Opportunity.Plan_One_Employer_Contribution__c', None), ('Opportunity.Plan_One_ES_Current__c', None), ('Opportunity.Plan_One_ES_Renewal__c', None), ('Opportunity.Plan_One_Waiting_Period__c', None), ('Opportunity.Plan_Seven__c', None), ('Opportunity.Plan_Seven_Carrier_History__c', None), ('Opportunity.Plan_Seven_Current_Benefits__c', None), ('Opportunity.Plan_Seven_Current_Carrier__c', None), ('Opportunity.Plan_Seven_EC_Current__c', None), ('Opportunity.Plan_Seven_EC_Renewal__c', None), ('Opportunity.Plan_Seven_EE_Current__c', None), ('Opportunity.Plan_Seven_EE_Renewal__c', None), ('Opportunity.Plan_Seven_EF_Current__c', None), ('Opportunity.Plan_Seven_EF_Renewal__c', None), ('Opportunity.Plan_Seven_Employer_Contribution__c', None), ('Opportunity.Plan_Seven_ES_Current__c', None), ('Opportunity.Plan_Seven_ES_Renewal__c', None), ('Opportunity.Plan_Seven_Waiting_Period__c', None), ('Opportunity.Plan_Six__c', None), ('Opportunity.Plan_Six_Carrier_History__c', None), ('Opportunity.Plan_Six_Current_Benefits__c', None), ('Opportunity.Plan_Six_Current_Carrier__c', None), ('Opportunity.Plan_Six_EC_Current__c', None), ('Opportunity.Plan_Six_EC_Renewal__c', None), ('Opportunity.Plan_Six_EE_Current__c', None), ('Opportunity.Plan_Six_EE_Renewal__c', None), ('Opportunity.Plan_Six_EF_Current__c', None), ('Opportunity.Plan_Six_EF_Renewal__c', None), ('Opportunity.Plan_Six_Employer_Contribution__c', None), ('Opportunity.Plan_Six_ES_Current__c', None), ('Opportunity.Plan_Six_ES_Renewal__c', None), ('Opportunity.Plan_Six_Waiting_Period__c', None), ('Opportunity.Plan_Ten__c', None), ('Opportunity.Plan_Ten_Carrier_History__c', None), ('Opportunity.Plan_Ten_Current_Benefits__c', None), ('Opportunity.Plan_Ten_Current_Carrier__c', None), ('Opportunity.Plan_Ten_EC_Current__c', None), ('Opportunity.Plan_Ten_EC_Renewal__c', None), ('Opportunity.Plan_Ten_EE_Current__c', None), ('Opportunity.Plan_Ten_EE_Renewal__c', None), ('Opportunity.Plan_Ten_EF_Current__c', None), ('Opportunity.Plan_Ten_EF_Renewal__c', None), ('Opportunity.Plan_Ten_Employer_Contribution__c', None), ('Opportunity.Plan_Ten_ES_Current__c', None), ('Opportunity.Plan_Ten_ES_Renewal__c', None), ('Opportunity.Plan_Ten_Waiting_Period__c', None), ('Opportunity.Plan_Three__c', None), ('Opportunity.Plan_Three_Carrier_History__c', None), ('Opportunity.Plan_Three_Current_Benefits__c', None), ('Opportunity.Plan_Three_Current_Carrier__c', None), ('Opportunity.Plan_Three_EC_Current__c', None), ('Opportunity.Plan_Three_EC_Renewal__c', None), ('Opportunity.Plan_Three_EE_Current__c', None), ('Opportunity.Plan_Three_EE_Renewal__c', None), ('Opportunity.Plan_Three_EF_Current__c', None), ('Opportunity.Plan_Three_EF_Renewal__c', None), ('Opportunity.Plan_Three_Employer_Contribution__c', None), ('Opportunity.Plan_Three_ES_Current__c', None), ('Opportunity.Plan_Three_ES_Renewal__c', None), ('Opportunity.Plan_Three_Waiting_Period__c', None), ('Opportunity.Plan_Two__c', None), ('Opportunity.Plan_Two_Carrier_History__c', None), ('Opportunity.Plan_Two_Current_Benefits__c', None), ('Opportunity.Plan_Two_Current_Carrier__c', None), ('Opportunity.Plan_Two_EC_Current__c', None), ('Opportunity.Plan_Two_EC_Renewal__c', None), ('Opportunity.Plan_Two_EE_Current__c', None), ('Opportunity.Plan_Two_EE_Renewal__c', None), ('Opportunity.Plan_Two_EF_Current__c', None), ('Opportunity.Plan_Two_EF_Renewal__c', None), ('Opportunity.Plan_Two_Employer_Contribution__c', None), ('Opportunity.Plan_Two_ES_Current__c', None), ('Opportunity.Plan_Two_ES_Renewal__c', None), ('Opportunity.Plan_Two_Waiting_Period__c', None), ('Opportunity.Policy_Description__c', None), ('Opportunity.Policy_Number__c', None), ('Opportunity.Previous_Service__c', None), ('Opportunity.Primary_Partner__c', None), ('Opportunity.Primary_Partner_Id__c', None), ('Opportunity.Primary_Partner_Type__c', None), ('Opportunity.Probability', None), ('Opportunity.ProcessingPremium__c', None), ('Opportunity.Product_Demo__c', None), ('Opportunity.Product_Line_of_Interest__c', None), ('Opportunity.Proposal_Created__c', None), ('Opportunity.Proposal_Created_Date__c', None), ('Opportunity.Proposal_Delivered__c', None), ('Opportunity.Proposal_Delivered_Date__c', None), ('Opportunity.Proposal_Link__c', None), ('Opportunity.Proposed_Effective_Date__c', None), ('Opportunity.qbdialer__Dials__c', None), ('Opportunity.qbdialer__LastCallTime__c', None), ('Opportunity.Quick_Quote_Created__c', None), ('Opportunity.Quote_Created1__c', None), ('Opportunity.Quoted__c', None), ('Opportunity.Quoted_Carriers__c', None), ('Opportunity.Quoted_Lines_of_Coverage__c', None), ('Opportunity.Rate_Description__c', None), ('Opportunity.Re_engage_Date__c', None), ('Opportunity.Reason_Lost__c', None), ('Opportunity.Reason_Lost_Detail__c', None), ('Opportunity.Reason_Lost_Notes__c', None), ('Opportunity.Reason_Lost_Payroll__c', None), ('Opportunity.Referred_by_a_Partner__c', None), ('Opportunity.Referrer_Email__c', None), ('Opportunity.Referrer_ID__c', None), ('Opportunity.Referrer_Name__c', None), ('Opportunity.Referrer_Phone__c', None), ('Opportunity.Region__c', None), ('Opportunity.Remove_from_Nurture__c', None), ('Opportunity.Requested_Username__c', None), ('Opportunity.Required_Docs_Signed_Submitted__c', None), ('Opportunity.Required_Docs_Signed_Submitted_Date__c', None), ('Opportunity.Retail_Broker__c', None), ('Opportunity.Revenue_Share__c', None), ('Opportunity.RoleList__c', None), ('Opportunity.Rollup_On_Quotes__c', None), ('Opportunity.Sent_for_Set_Up__c', None), ('Opportunity.Setup_Fee__c', None), ('Opportunity.Source_System__c', None), ('Opportunity.Source_System_Tier__c', None), ('Opportunity.State__c', None), ('Opportunity.Status__c', None), ('Opportunity.Target_Relationship_Type__c', None), ('Opportunity.Target_Sell__c', None), ('Opportunity.Telemarketing_Disposition__c', None), ('Opportunity.Today__c', None), ('Opportunity.Total_Discount__c', None), ('Opportunity.Total_Employees__c', None), ('Opportunity.Total_Forecasted_Weighted_Lives__c', None), ('Opportunity.Total_Processing_Discount__c', None), ('Opportunity.TotalOpportunityQuantity', None), ('Opportunity.Type', None), ('Opportunity.VanillaSoft_Contact_Id__c', None), ('Opportunity.Verbal_Commit__c', None), ('Opportunity.Verbal_Commit_Date__c', None), ('Opportunity.Vision_Coverage__c', None), ('Opportunity.Vision_Forecasted_Lives__c', None), ('Opportunity.Vision_Weighted_Lives__c', None), ('Opportunity.WC_Service_Type__c', None), ('Opportunity.Workers_Comp_Broker__c', None), ('Opportunity.Yearly_W2_Charge__c', None), ('OpportunityLineItem.Billing_Interval__c', None), ('OpportunityLineItem.Description', None), ('OpportunityLineItem.Discount', None), ('OpportunityLineItem.ListPrice', None), ('OpportunityLineItem.OppIDAndProd__c', None), ('OpportunityLineItem.Per_Payroll_Extended_Price__c', None), ('OpportunityLineItem.Per_Payroll_Quantity__c', None), ('OpportunityLineItem.Price_From_Payroll_PriceBook__c', None), ('OpportunityLineItem.ProductCode', None), ('OpportunityLineItem.ProductName__c', None), ('OpportunityLineItem.Sales_Price_After_Discount__c', None), ('OpportunityLineItem.ServiceDate', None), ('OpportunityLineItem.Subtotal', None), ('OpportunityLineItem.TotalPrice', None), ('Out_Of_Office__c.Active__c', None), ('Out_Of_Office__c.End_Time__c', None), ('Out_Of_Office__c.Message__c', None), ('Out_Of_Office__c.Start_Time__c', None), ('Out_Of_Office__c.User__c', None), ('PartyConsent.DoubleConsentCaptureDate', None), ('PartyConsent.EffectiveFrom', None), ('PartyConsent.EffectiveTo', None), ('Payroll_Price_Book__c.Base__c', None), ('Payroll_Price_Book__c.BMall_Price_Book__c', None), ('Payroll_Price_Book__c.Bundle_New__c', None), ('Payroll_Price_Book__c.Implementation_Cost__c', None), ('Payroll_Price_Book__c.Number_of_Employees__c', None), ('Payroll_Price_Book__c.Price_Biweekly__c', None), ('Payroll_Price_Book__c.Price_Monthly__c', None), ('Payroll_Price_Book__c.Price_Semi_monthly__c', None), ('Payroll_Price_Book__c.Price_Weekly__c', None), ('Payroll_Price_Book__c.Source_System_Tier__c', None), ('Plan_Selection__c.AFocus_OE_Errors__c', None), ('Plan_Selection__c.Carrier__c', None), ('Plan_Selection__c.Carrier_Name__c', None), ('Plan_Selection__c.Carrier_Text__c', None), ('Plan_Selection__c.Case__c', None), ('Plan_Selection__c.Enrolling_Employees__c', None), ('Plan_Selection__c.Enrollment_Effective_Date__c', None), ('Plan_Selection__c.File_Uploaded__c', None), ('Plan_Selection__c.Line_of_Coverage__c', None), ('Plan_Selection__c.OE_Update__c', None), ('Plan_Selection__c.Plan__c', None), ('Plan_Selection__c.Plan_Name__c', None), ('Plan_Selection__c.Plan_Routing__c', None), ('Plan_Selection__c.Plan_Text__c', None), ('Plan_Selection__c.Status__c', None), ('Plan_Selection__c.Submission_Type__c', None), ('Plan_Type__c.AutorabitExtId__c', None), ('Plan_Type__c.Lines_of_Coverage__c', None), ('Plan_Type__c.LOC_Description__c', None), ('Plan_Type__c.LOC_ID__c', None), ('Plan_Type__c.Plan_Type_ExID__c', None), ('Plan_Type__c.Plan_Type_ID__c', None), ('Plan_Type__c.Source_System__c', None), ('Platform_History__c.Change_Reason__c', None), ('Platform_History__c.Data_Location__c', None), ('Platform_History__c.Date_of_First_Payroll__c', None), ('Platform_History__c.New_Client_Code__c', None), ('Platform_History__c.New_Platform__c', None), ('Platform_History__c.Previous_Client_Code__c', None), ('Platform_History__c.Previous_Platform__c', None), ('Platform_History__c.Service_Location__c', None), ('Platform_History__c.Source_Service_Rep__c', None), ('Platform_History__c.Termination_Date__c', None), ('Platform_History__c.Transfer_Date__c', None), ('Postal_Code__c.activeFlag__c', None), ('Postal_Code__c.Available_for_Online_Enrollment__c', None), ('Postal_Code__c.cityName__c', None), ('Postal_Code__c.countyName__c', None), ('Postal_Code__c.countyNumber__c', None), ('Postal_Code__c.postalCodeGuid__c', None), ('Postal_Code__c.postalCodeID__c', None), ('Postal_Code__c.stateCode__c', None), ('Postal_Code__c.UspsCityStateCode__c', None), ('Product2.AutorabitExtId__c', None), ('Product2.Billing_Interval__c', None), ('Product2.BP_Plan_ID__c', None), ('Product2.Carrier__c', None), ('Product2.Coinsurance_In__c', None), ('Product2.Coinsurance_In_Out__c', None), ('Product2.Coinsurance_Out__c', None), ('Product2.Copay_In__c', None), ('Product2.Copay_In_Out__c', None), ('Product2.Copay_Out__c', None), ('Product2.Deductible_In__c', None), ('Product2.Deductible_In_Out__c', None), ('Product2.Deductible_Out__c', None), ('Product2.Description', None), ('Product2.DisplayUrl', None), ('Product2.Effective_Date__c', None), ('Product2.ExternalDataSource', None), ('Product2.ExternalId', None), ('Product2.Family', None), ('Product2.Per_Payroll_Quantity__c', None), ('Product2.Plan_Type__c', None), ('Product2.Prescription_RX_In__c', None), ('Product2.Prescription_RX_In_Out__c', None), ('Product2.Prescription_RX_Out__c', None), ('Product2.Product_Category__c', None), ('Product2.ProductCode', None), ('Product2.ProductID__c', None), ('Product2.Quantity_Per_Billing_Interval__c', None), ('Product2.QuantityUnitOfMeasure', None), ('Product2.Source_System__c', None), ('Product2.StockKeepingUnit', None), ('Product2.Terminate_Date__c', None), ('qbdialer__ContactScore__c.qbdialer__ContactLookup__c', None), ('qbdialer__ContactScore__c.qbdialer__h00__c', None), ('qbdialer__ContactScore__c.qbdialer__h01__c', None), ('qbdialer__ContactScore__c.qbdialer__h02__c', None), ('qbdialer__ContactScore__c.qbdialer__h03__c', None), ('qbdialer__ContactScore__c.qbdialer__h04__c', None), ('qbdialer__ContactScore__c.qbdialer__h05__c', None), ('qbdialer__ContactScore__c.qbdialer__h06__c', None), ('qbdialer__ContactScore__c.qbdialer__h07__c', None), ('qbdialer__ContactScore__c.qbdialer__h08__c', None), ('qbdialer__ContactScore__c.qbdialer__h09__c', None), ('qbdialer__ContactScore__c.qbdialer__h10__c', None), ('qbdialer__ContactScore__c.qbdialer__h11__c', None), ('qbdialer__ContactScore__c.qbdialer__h12__c', None), ('qbdialer__ContactScore__c.qbdialer__h13__c', None), ('qbdialer__ContactScore__c.qbdialer__h14__c', None), ('qbdialer__ContactScore__c.qbdialer__h15__c', None), ('qbdialer__ContactScore__c.qbdialer__h16__c', None), ('qbdialer__ContactScore__c.qbdialer__h17__c', None), ('qbdialer__ContactScore__c.qbdialer__h18__c', None), ('qbdialer__ContactScore__c.qbdialer__h19__c', None), ('qbdialer__ContactScore__c.qbdialer__h20__c', None), ('qbdialer__ContactScore__c.qbdialer__h21__c', None), ('qbdialer__ContactScore__c.qbdialer__h22__c', None), ('qbdialer__ContactScore__c.qbdialer__h23__c', None), ('qbdialer__ContactScore__c.qbdialer__LeadLookup__c', None), ('qbdialer__DialerQuery__c.qbdialer__AdvancedFilter__c', None), ('qbdialer__DialerQuery__c.qbdialer__Attendees__c', None), ('qbdialer__DialerQuery__c.qbdialer__Callback_action__c', None), ('qbdialer__DialerQuery__c.qbdialer__Callback_grace_period__c', None), ('qbdialer__DialerQuery__c.qbdialer__Caller_Id__c', None), ('qbdialer__DialerQuery__c.qbdialer__CallerIdType__c', None), ('qbdialer__DialerQuery__c.qbdialer__CampaignId__c', None), ('qbdialer__DialerQuery__c.qbdialer__CampaignMemberStatus__c', None), ('qbdialer__DialerQuery__c.qbdialer__can_edit__c', None), ('qbdialer__DialerQuery__c.qbdialer__CaseType__c', None), ('qbdialer__DialerQuery__c.qbdialer__DataSource__c', None), ('qbdialer__DialerQuery__c.qbdialer__datetester__c', None), ('qbdialer__DialerQuery__c.qbdialer__Description__c', None), ('qbdialer__DialerQuery__c.qbdialer__DialerInitiativeId__c', None), ('qbdialer__DialerQuery__c.qbdialer__EightHundred__c', None), ('qbdialer__DialerQuery__c.qbdialer__EmailFolders__c', None), ('qbdialer__DialerQuery__c.qbdialer__EndTime__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_1__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_10__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_2__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_3__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_4__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_5__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_6__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_7__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_8__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Data_9__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_1__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_10__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_2__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_3__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_4__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_5__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_6__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_7__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_8__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Field_9__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_1__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_10__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_2__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_3__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_4__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_5__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_6__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_7__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_8__c', None), ('qbdialer__DialerQuery__c.qbdialer__Filter_Op_9__c', None), ('qbdialer__DialerQuery__c.qbdialer__LimitCallingTimes__c', None), ('qbdialer__DialerQuery__c.qbdialer__LimitCallsTo__c', None), ('qbdialer__DialerQuery__c.qbdialer__LimitEndTime__c', None), ('qbdialer__DialerQuery__c.qbdialer__LimitStartTime__c', None), ('qbdialer__DialerQuery__c.qbdialer__Local_Presence_Bucket__c', None), ('qbdialer__DialerQuery__c.qbdialer__MaxDials__c', None), ('qbdialer__DialerQuery__c.qbdialer__MinDials__c', None), ('qbdialer__DialerQuery__c.qbdialer__MinutesBetweenCalls__c', None), ('qbdialer__DialerQuery__c.qbdialer__NoPhoneNumber__c', None), ('qbdialer__DialerQuery__c.qbdialer__ObjectType__c', None), ('qbdialer__DialerQuery__c.qbdialer__OnlyDialOwn__c', None), ('qbdialer__DialerQuery__c.qbdialer__OpportunityType__c', None), ('qbdialer__DialerQuery__c.qbdialer__OwnershipFilter__c', None), ('qbdialer__DialerQuery__c.qbdialer__PercentComplete__c', None), ('qbdialer__DialerQuery__c.qbdialer__Prevent_callbacks__c', None), ('qbdialer__DialerQuery__c.qbdialer__Priority__c', None), ('qbdialer__DialerQuery__c.qbdialer__QueueOwnership__c', None), ('qbdialer__DialerQuery__c.qbdialer__ReportFolder__c', None), ('qbdialer__DialerQuery__c.qbdialer__ReportId__c', None), ('qbdialer__DialerQuery__c.qbdialer__ReportIdColumn__c', None), ('qbdialer__DialerQuery__c.qbdialer__ReportName__c', None), ('qbdialer__DialerQuery__c.qbdialer__RingTimeout__c', None), ('qbdialer__DialerQuery__c.qbdialer__Route_To_Column_Name__c', None), ('qbdialer__DialerQuery__c.qbdialer__Seek_Report_Object_Type__c', None), ('qbdialer__DialerQuery__c.qbdialer__SeekInitiativeId__c', None), ('qbdialer__DialerQuery__c.qbdialer__SmartSort__c', None), ('qbdialer__DialerQuery__c.qbdialer__Sort_Direction_1__c', None), ('qbdialer__DialerQuery__c.qbdialer__Sort_Direction_2__c', None), ('qbdialer__DialerQuery__c.qbdialer__Sort_Direction_3__c', None), ('qbdialer__DialerQuery__c.qbdialer__Sort_Field_1__c', None), ('qbdialer__DialerQuery__c.qbdialer__Sort_Field_2__c', None), ('qbdialer__DialerQuery__c.qbdialer__Sort_Field_3__c', None), ('qbdialer__DialerQuery__c.qbdialer__StartTime__c', None), ('qbdialer__DialerQuery__c.qbdialer__TaskType__c', None), ('qbdialer__DialerQuery__c.qbdialer__Test_Local_Presence__c', None), ('qbdialer__DialerQuery__c.qbdialer__TimeZone__c', None), ('qbdialer__DialerQuery__c.qbdialer__TimeZones__c', None), ('qbdialer__DialerQuery__c.qbdialer__TotalItems__c', None), ('qbdialer__DialerQuery__c.qbdialer__TotalItemsDialed__c', None), ('qbdialer__DialerQuery__c.qbdialer__Use_Local_Presence__c', None), ('qbdialer__DialerQuery__c.qbdialer__UseSalesforceEmailTemplates__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__AccountId__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__ContactId__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__Dialed__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__LeadId__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__OrderBy__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__Record_Id__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__RelatedItemId__c', None), ('qbdialer__DialerQueryItem__c.qbdialer__Route_To_Id__c', None), ('qbdialer__isDialerConfig__c.qbdialer__Config__c', None), ('qbdialer__isDialerConfig__c.qbdialer__InsideSalesHost__c', None), ('qbdialer__SeekInitiative__c.qbdialer__Attendees__c', None), ('qbdialer__SeekInitiative__c.qbdialer__CallbackGracePeriod__c', None), ('qbdialer__SeekInitiative__c.qbdialer__CallbackPermission__c', None), ('qbdialer__SeekInitiative__c.qbdialer__CallerID__c', None), ('qbdialer__SeekInitiative__c.qbdialer__CallerIdType__c', None), ('qbdialer__SeekInitiative__c.qbdialer__CallingHours__c', None), ('qbdialer__SeekInitiative__c.qbdialer__can_edit__c', None), ('qbdialer__SeekInitiative__c.qbdialer__DialerInitiativeId__c', None), ('qbdialer__SeekInitiative__c.qbdialer__EmailFolders__c', None), ('qbdialer__SeekInitiative__c.qbdialer__EndTime__c', None), ('qbdialer__SeekInitiative__c.qbdialer__LimitCallingTimes__c', None), ('qbdialer__SeekInitiative__c.qbdialer__LimitCallsTo__c', None), ('qbdialer__SeekInitiative__c.qbdialer__Local_Presence_Bucket__c', None), ('qbdialer__SeekInitiative__c.qbdialer__NoPhoneNumber__c', None), ('qbdialer__SeekInitiative__c.qbdialer__OnlyDialOwn__c', None), ('qbdialer__SeekInitiative__c.qbdialer__Prevent_callbacks__c', None), ('qbdialer__SeekInitiative__c.qbdialer__RingTimeout__c', None), ('qbdialer__SeekInitiative__c.qbdialer__Show_Query__c', None), ('qbdialer__SeekInitiative__c.qbdialer__SmartSort__c', None), ('qbdialer__SeekInitiative__c.qbdialer__StartTime__c', None), ('qbdialer__SeekInitiative__c.qbdialer__TaskType__c', None), ('qbdialer__SeekInitiative__c.qbdialer__Test_Local_Presence__c', None), ('qbdialer__SeekInitiative__c.qbdialer__TimeBetweenCalls__c', None), ('qbdialer__SeekInitiative__c.qbdialer__Use_Local_Presence__c', None), ('qbdialer__SeekInitiative__c.qbdialer__UseSalesforceEmailTemplates__c', None), ('qbdialer__SeekInitiativeItem__c.qbdialer__AccountId__c', None), ('qbdialer__SeekInitiativeItem__c.qbdialer__ContactId__c', None), ('qbdialer__SeekInitiativeItem__c.qbdialer__DialerQueryId__c', None), ('qbdialer__SeekInitiativeItem__c.qbdialer__LeadId__c', None), ('qbdialer__SeekInitiativeItem__c.qbdialer__Unique__c', None), ('Quote_Line_Item__c.Agent_ID__c', None), ('Quote_Line_Item__c.Broker_Opportunity__c', None), ('Quote_Line_Item__c.Carrier__c', None), ('Quote_Line_Item__c.Current_Quote_Line__c', None), ('Quote_Line_Item__c.Effective_Date__c', None), ('Quote_Line_Item__c.First_Name__c', None), ('Quote_Line_Item__c.Group__c', None), ('Quote_Line_Item__c.Last_Name__c', None), ('Quote_Line_Item__c.Line_of_Coverage__c', None), ('Quote_Line_Item__c.Opportunity__c', None), ('Quote_Line_Item__c.Plan_Count__c', None), ('Quote_Line_Item__c.Proposal_Link__c', None), ('Quote_Line_Item__c.Quote_Number__c', None), ('Quote_Line_Item__c.Quote_Type__c', None), ('Quote_Line_Item__c.Quoted_Employees__c', None), ('Quote_Line_Item__c.QuoteLineExtID__c', None), ('Quote.Account', None), ('Quote.AdditionalAddress', None), ('Quote.AdditionalName', None), ('Quote.BillingAddress', None), ('Quote.BillingName', None), ('Quote.Bundles_Placeholder__c', None), ('Quote.Contact', None), ('Quote.Contract', None), ('Quote.Description', None), ('Quote.Discount', None), ('Quote.Email', None), ('Quote.Email_Rule_Email__c', None), ('Quote.Estimated_No_Employees__c', None), ('Quote.Estimated_Per_Payroll_Charge__c', None), ('Quote.ExpirationDate', None), ('Quote.Fax', None), ('Quote.GrandTotal', None), ('Quote.PayFocus_Mission_Statement__c', None), ('Quote.PayFocus_Pro_Logo__c', None), ('Quote.PayFocus_Pro_Mission_Statement__c', None), ('Quote.Phone', None), ('Quote.QuoteToAddress', None), ('Quote.QuoteToName', None), ('Quote.Setup_Fee__c', None), ('Quote.ShippingAddress', None), ('Quote.ShippingHandling', None), ('Quote.ShippingName', None), ('Quote.SS_Feature_Place_Holder__c', None), ('Quote.Status', None), ('Quote.Subtotal', None), ('Quote.Tax', None), ('Quote.Total_Processing_Discount__c', None), ('Quote.TotalPrice', None), ('Quote.Yearly_W2_Charge__c', None), ('QuoteLineItem.Description', None), ('QuoteLineItem.Discount', None), ('QuoteLineItem.ListPrice', None), ('QuoteLineItem.ProductCode', None), ('QuoteLineItem.ServiceDate', None), ('QuoteLineItem.Subtotal', None), ('QuoteLineItem.TotalPrice', None), ('Referral__c.Archived_Referral__c', None), ('Referral__c.City__c', None), ('Referral__c.Client_Account__c', None), ('Referral__c.Company__c', None), ('Referral__c.Email__c', None), ('Referral__c.First_Name__c', None), ('Referral__c.Frequency_of_Payroll__c', None), ('Referral__c.Industry__c', None), ('Referral__c.Instructions__c', None), ('Referral__c.Last_Name__c', None), ('Referral__c.Lead__c', None), ('Referral__c.Name__c', None), ('Referral__c.Number_of_Employees__c', None), ('Referral__c.Opportunity__c', None), ('Referral__c.Phone_Number__c', None), ('Referral__c.Products_of_Interest__c', None), ('Referral__c.Referrer_Location__c', None), ('Referral__c.Referrer_Name__c', None), ('Referral__c.Source__c', None), ('Referral__c.Source_System__c', None), ('Referral__c.State__c', None), ('Referral__c.Status__c', None), ('Referral__c.Street__c', None), ('Referral__c.Upsell_Opportunity__c', None), ('Referral__c.Zip_Code__c', None), ('sbv2__Group__c.sbv2__Scorebuddy_Id__c', None), ('sbv2__Group__c.sbv2__Scored_Datetime__c', None), ('sbv2__List_Object__c.sbv2__Quality__c', None), ('sbv2__List_Object__c.sbv2__Result_Id__c', None), ('sbv2__List_Object__c.sbv2__Score_List__c', None), ('sbv2__List_Object__c.sbv2__Scored_Datetime__c', None), ('sbv2__List_Object__c.sbv2__Scored_Time__c', None), ('sbv2__Quality_Sample__c.sbv2__Scored_Datetime__c', None), ('sbv2__Quality_Sample__c.sbv2__Visibility_To__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Filter_Field__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Filter_Operator__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Filter_Value__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Quality_Sample__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Row_Number__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Scored_Datetime__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Section__c', None), ('sbv2__Sample_Criteria_Filter__c.sbv2__Value__c', None), ('sbv2__Score_List__c.sbv2__Is_Audio__c', None), ('sbv2__Score_List__c.sbv2__Note__c', None), ('sbv2__Score_List__c.sbv2__Quality_Sample__c', None), ('sbv2__Score_List__c.sbv2__Scored_Datetime__c', None), ('sbv2__Score_List__c.sbv2__Selected_Fields_To_Display__c', None), ('sbv2__Summary_Score__c.sbv2__CY_Period_No__c', None), ('sbv2__Summary_Score__c.sbv2__FY_Period_No__c', None), ('sbv2__Summary_Score__c.sbv2__Group__c', None), ('sbv2__Summary_Score__c.sbv2__Group_Name__c', None), ('sbv2__Summary_Score__c.sbv2__Period__c', None), ('sbv2__Summary_Score__c.sbv2__Period_Name__c', None), ('sbv2__Summary_Score__c.sbv2__Score_Pct__c', None), ('sbv2__Summary_Score__c.sbv2__Scored_Datetime__c', None), ('sbv2__Summary_Score__c.sbv2__Team__c', None), ('sbv2__Summary_Score__c.sbv2__Unique_Id__c', None), ('sbv2__Summary_Score__c.sbv2__Unit__c', None), ('sbv2__Summary_Score__c.sbv2__Unit_Name__c', None), ('sbv2__Summary_Score__c.sbv2__Year__c', None), ('sbv2__Team__c.sbv2__Group__c', None), ('sbv2__Team__c.sbv2__Scorebuddy_Id__c', None), ('sbv2__Team__c.sbv2__Scored_Datetime__c', None), ('sbv2__Team_User__c.sbv2__Scorebuddy_Id__c', None), ('sbv2__Team_User__c.sbv2__Scored_Datetime__c', None), ('sbv2__Team_User__c.sbv2__User__c', None), ('Security_Questions__c.Answer__c', None), ('Security_Questions__c.Question__c', None), ('seismic__Debug_Log__c.seismic__Message__c', None), ('ServiceContract.Account', None), ('ServiceContract.ActivationDate', None), ('ServiceContract.ApprovalStatus', None), ('ServiceContract.BillingAddress', None), ('ServiceContract.Contact', None), ('ServiceContract.Description', None), ('ServiceContract.Discount', None), ('ServiceContract.EndDate', None), ('ServiceContract.GrandTotal', None), ('ServiceContract.ParentServiceContract', None), ('ServiceContract.RootServiceContract', None), ('ServiceContract.ShippingAddress', None), ('ServiceContract.ShippingHandling', None), ('ServiceContract.SpecialTerms', None), ('ServiceContract.StartDate', None), ('ServiceContract.Status', None), ('ServiceContract.StatusIndicator', None), ('ServiceContract.Subtotal', None), ('ServiceContract.Tax', None), ('ServiceContract.Term', None), ('ServiceContract.TotalPrice', None), ('Services__c.Account__c', None), ('Services__c.Account_Executive__c', None), ('Services__c.Account_Name__c', None), ('Services__c.Acquisition_Code__c', None), ('Services__c.Additional_Info_from_Agent_Provided__c', None), ('Services__c.Additional_Info_from_Agent_Requested__c', None), ('Services__c.Additional_Info_Recieved_from_Agent__c', None), ('Services__c.Additional_Information_from_Carrier__c', None), ('Services__c.Additional_Rate_Information__c', None), ('Services__c.Administered_Plan__c', None), ('Services__c.Affiliate__c', None), ('Services__c.AFocus_Acquisition_ID__c', None), ('Services__c.AFocus_Billing_Carrier_Type_ID__c', None), ('Services__c.AFocus_Billing_Type__c', None), ('Services__c.AFocus_Cancellation_Reason__c', None), ('Services__c.AFocus_Department_ID__c', None), ('Services__c.AFocus_isAdditionalProduct__c', None), ('Services__c.AFocus_LOC_Description__c', None), ('Services__c.Afocus_Office_Id__c', None), ('Services__c.AFocus_Origination_Reason_Qualifier__c', None), ('Services__c.AFocus_Premium_Payment_Frequency__c', None), ('Services__c.AFocus_primarySalesLeadUserId__c', None), ('Services__c.AFocus_primaryServiceLeadUserId__c', None), ('Services__c.AFocus_Quote_Source_ID__c', None), ('Services__c.AFocus_Reinstatement_Reason__c', None), ('Services__c.Age_Band__c', None), ('Services__c.Age_Banded__c', None), ('Services__c.Age_End__c', None), ('Services__c.Age_Start__c', None), ('Services__c.allCompliance_Adjust_Hours__c', None), ('Services__c.allCompliance_Adjust_Hours_Date__c', None), ('Services__c.allCompliance_Suspended__c', None), ('Services__c.allCompliance_Suspension_Date__c', None), ('Services__c.Alternate_Policy_Group_Number__c', None), ('Services__c.Alternative_Plan_ID__c', None), ('Services__c.AMS_ID__c', None), ('Services__c.AMS_Plan_Class__c', None), ('Services__c.AMS_Policy_ID__c', None), ('Services__c.AMS_Status__c', None), ('Services__c.Annual_Premium__c', None), ('Services__c.Annual_Premium_Variance__c', None), ('Services__c.APS_Status__c', None), ('Services__c.ASD_Account_Coordinator__c', None), ('Services__c.ASD_Account_Executive__c', None), ('Services__c.ASD_Acct_Exec_Market__c', None), ('Services__c.ASD_Attrition_Reason__c', None), ('Services__c.ASD_End_Date__c', None), ('Services__c.ASD_Market_Director__c', None), ('Services__c.ASD_Service_Team__c', None), ('Services__c.ASD_Start_Date__c', None), ('Services__c.ASD_Type__c', None), ('Services__c.AutorabitExtId__c', None), ('Services__c.BenAdmin_Cancellation_Date__c', None), ('Services__c.BenAdmin_Cancellation_Reason__c', None), ('Services__c.BenAdmin_Effective_Date__c', None), ('Services__c.BenAdmin_Platform__c', None), ('Services__c.BenefitPointServicesID__c', None), ('Services__c.Billing_Carrier__c', None), ('Services__c.Billing_Contact__c', None), ('Services__c.Billing_Contact_Email__c', None), ('Services__c.Billing_Contact_Phone__c', None), ('Services__c.Billing_Type__c', None), ('Services__c.BIP_Mkt__c', None), ('Services__c.BOR__c', None), ('Services__c.BOR_as_of_Date__c', None), ('Services__c.BOR_Occurred_Date__c', None), ('Services__c.BP_ID__c', None), ('Services__c.BP_Integration_Error__c', None), ('Services__c.BP_Integration_Status__c', None), ('Services__c.BP_Prior_Plan__c', None), ('Services__c.BP_Product_Response__c', None), ('Services__c.Broker_Executive__c', None), ('Services__c.Broker_Trip_Eligibility__c', None), ('Services__c.BrokerSales_Type__c', None), ('Services__c.Business_Segment__c', None), ('Services__c.Business_Segment_old__c', None), ('Services__c.Bypass_Validations__c', None), ('Services__c.BypassValidationForProcessBuilder__c', None), ('Services__c.Cancelation_Reason__c', None), ('Services__c.Cancellation_Date__c', None), ('Services__c.Cancellation_Reason_Other__c', None), ('Services__c.Carrier__c', None), ('Services__c.Carrier_ID__c', None), ('Services__c.Carrier_Name__c', None), ('Services__c.Carrier_Payment_Setup__c', None), ('Services__c.Carrier_Renewal_Month__c', None), ('Services__c.Carrier_Requires_Additional_Information__c', None), ('Services__c.Case__c', None), ('Services__c.Comments__c', None), ('Services__c.Commisions_Fees_Paid_By__c', None), ('Services__c.Commission_Instruction__c', None), ('Services__c.Commission_Rate__c', None), ('Services__c.Commission_Rate_Dollar_Amt__c', None), ('Services__c.Commission_Rate_Variance__c', None), ('Services__c.Commission_Start_Date__c', None), ('Services__c.Commissionable_Broker_1__c', None), ('Services__c.Commissionable_Broker_1_Split__c', None), ('Services__c.Commissionable_Broker_2__c', None), ('Services__c.Commissionable_Broker_2_Split__c', None), ('Services__c.Commissionable_Broker_3__c', None), ('Services__c.Commissionable_Broker_3_Split__c', None), ('Services__c.Commissions_Fees_Paid_By_Name__c', None), ('Services__c.Continuous_Policy__c', None), ('Services__c.Corey_Status__c', None), ('Services__c.CPD_BSE__c', None), ('Services__c.Current_BSE__c', None), ('Services__c.Current_BSR__c', None), ('Services__c.Current_Contact__c', None), ('Services__c.Current_MD_or_Admin__c', None), ('Services__c.Date_Approved__c', None), ('Services__c.Date_Bound__c', None), ('Services__c.Date_Group_Submitted_to_Carrier__c', None), ('Services__c.Description__c', None), ('Services__c.Early_Renewal__c', None), ('Services__c.Effective_Date__c', None), ('Services__c.Effective_Date_Integrated__c', None), ('Services__c.Effective_Date_Original_w_Carrier__c', None), ('Services__c.Effective_Date_Requested__c', None), ('Services__c.Eligibility_Management__c', None), ('Services__c.Employee_Applications_Date_Recieved__c', None), ('Services__c.End_Date__c', None), ('Services__c.Epic_Billing_Carrier__c', None), ('Services__c.Epic_Issuing_Carrier__c', None), ('Services__c.EPIC_Policy_Id__c', None), ('Services__c.Epic_Service_Summary_Stage__c', None), ('Services__c.Estimated_Commission_Fee__c', None), ('Services__c.Estimated_Commission_Fee_Frequency__c', None), ('Services__c.Estimated_Monthly_Premium__c', None), ('Services__c.Exchange__c', None), ('Services__c.Exp_Rev_Calc_Datetime__c', None), ('Services__c.Exp_Rev_Calc_Status__c', None), ('Services__c.Exp_Rev_Record__c', None), ('Services__c.Exp_Rev_Record_Default_Type__c', None), ('Services__c.Expected_Revenue_Calc__c', None), ('Services__c.Expected_Revenue_Manual__c', None), ('Services__c.Expected_Revenue_Net__c', None), ('Services__c.Expiration_Date_Integrated__c', None), ('Services__c.First_Override_Date_AMS__c', None), ('Services__c.First_Premium_Check_Date_Received__c', None), ('Services__c.Frozen_Enrollment_Date__c', None), ('Services__c.Funding_Type__c', None), ('Services__c.Gender_Specific__c', None), ('Services__c.High_Visibility__c', None), ('Services__c.High_Visibility_F__c', None), ('Services__c.Include_EE_in_Tiers__c', None), ('Services__c.Inherit_Account_Team__c', None), ('Services__c.Inherit_ASD_Acct_Team__c', None), ('Services__c.Issue_Date__c', None), ('Services__c.Issuing_Location__c', None), ('Services__c.Large_Group_Benefits__c', None), ('Services__c.Last_Cash_Posted_Date__c', None), ('Services__c.LastSentToBPTime__c', None), ('Services__c.Lives_Approved__c', None), ('Services__c.Lives_Submitted__c', None), ('Services__c.Market__c', None), ('Services__c.Market_Director_or_Admin__c', None), ('Services__c.Master_Application_Date_Reviewed__c', None), ('Services__c.Method_of_Payment__c', None), ('Services__c.Migration_Flag__c', None), ('Services__c.Missing_Information_Received_from_Agent__c', None), ('Services__c.Missing_Information_Requested_from_Agent__c', None), ('Services__c.Monthly_Premium__c', None), ('Services__c.Net_Annual_Revenue__c', None), ('Services__c.Net_Annual_Revenue_Variance__c', None), ('Services__c.NewStatus__c', None), ('Services__c.Non_Payable__c', None), ('Services__c.Non_Revenue__c', None), ('Services__c.Number_of_Eligible_Employees__c', None), ('Services__c.Number_of_Lives_BP_Rate_Screen__c', None), ('Services__c.Office__c', None), ('Services__c.Online_Enrollment__c', None), ('Services__c.Opportunity__c', None), ('Services__c.Original_BSE2__c', None), ('Services__c.Original_BSR2__c', None), ('Services__c.Original_Contact2__c', None), ('Services__c.Original_Effective_Date__c', None), ('Services__c.Original_MD_or_Admin__c', None), ('Services__c.Origination_Reason__c', None), ('Services__c.PayComp_1st_Date__c', None), ('Services__c.Payroll_Integration__c', None), ('Services__c.Payroll_Integration_Cancellation_Date__c', None), ('Services__c.Payroll_Integration_Cancellation_Reason__c', None), ('Services__c.Payroll_Integration_EffectiveDate__c', None), ('Services__c.PEO_BSE__c', None), ('Services__c.Plan_Department__c', None), ('Services__c.Plan_Issuance_Note__c', None), ('Services__c.Plan_Type__c', None), ('Services__c.Plan_Type_ID2__c', None), ('Services__c.Plan_Type_Name__c', None), ('Services__c.Policy_Approved_by_Carrier__c', None), ('Services__c.Policy_Audited__c', None), ('Services__c.Policy_Description__c', None), ('Services__c.Policy_Group_Number__c', None), ('Services__c.Policy_Number__c', None), ('Services__c.Premium_Approved__c', None), ('Services__c.Premium_Payment_Frequency__c', None), ('Services__c.Premium_Submitted__c', None), ('Services__c.Prior_Broker_of_Record__c', None), ('Services__c.Prior_Carrier__c', None), ('Services__c.Prior_Plan_ID__c', None), ('Services__c.Product__c', None), ('Services__c.Product_History_Additional_Information__c', None), ('Services__c.Product_Name__c', None), ('Services__c.Quote_ID__c', None), ('Services__c.Quote_Source__c', None), ('Services__c.RAF__c', None), ('Services__c.Rate_Type__c', None), ('Services__c.Ready_For_Renewal__c', None), ('Services__c.Reason_for_withdrawal__c', None), ('Services__c.Region__c', None), ('Services__c.Reinstatement_Date__c', None), ('Services__c.Reinstatement_Instructions__c', None), ('Services__c.Reinstatement_Reason_Description__c', None), ('Services__c.Reinstatement_Reason_Other__c', None), ('Services__c.Renewal_Date__c', None), ('Services__c.Renewal_Reminder_Date__c', None), ('Services__c.Revenue_as_of__c', None), ('Services__c.Revenue_Share__c', None), ('Services__c.Revenue_Share_Variance__c', None), ('Services__c.Sagitta_Policy_ID__c', None), ('Services__c.Sale_Chargeback_Date__c', None), ('Services__c.Sale_Status__c', None), ('Services__c.Sale_Type__c', None), ('Services__c.SCA_PEPM__c', None), ('Services__c.SCA_Premium__c', None), ('Services__c.Sent_to_Setup__c', None), ('Services__c.Service_Owner__c', None), ('Services__c.ServiceExternalID__c', None), ('Services__c.Source_System__c', None), ('Services__c.Start_Date__c', None), ('Services__c.Status__c', None), ('Services__c.Sub_Origination_Reason__c', None), ('Services__c.Submitted_Direct__c', None), ('Services__c.Sync_to_AMS__c', None), ('Services__c.TAM_Policy_ID__c', None), ('Services__c.Total_Commission_Variance__c', None), ('Services__c.Total_Commissionable__c', None), ('Services__c.Total_Commisson__c', None), ('Services__c.Transfer_Plan__c', None), ('Services__c.Vendor__c', None), ('Services__c.Vision_Policy_ID__c', None), ('Services__c.Wage_and_Tax_Date_Reconciled__c', None), ('Services__c.WC_Service_Type__c', None), ('Services__c.Weighted_Lives__c', None), ('Services__c.Workers_Comp_Broker__c', None), ('Services__c.Worksite__c', None), ('Shipment__c.Carrier__c', None), ('Shipment__c.Notification_Recipients__c', None), ('Shipment__c.Notification_Sent__c', None), ('Shipment__c.Notification_Sent_Date__c', None), ('Shipment__c.Notification_Type__c', None), ('Shipment__c.Reference_Number_1__c', None), ('Shipment__c.Reference_Number_2__c', None), ('Shipment__c.Reference_Number_3__c', None), ('Shipment__c.Reference_Number_4__c', None), ('Shipment__c.Scheduled_Delivery__c', None), ('Shipment__c.Service__c', None), ('Shipment__c.Ship_To_Address__c', None), ('Shipment__c.Ship_To_Attention__c', None), ('Shipment__c.Shipment_Date__c', None), ('Shipment__c.Shipment_Status__c', None), ('Shipment__c.Tracking_Number__c', None), ('SIC_Code__c.SIC_Code_ID__c', None), ('SIC_Code__c.SIC_Description__c', None), ('SIC_Code__c.SIC_Division_Code__c', None), ('SIC_Code__c.SIC_Division_Descr__c', None), ('SIC_Code__c.SIC_Group_Code__c', None), ('SIC_Code__c.SIC_Group_Descr__c', None), ('SIC_Code__c.SIC_Major_Code__c', None), ('SIC_Code__c.SIC_Major_Descr__c', None), ('SIC_Code__c.SIC_Short_Descr__c', None), ('sma__MAAJAXDebugLog__c.sma__Body__c', None), ('sma__MAAJAXDebugLog__c.sma__GeocodeSuccessful__c', None), ('sma__MAAJAXDebugLog__c.sma__RequestParameters__c', None), ('sma__MAAJAXDebugLog__c.sma__Type__c', None), ('sma__MAAnalytic__c.sma__DateTime__c', None), ('sma__MAAnalytic__c.sma__FavoriteLocation__c', None), ('sma__MAAnalytic__c.sma__Layer__c', None), ('sma__MAAnalytic__c.sma__MALayer__c', None), ('sma__MAAnalytic__c.sma__SavedQuery__c', None), ('sma__MAAnalytic__c.sma__SubType__c', None), ('sma__MAAnalytic__c.sma__Territory__c', None), ('sma__MAAnalytic__c.sma__Type__c', None), ('sma__MAAnalytic__c.sma__User__c', None), ('sma__MAArcGISBatchPushLog__c.sma__Log__c', None), ('sma__MAArcGISBatchPushLog__c.sma__Success__c', None), ('sma__MAArcGISBatchPushSetting__c.sma__EnableLog__c', None), ('sma__MAArcGISBatchPushSetting__c.sma__Token__c', None), ('sma__MAAssignmentDebugLog__c.sma__Account__c', None), ('sma__MAAssignmentDebugLog__c.sma__Body__c', None), ('sma__MAAssignmentDebugLog__c.sma__Description__c', None), ('sma__MAAssignmentDebugLog__c.sma__Lead__c', None), ('sma__MAAssignmentDebugLog__c.sma__Rule__c', None), ('sma__MAAssignmentPlan__c.sma__Active__c', None), ('sma__MAAssignmentPlan__c.sma__CustomAssignmentField__c', None), ('sma__MAAssignmentPlan__c.sma__DebugMode__c', None), ('sma__MAAssignmentPlan__c.sma__DebugSObjectField__c', None), ('sma__MAAssignmentPlan__c.sma__Description__c', None), ('sma__MAAssignmentPlan__c.sma__IsProcessing__c', None), ('sma__MAAssignmentPlan__c.sma__LastBatchId__c', None), ('sma__MAAssignmentPlan__c.sma__LastSuccessfulBatchRun__c', None), ('sma__MAAssignmentPlan__c.sma__LatField__c', None), ('sma__MAAssignmentPlan__c.sma__LngField__c', None), ('sma__MAAssignmentPlan__c.sma__MARuleLookupField__c', None), ('sma__MAAssignmentPlan__c.sma__NumBatches__c', None), ('sma__MAAssignmentPlan__c.sma__ReassignOwner__c', None), ('sma__MAAssignmentPlan__c.sma__SObject__c', None), ('sma__MAAssignmentPlan__c.sma__SObject_Name__c', None), ('sma__MAAssignmentPlan__c.sma__SOQLFilter__c', None), ('sma__MAAssignmentRule__c.sma__Active__c', None), ('sma__MAAssignmentRule__c.sma__Territory__c', None), ('sma__MAAssignmentRule__c.sma__User__c', None), ('sma__MABaseObject__c.sma__AddressObject__c', None), ('sma__MABaseObject__c.sma__AllowGlobalSearch__c', None), ('sma__MABaseObject__c.sma__AutoAssignmentDirtyFlag__c', None), ('sma__MABaseObject__c.sma__BatchSize__c', None), ('sma__MABaseObject__c.sma__City__c', None), ('sma__MABaseObject__c.sma__CleanCity__c', None), ('sma__MABaseObject__c.sma__CleanCountry__c', None), ('sma__MABaseObject__c.sma__CleanCounty__c', None), ('sma__MABaseObject__c.sma__CleanDistrict__c', None), ('sma__MABaseObject__c.sma__CleanPostalCode__c', None), ('sma__MABaseObject__c.sma__CleanState__c', None), ('sma__MABaseObject__c.sma__CleanStreet__c', None), ('sma__MABaseObject__c.sma__Country__c', None), ('sma__MABaseObject__c.sma__Description__c', None), ('sma__MABaseObject__c.sma__DeviceId__c', None), ('sma__MABaseObject__c.sma__DeviceType__c', None), ('sma__MABaseObject__c.sma__DeviceVendor__c', None), ('sma__MABaseObject__c.sma__DisableGlobalSearch__c', None), ('sma__MABaseObject__c.sma__InActive__c', None), ('sma__MABaseObject__c.sma__LastUpdated__c', None), ('sma__MABaseObject__c.sma__Latitude__c', None), ('sma__MABaseObject__c.sma__Longitude__c', None), ('sma__MABaseObject__c.sma__MapIt_Proximity_Measurement_Unit__c', None), ('sma__MABaseObject__c.sma__MapIt_Proximity_On__c', None), ('sma__MABaseObject__c.sma__MapIt_Proximity_Radius__c', None), ('sma__MABaseObject__c.sma__MapIt_Show_Inside_Shape__c', None), ('sma__MABaseObject__c.sma__MapIt_Zoom_Control__c', None), ('sma__MABaseObject__c.sma__Name__c', None), ('sma__MABaseObject__c.sma__PostalCode__c', None), ('sma__MABaseObject__c.sma__PriorityField__c', None), ('sma__MABaseObject__c.sma__PriorityType__c', None), ('sma__MABaseObject__c.sma__Processing__c', None), ('sma__MABaseObject__c.sma__Quality__c', None), ('sma__MABaseObject__c.sma__RecordTypeId__c', None), ('sma__MABaseObject__c.sma__RoutingEndTime__c', None), ('sma__MABaseObject__c.sma__RoutingHasAddress__c', None), ('sma__MABaseObject__c.sma__RoutingIsFlexible__c', None), ('sma__MABaseObject__c.sma__RoutingStartTime__c', None), ('sma__MABaseObject__c.sma__Settings__c', None), ('sma__MABaseObject__c.sma__Shape__c', None), ('sma__MABaseObject__c.sma__Similarity__c', None), ('sma__MABaseObject__c.sma__SkipFailedGeocodes__c', None), ('sma__MABaseObject__c.sma__State__c', None), ('sma__MABaseObject__c.sma__Street__c', None), ('sma__MABaseObject__c.sma__testLat__c', None), ('sma__MABaseObject__c.sma__Tooltip1__c', None), ('sma__MABaseObject__c.sma__Tooltip10__c', None), ('sma__MABaseObject__c.sma__Tooltip11__c', None), ('sma__MABaseObject__c.sma__Tooltip12__c', None), ('sma__MABaseObject__c.sma__Tooltip13__c', None), ('sma__MABaseObject__c.sma__Tooltip14__c', None), ('sma__MABaseObject__c.sma__Tooltip15__c', None), ('sma__MABaseObject__c.sma__Tooltip2__c', None), ('sma__MABaseObject__c.sma__Tooltip3__c', None), ('sma__MABaseObject__c.sma__Tooltip4__c', None), ('sma__MABaseObject__c.sma__Tooltip5__c', None), ('sma__MABaseObject__c.sma__Tooltip6__c', None), ('sma__MABaseObject__c.sma__Tooltip7__c', None), ('sma__MABaseObject__c.sma__Tooltip8__c', None), ('sma__MABaseObject__c.sma__Tooltip9__c', None), ('sma__MABaseObject__c.sma__Type__c', None), ('sma__MABaseObject__c.sma__VerifiedLatitude__c', None), ('sma__MABaseObject__c.sma__VerifiedLongitude__c', None), ('sma__MAButtonSet__c.sma__CustomAddressLayout__c', None), ('sma__MAButtonSet__c.sma__MassActionLayout__c', None), ('sma__MAButtonSet__c.sma__MyPositionLayout__c', None), ('sma__MAButtonSet__c.sma__POILayout__c', None), ('sma__MAButtonSet__c.sma__TooltipLayout__c', None), ('sma__MACache__c.sma__Active__c', None), ('sma__MACache__c.sma__CacheData__c', None), ('sma__MAClick2Create__c.sma__DefaultField__c', None), ('sma__MAClick2Create__c.sma__FieldSetOptions__c', None), ('sma__MAClick2Create__c.sma__MapClickCity__c', None), ('sma__MAClick2Create__c.sma__MapClickCountry__c', None), ('sma__MAClick2Create__c.sma__MapClickDefaultValue__c', None), ('sma__MAClick2Create__c.sma__MapClickEnabled__c', None), ('sma__MAClick2Create__c.sma__MapClickFieldSet__c', None), ('sma__MAClick2Create__c.sma__MapClickLatitude__c', None), ('sma__MAClick2Create__c.sma__MapClickLongitude__c', None), ('sma__MAClick2Create__c.sma__MapClickName__c', None), ('sma__MAClick2Create__c.sma__MapClickPostalCode__c', None), ('sma__MAClick2Create__c.sma__MapClickState__c', None), ('sma__MAClick2Create__c.sma__MapClickStreet__c', None), ('sma__MAClick2Create__c.sma__MyPositionCity__c', None), ('sma__MAClick2Create__c.sma__MyPositionCountry__c', None), ('sma__MAClick2Create__c.sma__MyPositionDefaultValue__c', None), ('sma__MAClick2Create__c.sma__MyPositionEnabled__c', None), ('sma__MAClick2Create__c.sma__MyPositionFieldSet__c', None), ('sma__MAClick2Create__c.sma__MyPositionLatitude__c', None), ('sma__MAClick2Create__c.sma__MyPositionLongitude__c', None), ('sma__MAClick2Create__c.sma__MyPositionName__c', None), ('sma__MAClick2Create__c.sma__MyPositionPostalCode__c', None), ('sma__MAClick2Create__c.sma__MyPositionState__c', None), ('sma__MAClick2Create__c.sma__MyPositionStreet__c', None), ('sma__MAClick2Create__c.sma__ObjectAPIName__c', None), ('sma__MAClick2Create__c.sma__POICity__c', None), ('sma__MAClick2Create__c.sma__POICountry__c', None), ('sma__MAClick2Create__c.sma__POICountryShort__c', None), ('sma__MAClick2Create__c.sma__POIDefaultValue__c', None), ('sma__MAClick2Create__c.sma__POIEnabled__c', None), ('sma__MAClick2Create__c.sma__POIFieldSet__c', None), ('sma__MAClick2Create__c.sma__POILatitude__c', None), ('sma__MAClick2Create__c.sma__POILongitude__c', None), ('sma__MAClick2Create__c.sma__POIName__c', None), ('sma__MAClick2Create__c.sma__POIPhone__c', None), ('sma__MAClick2Create__c.sma__POIPostalCode__c', None), ('sma__MAClick2Create__c.sma__POIState__c', None), ('sma__MAClick2Create__c.sma__POIStateShort__c', None), ('sma__MAClick2Create__c.sma__POIStreet__c', None), ('sma__MAClick2Create__c.sma__POIWebsite__c', None), ('sma__MACustomAction__c.sma__Action__c', None), ('sma__MACustomAction__c.sma__ActionValue__c', None), ('sma__MACustomAction__c.sma__Layouts__c', None), ('sma__MACustomAction__c.sma__Modes__c', None), ('sma__MACustomAction__c.sma__Options__c', None), ('sma__MACustomAction__c.sma__Requirements__c', None), ('sma__MACustomAction__c.sma__Type__c', None), ('sma__MADataLayerSetting__c.sma__Settings__c', None), ('sma__MADataLayerSetting__c.sma__Type__c', None), ('sma__MADataLoad__c.sma__DataType__c', None), ('sma__MADataLoad__c.sma__Email2__c', None), ('sma__MADataLoad__c.sma__Email3__c', None), ('sma__MADataLoad__c.sma__Email4__c', None), ('sma__MADataLoad__c.sma__Email5__c', None), ('sma__MADataLoad__c.sma__Filters__c', None), ('sma__MADataLoad__c.sma__Name__c', None), ('sma__MADataLoad__c.sma__Settings__c', None), ('sma__MADataLoad__c.sma__Total_Errors__c', None), ('sma__MADataLoad__c.sma__Total_Records__c', None), ('sma__MADataLoad__c.sma__Total_Succeeded__c', None), ('sma__MADataLoadSegment__c.sma__Records__c', None), ('sma__MADataLoadSegment__c.sma__Total_Errors__c', None), ('sma__MADataLoadSegment__c.sma__Total_Records__c', None), ('sma__MADataLoadSegment__c.sma__Total_Succeeded__c', None), ('sma__MADriveProfile__c.sma__Hazardous_Materials__c', None), ('sma__MADriveProfile__c.sma__Height__c', None), ('sma__MADriveProfile__c.sma__HeightUnits__c', None), ('sma__MADriveProfile__c.sma__Length__c', None), ('sma__MADriveProfile__c.sma__LengthUnits__c', None), ('sma__MADriveProfile__c.sma__NumberOfAxles__c', None), ('sma__MADriveProfile__c.sma__NumberOfTrailers__c', None), ('sma__MADriveProfile__c.sma__ProfileType__c', None), ('sma__MADriveProfile__c.sma__Weight__c', None), ('sma__MADriveProfile__c.sma__WeightPerAxle__c', None), ('sma__MADriveProfile__c.sma__WeightUnits__c', None), ('sma__MADriveProfile__c.sma__Width__c', None), ('sma__MADriveProfile__c.sma__WidthUnits__c', None), ('sma__MAEventBaseObj__c.sma__Enabled__c', None), ('sma__MAEventBaseObj__c.sma__EventObject__c', None), ('sma__MAEventBaseObj__c.sma__MABaseObjectField__c', None), ('sma__MAEventBaseObj__c.sma__Options__c', None), ('sma__MAEventBaseObj__c.sma__Type__c', None), ('sma__MAEventLookup__c.sma__BaseObjectId__c', None), ('sma__MAEventLookup__c.sma__Enabled__c', None), ('sma__MAEventLookup__c.sma__LocationSource__c', None), ('sma__MAEventLookup__c.sma__LookupFieldAPI__c', None), ('sma__MAEventLookup__c.sma__ObjectAPI__c', None), ('sma__MAEventLookup__c.sma__Type__c', None), ('sma__MAEventLookup__c.sma__TypeAPI__c', None), ('sma__MAEventLookup__c.sma__TypeDefaultValue__c', None), ('sma__MAExportRow__c.sma__Address__c', None), ('sma__MAExportRow__c.sma__City__c', None), ('sma__MAExportRow__c.sma__Country__c', None), ('sma__MAExportRow__c.sma__Latitude__c', None), ('sma__MAExportRow__c.sma__Longitude__c', None), ('sma__MAExportRow__c.sma__ObjectType__c', None), ('sma__MAExportRow__c.sma__RecordId__c', None), ('sma__MAExportRow__c.sma__SavedQueryName__c', None), ('sma__MAExportRow__c.sma__State__c', None), ('sma__MAExportRow__c.sma__Street__c', None), ('sma__MAExportRow__c.sma__Tooltip1__c', None), ('sma__MAExportRow__c.sma__Tooltip10__c', None), ('sma__MAExportRow__c.sma__Tooltip11__c', None), ('sma__MAExportRow__c.sma__Tooltip12__c', None), ('sma__MAExportRow__c.sma__Tooltip13__c', None), ('sma__MAExportRow__c.sma__Tooltip14__c', None), ('sma__MAExportRow__c.sma__Tooltip15__c', None), ('sma__MAExportRow__c.sma__Tooltip2__c', None), ('sma__MAExportRow__c.sma__Tooltip3__c', None), ('sma__MAExportRow__c.sma__Tooltip4__c', None), ('sma__MAExportRow__c.sma__Tooltip5__c', None), ('sma__MAExportRow__c.sma__Tooltip6__c', None), ('sma__MAExportRow__c.sma__Tooltip7__c', None), ('sma__MAExportRow__c.sma__Tooltip8__c', None), ('sma__MAExportRow__c.sma__Tooltip9__c', None), ('sma__MAExportRow__c.sma__Zip__c', None), ('sma__MAFolder__c.sma__Order__c', None), ('sma__MAFolder__c.sma__ParentFolder__c', None), ('sma__MAFolder__c.sma__ProfileIds__c', None), ('sma__MAFolder__c.sma__RoleId__c', None), ('sma__MAFolder__c.sma__User__c', None), ('sma__MAFolderPermission__c.sma__Create__c', None), ('sma__MAFolderPermission__c.sma__Delete__c', None), ('sma__MAFolderPermission__c.sma__Export__c', None), ('sma__MAFolderPermission__c.sma__Folder__c', None), ('sma__MAFolderPermission__c.sma__Modify__c', None), ('sma__MAFolderPermission__c.sma__ProfileId__c', None), ('sma__MAFolderPermission__c.sma__Read__c', None), ('sma__MAFolderPermission__c.sma__SetPermissions__c', None), ('sma__MAFolderPermission__c.sma__User__c', None), ('sma__MALayer__c.sma__ArcGIS_WebMap_Click2Create__c', None), ('sma__MALayer__c.sma__ArcGISWebMapC2C__c', None), ('sma__MALayer__c.sma__Description__c', None), ('sma__MALayer__c.sma__EmailOnAggregationSuccess__c', None), ('sma__MALayer__c.sma__Folder__c', None), ('sma__MALayer__c.sma__Options__c', None), ('sma__MALayer__c.sma__Type__c', None), ('sma__MALayer__c.sma__User__c', None), ('sma__MALayer__c.sma__Version__c', None), ('sma__MALocation__c.sma__Address__c', None), ('sma__MALocation__c.sma__DateTime__c', None), ('sma__MALocation__c.sma__Description__c', None), ('sma__MALocation__c.sma__FavoriteMarker__c', None), ('sma__MALocation__c.sma__Folder__c', None), ('sma__MALocation__c.sma__IsEnd__c', None), ('sma__MALocation__c.sma__IsSchedule__c', None), ('sma__MALocation__c.sma__IsStart__c', None), ('sma__MALocation__c.sma__Latitude__c', None), ('sma__MALocation__c.sma__Longitude__c', None), ('sma__MALocation__c.sma__MapAnythingFolder__c', None), ('sma__MALocation__c.sma__ResourceId__c', None), ('sma__MALocation__c.sma__User__c', None), ('sma__MALocationFolder__c.sma__Folder__c', None), ('sma__MALocationFolder__c.sma__User__c', None), ('sma__MALog__c.sma__Details__c', None), ('sma__MAMiniMapSetting__c.sma__Active__c', None), ('sma__MAMiniMapSetting__c.sma__EntryPoint__c', None), ('sma__MAMiniMapSetting__c.sma__Is_Custom__c', None), ('sma__MAMiniMapSetting__c.sma__Name__c', None), ('sma__MAMiniMapSetting__c.sma__Object__c', None), ('sma__MAMiniMapSetting__c.sma__Options__c', None), ('sma__MARelatedList__c.sma__Column1__c', None), ('sma__MARelatedList__c.sma__Column2__c', None), ('sma__MARelatedList__c.sma__Column3__c', None), ('sma__MARelatedList__c.sma__Column4__c', None), ('sma__MARelatedList__c.sma__Column5__c', None), ('sma__MARelatedList__c.sma__ListLabel__c', None), ('sma__MARelatedList__c.sma__NumToDisplay__c', None), ('sma__MARelatedList__c.sma__Order__c', None), ('sma__MARelatedList__c.sma__ReferenceField__c', None), ('sma__MARelatedList__c.sma__RelatedSort__c', None), ('sma__MARoute__c.sma__Date__c', None), ('sma__MARoute__c.sma__Options__c', None), ('sma__MARoute__c.sma__User__c', None), ('sma__MASavedQry__c.sma__ActivityFilter__c', None), ('sma__MASavedQry__c.sma__AdvancedOptions__c', None), ('sma__MASavedQry__c.sma__BaseObject__c', None), ('sma__MASavedQry__c.sma__CacheInterval__c', None), ('sma__MASavedQry__c.sma__ColorAssignment__c', None), ('sma__MASavedQry__c.sma__ColorAssignmentType__c', None), ('sma__MASavedQry__c.sma__ColorsAssignedDynamically__c', None), ('sma__MASavedQry__c.sma__CustomQuery__c', None), ('sma__MASavedQry__c.sma__Description__c', None), ('sma__MASavedQry__c.sma__FilterLogic__c', None), ('sma__MASavedQry__c.sma__Folder__c', None), ('sma__MASavedQry__c.sma__IconColor__c', None), ('sma__MASavedQry__c.sma__LastCacheDate__c', None), ('sma__MASavedQry__c.sma__MaxQuerySize__c', None), ('sma__MASavedQry__c.sma__NumCaches__c', None), ('sma__MASavedQry__c.sma__Order__c', None), ('sma__MASavedQry__c.sma__OrgWide__c', None), ('sma__MASavedQry__c.sma__OwnerFilterId__c', None), ('sma__MASavedQry__c.sma__PicklistField__c', None), ('sma__MASavedQry__c.sma__ProximityOptions__c', None), ('sma__MASavedQry__c.sma__Query__c', None), ('sma__MASavedQry__c.sma__QueryComponents__c', None), ('sma__MASavedQry__c.sma__QueryKey__c', None), ('sma__MASavedQry__c.sma__RefreshInterval__c', None), ('sma__MASavedQry__c.sma__RelatedListCount__c', None), ('sma__MASavedQry__c.sma__RoleId__c', None), ('sma__MASavedQry__c.sma__RowLimit__c', None), ('sma__MASavedQry__c.sma__RowOrder__c', None), ('sma__MASavedQry__c.sma__RowOrderDirection__c', None), ('sma__MASavedQry__c.sma__ShapeAssignment__c', None), ('sma__MASavedQry__c.sma__ShapeField__c', None), ('sma__MASavedQry__c.sma__Tooltip1__c', None), ('sma__MASavedQry__c.sma__Tooltip10__c', None), ('sma__MASavedQry__c.sma__Tooltip11__c', None), ('sma__MASavedQry__c.sma__Tooltip12__c', None), ('sma__MASavedQry__c.sma__Tooltip13__c', None), ('sma__MASavedQry__c.sma__Tooltip14__c', None), ('sma__MASavedQry__c.sma__Tooltip15__c', None), ('sma__MASavedQry__c.sma__Tooltip2__c', None), ('sma__MASavedQry__c.sma__Tooltip3__c', None), ('sma__MASavedQry__c.sma__Tooltip4__c', None), ('sma__MASavedQry__c.sma__Tooltip5__c', None), ('sma__MASavedQry__c.sma__Tooltip6__c', None), ('sma__MASavedQry__c.sma__Tooltip7__c', None), ('sma__MASavedQry__c.sma__Tooltip8__c', None), ('sma__MASavedQry__c.sma__Tooltip9__c', None), ('sma__MASavedQry__c.sma__User__c', None), ('sma__MASavedQryComponent__c.sma__BaseObject__c', None), ('sma__MASavedQryComponent__c.sma__CrossField__c', None), ('sma__MASavedQryComponent__c.sma__CrossFilterLogic__c', None), ('sma__MASavedQryComponent__c.sma__CrossObject__c', None), ('sma__MASavedQryComponent__c.sma__Field__c', None), ('sma__MASavedQryComponent__c.sma__GrandparentField__c', None), ('sma__MASavedQryComponent__c.sma__Index__c', None), ('sma__MASavedQryComponent__c.sma__Operator__c', None), ('sma__MASavedQryComponent__c.sma__Parent__c', None), ('sma__MASavedQryComponent__c.sma__ParentField__c', None), ('sma__MASavedQryComponent__c.sma__RelatedList__c', None), ('sma__MASavedQryComponent__c.sma__Type__c', None), ('sma__MASavedQryComponent__c.sma__Value__c', None), ('sma__MASavedQryComponent__c.sma__Value2__c', None), ('sma__MAScheduledJob__c.sma__ApexClassName__c', None), ('sma__MAScheduledJob__c.sma__BaseObject__c', None), ('sma__MAScheduledJob__c.sma__JobId__c', None), ('sma__MASettingsAssignments__c.sma__Profile__c', None), ('sma__MASettingsAssignments__c.sma__User__c', None), ('sma__MASettingsGroup__c.sma__AllowExports__c', None), ('sma__MASettingsGroup__c.sma__ButtonSet__c', None), ('sma__MASettingsGroup__c.sma__Description__c', None), ('sma__MASettingsGroup__c.sma__EditableTooltips__c', None), ('sma__MASettingsGroup__c.sma__FolderAdmin__c', None), ('sma__MASettingsGroup__c.sma__HidePersonalFolder__c', None), ('sma__MASettingsGroup__c.sma__MaxExportSize__c', None), ('sma__MASettingsGroup__c.sma__MaxQuerySize__c', None), ('sma__MASettingsGroup__c.sma__Profile__c', None), ('sma__MASettingsGroup__c.sma__ShowUserFolders__c', None), ('sma__MASettingsGroup__c.sma__ShowWeather__c', None), ('sma__MASettingsGroup__c.sma__User__c', None), ('sma__MAShift__c.sma__BreakDuration__c', None), ('sma__MAShift__c.sma__BreakEndHour__c', None), ('sma__MAShift__c.sma__BreakEndMinute__c', None), ('sma__MAShift__c.sma__BreakStartHour__c', None), ('sma__MAShift__c.sma__BreakStartMinute__c', None), ('sma__MAShift__c.sma__EndAddress__c', None), ('sma__MAShift__c.sma__EndHour__c', None), ('sma__MAShift__c.sma__EndLocation__c', None), ('sma__MAShift__c.sma__EndMinute__c', None), ('sma__MAShift__c.sma__StartAddress__c', None), ('sma__MAShift__c.sma__StartHour__c', None), ('sma__MAShift__c.sma__StartLocation__c', None), ('sma__MAShift__c.sma__StartMinute__c', None), ('sma__MATerritory__c.sma__CustomGeometry__c', None), ('sma__MATerritory__c.sma__Description__c', None), ('sma__MATerritory__c.sma__Folder__c', None), ('sma__MATerritory__c.sma__Options__c', None), ('sma__MATerritory__c.sma__Territory__c', None), ('sma__MATerritory__c.sma__User__c', None), ('sma__MATerritoryAggregation__c.sma__Avg__c', None), ('sma__MATerritoryAggregation__c.sma__Count__c', None), ('sma__MATerritoryAggregation__c.sma__IsActive__c', None), ('sma__MATerritoryAggregation__c.sma__MAIOAggregatorKey__c', None), ('sma__MATerritoryAggregation__c.sma__MATerritoryAggregationSetting__c', None), ('sma__MATerritoryAggregation__c.sma__MATerritoryNode__c', None), ('sma__MATerritoryAggregation__c.sma__Max__c', None), ('sma__MATerritoryAggregation__c.sma__Min__c', None), ('sma__MATerritoryAggregation__c.sma__Reason__c', None), ('sma__MATerritoryAggregation__c.sma__Sum__c', None), ('sma__MATerritoryAggregationSetting__c.sma__MAMarkerLayer__c', None), ('sma__MATerritoryAggregationSetting__c.sma__ValueField__c', None), ('sma__MATerritoryCollection__c.sma__BaseObject__c', None), ('sma__MATerritoryCollection__c.sma__LastRunDate__c', None), ('sma__MATerritoryCollection__c.sma__Query__c', None), ('sma__MATerritoryCollection__c.sma__Territory__c', None), ('sma__MATerritoryCollectionBaseObject__c.sma__ManuallyAssignedField__c', None), ('sma__MATerritoryCollectionBaseObject__c.sma__Object__c', None), ('sma__MATerritoryCollectionBaseObject__c.sma__TerritoryField__c', None), ('sma__MATerritoryCollectionFieldUpdate__c.sma__Collection__c', None), ('sma__MATerritoryCollectionFieldUpdate__c.sma__Field__c', None), ('sma__MATerritoryCollectionFieldUpdate__c.sma__Value__c', None), ('sma__MATerritoryGeometry__c.sma__Description__c', None), ('sma__MATerritoryGeometry__c.sma__Geometry__c', None), ('sma__MATerritoryNode__c.sma__MAShapeLayer__c', None), ('sma__MATerritoryNode__c.sma__MATerritoryNode__c', None), ('sma__MATerritoryNode__c.sma__Order__c', None), ('sma__MATerritoryNode__c.sma__Selected__c', None), ('sma__MATerritoryRollup__c.sma__AggregateField__c', None), ('sma__MATerritoryRollup__c.sma__AggregateFieldType__c', None), ('sma__MATerritoryRollup__c.sma__AggregateType__c', None), ('sma__MATerritoryRollup__c.sma__ColorRules__c', None), ('sma__MATerritoryRollup__c.sma__Field__c', None), ('sma__MATerritoryRollup__c.sma__FilterLogic__c', None), ('sma__MATerritoryRollup__c.sma__Folder__c', None), ('sma__MATerritoryRollup__c.sma__GrandparentField__c', None), ('sma__MATerritoryRollup__c.sma__LastRunDate__c', None), ('sma__MATerritoryRollup__c.sma__Object__c', None), ('sma__MATerritoryRollup__c.sma__ParentField__c', None), ('sma__MATerritoryRollup__c.sma__Query__c', None), ('sma__MATerritoryRollup__c.sma__TerritoryField__c', None), ('sma__MATerritoryRollupComponent__c.sma__BaseObject__c', None), ('sma__MATerritoryRollupComponent__c.sma__CrossField__c', None), ('sma__MATerritoryRollupComponent__c.sma__CrossFilterLogic__c', None), ('sma__MATerritoryRollupComponent__c.sma__CrossObject__c', None), ('sma__MATerritoryRollupComponent__c.sma__Field__c', None), ('sma__MATerritoryRollupComponent__c.sma__GrandparentField__c', None), ('sma__MATerritoryRollupComponent__c.sma__Index__c', None), ('sma__MATerritoryRollupComponent__c.sma__Operator__c', None), ('sma__MATerritoryRollupComponent__c.sma__Parent__c', None), ('sma__MATerritoryRollupComponent__c.sma__ParentField__c', None), ('sma__MATerritoryRollupComponent__c.sma__Type__c', None), ('sma__MATerritoryRollupComponent__c.sma__Value__c', None), ('sma__MATerritoryRollupComponent__c.sma__Value2__c', None), ('sma__MATerritoryRollupFolder__c.sma__Folder__c', None), ('sma__MATerritoryRollupRun__c.sma__CompletionDate__c', None), ('sma__MATerritoryRollupRun__c.sma__Rollup__c', None), ('sma__MATerritoryRollupValue__c.sma__RecordCount__c', None), ('sma__MATerritoryRollupValue__c.sma__Run__c', None), ('sma__MATerritoryRollupValue__c.sma__Territory__c', None), ('sma__MATerritoryRollupValue__c.sma__Value__c', None), ('sma__MAWaypoint__c.sma__Account__c', None), ('sma__MAWaypoint__c.sma__AdditionalData__c', None), ('sma__MAWaypoint__c.sma__Address__c', None), ('sma__MAWaypoint__c.sma__BaseObject__c', None), ('sma__MAWaypoint__c.sma__BaseObjectId__c', None), ('sma__MAWaypoint__c.sma__Case__c', None), ('sma__MAWaypoint__c.sma__Contact__c', None), ('sma__MAWaypoint__c.sma__EventId__c', None), ('sma__MAWaypoint__c.sma__HasAddress__c', None), ('sma__MAWaypoint__c.sma__IsFlexible__c', None), ('sma__MAWaypoint__c.sma__Latitude__c', None), ('sma__MAWaypoint__c.sma__Lead__c', None), ('sma__MAWaypoint__c.sma__LinkId__c', None), ('sma__MAWaypoint__c.sma__Longitude__c', None), ('sma__MAWaypoint__c.sma__MASavedQry__c', None), ('sma__MAWaypoint__c.sma__Notes__c', None), ('sma__MAWaypoint__c.sma__Opportunity__c', None), ('sma__MAWaypoint__c.sma__Options__c', None), ('sma__MAWaypoint__c.sma__SortOrder__c', None), ('SocialPersona.AreWeFollowing', None), ('SocialPersona.AuthorLabels', None), ('SocialPersona.Bio', None), ('SocialPersona.Followers', None), ('SocialPersona.Following', None), ('SocialPersona.InfluencerScore', None), ('SocialPersona.IsBlacklisted', None), ('SocialPersona.IsFollowingUs', None), ('SocialPersona.IsVerified', None), ('SocialPersona.ListedCount', None), ('SocialPersona.MediaProvider', None), ('SocialPersona.MediaType', None), ('SocialPersona.NumberOfFriends', None), ('SocialPersona.NumberOfTweets', None), ('SocialPersona.ProfileType', None), ('SocialPersona.R6SourceId', None), ('SocialPersona.RealName', None), ('SocialPersona.SourceApp', None), ('SocialPersona.TopicType', None), ('SocialPost.AnalyzerScore', None), ('SocialPost.AssignedTo', None), ('SocialPost.AttachmentType', None), ('SocialPost.AttachmentUrl', None), ('SocialPost.Classification', None), ('SocialPost.CommentCount', None), ('SocialPost.Content', None), ('SocialPost.DeletedBy', None), ('SocialPost.EngagementLevel', None), ('SocialPost.ExternalPostId', None), ('SocialPost.HarvestDate', None), ('SocialPost.HiddenBy', None), ('SocialPost.InboundLinkCount', None), ('SocialPost.IsOutbound', None), ('SocialPost.KeywordGroupName', None), ('SocialPost.Language', None), ('SocialPost.LikesAndVotes', None), ('SocialPost.MediaProvider', None), ('SocialPost.MediaType', None), ('SocialPost.MessageType', None), ('SocialPost.Notes', None), ('SocialPost.OutboundSocialAccount', None), ('SocialPost.Parent', None), ('SocialPost.Persona', None), ('SocialPost.PostPriority', None), ('SocialPost.PostTags', None), ('SocialPost.PostUrl', None), ('SocialPost.R6PostId', None), ('SocialPost.R6SourceId', None), ('SocialPost.R6TopicId', None), ('SocialPost.Recipient', None), ('SocialPost.RecipientType', None), ('SocialPost.ReplyTo', None), ('SocialPost.ResponseContextExternalId', None), ('SocialPost.ReviewedStatus', None), ('SocialPost.ReviewScale', None), ('SocialPost.ReviewScore', None), ('SocialPost.Sentiment', None), ('SocialPost.Shares', None), ('SocialPost.SourceTags', None), ('SocialPost.SpamRating', None), ('SocialPost.Status', None), ('SocialPost.StatusMessage', None), ('SocialPost.ThreadSize', None), ('SocialPost.TopicProfileName', None), ('SocialPost.TopicType', None), ('SocialPost.UniqueCommentors', None), ('SocialPost.ViewCount', None), ('SocialPost.Who', None), ('Solution.IsPublished', None), ('Solution.IsPublishedInPublicKb', None), ('Solution.SolutionNote', None), ('Source_Account_Team__c.Account_Manager__c', None), ('Source_Account_Team__c.Active__c', None), ('Source_Account_Team__c.AMS_ID__c', None), ('Source_Account_Team__c.AutorabitExtId__c', None), ('Source_Account_Team__c.BP_ID__c', None), ('Source_Account_Team__c.Live_Agent_Indiv_ID__c', None), ('Source_Account_Team__c.Live_Agent_Team_ID__c', None), ('Source_Account_Team__c.Related_Account__c', None), ('Source_Account_Team__c.Related_Contact__c', None), ('Source_Account_Team__c.Related_User__c', None), ('Task.Activity_Type__c', None), ('Task.ActivityDate', None), ('Task.Audience__c', None), ('Task.Audit_Error_Reason__c', None), ('Task.Audit_Type__c', None), ('Task.Call_Back_Date__c', None), ('Task.Closed_Date__c', None), ('Task.Description', None), ('Task.Entered_By__c', None), ('Task.Entered_Date__c', None), ('Task.EPIC_Activity_Code__c', None), ('Task.EPIC_Activity_Id__c', None), ('Task.Event_External_Id__c', None), ('Task.Event_Outcome__c', None), ('Task.isdc_dialed_phone_number__c', None), ('Task.isdc_dialer_call_type__c', None), ('Task.isdc_dialer_list_name__c', None), ('Task.isdc_dialer_query_name__c', None), ('Task.IsVisibleInSelfService', None), ('Task.Market_Benefit__c', None), ('Task.Migration_Flag__c', None), ('Task.Number_of_Attendees__c', None), ('Task.Products_Discussed__c', None), ('Task.qbdialer__Call_Date_Time__c', None), ('Task.qbdialer__Call_Dial_Number__c', None), ('Task.qbdialer__Call_Hour__c', None), ('Task.qbdialer__Call_Lead_Status__c', None), ('Task.qbdialer__Call_Ring_Time__c', None), ('Task.qbdialer__Call_Time_Zone__c', None), ('Task.qbdialer__Callback_Date_Time__c', None), ('Task.qbdialer__CallRecordingURL__c', None), ('Task.qbdialer__ImpressionId__c', None), ('Task.qbdialer__SMSReminder__c', None), ('Task.sma__BaseObjectId__c', None), ('Task.sma__LayerId__c', None), ('Task.Task_External_Id__c', None), ('Task.Telemarketing_Call_Type__c', None), ('Task.Type', None), ('Task.Updated_Date__c', None), ('Task.What', None), ('Task.Who', None), ('TaxNotice__c.Abatement_Amount__c', None), ('TaxNotice__c.Abatement_Approved__c', None), ('TaxNotice__c.Abatement_Paid_P_I__c', None), ('TaxNotice__c.Abatement_RequestDate__c', None), ('TaxNotice__c.Abatement_Response_Expected_Date__c', None), ('TaxNotice__c.Abatement_ResponseDate__c', None), ('TaxNotice__c.Abatement_ResponseReason__c', None), ('TaxNotice__c.Abatement_Type__c', None), ('TaxNotice__c.Actual_Interest_Amount_Due__c', None), ('TaxNotice__c.Actual_Penalty_Amount_Due__c', None), ('TaxNotice__c.Actual_Tax_Amount_Due__c', None), ('TaxNotice__c.Actual_Total_Amount_Due__c', None), ('TaxNotice__c.Agency_Department__c', None), ('TaxNotice__c.Agency_Due_Date__c', None), ('TaxNotice__c.Agency_Local__c', None), ('TaxNotice__c.Agency_State__c', None), ('TaxNotice__c.Amount_Due__c', None), ('TaxNotice__c.Amount_Due_InterestPaidBy__c', None), ('TaxNotice__c.Amount_Due_PenaltyPaidBy__c', None), ('TaxNotice__c.Amount_Due_TaxPaidBy__c', None), ('TaxNotice__c.Amount_Paid_Date__c', None), ('TaxNotice__c.Cause_of_Notice__c', None), ('TaxNotice__c.Cause_of_Notice_Dept__c', None), ('TaxNotice__c.Client_ID__c', None), ('TaxNotice__c.Closed_Date__c', None), ('TaxNotice__c.Co_Aware__c', None), ('TaxNotice__c.Co_Due_Date__c', None), ('TaxNotice__c.Completed_Date__c', None), ('TaxNotice__c.Corrective_Action_Dept__c', None), ('TaxNotice__c.Corrective_Action_Taken__c', None), ('TaxNotice__c.Entered_Date__c', None), ('TaxNotice__c.Follow_Up_Date__c', None), ('TaxNotice__c.Internal_ID__c', None), ('TaxNotice__c.Issue_Date__c', None), ('TaxNotice__c.Notice_Category__c', None), ('TaxNotice__c.Notice_ID__c', None), ('TaxNotice__c.Notice_Manager__c', None), ('TaxNotice__c.Notice_Priority__c', None), ('TaxNotice__c.Notice_Status__c', None), ('TaxNotice__c.Notice_Type__c', None), ('TaxNotice__c.Open_Date__c', None), ('TaxNotice__c.Original_Amount_Due_Entry__c', None), ('TaxNotice__c.Original_Interest_Amount_Due__c', None), ('TaxNotice__c.Original_Notice_ID__c', None), ('TaxNotice__c.Original_Penalty_Amount_Due__c', None), ('TaxNotice__c.Original_Tax_Amount_Due__c', None), ('TaxNotice__c.Original_Total_Amount_Due__c', None), ('TaxNotice__c.Penalty_Reason__c', None), ('TaxNotice__c.Received_Date__c', None), ('TaxNotice__c.Refund_Check_Date__c', None), ('TaxNotice__c.Refund_CheckAmount__c', None), ('TaxNotice__c.Refund_Due__c', None), ('TaxNotice__c.Refund_DueReason__c', None), ('TaxNotice__c.Refund_ExpectedDate__c', None), ('TaxNotice__c.Refund_InterestAmount__c', None), ('TaxNotice__c.Refund_PaidBy__c', None), ('TaxNotice__c.Refund_PaidTo__c', None), ('TaxNotice__c.Refund_PenaltyAmount__c', None), ('TaxNotice__c.Refund_ReceivedDate__c', None), ('TaxNotice__c.Refund_TaxAmount__c', None), ('TaxNotice__c.Refund_TotalAmount__c', None), ('TaxNotice__c.Responsible_Department__c', None), ('TaxNotice__c.Responsible_Party__c', None), ('TaxNotice__c.Tax_Form__c', None), ('TaxNotice__c.Tax_Forms_Used__c', None), ('TaxNotice__c.Tax_Period__c', None), ('TaxNotice__c.Tax_Type__c', None), ('TaxNotice__c.Time_Spent__c', None), ('TaxNotice__c.Year__c', None), ('trailheadapp__Badge__c.trailheadapp__Archived__c', None), ('trailheadapp__Badge__c.trailheadapp__Badge_Icon__c', None), ('trailheadapp__Badge__c.trailheadapp__Built_Date__c', None), ('trailheadapp__Badge__c.trailheadapp__Created_At__c', None), ('trailheadapp__Badge__c.trailheadapp__External_Id__c', None), ('trailheadapp__Badge__c.trailheadapp__Level__c', None), ('trailheadapp__Badge__c.trailheadapp__Products__c', None), ('trailheadapp__Badge__c.trailheadapp__Roles__c', None), ('trailheadapp__Badge__c.trailheadapp__Tags__c', None), ('trailheadapp__Badge__c.trailheadapp__Total_Badges_Awarded__c', None), ('trailheadapp__Badge__c.trailheadapp__Total_Badges_In_Progress__c', None), ('trailheadapp__Badge__c.trailheadapp__Type__c', None), ('trailheadapp__Trail__c.trailheadapp__Archived__c', None), ('trailheadapp__Trail__c.trailheadapp__Badge_Icon__c', None), ('trailheadapp__Trail__c.trailheadapp__Created_At__c', None), ('trailheadapp__Trail__c.trailheadapp__External_Id__c', None), ('trailheadapp__Trail__c.trailheadapp__Level__c', None), ('trailheadapp__Trail__c.trailheadapp__Products__c', None), ('trailheadapp__Trail__c.trailheadapp__Roles__c', None), ('trailheadapp__Trail__c.trailheadapp__Tags__c', None), ('trailheadapp__Trailhead_User_Data__c.trailheadapp__Avatar__c', None), ('trailheadapp__Trailhead_User_Data__c.trailheadapp__Profile_URL__c', None), ('trailheadapp__Trailhead_User_Data__c.trailheadapp__Profile_Visibility__c', None), ('trailheadapp__Trailhead_User_Data__c.trailheadapp__Rank__c', None), ('trailheadapp__Trailhead_User_Data__c.trailheadapp__Total_Points__c', None), ('trailheadapp__Trailhead_User_Data__c.trailheadapp__User__c', None), ('trailheadapp__Trailmix__c.trailheadapp__Archived__c', None), ('trailheadapp__Trailmix__c.trailheadapp__Created_At__c', None), ('trailheadapp__Trailmix__c.trailheadapp__Creator_TH_SFID__c', None), ('trailheadapp__Trailmix__c.trailheadapp__Description__c', None), ('trailheadapp__Trailmix__c.trailheadapp__Featured__c', None), ('trailheadapp__Trailmix__c.trailheadapp__Updated_At__c', None), ('trailheadapp__Trailmix_Assignment__c.trailheadapp__Due_At__c', None), ('trailheadapp__Trailmix_Assignment__c.trailheadapp__Due_Datetime__c', None), ('trailheadapp__Trailmix_Assignment__c.trailheadapp__Status__c', None), ('trailheadapp__Trailmix_Assignment__c.trailheadapp__User__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Archived__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Assigned_Date__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Assigned_to_Complete__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Badge_Icon__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Due_Date__c', None), ('trailheadapp__User_Badge__c.trailheadapp__External_ID__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Finished_Date__c', None), ('trailheadapp__User_Badge__c.trailheadapp__First_Attempted_Date__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Last_Attempted_Date__c', None), ('trailheadapp__User_Badge__c.trailheadapp__Status__c', None), ('trailheadapp__User_Badge__c.trailheadapp__URL__c', None), ('trailheadapp__User_Badge__c.trailheadapp__User__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__Assigned_At__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__Completed_At__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__Due_At__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__External_Id__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__First_Attempted_At__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__Last_Attempted_At__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__Status__c', None), ('trailheadapp__User_Trailmix__c.trailheadapp__User__c', None), ('TrainingEnrollment__c.Notes__c', None), ('TrainingEnrollment__c.Status__c', None), ('Trip_Status_Eligibility__c.Broker_Portal_Display_Until_Date__c', None), ('Trip_Status_Eligibility__c.Current_Promotion__c', None), ('Trip_Status_Eligibility__c.End_Date__c', None), ('Trip_Status_Eligibility__c.NavigateToLostURL__c', None), ('Trip_Status_Eligibility__c.NavigateToWinURL__c', None), ('Trip_Status_Eligibility__c.Red_Zone_Target__c', None), ('Trip_Status_Eligibility__c.Start_Date__c', None), ('Trip_Status_Eligibility__c.Target_LostImage__c', None), ('Trip_Status_Eligibility__c.Target_WLs__c', None), ('Trip_Status_Eligibility__c.TargetWon_Image__c', None), ('Trip_Status_Eligibility__c.Yellow_Zone_Target__c', None), ('Twilio_Voice_Response__c.Keys_Entered__c', None), ('Twilio_Voice_Response__c.Phone__c', None), ('Twilio_Voice_Response__c.User__c', None), ('Upsell_Opportunity__c.Do_Not_Sell__c', None), ('Upsell_Opportunity__c.Master_Product__c', None), ('Upsell_Opportunity__c.Priority__c', None), ('Upsell_Opportunity__c.Product__c', None), ('Upsell_Opportunity__c.Product_Names__c', None), ('Upsell_Opportunity__c.Product_to_Upsell__c', None), ('User_Login_Snapshot__c.Active__c', None), ('User_Login_Snapshot__c.Alias__c', None), ('User_Login_Snapshot__c.Login_Date_Time__c', None), ('User.Account_Id__c', None), ('User.AFocus_Broker_Commissions_PIN_Entered__c', None), ('User.AFocus_ConfirmationTest__c', None), ('User.AFocus_Deactivated_By__c', None), ('User.AFocus_Display_CRQS_CRC_Tile__c', None), ('User.AFocus_Display_EmployerFocus_Tile__c', None), ('User.AFocus_EncryptCode__c', None), ('User.AFocus_PinVerified__c', None), ('User.AFocus_Secure_Access_Code_Verified__c', None), ('User.Agent_Account_Share_Updated__c', None), ('User.ambition__IsAmbitionUser__c', None), ('User.AMS_ID__c', None), ('User.Application_Supported__c', None), ('User.Application_Tiles__c', None), ('User.Benefit_Market__c', None), ('User.Benefit_Region__c', None), ('User.Benefit_Source_System__c', None), ('User.BPID__c', None), ('User.Broker_Default_State__c', None), ('User.Broker_View_Commission__c', None), ('User.BSE_Contact_Information__c', None), ('User.BSR_Contact_Information__c', None), ('User.Business_Group__c', None), ('User.CanViewCommision__c', None), ('User.CanViewRandA__c', None), ('User.CanViewRewards__c', None), ('User.Client_Code__c', None), ('User.Community_Tiles__c', None), ('User.Consumer_Product_Division_BSE__c', None), ('User.Current_BSE_User_Email__c', None), ('User.Current_BSE_User_Name__c', None), ('User.Current_BSE_User_Phone__c', None), ('User.Current_BSR_User_Email__c', None), ('User.Current_BSR_User_Name__c', None), ('User.Current_BSR_User_Phone__c', None), ('User.EnrollmentId__c', None), ('User.ExponentId__c', None), ('User.Flex_User__c', None), ('User.Has_Broker_Commissions__c', None), ('User.Hire_Date__c', None), ('User.IPAddresses__c', None), ('User.Keep_as_owner__c', None), ('User.mkto_si__IsCachingAnonWebActivityList__c', None), ('User.mkto_si__IsCachingBestBets__c', None), ('User.mkto_si__IsCachingEmailActivityList__c', None), ('User.mkto_si__IsCachingGroupedWebActivityList__c', None), ('User.mkto_si__IsCachingInterestingMomentsList__c', None), ('User.mkto_si__IsCachingScoringList__c', None), ('User.mkto_si__IsCachingStreamList__c', None), ('User.mkto_si__IsCachingWatchList__c', None), ('User.mkto_si__IsCachingWebActivityList__c', None), ('User.mkto_si__Sales_Insight_Counter__c', None), ('User.New_Account_Setup__c', None), ('User.PayFocus_Id__c', None), ('User.PayFocus_Pro_Id__c', None), ('User.Payroll_Area__c', None), ('User.Payroll_Market__c', None), ('User.Payroll_Region__c', None), ('User.qbdialer__InsideSales_Admin__c', None), ('User.qbdialer__is_subdomain__c', None), ('User.qbdialer__is_token__c', None), ('User.qbdialer__password__c', None), ('User.qbdialer__permissions__c', None), ('User.qbdialer__username__c', None), ('User.sbv2__Scorebuddy_Id__c', None), ('User.sbv2__Scorebuddy_User__c', None), ('User.sbv2__Supervisor__c', None), ('User.Secure_Access_Code__c', None), ('User.Service_Account_Share_Updated__c', None), ('User.Setup_Region__c', None), ('User.sma__AllowMapAnythingExports__c', None), ('User.sma__DefaultProximityRadius__c', None), ('User.sma__EditMapAnythingOrgWirdeQueries__c', None), ('User.sma__MABetaTester__c', None), ('User.sma__MADefaultLatitude__c', None), ('User.sma__MADefaultLongitude__c', None), ('User.sma__MADefaultType__c', None), ('User.sma__MADefaultZoomLevel__c', None), ('User.sma__MAMaxExportSize__c', None), ('User.sma__MAMaxQuerySize__c', None), ('User.sma__MapAnythingSettings__c', None), ('User.sma__MAVersion__c', None), ('User.sma__PreferredTypeOfMeasurement__c', None), ('User.sma__ReceiveBatchExceptionEmails__c', None), ('User.sma__TestUserLookup__c', None), ('User.StateOffice__c', None), ('User.T_C_Version_Accepted__c', None), ('User.T_C_Version_Accepted_Updated__c', None), ('User.T_C_Version_Changed__c', None), ('User.Team_Name__c', None), ('User.Termination_Date__c', None), ('User.Text_Notification_Mobile__c', None), ('User.Twilio_Voice_Verification_Code__c', None), ('User.Twilio_Voice_Verification_Phone__c', None), ('User.User_Selected_State__c', None), ('User.User_Unique__c', None), ('User.UserProfileId__c', None), ('vidyard__Video_View__c.vidyard__Contact__c', None), ('vidyard__Video_View__c.vidyard__Custom_Attributes__c', None), ('vidyard__Video_View__c.vidyard__Embed_Url__c', None), ('vidyard__Video_View__c.vidyard__Group_Name__c', None), ('vidyard__Video_View__c.vidyard__id__c', None), ('vidyard__Video_View__c.vidyard__Lead__c', None), ('vidyard__Video_View__c.vidyard__Player_Chapter__c', None), ('vidyard__Video_View__c.vidyard__Player_Name__c', None), ('vidyard__Video_View__c.vidyard__Player_Uuid__c', None), ('vidyard__Video_View__c.vidyard__user__c', None), ('vidyard__Video_View__c.vidyard__Video_Amount_Watched__c', None), ('vidyard__Video_View__c.vidyard__Video_Id__c', None), ('vidyard__Video_View__c.vidyard__video_uuid__c', None), ('XactlyCorp__XCIncentBusiness__c.XactlyCorp__url__c', None), ('XactlyCorp__XCIncentBusiness__c.XactlyCorp__url2__c', None)])
    permissions_edit = models.BooleanField(verbose_name='Edit Field', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    permissions_read = models.BooleanField(verbose_name='Read Field', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'FieldPermissions'
        verbose_name = 'Field Permissions'
        verbose_name_plural = 'Field Permissions'
        # keyPrefix = '01k'



class FileSearchActivity(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Search Activity Name', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='filesearchactivity_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='filesearchactivity_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    search_term = models.CharField(max_length=100, sf_read_only=models.READ_ONLY)
    query_date = models.DateField(verbose_name='Search Date', sf_read_only=models.READ_ONLY)
    count_queries = models.IntegerField(verbose_name='Number of Searches', sf_read_only=models.READ_ONLY)
    count_users = models.IntegerField(verbose_name='Number of Users', sf_read_only=models.READ_ONLY)
    avg_num_results = models.DecimalField(max_digits=18, decimal_places=1, verbose_name='Average Number of Results', sf_read_only=models.READ_ONLY)
    period = models.CharField(max_length=255, verbose_name='Duration', sf_read_only=models.READ_ONLY, choices=[('DAY', 'Daily'), ('MONTH', 'Monthly'), ('YEAR', 'Yearly')])
    query_language = models.CharField(max_length=255, verbose_name='Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    click_rank = models.DecimalField(max_digits=18, decimal_places=1, verbose_name='Average Click Rank', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FileSearchActivity'
        verbose_name = 'FileSearchActivity'
        verbose_name_plural = 'File Search Activity'
        # keyPrefix = '06h'



class FiscalYearSettings(models.Model):
    period = models.ForeignKey('Period', models.DO_NOTHING, related_name='fiscalyearsettings_period_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    start_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    end_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    is_standard_year = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    year_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Standard', None), ('Custom', None), ('Placeholder', None)], blank=True, null=True)
    quarter_label_scheme = models.CharField(max_length=40, verbose_name='Quarter Name Scheme', sf_read_only=models.READ_ONLY, choices=[('NumberByYear', 'Numbered By Year'), ('Custom', 'Custom Quarter Names')], blank=True, null=True)
    period_label_scheme = models.CharField(max_length=40, verbose_name='Period Name Scheme', sf_read_only=models.READ_ONLY, choices=[('NumberByYear', 'Numbered By Year'), ('NumberByQuarter', 'Numbered By Quarter'), ('StandardMonths', 'Standard Month Names'), ('Custom', 'Custom Period Names')], blank=True, null=True)
    week_label_scheme = models.CharField(max_length=40, verbose_name='Week Name Scheme', sf_read_only=models.READ_ONLY, choices=[('NumberByYear', 'Year'), ('NumberByQuarter', 'Quarter'), ('NumberByPeriod', 'Period')], blank=True, null=True)
    quarter_prefix = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Quarter'), choices=[('Quarter', 'Quarter'), ('FQ', 'FQ'), ('Q', 'Q'), ('Trimester', 'Trimester')], blank=True, null=True)
    period_prefix = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Period'), choices=[('Period', 'Period'), ('FP', 'FP'), ('P', 'P'), ('Month', 'Month')], blank=True, null=True)
    week_start_day = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'FiscalYearSettings'
        verbose_name = 'Fiscal Year Settings'
        verbose_name_plural = 'Fiscal Year Settings'
        # keyPrefix = '022'



class FlexQueueItem(models.Model):
    flex_queue_item_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    job_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Future', 'Future'), ('SharingRecalculation', 'Sharing Recalculation'), ('ScheduledApex', 'Scheduled Apex'), ('BatchApex', 'Batch Apex'), ('BatchApexWorker', 'Batch Apex Worker'), ('TestRequest', 'Test Request'), ('TestWorker', 'Test Worker'), ('ApexToken', 'Apex Token'), ('Queueable', 'Queueable')])
    async_apex_job = models.ForeignKey(AsyncApexJob, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    job_position = models.IntegerField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'FlexQueueItem'
        verbose_name = 'Flex Queue Item'
        verbose_name_plural = 'Flex Queue Items'
        # keyPrefix = '06i'



class FlowDefinitionView(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_name = models.CharField(max_length=255, verbose_name='Flow API Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=255, verbose_name='Flow Label', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, verbose_name='Flow Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    process_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('AutoLaunchedFlow', 'Autolaunched Flow'), ('Flow', 'Screen Flow'), ('Workflow', 'Record Change Process'), ('CustomEvent', 'Platform Event Process'), ('InvocableProcess', 'Invocable Process'), ('LoginFlow', 'Login Flow'), ('ActionPlan', 'Action Plan'), ('JourneyBuilderIntegration', 'Journey Builder Integration'), ('UserProvisioningFlow', 'User Provisioning Flow'), ('Survey', 'Survey'), ('SurveyEnrich', 'Survey Enrich Flow'), ('Appointments', 'Lightning Scheduler Flow'), ('FSCLending', 'Mortgage Flow'), ('DigitalForm', 'Digital Form Flow'), ('FieldServiceMobile', 'Field Service Mobile Flow'), ('OrchestrationFlow', 'Orchestration Flow'), ('FieldServiceWeb', 'Embedded Appointment Management Flow'), ('TransactionSecurityFlow', 'Transaction Security Flow'), ('ContactRequestFlow', 'Contact Request Flow'), ('ActionCadenceFlow', 'Sales Cadence Flow'), ('ManagedContentFlow', 'Managed Content Flow'), ('CheckoutFlow', 'Checkout Flow'), ('CartAsyncFlow', 'Cart Async Flow'), ('SalesEntryExperienceFlow', 'Sales Entry Experience Flow'), ('DecisionStudio', 'Decision Studio Flow'), ('Journey', 'Journey MC2 Flow')], blank=True, null=True)
    trigger_type = models.CharField(max_length=255, verbose_name='Trigger', sf_read_only=models.READ_ONLY, choices=[('Scheduled', None), ('RecordBeforeSave', None)], blank=True, null=True)
    namespace_prefix = models.CharField(max_length=255, verbose_name='Flow Namespace', sf_read_only=models.READ_ONLY, blank=True, null=True)
    active_version_id = models.CharField(max_length=255, verbose_name='Active Flow Version API Name or ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    latest_version_id = models.CharField(max_length=255, verbose_name='Latest Flow Version API Name or ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FlowDefinitionView'
        verbose_name = 'Flow Definition'
        verbose_name_plural = 'Flow Definitions'
        # keyPrefix = '3dd'



class FlowInterview(models.Model):
    owner = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='flowinterview_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='flowinterview_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    current_element = models.CharField(max_length=100, sf_read_only=models.READ_ONLY, blank=True, null=True)
    interview_label = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    pause_label = models.CharField(max_length=1000, verbose_name='Pause Reason', sf_read_only=models.READ_ONLY, blank=True, null=True)
    guid = models.CharField(max_length=255, verbose_name='Flow Interview Guid', sf_read_only=models.READ_ONLY, blank=True, null=True)
    was_paused_from_screen = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'FlowInterview'
        verbose_name = 'Flow Interview'
        verbose_name_plural = 'Flow Interviews'
        # keyPrefix = '0Fo'



class FlowInterviewShare(models.Model):
    parent = models.ForeignKey(FlowInterview, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'FlowInterviewShare'
        verbose_name = 'Flow Interview Share'
        verbose_name_plural = 'Flow Interview Share'
        # keyPrefix = 'None'



class FlowStageRelation(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='flowstagerelation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='flowstagerelation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent = models.ForeignKey(FlowInterview, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    stage_order = models.IntegerField(sf_read_only=models.READ_ONLY)
    stage_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Active'), choices=[('Active', None), ('Current', None)], blank=True, null=True)
    stage_label = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    flex_index = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FlowStageRelation'
        verbose_name = 'Flow Interview Stage Relation'
        verbose_name_plural = 'Flow Interview Stage Relations'
        # keyPrefix = '31y'



class FlowVariableView(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    flow_version_view_id = models.CharField(max_length=512, verbose_name='Flow Version View ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_name = models.CharField(max_length=255, verbose_name='Variable API Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, verbose_name='Variable Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    data_type = models.CharField(max_length=255, verbose_name='Variable Data Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_input = models.BooleanField(verbose_name='Variable is available for input', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_output = models.BooleanField(verbose_name='Variable is available for output', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_collection = models.BooleanField(verbose_name='Variable allows multiple values (collection)', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    object_type = models.CharField(max_length=255, verbose_name='Record Variable Object', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'FlowVariableView'
        verbose_name = 'Flow Variable'
        verbose_name_plural = 'Flow Variables'
        # keyPrefix = '3ad'



class FlowVersionView(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    flow_definition_view_id = models.CharField(max_length=512, verbose_name='Flow Definition View ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=255, verbose_name='Version Label', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, verbose_name='Version Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=255, verbose_name='Version Status', sf_read_only=models.READ_ONLY, choices=[('Active', None), ('Draft', None), ('Obsolete', None), ('InvalidDraft', None)], blank=True, null=True)
    version_number = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    process_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('AutoLaunchedFlow', 'Autolaunched Flow'), ('Flow', 'Screen Flow'), ('Workflow', 'Record Change Process'), ('CustomEvent', 'Platform Event Process'), ('InvocableProcess', 'Invocable Process'), ('LoginFlow', 'Login Flow'), ('ActionPlan', 'Action Plan'), ('JourneyBuilderIntegration', 'Journey Builder Integration'), ('UserProvisioningFlow', 'User Provisioning Flow'), ('Survey', 'Survey'), ('SurveyEnrich', 'Survey Enrich Flow'), ('Appointments', 'Lightning Scheduler Flow'), ('FSCLending', 'Mortgage Flow'), ('DigitalForm', 'Digital Form Flow'), ('FieldServiceMobile', 'Field Service Mobile Flow'), ('OrchestrationFlow', 'Orchestration Flow'), ('FieldServiceWeb', 'Embedded Appointment Management Flow'), ('TransactionSecurityFlow', 'Transaction Security Flow'), ('ContactRequestFlow', 'Contact Request Flow'), ('ActionCadenceFlow', 'Sales Cadence Flow'), ('ManagedContentFlow', 'Managed Content Flow'), ('CheckoutFlow', 'Checkout Flow'), ('CartAsyncFlow', 'Cart Async Flow'), ('SalesEntryExperienceFlow', 'Sales Entry Experience Flow'), ('DecisionStudio', 'Decision Studio Flow'), ('Journey', 'Journey MC2 Flow')], blank=True, null=True)
    is_template = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'FlowVersionView'
        verbose_name = 'Flow Version'
        verbose_name_plural = 'Flow Versions'
        # keyPrefix = '3vd'



class Folder(models.Model):
    parent = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    name = models.CharField(max_length=40)
    developer_name = models.CharField(max_length=80, verbose_name='Folder Unique Name', blank=True, null=True)
    access_type = models.CharField(max_length=40, choices=[('Shared', 'Shared'), ('Public', 'Public'), ('Hidden', 'Hidden'), ('PublicInternal', 'Public Internal')])
    is_readonly = models.BooleanField(verbose_name='Read Only', default=models.DefaultedOnCreate(False))
    type = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Document', 'Document'), ('Email', 'Email Template'), ('Report', 'Report'), ('Dashboard', 'Dashboard'), ('QuickText', 'Quick Text'), ('Macro', 'Macro'), ('EmailTemplate', 'Email Template')])
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='folder_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='folder_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Folder'
        verbose_name = 'Folder'
        verbose_name_plural = 'Folders'
        # keyPrefix = '00l'



class FolderedContentDocument(models.Model):
    is_folder = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    content_document = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    parent_content_folder = models.ForeignKey(ContentFolder, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    file_type = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_size = models.IntegerField(verbose_name='Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='folderedcontentdocument_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='folderedcontentdocument_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'FolderedContentDocument'
        verbose_name = 'Foldered Content Document'
        verbose_name_plural = 'Foldered Content Documents'
        # keyPrefix = 'None'



class ForecastShare(models.Model):
    user_role = models.ForeignKey('UserRole', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    user_or_group = models.ForeignKey('Group', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Forecast Access', sf_read_only=models.READ_ONLY, choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    can_submit = models.BooleanField(verbose_name='Submit Allowed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    row_cause = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')])
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'ForecastShare'
        verbose_name = 'Forecast Share'
        verbose_name_plural = 'Forecast Share'
        # keyPrefix = '608'



class ForecastingAdjustment(models.Model):
    forecasting_item = models.ForeignKey('ForecastingItem', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    period = models.ForeignKey('Period', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date = models.DateField(verbose_name='Period Start Date', sf_read_only=models.READ_ONLY)
    product_family = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('HRIS', 'HRIS'), ('Payroll', 'Payroll'), ('Payroll à la carte', 'Payroll à la carte'), ('Workers Comp', 'Workers Comp'), ('ACA', 'ACA'), ('TimeFocus', 'TimeFocus')], blank=True, null=True)
    forecasting_item_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('OmittedOnly', 'OmittedOnly'), ('PipelineOnly', 'PipelineOnly'), ('BestCaseOnly', 'BestCaseOnly'), ('CommitOnly', 'CommitOnly'), ('ClosedOnly', 'ClosedOnly'), ('OpenPipeline', 'OpenPipeline'), ('BestCaseForecast', 'BestCaseForecast'), ('CommitForecast', 'CommitForecast')])
    forecast_category_name = models.CharField(max_length=40, verbose_name='Forecast Category', sf_read_only=models.READ_ONLY, choices=[('Omitted', 'Omitted'), ('Pipeline', 'Pipeline'), ('Best Case', 'Best Case'), ('Commit', 'Commit'), ('Closed', 'Closed')], blank=True, null=True)
    adjusted_amount = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY)
    adjusted_quantity = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingadjustment_owner_set', sf_read_only=models.READ_ONLY)
    is_quantity = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_amount = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingadjustment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingadjustment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    forecasting_type = models.ForeignKey('ForecastingType', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    adjustment_note = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ForecastingAdjustment'
        verbose_name = 'Forecasting Adjustment'
        verbose_name_plural = 'Forecasting Adjustments'
        # keyPrefix = '0G7'



class ForecastingCategoryMapping(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingcategorymapping_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingcategorymapping_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    source_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Omitted', 'Omitted'), ('Pipeline', 'Pipeline'), ('Best Case', 'Best Case'), ('Commit', 'Commit'), ('Closed', 'Closed')])
    forecasting_item_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('OmittedOnly', 'OmittedOnly'), ('PipelineOnly', 'PipelineOnly'), ('BestCaseOnly', 'BestCaseOnly'), ('CommitOnly', 'CommitOnly'), ('ClosedOnly', 'ClosedOnly'), ('OpenPipeline', 'OpenPipeline'), ('BestCaseForecast', 'BestCaseForecast'), ('CommitForecast', 'CommitForecast')])
    class Meta(models.Model.Meta):
        db_table = 'ForecastingCategoryMapping'
        verbose_name = 'Forecasting Category Mapping'
        verbose_name_plural = 'Forecasting Category Mappings'
        # keyPrefix = '0Jd'



class ForecastingDisplayedFamily(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingdisplayedfamily_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingdisplayedfamily_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    product_family = models.CharField(unique=True, max_length=40, sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('HRIS', 'HRIS'), ('Payroll', 'Payroll'), ('Payroll à la carte', 'Payroll à la carte'), ('Workers Comp', 'Workers Comp'), ('ACA', 'ACA'), ('TimeFocus', 'TimeFocus')])
    display_position = models.IntegerField(unique=True, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ForecastingDisplayedFamily'
        verbose_name = 'Forecasting Displayed Family'
        verbose_name_plural = 'Forecasting Displayed Families'
        # keyPrefix = '0Zx'



class ForecastingItem(models.Model):
    owner = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    period = models.ForeignKey('Period', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    forecasting_item_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('OmittedOnly', 'OmittedOnly'), ('PipelineOnly', 'PipelineOnly'), ('BestCaseOnly', 'BestCaseOnly'), ('CommitOnly', 'CommitOnly'), ('ClosedOnly', 'ClosedOnly'), ('OpenPipeline', 'OpenPipeline'), ('BestCaseForecast', 'BestCaseForecast'), ('CommitForecast', 'CommitForecast')])
    forecast_category_name = models.CharField(max_length=40, verbose_name='Forecast Category', sf_read_only=models.READ_ONLY, choices=[('Omitted', 'Omitted'), ('Pipeline', 'Pipeline'), ('Best Case', 'Best Case'), ('Commit', 'Commit'), ('Closed', 'Closed')], blank=True, null=True)
    parent_forecasting_item = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    product_family = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('HRIS', 'HRIS'), ('Payroll', 'Payroll'), ('Payroll à la carte', 'Payroll à la carte'), ('Workers Comp', 'Workers Comp'), ('ACA', 'ACA'), ('TimeFocus', 'TimeFocus')], blank=True, null=True)
    owner_only_amount = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY, blank=True, null=True)
    amount_without_adjustments = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY, blank=True, null=True)
    amount_without_manager_adjustment = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY, blank=True, null=True)
    forecast_amount = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner_only_quantity = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    quantity_without_adjustments = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    quantity_without_manager_adjustment = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    forecast_quantity = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_quantity = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_amount = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_adjustment = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_owner_adjustment = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_up_to_date = models.BooleanField(verbose_name='Is up to date', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    forecasting_type = models.ForeignKey('ForecastingType', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    amount_without_owner_adjustment = models.DecimalField(max_digits=18, decimal_places=0, verbose_name='Amount Without Owner Adjustments', sf_read_only=models.READ_ONLY, blank=True, null=True)
    quantity_without_owner_adjustment = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    subordinate_overrides = models.IntegerField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'ForecastingItem'
        verbose_name = 'Forecasting Item'
        verbose_name_plural = 'Forecasting Items'
        # keyPrefix = '0G3'



class ForecastingOwnerAdjustment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingowneradjustment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingowneradjustment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    forecasting_item = models.OneToOneField(ForecastingItem, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    owner_adjusted_amount = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner_adjusted_quantity = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner_adjustment_note = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    period = models.ForeignKey('Period', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    forecast_owner = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingowneradjustment_forecastowner_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date = models.DateField(verbose_name='Period Start Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    product_family = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('HRIS', 'HRIS'), ('Payroll', 'Payroll'), ('Payroll à la carte', 'Payroll à la carte'), ('Workers Comp', 'Workers Comp'), ('ACA', 'ACA'), ('TimeFocus', 'TimeFocus')], blank=True, null=True)
    forecasting_item_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('OmittedOnly', 'OmittedOnly'), ('PipelineOnly', 'PipelineOnly'), ('BestCaseOnly', 'BestCaseOnly'), ('CommitOnly', 'CommitOnly'), ('ClosedOnly', 'ClosedOnly'), ('OpenPipeline', 'OpenPipeline'), ('BestCaseForecast', 'BestCaseForecast'), ('CommitForecast', 'CommitForecast')])
    forecast_category_name = models.CharField(max_length=40, verbose_name='Forecast Category', sf_read_only=models.READ_ONLY, choices=[('Omitted', 'Omitted'), ('Pipeline', 'Pipeline'), ('Best Case', 'Best Case'), ('Commit', 'Commit'), ('Closed', 'Closed')], blank=True, null=True)
    is_quantity = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_amount = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    forecasting_type = models.ForeignKey('ForecastingType', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ForecastingOwnerAdjustment'
        verbose_name = 'Forecasting Owner Adjustment'
        verbose_name_plural = 'Forecasting Owner Adjustments'
        # keyPrefix = '08Q'



class ForecastingQuota(models.Model):
    period = models.ForeignKey('Period', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date = models.DateField(verbose_name='Quota Month', sf_read_only=models.READ_ONLY)
    product_family = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('HRIS', 'HRIS'), ('Payroll', 'Payroll'), ('Payroll à la carte', 'Payroll à la carte'), ('Workers Comp', 'Workers Comp'), ('ACA', 'ACA'), ('TimeFocus', 'TimeFocus')], blank=True, null=True)
    quota_amount = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY)
    quota_quantity = models.DecimalField(max_digits=12, decimal_places=2, sf_read_only=models.READ_ONLY)
    quota_owner = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingquota_quotaowner_set', sf_read_only=models.READ_ONLY)
    is_quantity = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_amount = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingquota_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingquota_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    forecasting_type = models.ForeignKey('ForecastingType', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'ForecastingQuota'
        verbose_name = 'Forecasting Quota'
        verbose_name_plural = 'Forecasting Quotas'
        # keyPrefix = '0J9'



class ForecastingShare(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingshare_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingshare_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user_or_group = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingshare_userorgroup_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    shared_forecast_manager_role = models.ForeignKey('UserRole', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    access_level = models.CharField(max_length=255, verbose_name='Forecasting Share Access Level', choices=[('ViewOnly', '0'), ('ViewAndEdit', '1')])
    role_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('R', None), ('T', None), ('Y', None)])
    class Meta(models.Model.Meta):
        db_table = 'ForecastingShare'
        verbose_name = 'Forecasting Share'
        verbose_name_plural = 'Forecasting Shares'
        # keyPrefix = '0Jc'



class ForecastingType(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='API Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingtype_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingtype_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_active = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_quantity = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_amount = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    can_display_quotas = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_product_family = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    role_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('R', None), ('T', None), ('Y', None)])
    date_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('OpportunityCloseDate', '0'), ('ProductDate', '1'), ('ScheduleDate', '2')])
    class Meta(models.Model.Meta):
        db_table = 'ForecastingType'
        verbose_name = 'Forecasting Type'
        verbose_name_plural = 'Forecasting Types'
        # keyPrefix = '0Db'



class ForecastingTypeToCategory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingtypetocategory_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='forecastingtypetocategory_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    forecasting_type = models.ForeignKey(ForecastingType, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    forecasting_item_category = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('OmittedOnly', 'OmittedOnly'), ('PipelineOnly', 'PipelineOnly'), ('BestCaseOnly', 'BestCaseOnly'), ('CommitOnly', 'CommitOnly'), ('ClosedOnly', 'ClosedOnly'), ('OpenPipeline', 'OpenPipeline'), ('BestCaseForecast', 'BestCaseForecast'), ('CommitForecast', 'CommitForecast')])
    display_position = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_adjustable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_owner_adjustable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ForecastingTypeToCategory'
        verbose_name = 'Forecasting Type To Category Mapping'
        verbose_name_plural = 'Forecasting Type To Category Mappings'
        # keyPrefix = '0Jg'



class ForecastingUserPreference(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='External ID', blank=True, null=True)
    forecasting_start_period = models.IntegerField(verbose_name='Period Start', blank=True, null=True)
    forecasting_period_duration = models.IntegerField(verbose_name='Period Duration', blank=True, null=True)
    forecasting_period_type = models.CharField(max_length=255, verbose_name='Period Type', choices=[('Month', None), ('Quarter', None), ('Week', None), ('Year', None)], blank=True, null=True)
    forecasting_displayed_type = models.ForeignKey(ForecastingType, models.DO_NOTHING)
    forecasting_view_currency = models.CharField(max_length=40, verbose_name='Viewing Currency', blank=True, null=True)
    is_hide_forecasting_guided_tour = models.BooleanField(verbose_name='Hide Guided Tour', default=models.DefaultedOnCreate(False))
    is_show_forecasting_quota_attainment = models.BooleanField(verbose_name='Show Quota Attainment', default=models.DefaultedOnCreate(False))
    is_hide_forecasting_quota_column = models.BooleanField(verbose_name='Hide Quota Column', default=models.DefaultedOnCreate(False))
    is_forecasting_show_quantity = models.BooleanField(verbose_name='Show Quantity', default=models.DefaultedOnCreate(False))
    is_forecasting_hide_zero_rows = models.BooleanField(verbose_name='Hide Zero Rows', default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ForecastingUserPreference'
        verbose_name = 'Forecasting User Preference'
        verbose_name_plural = 'Forecasting User Preferences'
        # keyPrefix = '0Cl'



class GrantedByLicense(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='grantedbylicense_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='grantedbylicense_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    permission_set_license = models.ForeignKey('PermissionSetLicense', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    custom_permission = models.ForeignKey(CustomPermission, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'GrantedByLicense'
        verbose_name = 'Setting Granted By License'
        verbose_name_plural = 'Settings Granted By Licenses'
        # keyPrefix = '06d'



class Group(models.Model):
    name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    related = models.ForeignKey('User', models.DO_NOTHING, related_name='group_related_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [User, UserRole]
    type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllCustomerPortal', None), ('ChannelProgramGroup', None), ('CollaborationGroup', None), ('Manager', None), ('ManagerAndSubordinatesInternal', None), ('Organization', None), ('PRMOrganization', None), ('Queue', None), ('Regular', None), ('Role', None), ('RoleAndSubordinates', None), ('RoleAndSubordinatesInternal', None), ('Territory', None), ('TerritoryAndSubordinates', None)])
    email = models.EmailField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    queue_routing_config = models.ForeignKey('QueueRoutingConfig', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey('Organization', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Organization, User]
    does_send_email_to_members = models.BooleanField(verbose_name='Send Email to Members', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    does_include_bosses = models.BooleanField(verbose_name='Include Bosses', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='group_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='group_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Group'
        verbose_name = 'Group'
        verbose_name_plural = 'Group'
        # keyPrefix = '00G'



class GroupMember(models.Model):
    group = models.ForeignKey(Group, models.DO_NOTHING, related_name='groupmember_group_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, related_name='groupmember_userorgroup_set', sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'GroupMember'
        verbose_name = 'Group Member'
        verbose_name_plural = 'Group Member'
        # keyPrefix = '011'



class Holiday(models.Model):
    name = models.CharField(max_length=80, verbose_name='Holiday Name', sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=100, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_all_day = models.BooleanField(verbose_name='All Day', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_date = models.DateField(verbose_name='Holiday Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_time_in_minutes = models.IntegerField(verbose_name='Start Time In Minutes From Midnight', sf_read_only=models.READ_ONLY, blank=True, null=True)
    end_time_in_minutes = models.IntegerField(verbose_name='End Time In Minutes From Midnight', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='holiday_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='holiday_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_recurrence = models.BooleanField(verbose_name='Recurring Holiday', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    recurrence_start_date = models.DateField(verbose_name='Recurrence Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_end_date_only = models.DateField(verbose_name='Recurrence End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('RecursDaily', 'Recurs Daily'), ('RecursEveryWeekday', 'Recurs Every Weekday'), ('RecursMonthly', 'Recurs Monthly'), ('RecursMonthlyNth', 'Recurs Monthy Nth'), ('RecursWeekly', 'Recurs Weekly'), ('RecursYearly', 'Recurs Yearly'), ('RecursYearlyNth', 'Recurs Yearly Nth')], blank=True, null=True)
    recurrence_interval = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_day_of_week_mask = models.IntegerField(verbose_name='Recurrence Day of Week Mask', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_day_of_month = models.IntegerField(verbose_name='Recurrence Day of Month', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_instance = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('First', '1st'), ('Second', '2nd'), ('Third', '3rd'), ('Fourth', '4th'), ('Last', 'last')], blank=True, null=True)
    recurrence_month_of_year = models.CharField(max_length=40, verbose_name='Recurrence Month of Year', sf_read_only=models.READ_ONLY, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Holiday'
        verbose_name = 'Holiday'
        verbose_name_plural = 'Holidays'
        # keyPrefix = '0C0'



class IconDefinition(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Icon Definition Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    tab_definition_id = models.CharField(max_length=512, verbose_name='Tab Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    url = models.CharField(max_length=255, verbose_name='URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    theme = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    height = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    width = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'IconDefinition'
        verbose_name = 'Icon Definition'
        verbose_name_plural = 'Icon Definitions'
        # keyPrefix = '09k'



class InstalledMobileApp(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Installed Mobile App Name', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='installedmobileapp_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='installedmobileapp_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('downloaded', 'Downloaded'), ('installed', 'Installed')])
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='installedmobileapp_user_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    connected_application = models.ForeignKey(ConnectedApplication, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    version = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'InstalledMobileApp'
        verbose_name = 'Installed Mobile App'
        verbose_name_plural = 'Installed Mobile Apps'
        # keyPrefix = '0El'



class KnowledgeArticle(models.Model):
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticle_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticle_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    article_number = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    archived_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticle_archivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    case_association_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    migrated_to_from_article = models.CharField(max_length=15, verbose_name='Mapping info between old Article and migrated Article', sf_read_only=models.READ_ONLY, blank=True, null=True)
    total_view_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'KnowledgeArticle'
        verbose_name = 'Knowledge Article'
        verbose_name_plural = 'Knowledge Articles'
        # keyPrefix = 'kA#'



class KnowledgeArticleVersion(models.Model):
    knowledge_article = models.ForeignKey(KnowledgeArticle, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    owner = models.ForeignKey(Group, models.DO_NOTHING, related_name='knowledgearticleversion_owner_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    publish_status = models.CharField(max_length=40, verbose_name='Publication Status', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Draft'), choices=[('Draft', 'Draft'), ('Online', 'Published'), ('Archived', 'Archived')])
    version_number = models.IntegerField(sf_read_only=models.READ_ONLY)
    is_latest_version = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_visible_in_app = models.BooleanField(verbose_name='Visible In Internal App', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_visible_in_pkb = models.BooleanField(verbose_name='Visible In Public Knowledge Base', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_visible_in_csp = models.BooleanField(verbose_name='Visible to Customer', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_visible_in_prm = models.BooleanField(verbose_name='Visible to Partner', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticleversion_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticleversion_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    language = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('en_US', 'English')])
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    url_name = models.CharField(max_length=255, verbose_name='URL Name', sf_read_only=models.READ_ONLY)
    archived_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticleversion_archivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    summary = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_number = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    first_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticleversion_articlearchivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_archived_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_case_attach_count = models.IntegerField(verbose_name='Article Case Association Count', sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticleversion_articlecreatedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_total_view_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    assigned_to = models.ForeignKey(Group, models.DO_NOTHING, related_name='knowledgearticleversion_assignedto_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Group, User]
    assigned_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgearticleversion_assignedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignment_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignment_due_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignment_note = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    migrated_to_from_article_version = models.CharField(max_length=15, verbose_name='Mapping info between old Article Version and migrated Article Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'KnowledgeArticleVersion'
        verbose_name = 'Knowledge Article Version'
        verbose_name_plural = 'Knowledge Article Versions'
        # keyPrefix = 'ka#'



class KnowledgeArticleVersionHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(KnowledgeArticle, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    language = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('en_US', 'English')])
    version_number = models.IntegerField(sf_read_only=models.READ_ONLY)
    parent_sobject_type = models.CharField(max_length=40, verbose_name='Parent Sobject Type Name', sf_read_only=models.READ_ONLY, choices=[('Knowledge', None)])
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    event_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('KavArchived', 'Archived'), ('created', 'Created.'), ('fieldChanged', 'Field Changed'), ('KavPublished', 'Published'), ('KavPublishedNew', 'Published as new version'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('KavRestored', 'Restored'), ('KavRevised', 'Revised'), ('KavTransCompleted', 'Translation Completed'), ('KavTransRevised', 'Translation Revised'), ('KavUnpublished', 'Unpublished')])
    field_name = models.CharField(max_length=255, verbose_name='Custom Field Definition ID', sf_read_only=models.READ_ONLY, choices=[('IsVisibleInApp', None), ('IsVisibleInCsp', None), ('IsVisibleInPkb', None), ('IsVisibleInPrm', None), ('Knowledge__kav.Carrier_Library_Document_Type__c', None), ('Knowledge__kav.Carrier_Library_Insurance_Type__c', None), ('Knowledge__kav.Payroll_Chat_Answer__c', None), ('Knowledge__kav.Payroll_Content__c', None), ('RecordType', None), ('Summary', None), ('Title', None), ('UrlName', None)], blank=True, null=True)
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    version = models.ForeignKey('KnowledgeKav', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'KnowledgeArticleVersionHistory'
        verbose_name = 'Article Version History'
        verbose_name_plural = 'Article Version History'
        # keyPrefix = 'None'



class KnowledgeArticleViewStat(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(KnowledgeArticle, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    normalized_score = models.DecimalField(max_digits=18, decimal_places=4, verbose_name='Score', sf_read_only=models.READ_ONLY, blank=True, null=True)
    channel = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllChannels', 'All Channels'), ('App', 'Internal App'), ('Pkb', 'Public Knowledge Base'), ('Csp', 'Customer'), ('Prm', 'Partner')])
    view_count = models.IntegerField(verbose_name='Total Views', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'KnowledgeArticleViewStat'
        verbose_name = 'Article View Statistics'
        verbose_name_plural = 'Article View Statistics'
        # keyPrefix = 'None'



class KnowledgeArticleVoteStat(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(KnowledgeArticle, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    normalized_score = models.DecimalField(max_digits=18, decimal_places=4, verbose_name='Score', sf_read_only=models.READ_ONLY, blank=True, null=True)
    channel = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllChannels', 'All Channels'), ('App', 'Internal App'), ('Pkb', 'Public Knowledge Base'), ('Csp', 'Customer'), ('Prm', 'Partner')])
    class Meta(models.Model.Meta):
        db_table = 'KnowledgeArticleVoteStat'
        verbose_name = 'Article Vote Statistics'
        verbose_name_plural = 'Article Vote Statistics'
        # keyPrefix = 'None'



class KnowledgeDataCategorySelection(models.Model):
    parent = models.ForeignKey('KnowledgeKav', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    data_category_group_name = models.CharField(max_length=80, verbose_name="Selected Data Category Group's Developer Name", sf_read_only=models.NOT_UPDATEABLE)
    data_category_name = models.CharField(max_length=80, verbose_name="Selected Data Category's Developer Name", sf_read_only=models.NOT_UPDATEABLE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__DataCategorySelection'
        verbose_name = 'Data Category Selection: Knowledge'
        verbose_name_plural = 'Data Category Selection: Knowledge'
        # keyPrefix = 'None'



class KnowledgeShare(models.Model):
    parent = models.ForeignKey('KnowledgeKav', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__Share'
        verbose_name = 'Share: Knowledge'
        verbose_name_plural = 'Share: Knowledge'
        # keyPrefix = 'None'



class KnowledgeVersionHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey('KnowledgeKa', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    language = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('en_US', 'English')])
    version_number = models.IntegerField(sf_read_only=models.READ_ONLY)
    parent_sobject_type = models.CharField(max_length=40, verbose_name='Parent Sobject Type Name', sf_read_only=models.READ_ONLY, choices=[('Knowledge', None)])
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    event_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('KavArchived', 'Archived'), ('created', 'Created.'), ('fieldChanged', 'Field Changed'), ('KavPublished', 'Published'), ('KavPublishedNew', 'Published as new version'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('KavRestored', 'Restored'), ('KavRevised', 'Revised'), ('KavTransCompleted', 'Translation Completed'), ('KavTransRevised', 'Translation Revised'), ('KavUnpublished', 'Unpublished')])
    field_name = models.CharField(max_length=255, verbose_name='Custom Field Definition ID', sf_read_only=models.READ_ONLY, choices=[('IsVisibleInApp', None), ('IsVisibleInCsp', None), ('IsVisibleInPkb', None), ('IsVisibleInPrm', None), ('Knowledge__kav.Carrier_Library_Document_Type__c', None), ('Knowledge__kav.Carrier_Library_Insurance_Type__c', None), ('Knowledge__kav.Payroll_Chat_Answer__c', None), ('Knowledge__kav.Payroll_Content__c', None), ('RecordType', None), ('Summary', None), ('Title', None), ('UrlName', None)], blank=True, null=True)
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    version = models.ForeignKey('KnowledgeKav', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__VersionHistory'
        verbose_name = 'Version History: Knowledge'
        verbose_name_plural = 'Version History: Knowledge'
        # keyPrefix = 'None'



class KnowledgeViewStat(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey('KnowledgeKa', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    normalized_score = models.DecimalField(max_digits=18, decimal_places=4, verbose_name='Score', sf_read_only=models.READ_ONLY, blank=True, null=True)
    channel = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllChannels', 'All Channels'), ('App', 'Internal App'), ('Pkb', 'Public Knowledge Base'), ('Csp', 'Customer'), ('Prm', 'Partner')])
    view_count = models.IntegerField(verbose_name='Total Views', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__ViewStat'
        verbose_name = 'View Stat: Knowledge'
        verbose_name_plural = 'View Stat: Knowledge'
        # keyPrefix = 'None'



class KnowledgeVoteStat(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey('KnowledgeKa', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    normalized_score = models.DecimalField(max_digits=18, decimal_places=4, verbose_name='Score', sf_read_only=models.READ_ONLY, blank=True, null=True)
    channel = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllChannels', 'All Channels'), ('App', 'Internal App'), ('Pkb', 'Public Knowledge Base'), ('Csp', 'Customer'), ('Prm', 'Partner')])
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__VoteStat'
        verbose_name = 'Vote Stat: Knowledge'
        verbose_name_plural = 'Vote Stat: Knowledge'
        # keyPrefix = 'None'



class KnowledgeKa(models.Model):
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgeka_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgeka_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    article_number = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    archived_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgeka_archivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    case_association_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    migrated_to_from_article = models.CharField(max_length=15, verbose_name='Mapping info between old Article and migrated Article', sf_read_only=models.READ_ONLY, blank=True, null=True)
    total_view_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__ka'
        verbose_name = 'Knowledge'
        verbose_name_plural = 'Knowledge'
        # keyPrefix = 'kA2'



class KnowledgeKav(models.Model):
    knowledge_article = models.ForeignKey(KnowledgeKa, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    owner = models.ForeignKey(Group, models.DO_NOTHING, related_name='knowledgekav_owner_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    publish_status = models.CharField(max_length=40, verbose_name='Publication Status', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Draft'), choices=[('Draft', 'Draft'), ('Online', 'Published'), ('Archived', 'Archived')])
    version_number = models.IntegerField(sf_read_only=models.READ_ONLY)
    is_latest_version = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_visible_in_app = models.BooleanField(verbose_name='Visible In Internal App', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_visible_in_pkb = models.BooleanField(verbose_name='Visible In Public Knowledge Base', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_visible_in_csp = models.BooleanField(verbose_name='Visible to Customer', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_visible_in_prm = models.BooleanField(verbose_name='Visible to Partner', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgekav_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgekav_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    language = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('en_US', 'English')])
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    url_name = models.CharField(max_length=255, verbose_name='URL Name', sf_read_only=models.READ_ONLY)
    archived_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgekav_archivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    summary = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_number = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    first_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_published_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_archived_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgekav_articlearchivedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_archived_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_case_attach_count = models.IntegerField(verbose_name='Article Case Association Count', sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgekav_articlecreatedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    article_total_view_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    record_type = models.ForeignKey('RecordType', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    assigned_to = models.ForeignKey(Group, models.DO_NOTHING, related_name='knowledgekav_assignedto_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Group, User]
    assigned_by = models.ForeignKey('User', models.DO_NOTHING, related_name='knowledgekav_assignedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignment_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignment_due_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignment_note = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    migrated_to_from_article_version = models.CharField(max_length=15, verbose_name='Mapping info between old Article Version and migrated Article Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    carrier_library_document_type = models.CharField(custom=True, db_column='Carrier_Library_Document_Type__c', max_length=255, verbose_name='Document Type', sf_read_only=models.READ_ONLY, choices=[('Carrier Plans', 'Carrier Plans'), ('Carrier Forms', 'Carrier Forms'), ('Underwriting Guidelines', 'Underwriting Guidelines'), ('Enrollment Kits', 'Enrollment Kits'), ('BenefitMall Documents', 'BenefitMall Documents'), ('Carrier Rate Charts', 'Carrier Rate Charts'), ('Licensing & Appointment Paperwork', 'Licensing & Appointment Paperwork')], blank=True, null=True)
    payroll_chat_answer = models.TextField(custom=True, db_column='Payroll_Chat_Answer__c', verbose_name='Chat Answer', sf_read_only=models.READ_ONLY, help_text='Content entered in this field is customer-facing. The content of this field can be shared to a Live Agent chat message box.', blank=True, null=True)
    carrier_library_insurance_type = models.CharField(custom=True, db_column='Carrier_Library_Insurance_Type__c', max_length=255, verbose_name='Insurance Type', sf_read_only=models.READ_ONLY, choices=[('Small Group', 'Small Group'), ('Large Group', 'Large Group'), ('Individual', 'Individual')], blank=True, null=True)
    payroll_content = models.TextField(custom=True, db_column='Payroll_Content__c', verbose_name='Content', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Knowledge__kav'
        verbose_name = 'Knowledge'
        verbose_name_plural = 'Knowledge'
        # keyPrefix = 'ka2'



class KnowledgeableUser(models.Model):
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    user = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    topic = models.ForeignKey('Topic', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    raw_rank = models.IntegerField(verbose_name='Rank', sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'KnowledgeableUser'
        verbose_name = 'Knowledgeable User'
        verbose_name_plural = 'Knowledgeable Users'
        # keyPrefix = '0in'



class LightningExperienceTheme(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=70, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=70, verbose_name='Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='lightningexperiencetheme_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='lightningexperiencetheme_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    default_branding_set = models.ForeignKey(BrandingSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    should_override_loading_image = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LightningExperienceTheme'
        verbose_name = 'Lightning Experience Theme'
        verbose_name_plural = 'Lightning Experience Themes'
        # keyPrefix = '0S1'



class LinkedArticle(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Linked Article Title')
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='linkedarticle_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='linkedarticle_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    knowledge_article_version = models.ForeignKey(KnowledgeKav, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Master Detail Relationship *
    knowledge_article = models.ForeignKey(KnowledgeKa, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Master Detail Relationship *
    type = models.CharField(max_length=50, verbose_name='Linked Object Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LinkedArticle'
        verbose_name = 'Linked Article'
        verbose_name_plural = 'Linked Articles'
        # keyPrefix = '1WK'



class LinkedArticleFeed(models.Model):
    parent = models.ForeignKey(LinkedArticle, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='linkedarticlefeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='linkedarticlefeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LinkedArticleFeed'
        verbose_name = 'Linked Article Feed'
        verbose_name_plural = 'Linked Article Feed'
        # keyPrefix = 'None'



class LinkedArticleHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    linked_article = models.ForeignKey(LinkedArticle, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    field = models.CharField(max_length=255, verbose_name='Changed Field', sf_read_only=models.READ_ONLY, choices=[('KnowledgeArticle', 'Article'), ('created', 'Created.'), ('feedEvent', 'Feed event'), ('individualMerged', 'Individual Merged'), ('KnowledgeArticleVersion', 'Knowledge Article Version'), ('Name', 'Linked Article Title'), ('ownerAccepted', 'Owner (Accepted)'), ('ownerAssignment', 'Owner (Assignment)'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.')])
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LinkedArticleHistory'
        verbose_name = 'Linked Article History'
        verbose_name_plural = 'Linked Article History'
        # keyPrefix = 'None'



class ListEmail(models.Model):
    owner = models.ForeignKey(Group, models.DO_NOTHING)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listemail_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listemail_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    subject = models.TextField(blank=True, null=True)
    html_body = models.TextField(blank=True, null=True)
    text_body = models.TextField(blank=True, null=True)
    from_name = models.CharField(max_length=121, blank=True, null=True)
    from_address = models.TextField()
    status = models.CharField(max_length=255, choices=[('Draft', 'Draft'), ('Scheduled', 'Scheduled'), ('Sent', 'Sent'), ('LimitError', 'Limit Error'), ('Cancelled', 'Cancelled')])
    has_attachment = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    scheduled_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    total_sent = models.IntegerField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE, blank=True, null=True)
    is_tracked = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ListEmail'
        verbose_name = 'List Email'
        verbose_name_plural = 'List Emails'
        # keyPrefix = '0XB'



class ListEmailRecipientSource(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listemailrecipientsource_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listemailrecipientsource_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    list_email = models.ForeignKey(ListEmail, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    source_list = models.ForeignKey('ListView', models.DO_NOTHING)  # Reference to tables [ListView, Topic] Master Detail Relationship *
    source_type = models.CharField(max_length=255, verbose_name='Type', choices=[('IncludeList', 'Include')])
    class Meta(models.Model.Meta):
        db_table = 'ListEmailRecipientSource'
        verbose_name = 'List Email Recipient Source'
        verbose_name_plural = 'List Email Recipient Sources'
        # keyPrefix = '0XD'



class ListEmailShare(models.Model):
    parent = models.ForeignKey(ListEmail, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ListEmailShare'
        verbose_name = 'List Email Share'
        verbose_name_plural = 'List Email Share'
        # keyPrefix = 'None'



class ListView(models.Model):
    name = models.CharField(max_length=40, verbose_name='View Name', sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='View Unique Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sobject_type = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('AccountTeamMember', None), ('ActionApex', None), ('ActionChatterPost', None), ('ActionEmail', None), ('ActionFieldUpdate', None), ('ActionKnowledgeSubmit', None), ('ActionLinkGroupTemplate', None), ('ActionLinkTemplate', None), ('ActionOverrideMetrics', None), ('ActionQuickCreate', None), ('ActionSend', None), ('ActionTask', None), ('Activity', None), ('AdditionalNumber', None), ('AddressableEventInterface', None), ('AgentWork', None), ('AllInstalledPackageVersion', None), ('AllOrganization', None), ('AllPackage', None), ('AllPackageVersion', None), ('AllUsersBasic', None), ('Announcement', None), ('ApexClass', None), ('ApexComponent', None), ('ApexLog', None), ('ApexPage', None), ('ApexPageInfo', None), ('ApexTestResult', None), ('ApexTestRunResult', None), ('ApexTestRunResultMetrics', None), ('ApexTrigger', None), ('AppDefinition', None), ('AppIpRange', None), ('AppleDomainVerification', None), ('AppMenuItem', None), ('AppNotifTypeUserSetting', None), ('AppTabMember', None), ('AsyncApexJob', None), ('AsyncApiBatch', None), ('AsyncApiBatchOptions', None), ('AsyncApiChunkResults', None), ('AsyncApiJobOptions', None), ('AsyncApiTransformationSpec', None), ('Attachment', None), ('Auditable', None), ('AuraDefinitionBundle', None), ('AuraDefinitionBundleInfo', None), ('AuraDefinitionInfo', None), ('AuthProvider', None), ('AuthSession', None), ('AutoActivityCaptureMetrics', None), ('BackgroundOperation', None), ('BaseEventInterface', None), ('BaseEventPackageInterface', None), ('BaseSessionInterface', None), ('BigObjectsRecordMetrics', None), ('BrandTemplate', None), ('BusinessHours', None), ('C2CPermissionBinding', None), ('Calendar', None), ('CallCenter', None), ('CaseEscalation', None), ('Certificate', None), ('CertificateIp', None), ('ChannelAccountMetrics', None), ('ChatterActivityDailyMetrics', None), ('ChatterMetrics', None), ('ChatterOrgWideMetrics', None), ('ChatterUniqueContributorDailyMetrics', None), ('CleanRule', None), ('ClientBrowser', None), ('CollaborationGroup', None), ('CollaborationGroupRecord', None), ('ColorDefinition', None), ('CommerceIntegrationEvent', None), ('CommerceIntegrationResponse', None), ('Community', None), ('CommunityTemplateDefinition', None), ('CommunityThemeDefinition', None), ('CommunityWorkspacesNode', None), ('CompactLayoutInfo', None), ('CompactLayoutItemInfo', None), ('ConnectedApplication', None), ('ConnectedApplication2', None), ('ConnectivityAttributes', None), ('ContentAsset', None), ('ContentDistribution', None), ('ContentDistributionView', None), ('ContentDocument', None), ('ContentFolderItem', None), ('ContentNote', None), ('ContentVersion', None), ('ContentWorkspace', None), ('ContextFieldAttributes', None), ('CronTrigger', None), ('CspTrustedSite', None), ('CustomAppMetrics', None), ('CustomConsoleComponent', None), ('CustomEntityDefinition', None), ('CustomHttpHeader', None), ('CustomIndex', None), ('CustomObjectUserLicenseMetrics', None), ('CustomObjTeamMemberMetric', None), ('CustomPermission', None), ('CustomPermissionDependency', None), ('CustomPermissionSet', None), ('CustomReportType', None), ('Dashboard', None), ('DashboardComponent', None), ('DataAssessmentBIMetrics', None), ('DatacloudAddress', None), ('DataDotComListPoolMetrics', None), ('DataExportEventInterface', None), ('DataIntegrationRecordPurchasePermission', None), ('DatasetExportEvent', None), ('DataStatistics', None), ('DataType', None), ('DeclarativePlatformMetrics', None), ('DeleteEvent', None), ('DialerBasicAudioRecMetrics', None), ('DialerBasicFeatureMetrics', None), ('DialerMinutesMetrics', None), ('DmPermissionSetMetrics', None), ('DmProfileMetric', None), ('DmUserLicenseMetrics', None), ('DmUserLoginMetrics', None), ('DmUserRoleMetrics', None), ('Domain', None), ('DomainSite', None), ('DuplicateErrorLog', None), ('DuplicateJob', None), ('DuplicateRule', None), ('EmailBrand', None), ('EmailDomainFilter', None), ('EmailDomainKey', None), ('EmailRelay', None), ('EmailRoutingAddress', None), ('EmailServicesAddress', None), ('EmailServicesFunction', None), ('EmailStatus', None), ('EmailTemplate', None), ('EmbeddedServiceConfig', None), ('EmbeddedServiceDetail', None), ('EmbeddedServiceLabel', None), ('EmbeddedServiceMenuSettings', None), ('EngagementEvent', None), ('EnhancedLetterhead', None), ('EntitlementTemplate', None), ('EntityDefinition', None), ('EntityEventInterface', None), ('EntityHistory', None), ('EntityLimit', None), ('EntityParticle', None), ('EntitySubscription', None), ('Event', None), ('EventAssociationItem', None), ('EventBusSubscriber', None), ('EventTypeDefinition', None), ('EventTypeFieldDefinition', None), ('ExternalCredential', None), ('ExternalDataSource', None), ('ExternalDataUserAuth', None), ('ExternalServiceDataType', None), ('ExternalSocialAccount', None), ('ExternalString', None), ('ExtIdentityLoginMetrics', None), ('FeatureLicense', None), ('FeedPostTemplate', None), ('FieldDefinition', None), ('FlexiPage', None), ('FlexipageComponentMetrics', None), ('FlexipagePageTypeMetrics', None), ('FlexQueueItem', None), ('FlowApexClassDescriptor', None), ('FlowApexClassPropertyDesc', None), ('FlowDefinition', None), ('FlowDefinitionView', None), ('FlowExtension', None), ('FlowExtensionGenericType', None), ('FlowExtensionParam', None), ('FlowExtensionProcessType', None), ('FlowInterview', None), ('FlowTriggerTypeDefinition', None), ('FlowVariableView', None), ('FlowVersionView', None), ('Folder', None), ('ForecastingTypeMetrics', None), ('FormulaFunction', None), ('FormulaFunctionCategory', None), ('FormulaOperator', None), ('FormulaParticle', None), ('FormulaVariable', None), ('FTestGenBodyInterface', None), ('FTestGenInterface', None), ('GenericContentFolder', None), ('GenericContentFolderItem', None), ('GenericContentFolderMember', None), ('GlobalVariable', None), ('GlobalVariableType', None), ('Group', None), ('HammerResultStatus', None), ('Holiday', None), ('IconDefinition', None), ('IdeaMetrics', None), ('InboundSocialPost', None), ('InteractionDefinitionVersion', None), ('InteractionLanguageMetrics', None), ('InteractionLayoutDetail', None), ('InteractionLCMetrics', None), ('InteractionTranslMetrics', None), ('InteractionUsageMetrics', None), ('InvocableAction', None), ('InvocableActionGenericType', None), ('InvocableActionParameter', None), ('InvocableActionPicklist', None), ('InvoiceUsageMetrics', None), ('IpWhitelist', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('LayoutParticle', None), ('LbpmMetrics', None), ('LicensedCustomPermission', None), ('LicenseDefinition', None), ('LightningComponentBundle', None), ('LightningComponentMetrics', None), ('LightningServiceMetrics', None), ('LimitSnapshot', None), ('ListColumn', None), ('ListEmail', None), ('ListEmailSentResult', None), ('ListView', None), ('ListViewChartInstance', None), ('LiveChatBlockingRule', None), ('LiveChatButton', None), ('LiveChatDeployment', None), ('LiveChatSensitiveDataRule', None), ('LiveChatUserConfig', None), ('LocalizedValue', None), ('LocalNamespace', None), ('LoginBrand', None), ('LoginBrandAsset', None), ('LoginFlow', None), ('LoginHistory', None), ('LoginIp', None), ('MailAssociationItem', None), ('MailmergeTemplate', None), ('ManagedContentVersion', None), ('MassMail', None), ('MatchIndexValue', None), ('MatchingRule', None), ('MenuItem', None), ('MetadataChangeTemplate', None), ('MetadataContainerMember', None), ('MetadataContainerMemberWithBinaryBody', None), ('MetadataContainerMemberWithBody', None), ('MetadataContainerMemberWithSymbolTable', None), ('MetricsInMQMetrics', None), ('Milestone', None), ('MilestoneType', None), ('MobileConfig', None), ('MobileEvent', None), ('MobilePushServiceDevice', None), ('MobileSecurityUserMetric', None), ('MultiCurrency', None), ('MutingPermissionSet', None), ('Nameable', None), ('NamedCredential', None), ('NetworkActiveMemberMetrics', None), ('NetworkActivityDailyMetrics', None), ('NetworkCustMemberMetrics', None), ('NetworkCustomerDailyLoginMetrics', None), ('NetworkCustomerLoginMetrics', None), ('NetworkMembershipDailyMetrics', None), ('NetworkPartnerDailyLoginMetrics', None), ('NetworkPartnerLoginMetrics', None), ('NetworkPartnerMemberMetrics', None), ('NetworkPCustDailyLoginMetrics', None), ('NetworkPowerCustomerLoginMetrics', None), ('NetworkPowerCustomerMemberMetrics', None), ('NetworkPublicUsageDailyMetrics', None), ('NetworkRegularMemberMetrics', None), ('NetworkTenantUsageEntitlementWklyMetrics', None), ('NetworkUniqueContributorDailyMetrics', None), ('NetworkUserParticipationDailyMetrics', None), ('NextBestActionUsageMetrics', None), ('Note', None), ('NotifTypeUserSetting', None), ('OauthConsumer', None), ('OauthCustomScope', None), ('ObjectPermissions', None), ('OpportunityMetrics', None), ('OpportunitySplitMetrics', None), ('OpptyAndPricingMetrics', None), ('Organization', None), ('OrganizationValueInfo', None), ('OrgObjectsMetrics', None), ('OutgoingEmailRelation', None), ('OverridableEntities', None), ('OwnerChangeOptionInfo', None), ('Package2Member', None), ('PackageBooleanValue', None), ('PackageDateValue', None), ('PackageIntegerValue', None), ('PackageLicense', None), ('PackageOperationError', None), ('ParallelJobStatus', None), ('PathAssistant', None), ('PendingServiceRouting', None), ('PermissionSet', None), ('PermissionSetAssignment', None), ('PermissionSetGroup', None), ('PermissionSetLicense', None), ('PermissionSetLicenseAssign', None), ('PermissionSetLicenseMetrics', None), ('PersonAccountMetrics', None), ('PicklistValueInfo', None), ('PlatformAction', None), ('PlatformCachePartition', None), ('PlatformCachePartitionType', None), ('PlatformEventConduitMetrics', None), ('PlatformOrgObjectMetrics', None), ('PresenceDeclineReason', None), ('PresenceUserConfig', None), ('PresenceUserConfigInfo', None), ('ProcessDefinition', None), ('ProcessInstanceStep', None), ('ProcessInstanceWorkitem', None), ('ProcessMetrics', None), ('ProcessPluginParameter', None), ('ProcessTimeQueue', None), ('ProcessTypeDefinition', None), ('Profile', None), ('ProfileIpRestrictionMetrics', None), ('PublishableEntity', None), ('Publisher', None), ('PushUpgradeJob', None), ('PushUpgradeJobError', None), ('PushUpgradeRequest', None), ('QueueRoutingConfig', None), ('QuickActionDefinition', None), ('QuickActionMetrics', None), ('Recommendation', None), ('RecordUserAccessInterface', None), ('RedirectWhitelistUrl', None), ('RelatedEntity', None), ('RelationshipDomain', None), ('RelationshipInfo', None), ('RemoteProxy', None), ('Report', None), ('ReportJob', None), ('SamlSsoConfig', None), ('SandboxDimensionMetrics', None), ('SandboxOrgDimensionMetrics', None), ('SchemaBuilderLayout', None), ('SchemaBuilderLayoutItem', None), ('Scontrol', None), ('Service', None), ('ServiceChannel', None), ('ServiceDataType', None), ('ServiceFieldDataType', None), ('ServicePresenceStatus', None), ('ServicePresenceStatusInfo', None), ('ServiceVersion', None), ('SessionPermSetActivation', None), ('SettingsTemplate', None), ('SetupNode', None), ('ShareInterface', None), ('SharingMetrics', None), ('SharingOrgDefaultMetrics', None), ('SharingOrgStandardMetrics', None), ('SharingPortalMetrics', None), ('SharingRowCauseMetrics', None), ('SharingUserMetrics', None), ('SiteDetail', None), ('SiteIframeWhiteListUrl', None), ('Skill', None), ('SlaProcess', None), ('SlaProcessPushRule', None), ('SocialPersona', None), ('SoftDeletable', None), ('SoftLimitsApiUsageMetrics', None), ('SoftphoneLayout', None), ('SPSamlAttributes', None), ('StandardValueSet', None), ('StaticResource', None), ('SupportOrgWideMetrics', None), ('SurveyResponseUsageMetrics', None), ('TabDefinition', None), ('Task', None), ('TaskAssociationItem', None), ('TenantAddOnLicense', None), ('TenantEditionLicense', None), ('TenantPlatformLicense', None), ('TenantSecret', None), ('TenantUsageEntitlement', None), ('TenantUserLicense', None), ('Topic', None), ('Training', None), ('TransactionSecurityEventInterface', None), ('TwoFactorMetrics', None), ('TwoFactorTempCode', None), ('User', None), ('UserAppMenuItem', None), ('UserDimMetrics', None), ('UserEntityAccess', None), ('UserFieldAccess', None), ('UserLicense', None), ('UserLicenseMetrics', None), ('UserListPreference', None), ('UserProvAccount', None), ('UserProvisioningConfig', None), ('UserRole', None), ('UserServicePresence', None), ('UtilityBarMetrics', None), ('VerificationMessageCreditMetrics', None), ('Vote', None), ('WebServiceDefinition', None), ('WorkflowRule', None), ('WorkflowTimeQueue', None), ('WsdlDataType', None), ('XCleanMatchRateMetrics', None), ('XmlSchema', None)], blank=True, null=True)
    is_soql_compatible = models.BooleanField(verbose_name='Is SOQL Compatible', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listview_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listview_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ListView'
        verbose_name = 'List View'
        verbose_name_plural = 'List Views'
        # keyPrefix = '00B'



class ListViewChart(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sobject_type = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', sf_read_only=models.NOT_UPDATEABLE, choices=[('Account', None), ('AccountTeamMember', None), ('ActionApex', None), ('ActionChatterPost', None), ('ActionEmail', None), ('ActionFieldUpdate', None), ('ActionKnowledgeSubmit', None), ('ActionLinkGroupTemplate', None), ('ActionLinkTemplate', None), ('ActionOverrideMetrics', None), ('ActionQuickCreate', None), ('ActionSend', None), ('ActionTask', None), ('Activity', None), ('AdditionalNumber', None), ('AddressableEventInterface', None), ('AgentWork', None), ('AllInstalledPackageVersion', None), ('AllOrganization', None), ('AllPackage', None), ('AllPackageVersion', None), ('AllUsersBasic', None), ('Announcement', None), ('ApexClass', None), ('ApexComponent', None), ('ApexLog', None), ('ApexPage', None), ('ApexPageInfo', None), ('ApexTestResult', None), ('ApexTestRunResult', None), ('ApexTestRunResultMetrics', None), ('ApexTrigger', None), ('AppDefinition', None), ('AppIpRange', None), ('AppleDomainVerification', None), ('AppMenuItem', None), ('AppNotifTypeUserSetting', None), ('AppTabMember', None), ('AsyncApexJob', None), ('AsyncApiBatch', None), ('AsyncApiBatchOptions', None), ('AsyncApiChunkResults', None), ('AsyncApiJobOptions', None), ('AsyncApiTransformationSpec', None), ('Attachment', None), ('Auditable', None), ('AuraDefinitionBundle', None), ('AuraDefinitionBundleInfo', None), ('AuraDefinitionInfo', None), ('AuthProvider', None), ('AuthSession', None), ('AutoActivityCaptureMetrics', None), ('BackgroundOperation', None), ('BaseEventInterface', None), ('BaseEventPackageInterface', None), ('BaseSessionInterface', None), ('BigObjectsRecordMetrics', None), ('BrandTemplate', None), ('BusinessHours', None), ('C2CPermissionBinding', None), ('Calendar', None), ('CallCenter', None), ('CaseEscalation', None), ('Certificate', None), ('CertificateIp', None), ('ChannelAccountMetrics', None), ('ChatterActivityDailyMetrics', None), ('ChatterMetrics', None), ('ChatterOrgWideMetrics', None), ('ChatterUniqueContributorDailyMetrics', None), ('CleanRule', None), ('ClientBrowser', None), ('CollaborationGroup', None), ('CollaborationGroupRecord', None), ('ColorDefinition', None), ('CommerceIntegrationEvent', None), ('CommerceIntegrationResponse', None), ('Community', None), ('CommunityTemplateDefinition', None), ('CommunityThemeDefinition', None), ('CommunityWorkspacesNode', None), ('CompactLayoutInfo', None), ('CompactLayoutItemInfo', None), ('ConnectedApplication', None), ('ConnectedApplication2', None), ('ConnectivityAttributes', None), ('ContentAsset', None), ('ContentDistribution', None), ('ContentDistributionView', None), ('ContentDocument', None), ('ContentFolderItem', None), ('ContentNote', None), ('ContentVersion', None), ('ContentWorkspace', None), ('ContextFieldAttributes', None), ('CronTrigger', None), ('CspTrustedSite', None), ('CustomAppMetrics', None), ('CustomConsoleComponent', None), ('CustomEntityDefinition', None), ('CustomHttpHeader', None), ('CustomIndex', None), ('CustomObjectUserLicenseMetrics', None), ('CustomObjTeamMemberMetric', None), ('CustomPermission', None), ('CustomPermissionDependency', None), ('CustomPermissionSet', None), ('CustomReportType', None), ('Dashboard', None), ('DashboardComponent', None), ('DataAssessmentBIMetrics', None), ('DatacloudAddress', None), ('DataDotComListPoolMetrics', None), ('DataExportEventInterface', None), ('DataIntegrationRecordPurchasePermission', None), ('DatasetExportEvent', None), ('DataStatistics', None), ('DataType', None), ('DeclarativePlatformMetrics', None), ('DeleteEvent', None), ('DialerBasicAudioRecMetrics', None), ('DialerBasicFeatureMetrics', None), ('DialerMinutesMetrics', None), ('DmPermissionSetMetrics', None), ('DmProfileMetric', None), ('DmUserLicenseMetrics', None), ('DmUserLoginMetrics', None), ('DmUserRoleMetrics', None), ('Domain', None), ('DomainSite', None), ('DuplicateErrorLog', None), ('DuplicateJob', None), ('DuplicateRule', None), ('EmailBrand', None), ('EmailDomainFilter', None), ('EmailDomainKey', None), ('EmailRelay', None), ('EmailRoutingAddress', None), ('EmailServicesAddress', None), ('EmailServicesFunction', None), ('EmailStatus', None), ('EmailTemplate', None), ('EmbeddedServiceConfig', None), ('EmbeddedServiceDetail', None), ('EmbeddedServiceLabel', None), ('EmbeddedServiceMenuSettings', None), ('EngagementEvent', None), ('EnhancedLetterhead', None), ('EntitlementTemplate', None), ('EntityDefinition', None), ('EntityEventInterface', None), ('EntityHistory', None), ('EntityLimit', None), ('EntityParticle', None), ('EntitySubscription', None), ('Event', None), ('EventAssociationItem', None), ('EventBusSubscriber', None), ('EventTypeDefinition', None), ('EventTypeFieldDefinition', None), ('ExternalCredential', None), ('ExternalDataSource', None), ('ExternalDataUserAuth', None), ('ExternalServiceDataType', None), ('ExternalSocialAccount', None), ('ExternalString', None), ('ExtIdentityLoginMetrics', None), ('FeatureLicense', None), ('FeedPostTemplate', None), ('FieldDefinition', None), ('FlexiPage', None), ('FlexipageComponentMetrics', None), ('FlexipagePageTypeMetrics', None), ('FlexQueueItem', None), ('FlowApexClassDescriptor', None), ('FlowApexClassPropertyDesc', None), ('FlowDefinition', None), ('FlowDefinitionView', None), ('FlowExtension', None), ('FlowExtensionGenericType', None), ('FlowExtensionParam', None), ('FlowExtensionProcessType', None), ('FlowInterview', None), ('FlowTriggerTypeDefinition', None), ('FlowVariableView', None), ('FlowVersionView', None), ('Folder', None), ('ForecastingTypeMetrics', None), ('FormulaFunction', None), ('FormulaFunctionCategory', None), ('FormulaOperator', None), ('FormulaParticle', None), ('FormulaVariable', None), ('FTestGenBodyInterface', None), ('FTestGenInterface', None), ('GenericContentFolder', None), ('GenericContentFolderItem', None), ('GenericContentFolderMember', None), ('GlobalVariable', None), ('GlobalVariableType', None), ('Group', None), ('HammerResultStatus', None), ('Holiday', None), ('IconDefinition', None), ('IdeaMetrics', None), ('InboundSocialPost', None), ('InteractionDefinitionVersion', None), ('InteractionLanguageMetrics', None), ('InteractionLayoutDetail', None), ('InteractionLCMetrics', None), ('InteractionTranslMetrics', None), ('InteractionUsageMetrics', None), ('InvocableAction', None), ('InvocableActionGenericType', None), ('InvocableActionParameter', None), ('InvocableActionPicklist', None), ('InvoiceUsageMetrics', None), ('IpWhitelist', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('LayoutParticle', None), ('LbpmMetrics', None), ('LicensedCustomPermission', None), ('LicenseDefinition', None), ('LightningComponentBundle', None), ('LightningComponentMetrics', None), ('LightningServiceMetrics', None), ('LimitSnapshot', None), ('ListColumn', None), ('ListEmail', None), ('ListEmailSentResult', None), ('ListView', None), ('ListViewChartInstance', None), ('LiveChatBlockingRule', None), ('LiveChatButton', None), ('LiveChatDeployment', None), ('LiveChatSensitiveDataRule', None), ('LiveChatUserConfig', None), ('LocalizedValue', None), ('LocalNamespace', None), ('LoginBrand', None), ('LoginBrandAsset', None), ('LoginFlow', None), ('LoginHistory', None), ('LoginIp', None), ('MailAssociationItem', None), ('MailmergeTemplate', None), ('ManagedContentVersion', None), ('MassMail', None), ('MatchIndexValue', None), ('MatchingRule', None), ('MenuItem', None), ('MetadataChangeTemplate', None), ('MetadataContainerMember', None), ('MetadataContainerMemberWithBinaryBody', None), ('MetadataContainerMemberWithBody', None), ('MetadataContainerMemberWithSymbolTable', None), ('MetricsInMQMetrics', None), ('Milestone', None), ('MilestoneType', None), ('MobileConfig', None), ('MobileEvent', None), ('MobilePushServiceDevice', None), ('MobileSecurityUserMetric', None), ('MultiCurrency', None), ('MutingPermissionSet', None), ('Nameable', None), ('NamedCredential', None), ('NetworkActiveMemberMetrics', None), ('NetworkActivityDailyMetrics', None), ('NetworkCustMemberMetrics', None), ('NetworkCustomerDailyLoginMetrics', None), ('NetworkCustomerLoginMetrics', None), ('NetworkMembershipDailyMetrics', None), ('NetworkPartnerDailyLoginMetrics', None), ('NetworkPartnerLoginMetrics', None), ('NetworkPartnerMemberMetrics', None), ('NetworkPCustDailyLoginMetrics', None), ('NetworkPowerCustomerLoginMetrics', None), ('NetworkPowerCustomerMemberMetrics', None), ('NetworkPublicUsageDailyMetrics', None), ('NetworkRegularMemberMetrics', None), ('NetworkTenantUsageEntitlementWklyMetrics', None), ('NetworkUniqueContributorDailyMetrics', None), ('NetworkUserParticipationDailyMetrics', None), ('NextBestActionUsageMetrics', None), ('Note', None), ('NotifTypeUserSetting', None), ('OauthConsumer', None), ('OauthCustomScope', None), ('ObjectPermissions', None), ('OpportunityMetrics', None), ('OpportunitySplitMetrics', None), ('OpptyAndPricingMetrics', None), ('Organization', None), ('OrganizationValueInfo', None), ('OrgObjectsMetrics', None), ('OutgoingEmailRelation', None), ('OverridableEntities', None), ('OwnerChangeOptionInfo', None), ('Package2Member', None), ('PackageBooleanValue', None), ('PackageDateValue', None), ('PackageIntegerValue', None), ('PackageLicense', None), ('PackageOperationError', None), ('ParallelJobStatus', None), ('PathAssistant', None), ('PendingServiceRouting', None), ('PermissionSet', None), ('PermissionSetAssignment', None), ('PermissionSetGroup', None), ('PermissionSetLicense', None), ('PermissionSetLicenseAssign', None), ('PermissionSetLicenseMetrics', None), ('PersonAccountMetrics', None), ('PicklistValueInfo', None), ('PlatformAction', None), ('PlatformCachePartition', None), ('PlatformCachePartitionType', None), ('PlatformEventConduitMetrics', None), ('PlatformOrgObjectMetrics', None), ('PresenceDeclineReason', None), ('PresenceUserConfig', None), ('PresenceUserConfigInfo', None), ('ProcessDefinition', None), ('ProcessInstanceStep', None), ('ProcessInstanceWorkitem', None), ('ProcessMetrics', None), ('ProcessPluginParameter', None), ('ProcessTimeQueue', None), ('ProcessTypeDefinition', None), ('Profile', None), ('ProfileIpRestrictionMetrics', None), ('PublishableEntity', None), ('Publisher', None), ('PushUpgradeJob', None), ('PushUpgradeJobError', None), ('PushUpgradeRequest', None), ('QueueRoutingConfig', None), ('QuickActionDefinition', None), ('QuickActionMetrics', None), ('Recommendation', None), ('RecordUserAccessInterface', None), ('RedirectWhitelistUrl', None), ('RelatedEntity', None), ('RelationshipDomain', None), ('RelationshipInfo', None), ('RemoteProxy', None), ('Report', None), ('ReportJob', None), ('SamlSsoConfig', None), ('SandboxDimensionMetrics', None), ('SandboxOrgDimensionMetrics', None), ('SchemaBuilderLayout', None), ('SchemaBuilderLayoutItem', None), ('Scontrol', None), ('Service', None), ('ServiceChannel', None), ('ServiceDataType', None), ('ServiceFieldDataType', None), ('ServicePresenceStatus', None), ('ServicePresenceStatusInfo', None), ('ServiceVersion', None), ('SessionPermSetActivation', None), ('SettingsTemplate', None), ('SetupNode', None), ('ShareInterface', None), ('SharingMetrics', None), ('SharingOrgDefaultMetrics', None), ('SharingOrgStandardMetrics', None), ('SharingPortalMetrics', None), ('SharingRowCauseMetrics', None), ('SharingUserMetrics', None), ('SiteDetail', None), ('SiteIframeWhiteListUrl', None), ('Skill', None), ('SlaProcess', None), ('SlaProcessPushRule', None), ('SocialPersona', None), ('SoftDeletable', None), ('SoftLimitsApiUsageMetrics', None), ('SoftphoneLayout', None), ('SPSamlAttributes', None), ('StandardValueSet', None), ('StaticResource', None), ('SupportOrgWideMetrics', None), ('SurveyResponseUsageMetrics', None), ('TabDefinition', None), ('Task', None), ('TaskAssociationItem', None), ('TenantAddOnLicense', None), ('TenantEditionLicense', None), ('TenantPlatformLicense', None), ('TenantSecret', None), ('TenantUsageEntitlement', None), ('TenantUserLicense', None), ('Topic', None), ('Training', None), ('TransactionSecurityEventInterface', None), ('TwoFactorMetrics', None), ('TwoFactorTempCode', None), ('User', None), ('UserAppMenuItem', None), ('UserDimMetrics', None), ('UserEntityAccess', None), ('UserFieldAccess', None), ('UserLicense', None), ('UserLicenseMetrics', None), ('UserListPreference', None), ('UserProvAccount', None), ('UserProvisioningConfig', None), ('UserRole', None), ('UserServicePresence', None), ('UtilityBarMetrics', None), ('VerificationMessageCreditMetrics', None), ('Vote', None), ('WebServiceDefinition', None), ('WorkflowRule', None), ('WorkflowTimeQueue', None), ('WsdlDataType', None), ('XCleanMatchRateMetrics', None), ('XmlSchema', None)])
    developer_name = models.CharField(max_length=80, verbose_name='API Name')
    language = models.CharField(max_length=40, verbose_name='Master Language', default=models.DEFAULTED_ON_CREATE, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    master_label = models.CharField(max_length=80, verbose_name='Label')
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listviewchart_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='listviewchart_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='listviewchart_owner_set')  # Master Detail Relationship *
    chart_type = models.CharField(max_length=255, choices=[('vbar', 'Vertical Bar Chart'), ('hbar', 'Horizontal Bar Chart'), ('pie', 'Donut Chart')])
    grouping_field = models.CharField(max_length=255, verbose_name='Custom Field Definition ID', choices=[('Account.AccountSource', None), ('Account.BillingAddress', None), ('Account.BillingCity', None), ('Account.BillingCountry', None), ('Account.BillingCountryCode', None), ('Account.BillingGeocodeAccuracy', None), ('Account.BillingLatitude', None), ('Account.BillingLongitude', None), ('Account.BillingPostalCode', None), ('Account.BillingState', None), ('Account.BillingStateCode', None), ('Account.BillingStreet', None), ('Account.CreatedById', None), ('Account.CreatedDate', None), ('Account.Description', None), ('Account.Fax', None), ('Account.Id', None), ('Account.Industry', None), ('Account.IsCustomerPortal', None), ('Account.IsDeleted', None), ('Account.JigsawCompanyId', None), ('Account.LastActivityDate', None), ('Account.LastModifiedById', None), ('Account.LastModifiedDate', None), ('Account.LastReferencedDate', None), ('Account.LastViewedDate', None), ('Account.MasterRecordId', None), ('Account.Name', None), ('Account.NumberOfEmployees', None), ('Account.OwnerId', None), ('Account.ParentId', None), ('Account.Phone', None), ('Account.PhotoUrl', None), ('Account.Rating', None), ('Account.RecordTypeId', None), ('Account.ShippingAddress', None), ('Account.ShippingCity', None), ('Account.ShippingCountry', None), ('Account.ShippingCountryCode', None), ('Account.ShippingGeocodeAccuracy', None), ('Account.ShippingLatitude', None), ('Account.ShippingLongitude', None), ('Account.ShippingPostalCode', None), ('Account.ShippingState', None), ('Account.ShippingStateCode', None), ('Account.ShippingStreet', None), ('Account.Sic', None), ('Account.SystemModstamp', None), ('Account.Type', None), ('Account.Website', None), ('CollaborationGroup.AnnouncementId', None), ('CollaborationGroup.BannerPhotoUrl', None), ('CollaborationGroup.CanHaveGuests', None), ('CollaborationGroup.CollaborationType', None), ('CollaborationGroup.CreatedById', None), ('CollaborationGroup.CreatedDate', None), ('CollaborationGroup.Description', None), ('CollaborationGroup.FullPhotoUrl', None), ('CollaborationGroup.HasPrivateFieldsAccess', None), ('CollaborationGroup.Id', None), ('CollaborationGroup.InformationBody', None), ('CollaborationGroup.InformationTitle', None), ('CollaborationGroup.IsArchived', None), ('CollaborationGroup.IsAutoArchiveDisabled', None), ('CollaborationGroup.IsBroadcast', None), ('CollaborationGroup.LastFeedModifiedDate', None), ('CollaborationGroup.LastModifiedById', None), ('CollaborationGroup.LastModifiedDate', None), ('CollaborationGroup.LastReferencedDate', None), ('CollaborationGroup.LastViewedDate', None), ('CollaborationGroup.MediumPhotoUrl', None), ('CollaborationGroup.MemberCount', None), ('CollaborationGroup.Name', None), ('CollaborationGroup.NetworkId', None), ('CollaborationGroup.OwnerId', None), ('CollaborationGroup.SmallPhotoUrl', None), ('CollaborationGroup.SystemModstamp', None), ('ContentVersion.Checksum', None), ('ContentVersion.ContentBodyId', None), ('ContentVersion.ContentDocumentId', None), ('ContentVersion.ContentLocation', None), ('ContentVersion.ContentModifiedById', None), ('ContentVersion.ContentModifiedDate', None), ('ContentVersion.ContentSize', None), ('ContentVersion.ContentUrl', None), ('ContentVersion.CreatedById', None), ('ContentVersion.CreatedDate', None), ('ContentVersion.Description', None), ('ContentVersion.ExternalDataSourceId', None), ('ContentVersion.ExternalDocumentInfo1', None), ('ContentVersion.ExternalDocumentInfo2', None), ('ContentVersion.FeaturedContentBoost', None), ('ContentVersion.FeaturedContentDate', None), ('ContentVersion.FileExtension', None), ('ContentVersion.FileType', None), ('ContentVersion.FirstPublishLocationId', None), ('ContentVersion.Id', None), ('ContentVersion.IsAssetEnabled', None), ('ContentVersion.IsDeleted', None), ('ContentVersion.IsEncrypted', None), ('ContentVersion.IsLatest', None), ('ContentVersion.IsMajorVersion', None), ('ContentVersion.LastModifiedById', None), ('ContentVersion.LastModifiedDate', None), ('ContentVersion.NegativeRatingCount', None), ('ContentVersion.NetworkId', None), ('ContentVersion.Origin', None), ('ContentVersion.OwnerId', None), ('ContentVersion.PathOnClient', None), ('ContentVersion.PositiveRatingCount', None), ('ContentVersion.PublishStatus', None), ('ContentVersion.RatingCount', None), ('ContentVersion.ReasonForChange', None), ('ContentVersion.SharingOption', None), ('ContentVersion.SharingPrivacy', None), ('ContentVersion.SystemModstamp', None), ('ContentVersion.TagCsv', None), ('ContentVersion.TextPreview', None), ('ContentVersion.Title', None), ('ContentVersion.VersionData', None), ('ContentVersion.VersionNumber', None), ('Dashboard.BackgroundDirection', None), ('Dashboard.BackgroundEnd', None), ('Dashboard.BackgroundStart', None), ('Dashboard.ChartTheme', None), ('Dashboard.ColorPalette', None), ('Dashboard.CreatedById', None), ('Dashboard.CreatedDate', None), ('Dashboard.DashboardResultRefreshedDate', None), ('Dashboard.DashboardResultRunningUser', None), ('Dashboard.Description', None), ('Dashboard.DeveloperName', None), ('Dashboard.FolderId', None), ('Dashboard.FolderName', None), ('Dashboard.Id', None), ('Dashboard.IsDeleted', None), ('Dashboard.LastModifiedById', None), ('Dashboard.LastModifiedDate', None), ('Dashboard.LastReferencedDate', None), ('Dashboard.LastViewedDate', None), ('Dashboard.LeftSize', None), ('Dashboard.MiddleSize', None), ('Dashboard.NamespacePrefix', None), ('Dashboard.RightSize', None), ('Dashboard.RunningUserId', None), ('Dashboard.SystemModstamp', None), ('Dashboard.TextColor', None), ('Dashboard.Title', None), ('Dashboard.TitleColor', None), ('Dashboard.TitleSize', None), ('Dashboard.Type', None), ('EnhancedLetterhead.CreatedById', None), ('EnhancedLetterhead.CreatedDate', None), ('EnhancedLetterhead.Description', None), ('EnhancedLetterhead.Id', None), ('EnhancedLetterhead.IsDeleted', None), ('EnhancedLetterhead.LastModifiedById', None), ('EnhancedLetterhead.LastModifiedDate', None), ('EnhancedLetterhead.LastReferencedDate', None), ('EnhancedLetterhead.LastViewedDate', None), ('EnhancedLetterhead.LetterheadFooter', None), ('EnhancedLetterhead.LetterheadHeader', None), ('EnhancedLetterhead.Name', None), ('EnhancedLetterhead.SystemModstamp', None), ('Event.AccountId', None), ('Event.ActivityDate', None), ('Event.ActivityDateTime', None), ('Event.ClientGuid', None), ('Event.CreatedById', None), ('Event.CreatedDate', None), ('Event.Description', None), ('Event.DurationInMinutes', None), ('Event.EndDate', None), ('Event.EndDateTime', None), ('Event.EventSubtype', None), ('Event.GroupEventType', None), ('Event.Id', None), ('Event.IsAllDayEvent', None), ('Event.IsArchived', None), ('Event.IsChild', None), ('Event.IsClientManaged', None), ('Event.IsDeleted', None), ('Event.IsException', None), ('Event.IsGroupEvent', None), ('Event.IsPrivate', None), ('Event.IsRecurrence', None), ('Event.IsRecurrence2', None), ('Event.IsRecurrence2Exception', None), ('Event.IsRecurrence2Exclusion', None), ('Event.IsReminderSet', None), ('Event.LastModifiedById', None), ('Event.LastModifiedDate', None), ('Event.Location', None), ('Event.OriginalInstanceDateTime', None), ('Event.OwnerId', None), ('Event.Recurrence2PatternStartDate', None), ('Event.Recurrence2PatternText', None), ('Event.Recurrence2PatternTimeZone', None), ('Event.Recurrence2PatternVersion', None), ('Event.RecurrenceActivityId', None), ('Event.RecurrenceDayOfMonth', None), ('Event.RecurrenceDayOfWeekMask', None), ('Event.RecurrenceEndDateOnly', None), ('Event.RecurrenceInstance', None), ('Event.RecurrenceInterval', None), ('Event.RecurrenceMonthOfYear', None), ('Event.RecurrenceStartDateTime', None), ('Event.RecurrenceTimeZoneSidKey', None), ('Event.RecurrenceType', None), ('Event.ReminderDateTime', None), ('Event.ShowAs', None), ('Event.StartDateTime', None), ('Event.Subject', None), ('Event.SystemModstamp', None), ('Event.Type', None), ('Event.WhatId', None), ('FlowInterview.CreatedById', None), ('FlowInterview.CreatedDate', None), ('FlowInterview.CurrentElement', None), ('FlowInterview.Guid', None), ('FlowInterview.Id', None), ('FlowInterview.InterviewLabel', None), ('FlowInterview.IsDeleted', None), ('FlowInterview.LastModifiedById', None), ('FlowInterview.LastModifiedDate', None), ('FlowInterview.Name', None), ('FlowInterview.OwnerId', None), ('FlowInterview.PauseLabel', None), ('FlowInterview.SystemModstamp', None), ('FlowInterview.WasPausedFromScreen', None), ('Knowledge__ka.ArchivedById', None), ('Knowledge__ka.ArchivedDate', None), ('Knowledge__ka.ArticleNumber', None), ('Knowledge__ka.CaseAssociationCount', None), ('Knowledge__ka.CreatedById', None), ('Knowledge__ka.CreatedDate', None), ('Knowledge__ka.FirstPublishedDate', None), ('Knowledge__ka.Id', None), ('Knowledge__ka.IsDeleted', None), ('Knowledge__ka.LastModifiedById', None), ('Knowledge__ka.LastModifiedDate', None), ('Knowledge__ka.LastPublishedDate', None), ('Knowledge__ka.LastReferencedDate', None), ('Knowledge__ka.LastViewedDate', None), ('Knowledge__ka.MigratedToFromArticle', None), ('Knowledge__ka.SystemModstamp', None), ('Knowledge__ka.TotalViewCount', None), ('Knowledge__kav.ArchivedById', None), ('Knowledge__kav.ArchivedDate', None), ('Knowledge__kav.ArticleArchivedById', None), ('Knowledge__kav.ArticleArchivedDate', None), ('Knowledge__kav.ArticleCaseAttachCount', None), ('Knowledge__kav.ArticleCreatedById', None), ('Knowledge__kav.ArticleCreatedDate', None), ('Knowledge__kav.ArticleNumber', None), ('Knowledge__kav.ArticleTotalViewCount', None), ('Knowledge__kav.AssignedById', None), ('Knowledge__kav.AssignedToId', None), ('Knowledge__kav.AssignmentDate', None), ('Knowledge__kav.AssignmentDueDate', None), ('Knowledge__kav.AssignmentNote', None), ('Knowledge__kav.CreatedById', None), ('Knowledge__kav.CreatedDate', None), ('Knowledge__kav.FirstPublishedDate', None), ('Knowledge__kav.Id', None), ('Knowledge__kav.IsDeleted', None), ('Knowledge__kav.IsLatestVersion', None), ('Knowledge__kav.IsVisibleInApp', None), ('Knowledge__kav.IsVisibleInCsp', None), ('Knowledge__kav.IsVisibleInPkb', None), ('Knowledge__kav.IsVisibleInPrm', None), ('Knowledge__kav.KnowledgeArticleId', None), ('Knowledge__kav.Language', None), ('Knowledge__kav.LastModifiedById', None), ('Knowledge__kav.LastModifiedDate', None), ('Knowledge__kav.LastPublishedDate', None), ('Knowledge__kav.MigratedToFromArticleVersion', None), ('Knowledge__kav.OwnerId', None), ('Knowledge__kav.PublishStatus', None), ('Knowledge__kav.RecordTypeId', None), ('Knowledge__kav.Summary', None), ('Knowledge__kav.SystemModstamp', None), ('Knowledge__kav.Title', None), ('Knowledge__kav.UrlName', None), ('Knowledge__kav.VersionNumber', None), ('LinkedArticle.CreatedById', None), ('LinkedArticle.CreatedDate', None), ('LinkedArticle.Id', None), ('LinkedArticle.IsDeleted', None), ('LinkedArticle.KnowledgeArticleId', None), ('LinkedArticle.KnowledgeArticleVersionId', None), ('LinkedArticle.LastModifiedById', None), ('LinkedArticle.LastModifiedDate', None), ('LinkedArticle.Name', None), ('LinkedArticle.SystemModstamp', None), ('LinkedArticle.Type', None), ('ListEmail.CreatedById', None), ('ListEmail.CreatedDate', None), ('ListEmail.FromAddress', None), ('ListEmail.FromName', None), ('ListEmail.HasAttachment', None), ('ListEmail.HtmlBody', None), ('ListEmail.Id', None), ('ListEmail.IsDeleted', None), ('ListEmail.IsTracked', None), ('ListEmail.LastModifiedById', None), ('ListEmail.LastModifiedDate', None), ('ListEmail.LastReferencedDate', None), ('ListEmail.LastViewedDate', None), ('ListEmail.Name', None), ('ListEmail.OwnerId', None), ('ListEmail.ScheduledDate', None), ('ListEmail.Status', None), ('ListEmail.Subject', None), ('ListEmail.SystemModstamp', None), ('ListEmail.TextBody', None), ('ListEmail.TotalSent', None), ('Recommendation.AcceptanceLabel', None), ('Recommendation.ActionReference', None), ('Recommendation.CreatedById', None), ('Recommendation.CreatedDate', None), ('Recommendation.Description', None), ('Recommendation.ExternalId', None), ('Recommendation.Id', None), ('Recommendation.ImageId', None), ('Recommendation.IsActionActive', None), ('Recommendation.IsDeleted', None), ('Recommendation.LastModifiedById', None), ('Recommendation.LastModifiedDate', None), ('Recommendation.LastReferencedDate', None), ('Recommendation.LastViewedDate', None), ('Recommendation.Name', None), ('Recommendation.NetworkId', None), ('Recommendation.RejectionLabel', None), ('Recommendation.SystemModstamp', None), ('Report.CreatedById', None), ('Report.CreatedDate', None), ('Report.Description', None), ('Report.DeveloperName', None), ('Report.FolderName', None), ('Report.Format', None), ('Report.Id', None), ('Report.IsDeleted', None), ('Report.LastModifiedById', None), ('Report.LastModifiedDate', None), ('Report.LastReferencedDate', None), ('Report.LastRunDate', None), ('Report.LastViewedDate', None), ('Report.Name', None), ('Report.NamespacePrefix', None), ('Report.OwnerId', None), ('Report.SystemModstamp', None), ('SocialPersona.AvatarUrl', None), ('SocialPersona.CreatedById', None), ('SocialPersona.CreatedDate', None), ('SocialPersona.ExternalId', None), ('SocialPersona.ExternalPictureURL', None), ('SocialPersona.Id', None), ('SocialPersona.IsDefault', None), ('SocialPersona.IsDeleted', None), ('SocialPersona.LastModifiedById', None), ('SocialPersona.LastModifiedDate', None), ('SocialPersona.LastReferencedDate', None), ('SocialPersona.LastViewedDate', None), ('SocialPersona.Name', None), ('SocialPersona.ParentId', None), ('SocialPersona.ProfileUrl', None), ('SocialPersona.Provider', None), ('SocialPersona.SourceApp', None), ('SocialPersona.SystemModstamp', None), ('Task.AccountId', None), ('Task.ActivityDate', None), ('Task.CallDisposition', None), ('Task.CallDurationInSeconds', None), ('Task.CallObject', None), ('Task.CallType', None), ('Task.CompletedDateTime', None), ('Task.CreatedById', None), ('Task.CreatedDate', None), ('Task.Description', None), ('Task.Id', None), ('Task.IsArchived', None), ('Task.IsClosed', None), ('Task.IsDeleted', None), ('Task.IsHighPriority', None), ('Task.IsRecurrence', None), ('Task.IsReminderSet', None), ('Task.LastModifiedById', None), ('Task.LastModifiedDate', None), ('Task.OwnerId', None), ('Task.Priority', None), ('Task.RecordTypeId', None), ('Task.RecurrenceActivityId', None), ('Task.RecurrenceDayOfMonth', None), ('Task.RecurrenceDayOfWeekMask', None), ('Task.RecurrenceEndDateOnly', None), ('Task.RecurrenceInstance', None), ('Task.RecurrenceInterval', None), ('Task.RecurrenceMonthOfYear', None), ('Task.RecurrenceRegeneratedType', None), ('Task.RecurrenceStartDateOnly', None), ('Task.RecurrenceTimeZoneSidKey', None), ('Task.RecurrenceType', None), ('Task.ReminderDateTime', None), ('Task.Status', None), ('Task.Subject', None), ('Task.SystemModstamp', None), ('Task.TaskSubtype', None), ('Task.Type', None), ('Task.WhatId', None), ('Topic.CreatedById', None), ('Topic.CreatedDate', None), ('Topic.Description', None), ('Topic.Id', None), ('Topic.ManagedTopicType', None), ('Topic.Name', None), ('Topic.NetworkId', None), ('Topic.SystemModstamp', None), ('Topic.TalkingAbout', None), ('User.AboutMe', None), ('User.AccountId', None), ('User.Address', None), ('User.Alias', None), ('User.BadgeText', None), ('User.BannerPhotoUrl', None), ('User.CallCenterId', None), ('User.City', None), ('User.CommunityNickname', None), ('User.CompanyName', None), ('User.Country', None), ('User.CountryCode', None), ('User.CreatedById', None), ('User.CreatedDate', None), ('User.DefaultGroupNotificationFrequency', None), ('User.DelegatedApproverId', None), ('User.Department', None), ('User.DigestFrequency', None), ('User.Division', None), ('User.Email', None), ('User.EmailEncodingKey', None), ('User.EmailPreferencesAutoBcc', None), ('User.EmailPreferencesAutoBccStayInTouch', None), ('User.EmailPreferencesStayInTouchReminder', None), ('User.EmployeeNumber', None), ('User.Extension', None), ('User.Fax', None), ('User.FederationIdentifier', None), ('User.FirstName', None), ('User.ForecastEnabled', None), ('User.FullPhotoUrl', None), ('User.GeocodeAccuracy', None), ('User.Id', None), ('User.IsActive', None), ('User.IsExtIndicatorVisible', None), ('User.IsPortalEnabled', None), ('User.IsProfilePhotoActive', None), ('User.LanguageLocaleKey', None), ('User.LastLoginDate', None), ('User.LastModifiedById', None), ('User.LastModifiedDate', None), ('User.LastName', None), ('User.LastReferencedDate', None), ('User.LastViewedDate', None), ('User.Latitude', None), ('User.LocaleSidKey', None), ('User.Longitude', None), ('User.ManagerId', None), ('User.MediumBannerPhotoUrl', None), ('User.MediumPhotoUrl', None), ('User.MobilePhone', None), ('User.Name', None), ('User.OfflinePdaTrialExpirationDate', None), ('User.OfflineTrialExpirationDate', None), ('User.OutOfOfficeMessage', None), ('User.Phone', None), ('User.PortalRole', None), ('User.PostalCode', None), ('User.ProfileId', None), ('User.ReceivesAdminInfoEmails', None), ('User.ReceivesInfoEmails', None), ('User.SenderEmail', None), ('User.SenderName', None), ('User.Signature', None), ('User.SmallBannerPhotoUrl', None), ('User.SmallPhotoUrl', None), ('User.State', None), ('User.StateCode', None), ('User.StayInTouchNote', None), ('User.StayInTouchSignature', None), ('User.StayInTouchSubject', None), ('User.Street', None), ('User.SystemModstamp', None), ('User.TimeZoneSidKey', None), ('User.Title', None), ('User.Username', None), ('User.UserPermissionsAvantgoUser', None), ('User.UserPermissionsCallCenterAutoLogin', None), ('User.UserPermissionsChatterAnswersUser', None), ('User.UserPermissionsInteractionUser', None), ('User.UserPermissionsKnowledgeUser', None), ('User.UserPermissionsLiveAgentUser', None), ('User.UserPermissionsMarketingUser', None), ('User.UserPermissionsMobileUser', None), ('User.UserPermissionsOfflineUser', None), ('User.UserPermissionsSFContentUser', None), ('User.UserPermissionsSupportUser', None), ('User.UserPreferencesActivityRemindersPopup', None), ('User.UserPreferencesApexPagesDeveloperMode', None), ('User.UserPreferencesCacheDiagnostics', None), ('User.UserPreferencesContentEmailAsAndWhen', None), ('User.UserPreferencesContentNoEmail', None), ('User.UserPreferencesCreateLEXAppsWTShown', None), ('User.UserPreferencesDisableAllFeedsEmail', None), ('User.UserPreferencesDisableBookmarkEmail', None), ('User.UserPreferencesDisableChangeCommentEmail', None), ('User.UserPreferencesDisableEndorsementEmail', None), ('User.UserPreferencesDisableFileShareNotificationsForApi', None), ('User.UserPreferencesDisableFollowersEmail', None), ('User.UserPreferencesDisableLaterCommentEmail', None), ('User.UserPreferencesDisableLikeEmail', None), ('User.UserPreferencesDisableMentionsPostEmail', None), ('User.UserPreferencesDisableMessageEmail', None), ('User.UserPreferencesDisableProfilePostEmail', None), ('User.UserPreferencesDisableSharePostEmail', None), ('User.UserPreferencesDisCommentAfterLikeEmail', None), ('User.UserPreferencesDisMentionsCommentEmail', None), ('User.UserPreferencesDisProfPostCommentEmail', None), ('User.UserPreferencesEnableAutoSubForFeeds', None), ('User.UserPreferencesEventRemindersCheckboxDefault', None), ('User.UserPreferencesExcludeMailAppAttachments', None), ('User.UserPreferencesFavoritesShowTopFavorites', None), ('User.UserPreferencesFavoritesWTShown', None), ('User.UserPreferencesGlobalNavBarWTShown', None), ('User.UserPreferencesGlobalNavGridMenuWTShown', None), ('User.UserPreferencesHasCelebrationBadge', None), ('User.UserPreferencesHideBiggerPhotoCallout', None), ('User.UserPreferencesHideChatterOnboardingSplash', None), ('User.UserPreferencesHideCSNDesktopTask', None), ('User.UserPreferencesHideCSNGetChatterMobileTask', None), ('User.UserPreferencesHideEndUserOnboardingAssistantModal', None), ('User.UserPreferencesHideLightningMigrationModal', None), ('User.UserPreferencesHideS1BrowserUI', None), ('User.UserPreferencesHideSecondChatterOnboardingSplash', None), ('User.UserPreferencesHideSfxWelcomeMat', None), ('User.UserPreferencesLightningExperiencePreferred', None), ('User.UserPreferencesNewLightningReportRunPageEnabled', None), ('User.UserPreferencesPathAssistantCollapsed', None), ('User.UserPreferencesPipelineViewHideHelpPopover', None), ('User.UserPreferencesPreviewCustomTheme', None), ('User.UserPreferencesReceiveNoNotificationsAsApprover', None), ('User.UserPreferencesReceiveNotificationsAsDelegatedApprover', None), ('User.UserPreferencesRecordHomeReservedWTShown', None), ('User.UserPreferencesRecordHomeSectionCollapseWTShown', None), ('User.UserPreferencesReminderSoundOff', None), ('User.UserPreferencesShowCityToExternalUsers', None), ('User.UserPreferencesShowCityToGuestUsers', None), ('User.UserPreferencesShowCountryToExternalUsers', None), ('User.UserPreferencesShowCountryToGuestUsers', None), ('User.UserPreferencesShowEmailToExternalUsers', None), ('User.UserPreferencesShowEmailToGuestUsers', None), ('User.UserPreferencesShowFaxToExternalUsers', None), ('User.UserPreferencesShowFaxToGuestUsers', None), ('User.UserPreferencesShowManagerToExternalUsers', None), ('User.UserPreferencesShowManagerToGuestUsers', None), ('User.UserPreferencesShowMobilePhoneToExternalUsers', None), ('User.UserPreferencesShowMobilePhoneToGuestUsers', None), ('User.UserPreferencesShowPostalCodeToExternalUsers', None), ('User.UserPreferencesShowPostalCodeToGuestUsers', None), ('User.UserPreferencesShowProfilePicToGuestUsers', None), ('User.UserPreferencesShowStateToExternalUsers', None), ('User.UserPreferencesShowStateToGuestUsers', None), ('User.UserPreferencesShowStreetAddressToExternalUsers', None), ('User.UserPreferencesShowStreetAddressToGuestUsers', None), ('User.UserPreferencesShowTitleToExternalUsers', None), ('User.UserPreferencesShowTitleToGuestUsers', None), ('User.UserPreferencesShowWorkPhoneToExternalUsers', None), ('User.UserPreferencesShowWorkPhoneToGuestUsers', None), ('User.UserPreferencesSortFeedByComment', None), ('User.UserPreferencesSRHOverrideActivities', None), ('User.UserPreferencesSuppressEventSFXReminders', None), ('User.UserPreferencesSuppressTaskSFXReminders', None), ('User.UserPreferencesTaskRemindersCheckboxDefault', None), ('User.UserPreferencesUserDebugModePref', None), ('User.UserRoleId', None), ('User.UserType', None), ('UserAppMenuItem.ApplicationId', None), ('UserAppMenuItem.AppMenuItemId', None), ('UserAppMenuItem.Description', None), ('UserAppMenuItem.IconUrl', None), ('UserAppMenuItem.Id', None), ('UserAppMenuItem.InfoUrl', None), ('UserAppMenuItem.IsUsingAdminAuthorization', None), ('UserAppMenuItem.IsVisible', None), ('UserAppMenuItem.Label', None), ('UserAppMenuItem.LogoUrl', None), ('UserAppMenuItem.MobileStartUrl', None), ('UserAppMenuItem.Name', None), ('UserAppMenuItem.SortOrder', None), ('UserAppMenuItem.StartUrl', None), ('UserAppMenuItem.Type', None), ('UserAppMenuItem.UserSortOrder', None)], blank=True, null=True)
    aggregate_field = models.CharField(max_length=255, verbose_name='Custom Field Definition ID', choices=[('Account.AccountSource', None), ('Account.BillingAddress', None), ('Account.BillingCity', None), ('Account.BillingCountry', None), ('Account.BillingCountryCode', None), ('Account.BillingGeocodeAccuracy', None), ('Account.BillingLatitude', None), ('Account.BillingLongitude', None), ('Account.BillingPostalCode', None), ('Account.BillingState', None), ('Account.BillingStateCode', None), ('Account.BillingStreet', None), ('Account.CreatedById', None), ('Account.CreatedDate', None), ('Account.Description', None), ('Account.Fax', None), ('Account.Id', None), ('Account.Industry', None), ('Account.IsCustomerPortal', None), ('Account.IsDeleted', None), ('Account.JigsawCompanyId', None), ('Account.LastActivityDate', None), ('Account.LastModifiedById', None), ('Account.LastModifiedDate', None), ('Account.LastReferencedDate', None), ('Account.LastViewedDate', None), ('Account.MasterRecordId', None), ('Account.Name', None), ('Account.NumberOfEmployees', None), ('Account.OwnerId', None), ('Account.ParentId', None), ('Account.Phone', None), ('Account.PhotoUrl', None), ('Account.Rating', None), ('Account.RecordTypeId', None), ('Account.ShippingAddress', None), ('Account.ShippingCity', None), ('Account.ShippingCountry', None), ('Account.ShippingCountryCode', None), ('Account.ShippingGeocodeAccuracy', None), ('Account.ShippingLatitude', None), ('Account.ShippingLongitude', None), ('Account.ShippingPostalCode', None), ('Account.ShippingState', None), ('Account.ShippingStateCode', None), ('Account.ShippingStreet', None), ('Account.Sic', None), ('Account.SystemModstamp', None), ('Account.Type', None), ('Account.Website', None), ('CollaborationGroup.AnnouncementId', None), ('CollaborationGroup.BannerPhotoUrl', None), ('CollaborationGroup.CanHaveGuests', None), ('CollaborationGroup.CollaborationType', None), ('CollaborationGroup.CreatedById', None), ('CollaborationGroup.CreatedDate', None), ('CollaborationGroup.Description', None), ('CollaborationGroup.FullPhotoUrl', None), ('CollaborationGroup.HasPrivateFieldsAccess', None), ('CollaborationGroup.Id', None), ('CollaborationGroup.InformationBody', None), ('CollaborationGroup.InformationTitle', None), ('CollaborationGroup.IsArchived', None), ('CollaborationGroup.IsAutoArchiveDisabled', None), ('CollaborationGroup.IsBroadcast', None), ('CollaborationGroup.LastFeedModifiedDate', None), ('CollaborationGroup.LastModifiedById', None), ('CollaborationGroup.LastModifiedDate', None), ('CollaborationGroup.LastReferencedDate', None), ('CollaborationGroup.LastViewedDate', None), ('CollaborationGroup.MediumPhotoUrl', None), ('CollaborationGroup.MemberCount', None), ('CollaborationGroup.Name', None), ('CollaborationGroup.NetworkId', None), ('CollaborationGroup.OwnerId', None), ('CollaborationGroup.SmallPhotoUrl', None), ('CollaborationGroup.SystemModstamp', None), ('ContentVersion.Checksum', None), ('ContentVersion.ContentBodyId', None), ('ContentVersion.ContentDocumentId', None), ('ContentVersion.ContentLocation', None), ('ContentVersion.ContentModifiedById', None), ('ContentVersion.ContentModifiedDate', None), ('ContentVersion.ContentSize', None), ('ContentVersion.ContentUrl', None), ('ContentVersion.CreatedById', None), ('ContentVersion.CreatedDate', None), ('ContentVersion.Description', None), ('ContentVersion.ExternalDataSourceId', None), ('ContentVersion.ExternalDocumentInfo1', None), ('ContentVersion.ExternalDocumentInfo2', None), ('ContentVersion.FeaturedContentBoost', None), ('ContentVersion.FeaturedContentDate', None), ('ContentVersion.FileExtension', None), ('ContentVersion.FileType', None), ('ContentVersion.FirstPublishLocationId', None), ('ContentVersion.Id', None), ('ContentVersion.IsAssetEnabled', None), ('ContentVersion.IsDeleted', None), ('ContentVersion.IsEncrypted', None), ('ContentVersion.IsLatest', None), ('ContentVersion.IsMajorVersion', None), ('ContentVersion.LastModifiedById', None), ('ContentVersion.LastModifiedDate', None), ('ContentVersion.NegativeRatingCount', None), ('ContentVersion.NetworkId', None), ('ContentVersion.Origin', None), ('ContentVersion.OwnerId', None), ('ContentVersion.PathOnClient', None), ('ContentVersion.PositiveRatingCount', None), ('ContentVersion.PublishStatus', None), ('ContentVersion.RatingCount', None), ('ContentVersion.ReasonForChange', None), ('ContentVersion.SharingOption', None), ('ContentVersion.SharingPrivacy', None), ('ContentVersion.SystemModstamp', None), ('ContentVersion.TagCsv', None), ('ContentVersion.TextPreview', None), ('ContentVersion.Title', None), ('ContentVersion.VersionData', None), ('ContentVersion.VersionNumber', None), ('Dashboard.BackgroundDirection', None), ('Dashboard.BackgroundEnd', None), ('Dashboard.BackgroundStart', None), ('Dashboard.ChartTheme', None), ('Dashboard.ColorPalette', None), ('Dashboard.CreatedById', None), ('Dashboard.CreatedDate', None), ('Dashboard.DashboardResultRefreshedDate', None), ('Dashboard.DashboardResultRunningUser', None), ('Dashboard.Description', None), ('Dashboard.DeveloperName', None), ('Dashboard.FolderId', None), ('Dashboard.FolderName', None), ('Dashboard.Id', None), ('Dashboard.IsDeleted', None), ('Dashboard.LastModifiedById', None), ('Dashboard.LastModifiedDate', None), ('Dashboard.LastReferencedDate', None), ('Dashboard.LastViewedDate', None), ('Dashboard.LeftSize', None), ('Dashboard.MiddleSize', None), ('Dashboard.NamespacePrefix', None), ('Dashboard.RightSize', None), ('Dashboard.RunningUserId', None), ('Dashboard.SystemModstamp', None), ('Dashboard.TextColor', None), ('Dashboard.Title', None), ('Dashboard.TitleColor', None), ('Dashboard.TitleSize', None), ('Dashboard.Type', None), ('EnhancedLetterhead.CreatedById', None), ('EnhancedLetterhead.CreatedDate', None), ('EnhancedLetterhead.Description', None), ('EnhancedLetterhead.Id', None), ('EnhancedLetterhead.IsDeleted', None), ('EnhancedLetterhead.LastModifiedById', None), ('EnhancedLetterhead.LastModifiedDate', None), ('EnhancedLetterhead.LastReferencedDate', None), ('EnhancedLetterhead.LastViewedDate', None), ('EnhancedLetterhead.LetterheadFooter', None), ('EnhancedLetterhead.LetterheadHeader', None), ('EnhancedLetterhead.Name', None), ('EnhancedLetterhead.SystemModstamp', None), ('Event.AccountId', None), ('Event.ActivityDate', None), ('Event.ActivityDateTime', None), ('Event.ClientGuid', None), ('Event.CreatedById', None), ('Event.CreatedDate', None), ('Event.Description', None), ('Event.DurationInMinutes', None), ('Event.EndDate', None), ('Event.EndDateTime', None), ('Event.EventSubtype', None), ('Event.GroupEventType', None), ('Event.Id', None), ('Event.IsAllDayEvent', None), ('Event.IsArchived', None), ('Event.IsChild', None), ('Event.IsClientManaged', None), ('Event.IsDeleted', None), ('Event.IsException', None), ('Event.IsGroupEvent', None), ('Event.IsPrivate', None), ('Event.IsRecurrence', None), ('Event.IsRecurrence2', None), ('Event.IsRecurrence2Exception', None), ('Event.IsRecurrence2Exclusion', None), ('Event.IsReminderSet', None), ('Event.LastModifiedById', None), ('Event.LastModifiedDate', None), ('Event.Location', None), ('Event.OriginalInstanceDateTime', None), ('Event.OwnerId', None), ('Event.Recurrence2PatternStartDate', None), ('Event.Recurrence2PatternText', None), ('Event.Recurrence2PatternTimeZone', None), ('Event.Recurrence2PatternVersion', None), ('Event.RecurrenceActivityId', None), ('Event.RecurrenceDayOfMonth', None), ('Event.RecurrenceDayOfWeekMask', None), ('Event.RecurrenceEndDateOnly', None), ('Event.RecurrenceInstance', None), ('Event.RecurrenceInterval', None), ('Event.RecurrenceMonthOfYear', None), ('Event.RecurrenceStartDateTime', None), ('Event.RecurrenceTimeZoneSidKey', None), ('Event.RecurrenceType', None), ('Event.ReminderDateTime', None), ('Event.ShowAs', None), ('Event.StartDateTime', None), ('Event.Subject', None), ('Event.SystemModstamp', None), ('Event.Type', None), ('Event.WhatId', None), ('FlowInterview.CreatedById', None), ('FlowInterview.CreatedDate', None), ('FlowInterview.CurrentElement', None), ('FlowInterview.Guid', None), ('FlowInterview.Id', None), ('FlowInterview.InterviewLabel', None), ('FlowInterview.IsDeleted', None), ('FlowInterview.LastModifiedById', None), ('FlowInterview.LastModifiedDate', None), ('FlowInterview.Name', None), ('FlowInterview.OwnerId', None), ('FlowInterview.PauseLabel', None), ('FlowInterview.SystemModstamp', None), ('FlowInterview.WasPausedFromScreen', None), ('Knowledge__ka.ArchivedById', None), ('Knowledge__ka.ArchivedDate', None), ('Knowledge__ka.ArticleNumber', None), ('Knowledge__ka.CaseAssociationCount', None), ('Knowledge__ka.CreatedById', None), ('Knowledge__ka.CreatedDate', None), ('Knowledge__ka.FirstPublishedDate', None), ('Knowledge__ka.Id', None), ('Knowledge__ka.IsDeleted', None), ('Knowledge__ka.LastModifiedById', None), ('Knowledge__ka.LastModifiedDate', None), ('Knowledge__ka.LastPublishedDate', None), ('Knowledge__ka.LastReferencedDate', None), ('Knowledge__ka.LastViewedDate', None), ('Knowledge__ka.MigratedToFromArticle', None), ('Knowledge__ka.SystemModstamp', None), ('Knowledge__ka.TotalViewCount', None), ('Knowledge__kav.ArchivedById', None), ('Knowledge__kav.ArchivedDate', None), ('Knowledge__kav.ArticleArchivedById', None), ('Knowledge__kav.ArticleArchivedDate', None), ('Knowledge__kav.ArticleCaseAttachCount', None), ('Knowledge__kav.ArticleCreatedById', None), ('Knowledge__kav.ArticleCreatedDate', None), ('Knowledge__kav.ArticleNumber', None), ('Knowledge__kav.ArticleTotalViewCount', None), ('Knowledge__kav.AssignedById', None), ('Knowledge__kav.AssignedToId', None), ('Knowledge__kav.AssignmentDate', None), ('Knowledge__kav.AssignmentDueDate', None), ('Knowledge__kav.AssignmentNote', None), ('Knowledge__kav.CreatedById', None), ('Knowledge__kav.CreatedDate', None), ('Knowledge__kav.FirstPublishedDate', None), ('Knowledge__kav.Id', None), ('Knowledge__kav.IsDeleted', None), ('Knowledge__kav.IsLatestVersion', None), ('Knowledge__kav.IsVisibleInApp', None), ('Knowledge__kav.IsVisibleInCsp', None), ('Knowledge__kav.IsVisibleInPkb', None), ('Knowledge__kav.IsVisibleInPrm', None), ('Knowledge__kav.KnowledgeArticleId', None), ('Knowledge__kav.Language', None), ('Knowledge__kav.LastModifiedById', None), ('Knowledge__kav.LastModifiedDate', None), ('Knowledge__kav.LastPublishedDate', None), ('Knowledge__kav.MigratedToFromArticleVersion', None), ('Knowledge__kav.OwnerId', None), ('Knowledge__kav.PublishStatus', None), ('Knowledge__kav.RecordTypeId', None), ('Knowledge__kav.Summary', None), ('Knowledge__kav.SystemModstamp', None), ('Knowledge__kav.Title', None), ('Knowledge__kav.UrlName', None), ('Knowledge__kav.VersionNumber', None), ('LinkedArticle.CreatedById', None), ('LinkedArticle.CreatedDate', None), ('LinkedArticle.Id', None), ('LinkedArticle.IsDeleted', None), ('LinkedArticle.KnowledgeArticleId', None), ('LinkedArticle.KnowledgeArticleVersionId', None), ('LinkedArticle.LastModifiedById', None), ('LinkedArticle.LastModifiedDate', None), ('LinkedArticle.Name', None), ('LinkedArticle.SystemModstamp', None), ('LinkedArticle.Type', None), ('ListEmail.CreatedById', None), ('ListEmail.CreatedDate', None), ('ListEmail.FromAddress', None), ('ListEmail.FromName', None), ('ListEmail.HasAttachment', None), ('ListEmail.HtmlBody', None), ('ListEmail.Id', None), ('ListEmail.IsDeleted', None), ('ListEmail.IsTracked', None), ('ListEmail.LastModifiedById', None), ('ListEmail.LastModifiedDate', None), ('ListEmail.LastReferencedDate', None), ('ListEmail.LastViewedDate', None), ('ListEmail.Name', None), ('ListEmail.OwnerId', None), ('ListEmail.ScheduledDate', None), ('ListEmail.Status', None), ('ListEmail.Subject', None), ('ListEmail.SystemModstamp', None), ('ListEmail.TextBody', None), ('ListEmail.TotalSent', None), ('Recommendation.AcceptanceLabel', None), ('Recommendation.ActionReference', None), ('Recommendation.CreatedById', None), ('Recommendation.CreatedDate', None), ('Recommendation.Description', None), ('Recommendation.ExternalId', None), ('Recommendation.Id', None), ('Recommendation.ImageId', None), ('Recommendation.IsActionActive', None), ('Recommendation.IsDeleted', None), ('Recommendation.LastModifiedById', None), ('Recommendation.LastModifiedDate', None), ('Recommendation.LastReferencedDate', None), ('Recommendation.LastViewedDate', None), ('Recommendation.Name', None), ('Recommendation.NetworkId', None), ('Recommendation.RejectionLabel', None), ('Recommendation.SystemModstamp', None), ('Report.CreatedById', None), ('Report.CreatedDate', None), ('Report.Description', None), ('Report.DeveloperName', None), ('Report.FolderName', None), ('Report.Format', None), ('Report.Id', None), ('Report.IsDeleted', None), ('Report.LastModifiedById', None), ('Report.LastModifiedDate', None), ('Report.LastReferencedDate', None), ('Report.LastRunDate', None), ('Report.LastViewedDate', None), ('Report.Name', None), ('Report.NamespacePrefix', None), ('Report.OwnerId', None), ('Report.SystemModstamp', None), ('SocialPersona.AvatarUrl', None), ('SocialPersona.CreatedById', None), ('SocialPersona.CreatedDate', None), ('SocialPersona.ExternalId', None), ('SocialPersona.ExternalPictureURL', None), ('SocialPersona.Id', None), ('SocialPersona.IsDefault', None), ('SocialPersona.IsDeleted', None), ('SocialPersona.LastModifiedById', None), ('SocialPersona.LastModifiedDate', None), ('SocialPersona.LastReferencedDate', None), ('SocialPersona.LastViewedDate', None), ('SocialPersona.Name', None), ('SocialPersona.ParentId', None), ('SocialPersona.ProfileUrl', None), ('SocialPersona.Provider', None), ('SocialPersona.SourceApp', None), ('SocialPersona.SystemModstamp', None), ('Task.AccountId', None), ('Task.ActivityDate', None), ('Task.CallDisposition', None), ('Task.CallDurationInSeconds', None), ('Task.CallObject', None), ('Task.CallType', None), ('Task.CompletedDateTime', None), ('Task.CreatedById', None), ('Task.CreatedDate', None), ('Task.Description', None), ('Task.Id', None), ('Task.IsArchived', None), ('Task.IsClosed', None), ('Task.IsDeleted', None), ('Task.IsHighPriority', None), ('Task.IsRecurrence', None), ('Task.IsReminderSet', None), ('Task.LastModifiedById', None), ('Task.LastModifiedDate', None), ('Task.OwnerId', None), ('Task.Priority', None), ('Task.RecordTypeId', None), ('Task.RecurrenceActivityId', None), ('Task.RecurrenceDayOfMonth', None), ('Task.RecurrenceDayOfWeekMask', None), ('Task.RecurrenceEndDateOnly', None), ('Task.RecurrenceInstance', None), ('Task.RecurrenceInterval', None), ('Task.RecurrenceMonthOfYear', None), ('Task.RecurrenceRegeneratedType', None), ('Task.RecurrenceStartDateOnly', None), ('Task.RecurrenceTimeZoneSidKey', None), ('Task.RecurrenceType', None), ('Task.ReminderDateTime', None), ('Task.Status', None), ('Task.Subject', None), ('Task.SystemModstamp', None), ('Task.TaskSubtype', None), ('Task.Type', None), ('Task.WhatId', None), ('Topic.CreatedById', None), ('Topic.CreatedDate', None), ('Topic.Description', None), ('Topic.Id', None), ('Topic.ManagedTopicType', None), ('Topic.Name', None), ('Topic.NetworkId', None), ('Topic.SystemModstamp', None), ('Topic.TalkingAbout', None), ('User.AboutMe', None), ('User.AccountId', None), ('User.Address', None), ('User.Alias', None), ('User.BadgeText', None), ('User.BannerPhotoUrl', None), ('User.CallCenterId', None), ('User.City', None), ('User.CommunityNickname', None), ('User.CompanyName', None), ('User.Country', None), ('User.CountryCode', None), ('User.CreatedById', None), ('User.CreatedDate', None), ('User.DefaultGroupNotificationFrequency', None), ('User.DelegatedApproverId', None), ('User.Department', None), ('User.DigestFrequency', None), ('User.Division', None), ('User.Email', None), ('User.EmailEncodingKey', None), ('User.EmailPreferencesAutoBcc', None), ('User.EmailPreferencesAutoBccStayInTouch', None), ('User.EmailPreferencesStayInTouchReminder', None), ('User.EmployeeNumber', None), ('User.Extension', None), ('User.Fax', None), ('User.FederationIdentifier', None), ('User.FirstName', None), ('User.ForecastEnabled', None), ('User.FullPhotoUrl', None), ('User.GeocodeAccuracy', None), ('User.Id', None), ('User.IsActive', None), ('User.IsExtIndicatorVisible', None), ('User.IsPortalEnabled', None), ('User.IsProfilePhotoActive', None), ('User.LanguageLocaleKey', None), ('User.LastLoginDate', None), ('User.LastModifiedById', None), ('User.LastModifiedDate', None), ('User.LastName', None), ('User.LastReferencedDate', None), ('User.LastViewedDate', None), ('User.Latitude', None), ('User.LocaleSidKey', None), ('User.Longitude', None), ('User.ManagerId', None), ('User.MediumBannerPhotoUrl', None), ('User.MediumPhotoUrl', None), ('User.MobilePhone', None), ('User.Name', None), ('User.OfflinePdaTrialExpirationDate', None), ('User.OfflineTrialExpirationDate', None), ('User.OutOfOfficeMessage', None), ('User.Phone', None), ('User.PortalRole', None), ('User.PostalCode', None), ('User.ProfileId', None), ('User.ReceivesAdminInfoEmails', None), ('User.ReceivesInfoEmails', None), ('User.SenderEmail', None), ('User.SenderName', None), ('User.Signature', None), ('User.SmallBannerPhotoUrl', None), ('User.SmallPhotoUrl', None), ('User.State', None), ('User.StateCode', None), ('User.StayInTouchNote', None), ('User.StayInTouchSignature', None), ('User.StayInTouchSubject', None), ('User.Street', None), ('User.SystemModstamp', None), ('User.TimeZoneSidKey', None), ('User.Title', None), ('User.Username', None), ('User.UserPermissionsAvantgoUser', None), ('User.UserPermissionsCallCenterAutoLogin', None), ('User.UserPermissionsChatterAnswersUser', None), ('User.UserPermissionsInteractionUser', None), ('User.UserPermissionsKnowledgeUser', None), ('User.UserPermissionsLiveAgentUser', None), ('User.UserPermissionsMarketingUser', None), ('User.UserPermissionsMobileUser', None), ('User.UserPermissionsOfflineUser', None), ('User.UserPermissionsSFContentUser', None), ('User.UserPermissionsSupportUser', None), ('User.UserPreferencesActivityRemindersPopup', None), ('User.UserPreferencesApexPagesDeveloperMode', None), ('User.UserPreferencesCacheDiagnostics', None), ('User.UserPreferencesContentEmailAsAndWhen', None), ('User.UserPreferencesContentNoEmail', None), ('User.UserPreferencesCreateLEXAppsWTShown', None), ('User.UserPreferencesDisableAllFeedsEmail', None), ('User.UserPreferencesDisableBookmarkEmail', None), ('User.UserPreferencesDisableChangeCommentEmail', None), ('User.UserPreferencesDisableEndorsementEmail', None), ('User.UserPreferencesDisableFileShareNotificationsForApi', None), ('User.UserPreferencesDisableFollowersEmail', None), ('User.UserPreferencesDisableLaterCommentEmail', None), ('User.UserPreferencesDisableLikeEmail', None), ('User.UserPreferencesDisableMentionsPostEmail', None), ('User.UserPreferencesDisableMessageEmail', None), ('User.UserPreferencesDisableProfilePostEmail', None), ('User.UserPreferencesDisableSharePostEmail', None), ('User.UserPreferencesDisCommentAfterLikeEmail', None), ('User.UserPreferencesDisMentionsCommentEmail', None), ('User.UserPreferencesDisProfPostCommentEmail', None), ('User.UserPreferencesEnableAutoSubForFeeds', None), ('User.UserPreferencesEventRemindersCheckboxDefault', None), ('User.UserPreferencesExcludeMailAppAttachments', None), ('User.UserPreferencesFavoritesShowTopFavorites', None), ('User.UserPreferencesFavoritesWTShown', None), ('User.UserPreferencesGlobalNavBarWTShown', None), ('User.UserPreferencesGlobalNavGridMenuWTShown', None), ('User.UserPreferencesHasCelebrationBadge', None), ('User.UserPreferencesHideBiggerPhotoCallout', None), ('User.UserPreferencesHideChatterOnboardingSplash', None), ('User.UserPreferencesHideCSNDesktopTask', None), ('User.UserPreferencesHideCSNGetChatterMobileTask', None), ('User.UserPreferencesHideEndUserOnboardingAssistantModal', None), ('User.UserPreferencesHideLightningMigrationModal', None), ('User.UserPreferencesHideS1BrowserUI', None), ('User.UserPreferencesHideSecondChatterOnboardingSplash', None), ('User.UserPreferencesHideSfxWelcomeMat', None), ('User.UserPreferencesLightningExperiencePreferred', None), ('User.UserPreferencesNewLightningReportRunPageEnabled', None), ('User.UserPreferencesPathAssistantCollapsed', None), ('User.UserPreferencesPipelineViewHideHelpPopover', None), ('User.UserPreferencesPreviewCustomTheme', None), ('User.UserPreferencesReceiveNoNotificationsAsApprover', None), ('User.UserPreferencesReceiveNotificationsAsDelegatedApprover', None), ('User.UserPreferencesRecordHomeReservedWTShown', None), ('User.UserPreferencesRecordHomeSectionCollapseWTShown', None), ('User.UserPreferencesReminderSoundOff', None), ('User.UserPreferencesShowCityToExternalUsers', None), ('User.UserPreferencesShowCityToGuestUsers', None), ('User.UserPreferencesShowCountryToExternalUsers', None), ('User.UserPreferencesShowCountryToGuestUsers', None), ('User.UserPreferencesShowEmailToExternalUsers', None), ('User.UserPreferencesShowEmailToGuestUsers', None), ('User.UserPreferencesShowFaxToExternalUsers', None), ('User.UserPreferencesShowFaxToGuestUsers', None), ('User.UserPreferencesShowManagerToExternalUsers', None), ('User.UserPreferencesShowManagerToGuestUsers', None), ('User.UserPreferencesShowMobilePhoneToExternalUsers', None), ('User.UserPreferencesShowMobilePhoneToGuestUsers', None), ('User.UserPreferencesShowPostalCodeToExternalUsers', None), ('User.UserPreferencesShowPostalCodeToGuestUsers', None), ('User.UserPreferencesShowProfilePicToGuestUsers', None), ('User.UserPreferencesShowStateToExternalUsers', None), ('User.UserPreferencesShowStateToGuestUsers', None), ('User.UserPreferencesShowStreetAddressToExternalUsers', None), ('User.UserPreferencesShowStreetAddressToGuestUsers', None), ('User.UserPreferencesShowTitleToExternalUsers', None), ('User.UserPreferencesShowTitleToGuestUsers', None), ('User.UserPreferencesShowWorkPhoneToExternalUsers', None), ('User.UserPreferencesShowWorkPhoneToGuestUsers', None), ('User.UserPreferencesSortFeedByComment', None), ('User.UserPreferencesSRHOverrideActivities', None), ('User.UserPreferencesSuppressEventSFXReminders', None), ('User.UserPreferencesSuppressTaskSFXReminders', None), ('User.UserPreferencesTaskRemindersCheckboxDefault', None), ('User.UserPreferencesUserDebugModePref', None), ('User.UserRoleId', None), ('User.UserType', None), ('UserAppMenuItem.ApplicationId', None), ('UserAppMenuItem.AppMenuItemId', None), ('UserAppMenuItem.Description', None), ('UserAppMenuItem.IconUrl', None), ('UserAppMenuItem.Id', None), ('UserAppMenuItem.InfoUrl', None), ('UserAppMenuItem.IsUsingAdminAuthorization', None), ('UserAppMenuItem.IsVisible', None), ('UserAppMenuItem.Label', None), ('UserAppMenuItem.LogoUrl', None), ('UserAppMenuItem.MobileStartUrl', None), ('UserAppMenuItem.Name', None), ('UserAppMenuItem.SortOrder', None), ('UserAppMenuItem.StartUrl', None), ('UserAppMenuItem.Type', None), ('UserAppMenuItem.UserSortOrder', None)], blank=True, null=True)
    aggregate_type = models.CharField(max_length=255, choices=[('Sum', 'Sum'), ('Count', 'Count'), ('Avg', 'Average')])
    class Meta(models.Model.Meta):
        db_table = 'ListViewChart'
        verbose_name = 'List View Chart'
        verbose_name_plural = 'List View Charts'
        # keyPrefix = '0Dd'



class ListViewChartInstance(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='ListView Chart Instance ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    list_view_chart = models.ForeignKey(ListViewChart, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='API Name', sf_read_only=models.READ_ONLY)
    source_entity = models.CharField(max_length=255, verbose_name='Entity', sf_read_only=models.READ_ONLY)
    list_view_context = models.ForeignKey(ListView, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    chart_type = models.CharField(max_length=255, verbose_name='TODO, use alias', sf_read_only=models.READ_ONLY, choices=[('vbar', 'Vertical Bar Chart'), ('hbar', 'Horizontal Bar Chart'), ('pie', 'Donut Chart')])
    is_last_viewed = models.BooleanField(verbose_name='Last Viewed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    data_query = models.TextField(verbose_name='SOQL Query for Chart Data', sf_read_only=models.READ_ONLY, blank=True, null=True)
    data_query_without_user_filters = models.TextField(verbose_name='SOQL Query for Desktop Chart Data without S1 User Filters', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_editable = models.BooleanField(verbose_name='Editable', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deletable = models.BooleanField(verbose_name='Deletable', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    grouping_field = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    aggregate_field = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    aggregate_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Sum', 'Sum'), ('Count', 'Count'), ('Avg', 'Average')])
    class Meta(models.Model.Meta):
        db_table = 'ListViewChartInstance'
        verbose_name = 'List View Chart Instance'
        verbose_name_plural = 'List View Chart Instances'
        # keyPrefix = '0De'



class LiveChatBlockingRule(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Chat Blocking Rule Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatblockingrule_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatblockingrule_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    from_ip_address = models.CharField(max_length=39, verbose_name='From IP Address', sf_read_only=models.READ_ONLY)
    to_ip_address = models.CharField(max_length=39, verbose_name='To IP Address', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Admin', 'Admin'), ('Agent', 'Agent')])
    class Meta(models.Model.Meta):
        db_table = 'LiveChatBlockingRule'
        verbose_name = 'Chat Blocking Rule'
        verbose_name_plural = 'Chat Blocking Rules'
        # keyPrefix = '0No'



class LiveChatButton(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatbutton_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatbutton_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    skill = models.ForeignKey('Skill', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    site = models.ForeignKey('Site', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    online_image = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='livechatbutton_onlineimage_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    offline_image = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='livechatbutton_offlineimage_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    chat_page = models.ForeignKey(ApexPage, models.DO_NOTHING, related_name='livechatbutton_chatpage_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    prechat_form_page = models.ForeignKey(ApexPage, models.DO_NOTHING, related_name='livechatbutton_prechatformpage_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    prechat_form_url = models.CharField(max_length=255, verbose_name='Pre-Chat Form URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    postchat_page = models.ForeignKey(ApexPage, models.DO_NOTHING, related_name='livechatbutton_postchatpage_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    postchat_url = models.CharField(max_length=255, verbose_name='Post-Chat URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    routing_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Choice', 'Choice'), ('LeastActive', 'Least Active'), ('MostAvailable', 'Most Available'), ('Omni', 'Omni-Channel Queues')])
    push_timeout = models.IntegerField(verbose_name='Push Time-Out (seconds)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    has_queue = models.BooleanField(verbose_name='Enable Queue', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    per_agent_queue_length = models.IntegerField(verbose_name='Queue Size Per Agent', sf_read_only=models.READ_ONLY, blank=True, null=True)
    overall_queue_length = models.IntegerField(verbose_name='Overall Queue Size', sf_read_only=models.READ_ONLY, blank=True, null=True)
    window_language = models.CharField(max_length=255, verbose_name='Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Standard', 'Chat Button'), ('Invite', 'Automated Invitation')])
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    options_is_invite_auto_remove = models.BooleanField(verbose_name='Auto Remove Invitation', sf_read_only=models.READ_ONLY)
    options_has_invite_after_accept = models.BooleanField(verbose_name='Allow invitation to be triggered again after accepting', sf_read_only=models.READ_ONLY)
    options_has_invite_after_reject = models.BooleanField(verbose_name='Allow invitation to be triggered again after rejecting', sf_read_only=models.READ_ONLY)
    options_has_reroute_declined_request = models.BooleanField(verbose_name='Reroute Declined Requests', sf_read_only=models.READ_ONLY)
    options_is_auto_accept = models.BooleanField(verbose_name='isAutoAccept', sf_read_only=models.READ_ONLY)
    options_has_chasitor_idle_timeout = models.BooleanField(verbose_name='Enable Customer Time-Out', sf_read_only=models.READ_ONLY)
    time_to_remove_invite = models.IntegerField(verbose_name='Display Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    animation = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Slide', 'Slide'), ('Fade', 'Fade'), ('Appear', 'Appear'), ('Custom', 'Custom')], blank=True, null=True)
    invite_start_position = models.CharField(max_length=255, verbose_name='Start Position', sf_read_only=models.READ_ONLY, choices=[('TopLeft', 'Top Left'), ('TopLeftTop', 'Top Left Top'), ('Top', 'Top'), ('TopRightTop', 'Top Right Top'), ('TopRight', 'Top Right'), ('TopRightRight', 'Top Right Right'), ('Right', 'Right Left'), ('BottomRightRight', 'Bottom Right Right'), ('BottomRight', 'Bottom Right'), ('BottomRightBottom', 'Bottom Right Bottom'), ('Bottom', 'Bottom'), ('BottomLeftBottom', 'Bottom Left Bottom'), ('BottomLeft', 'Bottom Left'), ('BottomLeftLeft', 'Bottom Left Left'), ('Left', 'Left'), ('TopLeftLeft', 'Top Left Left')], blank=True, null=True)
    invite_end_position = models.CharField(max_length=255, verbose_name='End Position', sf_read_only=models.READ_ONLY, choices=[('TopLeft', 'Top Left'), ('Top', 'Top'), ('TopRight', 'Top Right'), ('Left', 'Left'), ('Center', 'Center'), ('Right', 'Right'), ('BottomLeft', 'Bottom Left'), ('Bottom', 'Bottom'), ('BottomRight', 'Bottom Right')], blank=True, null=True)
    invite_image = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='livechatbutton_inviteimage_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    auto_greeting = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    custom_agent_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    number_of_rerouting_attempts = models.IntegerField(verbose_name='Number of Rerouting Attempts', sf_read_only=models.READ_ONLY, blank=True, null=True)
    chasitor_idle_timeout = models.IntegerField(verbose_name='Customer Time-Out (seconds)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    chasitor_idle_timeout_warning = models.IntegerField(verbose_name='Customer Time-Out Warning (seconds)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    queue = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    routing_configuration = models.ForeignKey('QueueRoutingConfig', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LiveChatButton'
        verbose_name = 'Chat Button'
        verbose_name_plural = 'Chat Buttons'
        # keyPrefix = '573'



class LiveChatButtonDeployment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatbuttondeployment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatbuttondeployment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    deployment = models.ForeignKey('LiveChatDeployment', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    button = models.ForeignKey(LiveChatButton, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'LiveChatButtonDeployment'
        verbose_name = 'LiveChatButtonDeployment'
        verbose_name_plural = 'LiveChatButtonDeployments'
        # keyPrefix = '0HJ'



class LiveChatButtonSkill(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatbuttonskill_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatbuttonskill_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    skill = models.ForeignKey('Skill', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    button = models.ForeignKey(LiveChatButton, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'LiveChatButtonSkill'
        verbose_name = 'LiveChatButtonSkill'
        verbose_name_plural = 'LiveChatButtonSkills'
        # keyPrefix = '0If'



class LiveChatDeployment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Chat Deployment Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatdeployment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatdeployment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    window_title = models.CharField(max_length=80, verbose_name='Chat Window Title', sf_read_only=models.READ_ONLY)
    has_transcript_save = models.BooleanField(verbose_name='Allow Visitors to Save Transcripts', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    site = models.ForeignKey('Site', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    branding = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='livechatdeployment_branding_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_branding = models.ForeignKey('StaticResource', models.DO_NOTHING, related_name='livechatdeployment_mobilebranding_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    domains = models.TextField(verbose_name='Permitted Domains', sf_read_only=models.READ_ONLY, blank=True, null=True)
    options_has_prechat_api = models.BooleanField(verbose_name='Allow Access to Pre-Chat API', sf_read_only=models.READ_ONLY)
    connection_warning_duration = models.IntegerField(verbose_name='Idle Connection Warning Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    connection_timeout_duration = models.IntegerField(verbose_name='Idle Connection Timeout Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LiveChatDeployment'
        verbose_name = 'Chat Deployment'
        verbose_name_plural = 'Chat Deployments'
        # keyPrefix = '572'



class LiveChatSensitiveDataRule(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Sensitive Data Rule Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatsensitivedatarule_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatsensitivedatarule_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    pattern = models.TextField(verbose_name='Patterns', sf_read_only=models.READ_ONLY)
    replacement = models.CharField(max_length=255, verbose_name='Replacement Text', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_enabled = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    action_type = models.CharField(max_length=255, verbose_name='Action', sf_read_only=models.READ_ONLY, choices=[('Remove', 'Remove'), ('Replace', 'Replace with')])
    enforce_on = models.IntegerField(verbose_name='Enforce', sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    priority = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LiveChatSensitiveDataRule'
        verbose_name = 'Sensitive Data Rule'
        verbose_name_plural = 'Sensitive Data Rules'
        # keyPrefix = '0GO'



class LiveChatUserConfig(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.NOT_UPDATEABLE)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.NOT_UPDATEABLE, default=models.DEFAULTED_ON_CREATE, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Chat Agent Configuration Name', sf_read_only=models.NOT_UPDATEABLE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatuserconfig_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatuserconfig_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    capacity = models.IntegerField(verbose_name='Chat Capacity', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    has_sneak_peek = models.BooleanField(verbose_name='Sneak Peek Enabled', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    has_request_sound = models.BooleanField(verbose_name='Request Sound Enabled', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    has_logout_sound = models.BooleanField(verbose_name='Disconnect Sound Enabled', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    auto_greeting = models.TextField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    has_notifications = models.BooleanField(verbose_name='Notifications Enabled', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    is_auto_away_on_decline = models.BooleanField(verbose_name='Auto Away on Decline', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    critical_wait_time = models.IntegerField(verbose_name='Critical Wait Alert Time (seconds)', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    options_has_chat_monitoring = models.BooleanField(verbose_name='Chat Monitoring Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_whisper_message = models.BooleanField(verbose_name='Whisper Messages Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_agent_sneak_peek = models.BooleanField(verbose_name='Agent Sneak Peek Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_agent_file_transfer = models.BooleanField(verbose_name='Agent File Transfer Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_chat_conferencing = models.BooleanField(verbose_name='Chat Conferencing Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_visitor_blocking = models.BooleanField(verbose_name='Visitor Blocking Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_is_auto_away_on_push_timeout = models.BooleanField(verbose_name='Auto Away on Push Time-Out', sf_read_only=models.NOT_UPDATEABLE)
    options_has_assistance_flag = models.BooleanField(verbose_name='Assistance Flag Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_chat_transfer_to_button = models.BooleanField(verbose_name='Chat Transfer To Chat Buttons Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_chat_transfer_to_agent = models.BooleanField(verbose_name='Chat Transfer To Agents Enabled', sf_read_only=models.NOT_UPDATEABLE)
    options_has_chat_transfer_to_skill = models.BooleanField(verbose_name='Chat Transfer To Skills Enabled', sf_read_only=models.NOT_UPDATEABLE)
    supervisor_default_agent_status = models.CharField(max_length=255, verbose_name='Default Agent Status Filter', sf_read_only=models.NOT_UPDATEABLE, choices=[('Online', 'Online'), ('Away', 'Away'), ('Offline', 'Offline')], blank=True, null=True)
    supervisor_default_skill = models.ForeignKey('Skill', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    supervisor_default_button = models.ForeignKey(LiveChatButton, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    custom_agent_name = models.CharField(max_length=255, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LiveChatUserConfig'
        verbose_name = 'Chat Agent Configuration'
        verbose_name_plural = 'Chat Agent Configurations'
        # keyPrefix = '0C6'



class LiveChatUserConfigProfile(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatuserconfigprofile_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatuserconfigprofile_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    live_chat_user_config = models.ForeignKey(LiveChatUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    profile = models.OneToOneField('Profile', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LiveChatUserConfigProfile'
        verbose_name = 'Chat User Config Profile'
        verbose_name_plural = 'Chat User Config Profiles'
        # keyPrefix = '0CD'



class LiveChatUserConfigUser(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatuserconfiguser_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='livechatuserconfiguser_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    live_chat_user_config = models.ForeignKey(LiveChatUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    user = models.OneToOneField('User', models.DO_NOTHING, related_name='livechatuserconfiguser_user_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LiveChatUserConfigUser'
        verbose_name = 'Chat User Config User'
        verbose_name_plural = 'Chat User Config Users'
        # keyPrefix = '0CB'



class LoginHistory(models.Model):
    user = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    login_time = models.DateTimeField(sf_read_only=models.READ_ONLY)
    login_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    source_ip = models.CharField(max_length=39, verbose_name='Source IP', sf_read_only=models.READ_ONLY, blank=True, null=True)
    login_url = models.CharField(max_length=255, verbose_name='Login URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    authentication_service = models.ForeignKey('SamlSsoConfig', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    tls_protocol = models.CharField(max_length=40, verbose_name='TLS Protocol', sf_read_only=models.READ_ONLY, choices=[('TLS 1.0', 'TLS 1.0'), ('TLS 1.1', 'TLS 1.1'), ('TLS 1.2', 'TLS 1.2'), ('TLS 1.3', 'TLS 1.3'), ('Unknown', 'Unknown')], blank=True, null=True)
    cipher_suite = models.CharField(max_length=40, verbose_name='TLS Cipher Suite', sf_read_only=models.READ_ONLY, choices=[('AES128-GCM-SHA256', 'AES128-GCM-SHA256'), ('AES128-SHA', 'AES128-SHA'), ('AES128-SHA256', 'AES128-SHA256'), ('AES256-GCM-SHA384', 'AES256-GCM-SHA384'), ('AES256-SHA', 'AES256-SHA'), ('AES256-SHA256', 'AES256-SHA256'), ('DES-CBC3-SHA', 'DES-CBC3-SHA'), ('DHE-RSA-AES128-GCM-SHA256', 'DHE-RSA-AES128-GCM-SHA256'), ('DHE-RSA-AES128-SHA', 'DHE-RSA-AES128-SHA'), ('DHE-RSA-AES256-GCM-SHA384', 'DHE-RSA-AES256-GCM-SHA384'), ('DHE-RSA-AES256-SHA', 'DHE-RSA-AES256-SHA'), ('DHE-RSA-DES-CBC3-SHA', 'DHE-RSA-DES-CBC3-SHA'), ('ECDH-ECDSA-AES128-GCM-SHA256', 'ECDH-ECDSA-AES128-GCM-SHA256'), ('ECDH-ECDSA-AES128-SHA256', 'ECDH-ECDSA-AES128-SHA256'), ('ECDH-ECDSA-AES256-GCM-SHA384', 'ECDH-ECDSA-AES256-GCM-SHA384'), ('ECDH-ECDSA-AES256-SHA384', 'ECDH-ECDSA-AES256-SHA384'), ('ECDH-RSA-AES128-GCM-SHA256', 'ECDH-RSA-AES128-GCM-SHA256'), ('ECDH-RSA-AES128-SHA256', 'ECDH-RSA-AES128-SHA256'), ('ECDH-RSA-AES256-GCM-SHA384', 'ECDH-RSA-AES256-GCM-SHA384'), ('ECDH-RSA-AES256-SHA384', 'ECDH-RSA-AES256-SHA384'), ('ECDHE-ECDSA-AES128-GCM-SHA256', 'ECDHE-ECDSA-AES128-GCM-SHA256'), ('ECDHE-ECDSA-AES128-SHA256', 'ECDHE-ECDSA-AES128-SHA256'), ('ECDHE-ECDSA-AES256-GCM-SHA384', 'ECDHE-ECDSA-AES256-GCM-SHA384'), ('ECDHE-ECDSA-AES256-SHA384', 'ECDHE-ECDSA-AES256-SHA384'), ('ECDHE-RSA-AES128-CBC-SHA', 'ECDHE-RSA-AES128-CBC-SHA'), ('ECDHE-RSA-AES128-GCM-SHA256', 'ECDHE-RSA-AES128-GCM-SHA256'), ('ECDHE-RSA-AES128-SHA', 'ECDHE-RSA-AES128-SHA'), ('ECDHE-RSA-AES128-SHA256', 'ECDHE-RSA-AES128-SHA256'), ('ECDHE-RSA-AES256-CBC-SHA', 'ECDHE-RSA-AES256-CBC-SHA'), ('ECDHE-RSA-AES256-GCM-SHA384', 'ECDHE-RSA-AES256-GCM-SHA384'), ('ECDHE-RSA-AES256-SHA', 'ECDHE-RSA-AES256-SHA'), ('ECDHE-RSA-AES256-SHA384', 'ECDHE-RSA-AES256-SHA384'), ('ECDHE-RSA-DES-CBC3-SHA', 'ECDHE-RSA-DES-CBC3-SHA'), ('TLS_AES_128_GCM_SHA256', 'TLS_AES_128_GCM_SHA256'), ('TLS_AES_256_GCM_SHA384', 'TLS_AES_256_GCM_SHA384'), ('TLS_CHACHA20_POLY1305_SHA256', 'TLS_CHACHA20_POLY1305_SHA256'), ('Unknown', 'Unknown')], blank=True, null=True)
    options_is_get = models.BooleanField(verbose_name='Login via GET', sf_read_only=models.READ_ONLY)
    options_is_post = models.BooleanField(verbose_name='Login via POST', sf_read_only=models.READ_ONLY)
    browser = models.CharField(max_length=64, sf_read_only=models.READ_ONLY, blank=True, null=True)
    platform = models.CharField(max_length=64, sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=128, sf_read_only=models.READ_ONLY, blank=True, null=True)
    application = models.CharField(max_length=64, sf_read_only=models.READ_ONLY, blank=True, null=True)
    client_version = models.CharField(max_length=64, sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_type = models.CharField(max_length=64, verbose_name='API Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_version = models.CharField(max_length=32, verbose_name='API Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    country_iso = models.CharField(max_length=3, verbose_name='Country Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LoginHistory'
        verbose_name = 'Login History'
        verbose_name_plural = 'Login History'
        # keyPrefix = '0Ya'



class LoginIp(models.Model):
    users = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    source_ip = models.CharField(max_length=39, verbose_name='Source IP', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_authenticated = models.BooleanField(verbose_name='IsAuthenticated', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    challenge_sent_date = models.DateTimeField(verbose_name='Challenge SentDate', sf_read_only=models.READ_ONLY, blank=True, null=True)
    challenge_method = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Email', None), ('SMS', None), ('TOTP_CHOICE', None), ('TOTP_ONLY', None)], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LoginIp'
        verbose_name = 'Login IP'
        verbose_name_plural = 'Login IP'
        # keyPrefix = '710'



class LookedUpFromActivity(models.Model):
    account = models.ForeignKey(Account, models.DO_NOTHING, related_name='lookedupfromactivity_account_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    what = models.ForeignKey(Account, models.DO_NOTHING, related_name='lookedupfromactivity_what_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Account, ListEmail]
    subject = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, choices=[('After Payroll Solutions', 'After Payroll Solutions'), ('AIQA Re-Audits', 'AIQA Re-Audits'), ('AIQA Times Returned', 'AIQA Times Returned'), ('Audit', 'Audit'), ('Call', 'Call'), ('Carrier Approval', 'Carrier Approval'), ('Client Training', 'Client Training'), ('Missing Item', 'Missing Item'), ('Other', 'Other'), ('Pending Item', 'Pending Item'), ('QA 2nd Audit Review Task', 'QA 2nd Audit Review Task'), ('QA Enrollment Task', 'QA Enrollment Task'), ('QAE Re-Audits', 'QAE Re-Audits'), ('QAE Times Returned', 'QAE Times Returned'), ('QA Task', 'QA Task'), ('Send Letter', 'Send Letter'), ('Send Quote', 'Send Quote'), ('Service Hand-Off', 'Service Hand-Off'), ('Specialized Training', 'Specialized Training')], blank=True, null=True)
    is_task = models.BooleanField(verbose_name='Task', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_date = models.DateField(verbose_name='Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_date_time = models.DateTimeField(verbose_name='Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey(Calendar, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Calendar, User]
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Not Started'), choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Waiting on someone else', 'Waiting on someone else'), ('Deferred', 'Deferred')], blank=True, null=True)
    priority = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Normal'), choices=[('Critical', 'Critical'), ('High', 'High'), ('Normal', 'Normal'), ('Low', 'Low')], blank=True, null=True)
    is_high_priority = models.BooleanField(verbose_name='High Priority', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_type = models.CharField(max_length=40, verbose_name='Type', sf_read_only=models.READ_ONLY, choices=[('A/R Collections', None), ('Activity Log/Issue Carrier/Plan', None), ('Admin Kits', None), ('Agent BMALL Visit', None), ('Agent BMLL Visit', None), ('APS Platform Change', None), ('Audit', None), ('BDM Meeting', None), ('BDM Meeting', None), ('Broker Escalation', None), ('Call', None), ('Call', None), ('Cancellation', None), ('CBRU 90 Day Renewal Call', None), ('Client Visit', None), ('Cold Call', None), ('Cold Call', None), ('Conference Call', None), ('Customer Visit', None), ('Drop Information', None), ('Email', None), ('Email', None), ('Employer Meeting', None), ('Enrollment Kits', None), ('Enrollment Meeting', None), ('Established Partner Meeting', None), ('EUP', None), ('Face to Face', None), ('Fax', None), ('First Meeting', None), ('First Meeting', None), ('Follow-up', None), ('Follow-up', None), ('General Meeting', None), ('General Meeting', None), ('Lunch/Learn', None), ('Open Enrollment Meeting', None), ('Other', None), ('Other', None), ('PartnerFocus', None), ('Partner Visit', None), ('Product Demo', None), ('Proposal Meeting', None), ('Proposal Meeting', None), ('Proposal Review', None), ('Q2E internal training', None), ('Q2E with broker', None), ('Reinstatement', None), ('Renewal Meeting', None), ('Renewal Meeting', None), ('Service Add-on', None), ('Set Up', None), ('SFBP', None), ('System Demo', None), ('System Training', None), ('TalentFocus - Site Support', None), ('TalentFocus - Transfer In from External Support', None), ('TalentFocus - Transfer Out to External Support', None), ('Transmission', None)], blank=True, null=True)
    is_closed = models.BooleanField(verbose_name='Closed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_all_day_event = models.BooleanField(verbose_name='All-Day Event', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_visible_in_self_service = models.BooleanField(verbose_name='Public', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    duration_in_minutes = models.IntegerField(verbose_name='Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    location = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(verbose_name='Comments', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='lookedupfromactivity_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='lookedupfromactivity_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    call_duration_in_seconds = models.IntegerField(verbose_name='Call Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Internal', 'Internal'), ('Inbound', 'Inbound'), ('Outbound', 'Outbound')], blank=True, null=True)
    call_disposition = models.CharField(max_length=255, verbose_name='Call Result', sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_object = models.CharField(max_length=255, verbose_name='Call Object Identifier', sf_read_only=models.READ_ONLY, blank=True, null=True)
    reminder_date_time = models.DateTimeField(verbose_name='Reminder Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_reminder_set = models.BooleanField(verbose_name='Reminder Set', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    end_date_time = models.DateTimeField(verbose_name='End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date_time = models.DateTimeField(verbose_name='Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_subtype = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Task', 'Task'), ('Email', 'Email'), ('ListEmail', 'List Email'), ('Cadence', 'Cadence'), ('Call', 'Call'), ('Event', 'Event')], blank=True, null=True)
    event_outcome = models.CharField(custom=True, db_column='Event_Outcome__c', max_length=255, verbose_name='Event Outcome', sf_read_only=models.READ_ONLY, help_text='Select the value that best describes the outcome of the event.', choices=[('Meeting Completed', 'Meeting Completed'), ('DM No Show', 'DM No Show'), ('Customer Canceled', 'Customer Canceled'), ('Unable to Contact Customer', 'Unable to Contact Customer')], blank=True, null=True)
    activity_type_0 = models.CharField(db_column='Activity_Type__c', custom=True, max_length=255, verbose_name='Activity Type', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Field renamed because of name conflict.
    sma_layer_id = models.CharField(db_column='sma__LayerId__c', custom=True, max_length=255, verbose_name='Layer Id', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_recording_url = models.URLField(db_column='qbdialer__CallRecordingURL__c', custom=True, verbose_name='Call Recording', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_date_time = models.DateTimeField(db_column='qbdialer__Call_Date_Time__c', custom=True, verbose_name='Call Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_dial_number = models.DecimalField(db_column='qbdialer__Call_Dial_Number__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Dial Number', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_hour = models.CharField(db_column='qbdialer__Call_Hour__c', custom=True, max_length=8, verbose_name='Call Hour', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_lead_status = models.CharField(db_column='qbdialer__Call_Lead_Status__c', custom=True, max_length=40, verbose_name='Call Lead Status', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_ring_time = models.DecimalField(db_column='qbdialer__Call_Ring_Time__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Ring Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_time_zone = models.CharField(db_column='qbdialer__Call_Time_Zone__c', custom=True, max_length=20, verbose_name='Call Time Zone', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    isdc_dialed_phone_number = models.CharField(custom=True, db_column='isdc_dialed_phone_number__c', max_length=40, verbose_name='Phone Dialed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    isdc_dialer_call_type = models.CharField(custom=True, db_column='isdc_dialer_call_type__c', max_length=255, verbose_name='Dialer Type', sf_read_only=models.READ_ONLY, choices=[('Click-to-Call', 'Click-to-Call'), ('Seek', 'Seek'), ('Domino', 'Domino')], blank=True, null=True)
    isdc_dialer_list_name = models.CharField(custom=True, db_column='isdc_dialer_list_name__c', max_length=80, verbose_name='List Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    isdc_dialer_query_name = models.CharField(custom=True, db_column='isdc_dialer_query_name__c', max_length=80, verbose_name='Query Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    migration_flag = models.BooleanField(custom=True, db_column='Migration_Flag__c', verbose_name='Migration Flag', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    task_external_id = models.CharField(custom=True, db_column='Task_External_Id__c', max_length=255, verbose_name='Task External Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    event_external_id = models.CharField(custom=True, db_column='Event_External_Id__c', max_length=255, verbose_name='Event External Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    telemarketing_call_type = models.CharField(custom=True, db_column='Telemarketing_Call_Type__c', max_length=255, verbose_name='Telemarketing Call Type', sf_read_only=models.READ_ONLY, choices=[('Contact', 'Contact'), ('Decision Maker', 'Decision Maker'), ('Disconnected Number', 'Disconnected Number'), ('No Answer', 'No Answer'), ('Set Call Back', 'Set Call Back'), ('Set Event', 'Set Event'), ('Voicemail No Message', 'Voicemail No Message'), ('Wrong Number', 'Wrong Number')], blank=True, null=True)
    audit_error_reason = models.CharField(custom=True, db_column='Audit_Error_Reason__c', max_length=255, verbose_name='Audit Error Reason', sf_read_only=models.READ_ONLY, choices=[('Address Truncated in IBAS', 'Address Truncated in IBAS'), ('Age Change Basis Incorrect', 'Age Change Basis Incorrect'), ('Ancillary', 'Ancillary'), ('App Not Signed', 'App Not Signed'), ('Benefit Amounts - Not added or Incorrect', 'Benefit Amounts - Not added or Incorrect'), ('Benefit Error', 'Benefit Error'), ('BMLL Box Not Checked', 'BMLL Box Not Checked'), ('Carrier Group Number Incorrect', 'Carrier Group Number Incorrect'), ('Carrier Incorrect Case Setup', 'Carrier Incorrect Case Setup'), ('City Incorrect', 'City Incorrect'), ('COB Not Updated', 'COB Not Updated'), ('Cobra Error', 'Cobra Error'), ('Cobra Med Codes', 'Cobra Med Codes'), ('Contact Phone Number Incorrect', 'Contact Phone Number Incorrect'), ('Contract Date/Period Incorrect or Not Updated', 'Contract Date/Period Incorrect or Not Updated'), ('Coverage Code Incorrect', 'Coverage Code Incorrect'), ('Coverage Code Missing', 'Coverage Code Missing'), ('Coverage Codes Not Termed', 'Coverage Codes Not Termed'), ('Coverage Level Incorrect', 'Coverage Level Incorrect'), ('CT # of Apps Field Not Updated or Incorrect', 'CT # of Apps Field Not Updated or Incorrect'), ('CT Date Sent to Audit Field Not Updated', 'CT Date Sent to Audit Field Not Updated'), ('CT Record Not Updated', 'CT Record Not Updated'), ('Date of Birth Incorrect', 'Date of Birth Incorrect'), ('Date of Hire Incorrect', 'Date of Hire Incorrect'), ('Dependent Date of Birth Incorrect', 'Dependent Date of Birth Incorrect'), ('Dependent Enrolled without Student Cert', 'Dependent Enrolled without Student Cert'), ('Dependent Name Misspelled', 'Dependent Name Misspelled'), ('Dependent Not Enrolled or Not Termed', 'Dependent Not Enrolled or Not Termed'), ('Dependent Not Entered', 'Dependent Not Entered'), ('Dependent SSN Incorrect', 'Dependent SSN Incorrect'), ('Domestic Partner Not Updated', 'Domestic Partner Not Updated'), ('Dual Coverage Not Updated', 'Dual Coverage Not Updated'), ('Effective Date Incorrect', 'Effective Date Incorrect'), ('Eligibility Period Incorrect', 'Eligibility Period Incorrect'), ('Employee Not Enrolled', 'Employee Not Enrolled'), ('ER Contributions', 'ER Contributions'), ('Error Removed', 'Error Removed'), ('Gender Incorrect', 'Gender Incorrect'), ('Group Address Not Updated or Incorrect', 'Group Address Not Updated or Incorrect'), ('Group Contact Incorrect', 'Group Contact Incorrect'), ('Group Size Incorrect', 'Group Size Incorrect'), ('HB1057 Box Not Checked', 'HB1057 Box Not Checked'), ('Home Phone Incorrect', 'Home Phone Incorrect'), ('Incorrect Broker Information', 'Incorrect Broker Information'), ('Incorrect Carrier Code', 'Incorrect Carrier Code'), ('Incorrect Class or Class Missing', 'Incorrect Class or Class Missing'), ('Incorrect HB8', 'Incorrect HB8'), ('Incorrect Or Missing Beneficiary', 'Incorrect Or Missing Beneficiary'), ('Incorrect or Misspelled Group Name', 'Incorrect or Misspelled Group Name'), ('Incorrect PCP Code Used', 'Incorrect PCP Code Used'), ('Incorrect PDF Number', 'Incorrect PDF Number'), ('Incorrect Plan', 'Incorrect Plan'), ('Incorrect Rate', 'Incorrect Rate'), ('Incorrect Tax ID Number', 'Incorrect Tax ID Number'), ('Incorrect Team', 'Incorrect Team'), ('Mapping Not Processed/Incorrect', 'Mapping Not Processed/Incorrect'), ('Member Name Misspelled', 'Member Name Misspelled'), ('Miscellaneous', 'Miscellaneous'), ('Missing Middle Initial', 'Missing Middle Initial'), ('Missing Student Cert Not Requested', 'Missing Student Cert Not Requested'), ('NCA Class Codes Incorrect or Missing', 'NCA Class Codes Incorrect or Missing'), ('Not Verified', 'Not Verified'), ('OFE O/E Not Updated', 'OFE O/E Not Updated'), ('Original Effective Date Not Updated or Incorrect', 'Original Effective Date Not Updated or Incorrect'), ('Overage Dependent Age Incorrect', 'Overage Dependent Age Incorrect'), ('Parallel Non-Parallel Incorrect', 'Parallel Non-Parallel Incorrect'), ('Part Time Eligibility Incorrect or Not Updated', 'Part Time Eligibility Incorrect or Not Updated'), ('PCP Error', 'PCP Error'), ('Plan Not Setup', 'Plan Not Setup'), ('Plan Not Termed', 'Plan Not Termed'), ('Rate(s) Not Termed', 'Rate(s) Not Termed'), ('Rate(s) Termed in Error', 'Rate(s) Termed in Error'), ('Rate Error', 'Rate Error'), ('Request Not Processed', 'Request Not Processed'), ('Retro Date Incorrect', 'Retro Date Incorrect'), ('Salary Incorrect', 'Salary Incorrect'), ('SSN Incorrect', 'SSN Incorrect'), ('State Incorrect', 'State Incorrect'), ('Street Address Incorrect or Misspelled', 'Street Address Incorrect or Misspelled'), ('Student Cert Status Incorrect or Not Updated', 'Student Cert Status Incorrect or Not Updated'), ('Supporting Documentation-Missing Info', 'Supporting Documentation-Missing Info'), ('System Error', 'System Error'), ('Termination Date Incorrect', 'Termination Date Incorrect'), ('Title Missing from Name', 'Title Missing from Name'), ('Transmission/Upload Issue', 'Transmission/Upload Issue'), ('Transmit to Carrier Missed', 'Transmit to Carrier Missed'), ('Wrong CT Record Updated', 'Wrong CT Record Updated'), ('Zip Code Incorrect', 'Zip Code Incorrect')], blank=True, null=True)
    audit_type = models.CharField(custom=True, db_column='Audit_Type__c', max_length=255, verbose_name='Audit Type', sf_read_only=models.READ_ONLY, choices=[('FYI', 'FYI'), ('Error', 'Error'), ('Group level error', 'Group level error'), ('Enrollment error', 'Enrollment error')], blank=True, null=True)
    closed_date = models.DateTimeField(custom=True, db_column='Closed_Date__c', verbose_name='Closed Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    epic_activity_code = models.CharField(custom=True, db_column='EPIC_Activity_Code__c', max_length=10, verbose_name='EPIC Activity Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    epic_activity_id = models.DecimalField(custom=True, db_column='EPIC_Activity_Id__c', max_digits=18, decimal_places=0, verbose_name='EPIC Activity Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    entered_by = models.CharField(custom=True, db_column='Entered_By__c', max_length=255, verbose_name='Entered By', sf_read_only=models.READ_ONLY, blank=True, null=True)
    entered_date = models.DateTimeField(custom=True, db_column='Entered_Date__c', verbose_name='Entered Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    updated_date = models.DateTimeField(custom=True, db_column='Updated_Date__c', verbose_name='Updated Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    audience = models.CharField(custom=True, max_length=255, sf_read_only=models.READ_ONLY, choices=[('Group', 'Group'), ('Broker', 'Broker'), ('Partner', 'Partner'), ('CPA', 'CPA'), ('Bank', 'Bank')], blank=True, null=True)
    number_of_attendees = models.DecimalField(custom=True, db_column='Number_of_Attendees__c', max_digits=18, decimal_places=0, verbose_name='Number of Attendees', sf_read_only=models.READ_ONLY, blank=True, null=True)
    products_discussed = models.CharField(custom=True, db_column='Products_Discussed__c', max_length=4099, verbose_name='Products Discussed', sf_read_only=models.READ_ONLY, choices=[('EmployerFocus', 'EmployerFocus'), ('Benefits', 'Benefits'), ('Payroll', 'Payroll'), ('APS', 'APS'), ('Integrated', 'Integrated'), ('ACA', 'ACA')], blank=True, null=True)
    call_back_date = models.DateField(custom=True, db_column='Call_Back_Date__c', verbose_name='Call Back Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    qbdialer_callback_date_time = models.DateTimeField(db_column='qbdialer__Callback_Date_Time__c', custom=True, verbose_name='Callback Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_impression_id = models.DecimalField(db_column='qbdialer__ImpressionId__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Impression ID', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_smsreminder = models.BooleanField(db_column='qbdialer__SMSReminder__c', custom=True, verbose_name='Send text msg reminder to all attendees', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False), help_text='Text message reminders will be sent to all attendees at the set reminder time.') 
    market_benefit = models.CharField(custom=True, db_column='Market_Benefit__c', max_length=1300, verbose_name='Market (Benefit)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'LookedUpFromActivity'
        verbose_name = 'Lookups from Activity'
        verbose_name_plural = 'Lookups from Activities'
        # keyPrefix = 'None'



class MailmergeTemplate(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    filename = models.CharField(max_length=255, verbose_name='File', sf_read_only=models.READ_ONLY)
    body_length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY)
    last_used_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mailmergetemplate_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mailmergetemplate_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    security_options_attachment_scanned_for_xss = models.BooleanField(db_column='SecurityOptionsAttachmentScannedForXSS', verbose_name='Attachment has been scanned for XSS', sf_read_only=models.READ_ONLY)
    security_options_attachment_has_xssthreat = models.BooleanField(db_column='SecurityOptionsAttachmentHasXSSThreat', verbose_name='XSS threat was detected in the attachment', sf_read_only=models.READ_ONLY)
    security_options_attachment_scannedfor_flash = models.BooleanField(verbose_name='Attachment has been scanned for Flash Injection', sf_read_only=models.READ_ONLY)
    security_options_attachment_has_flash = models.BooleanField(verbose_name='Flash Injection was detected in the attachment', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'MailmergeTemplate'
        verbose_name = 'Mail Merge Template'
        verbose_name_plural = 'Mail Merge Template'
        # keyPrefix = '01H'



class MatchingInformation(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='matchinginformation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='matchinginformation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    email_address = models.EmailField(blank=True, null=True)
    external_id = models.CharField(max_length=255, blank=True, null=True)
    is_picked_as_preferred = models.BooleanField(verbose_name='Preferred', default=models.DefaultedOnCreate(False))
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='matchinginformation_user_set', blank=True, null=True)  # Master Detail Relationship *
    preference_used = models.CharField(max_length=255, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'MatchingInformation'
        verbose_name = 'Matching Information'
        verbose_name_plural = 'Matching Information'
        # keyPrefix = '0Ib'



class MatchingRule(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sobject_type = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account', None)])
    developer_name = models.CharField(max_length=80, verbose_name='Unique Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Rule Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='matchingrule_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='matchingrule_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    match_engine = models.CharField(max_length=255, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('ExactMatchEngine', 'Exact Match Engine'), ('FuzzyMatchEngine', 'Fuzzy Match Engine')], blank=True, null=True)
    boolean_filter = models.CharField(max_length=255, verbose_name='Advanced Logic', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    rule_status = models.CharField(max_length=255, verbose_name='Status', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Inactive'), choices=[('Inactive', 'Inactive'), ('DeactivationFailed', 'Deactivation Failed'), ('Activating', 'Activating'), ('Deactivating', 'Deactivating'), ('Active', 'Active'), ('ActivationFailed', 'Activation Failed')])
    sobject_subtype = models.CharField(max_length=255, verbose_name='Object Subtype', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('None'), choices=[('None', 'None'), ('PersonAccount', 'Person Account')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'MatchingRule'
        verbose_name = 'Matching Rule'
        verbose_name_plural = 'Matching Rules'
        # keyPrefix = '0JD'



class MatchingRuleItem(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='matchingruleitem_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='matchingruleitem_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    matching_rule = models.ForeignKey(MatchingRule, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY)
    field = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Account_Classification', None), ('Accountant', None), ('Accounting_ID', None), ('AccountNumber', None), ('AccountSource', None), ('Affiliation_Type', None), ('AFocus_CRQS_CRC_ID', None), ('AFocus_Lead_Record_Type', None), ('AFocus_Lead_Source', None), ('Afocus_Office_Id', None), ('Agency_Rank_BoB_in_State', None), ('Agent_Rank', None), ('AMS_ID', None), ('ASD_Attrition_Reason', None), ('ASD_Service_Team', None), ('ASD_Split', None), ('ASD_Type', None), ('Assistant_phone', None), ('Associated_Agents', None), ('Attrition_Other_Reason', None), ('Attrition_Reason', None), ('AutorabitExtId', None), ('Back_Office_Partner_Code', None), ('Bank', None), ('Bankruptcy', None), ('BenAdmin_Subscription_s', None), ('BenAdmin_System', None), ('BenAdmin_Tier', None), ('BenefitPointID', None), ('Benefits_Carrier', None), ('Billing', None), ('Billing_Contact', None), ('Billing_Contact_Email', None), ('Billing_Contact_Phone', None), ('Billing_Type', None), ('BillingAddress', None), ('BillingCity', None), ('BillingCountry', None), ('BillingCountryCode', None), ('BillingPostalCode', None), ('BillingState', None), ('BillingStateCode', None), ('BillingStreet', None), ('BIP_Mkt', None), ('BIP_Name', None), ('BIP_Status', None), ('BMAS_ID', None), ('BP_ID', None), ('BP_Integration_Status', None), ('Branch', None), ('Broker', None), ('Broker_Class', None), ('Broker_Commission_Email', None), ('Broker_ID', None), ('Broker_Partnership_Level', None), ('Broker_Payroll_Referral_Program', None), ('Broker_Referral_Program', None), ('Broker_Workspace_Username', None), ('Broker2', None), ('BSE_Email', None), ('BSE_First_Name', None), ('BSE_Last_Name', None), ('BSE_Phone', None), ('BSE_UserId', None), ('BSR_Email', None), ('BSR_First_Name', None), ('BSR_Last_Name', None), ('BSR_Phone', None), ('BSR_UserId', None), ('Bundle', None), ('Business_Focus', None), ('Business_Segment', None), ('Business_Segment_old', None), ('Business_Type', None), ('BWS_Principle_Agent_Agency', None), ('Carrier_Code', None), ('Carrier_Contact_Name', None), ('Carrier_Email', None), ('Carrier_Notes', None), ('Carrier_Phone', None), ('Carrier_Preferences', None), ('Carrier_Rating', None), ('Carrier_Rating_Classification', None), ('Carrier_Rating_Company_Name', None), ('Carrier_Rating_Description', None), ('Carrier_Status', None), ('Cascading_Updates', None), ('Cascading_Updates_New', None), ('Client_Code', None), ('Client_Contact_Title', None), ('Client_ID', None), ('Client_Volume', None), ('CloseScore', None), ('Commission_Rate_Dollar_Amt', None), ('Complexity_Indicator', None), ('Consolidate', None), ('Contact_Email', None), ('Contact_First_Name', None), ('Contact_Last_Name', None), ('Contact_Phone', None), ('Contact_UserId', None), ('Contract_Limitations', None), ('Contract_Number', None), ('Contract_Status', None), ('Contracted_Pricing_Schedule', None), ('Contracted_State', None), ('Convert_Record_Type', None), ('Corporate_City', None), ('Corporate_Name', None), ('Corporate_State_Province', None), ('Corporate_Street', None), ('Corporate_Zip_Postal_Code', None), ('County', None), ('Coverage', None), ('Cross_Sell_Account', None), ('CS_Team', None), ('Current_HR_System', None), ('Current_Payroll_Provider', None), ('Current_Time_System', None), ('Data_com_NAICS', None), ('Data_com_NAICS_Description', None), ('Data_com_SIC_c', None), ('Data_com_SIC_Description', None), ('DBA', None), ('Department', None), ('Deprecated_SSN', None), ('Dials', None), ('Direct_Deposit_ACH_Term', None), ('DM_Engagement_Status', None), ('DNS_Trigger', None), ('DUNS_Number', None), ('EE_w_deductions', None), ('EIN', None), ('Email', None), ('Enterprise', None), ('Entitlement_Program', None), ('Exchange', None), ('Extension', None), ('Fax', None), ('FFM', None), ('File_Thru_Date', None), ('Financial_Stress_Score_Percentile', None), ('First_Name', None), ('First_Payroll_of_Transactions', None), ('Frequency_of_Payroll', None), ('GA_or_Fee', None), ('General_Communication_Preference', None), ('Home_phone', None), ('IBAS_Division_ID', None), ('IBAS_ID', None), ('Implementation_Fee', None), ('Inactive_Status_Reason', None), ('Industry', None), ('Integrated_Account', None), ('Jigsaw', None), ('Last_Name', None), ('LastSentToBPTime', None), ('Lead_Agency', None), ('Lead_Referral_ID', None), ('Legacy_ID', None), ('Lines_of_Coverage', None), ('Local_Code', None), ('Location', None), ('Loss_Notes', None), ('Loss_Reason', None), ('Mailing_City', None), ('Mailing_Country', None), ('Mailing_Postal_Code', None), ('Mailing_State_Province', None), ('Mailing_Street', None), ('Market_Benefit', None), ('Market_Director_Email', None), ('Market_Director_First_Name', None), ('Market_Director_Last_Name', None), ('Market_Director_or_Admin_BPID', None), ('Market_Director_Phone', None), ('Market_Director_UserId', None), ('Market_Segment', None), ('Maximum_Discount_Allowable', None), ('Medicare_Number', None), ('Middle_Name', None), ('Mobile', None), ('NAICS_Code', None), ('NAICS_Description', None), ('Name', None), ('National_Code', None), ('National_Producer', None), ('New_Existing_Broker', None), ('New_Existing_Client', None), ('New_Method', None), ('New_Provider', None), ('NoofAttachment', None), ('NoofFiles', None), ('NPN', None), ('NSF_Count', None), ('Number_of_FT_Employees', None), ('Number_Of_Full_Time_Equivalents', None), ('Number_of_Lives', None), ('NumberOfEmployees', None), ('NumberofLocations', None), ('Office', None), ('Office_Benefit', None), ('Officer', None), ('Old_Client_Number', None), ('Old_Data_Location', None), ('Old_PID', None), ('Old_Service_Location', None), ('Old_Service_Rep', None), ('Old_Source_System', None), ('OSP_Comments', None), ('Other_New_Method', None), ('Other_New_Provider', None), ('Other_Phone', None), ('Outsourced_Partner', None), ('Ownership', None), ('PAM_CPO_Partner_Code', None), ('Parent', None), ('Partner_Category', None), ('Partner_CoBranding', None), ('Partner_Code', None), ('Partner_Type', None), ('Paydex_Score', None), ('Payment_Schedule', None), ('Payroll_Specialist', None), ('Payroll_URL', None), ('Phone', None), ('PlatformIntegrationID', None), ('Preferred_Marketing_Method', None), ('Preferred_Name', None), ('Preferred_Quote_Delivery_Method', None), ('Premium', None), ('Previous_Provider', None), ('Primary_BSE_BPID', None), ('Primary_BSR_BPID', None), ('Primary_Contact_BPID', None), ('Primary_Partner', None), ('Primary_Partner_Type', None), ('Primary_State_of_Residence', None), ('Print_Location', None), ('Prior_Platform_Id', None), ('Processing_Discount', None), ('Processing_Type', None), ('Product_of_Interest', None), ('Promotions', None), ('PS_Service_0', None), ('PS_Service_1', None), ('PS_Service_2', None), ('PS_Service_3', None), ('PS_Service_4', None), ('PS_Service_5', None), ('PS_Service_6', None), ('PS_Service_7', None), ('PS_Service_8', None), ('PS_Service_9', None), ('PS_Ship_To_Address_0', None), ('PS_Ship_To_Address_1', None), ('PS_Ship_To_Address_2', None), ('PS_Ship_To_Address_3', None), ('PS_Ship_To_Address_4', None), ('PS_Ship_To_Address_5', None), ('PS_Ship_To_Address_6', None), ('PS_Ship_To_Address_7', None), ('PS_Ship_To_Address_8', None), ('PS_Ship_To_Address_9', None), ('PS_Ship_To_Attention_0', None), ('PS_Ship_To_Attention_1', None), ('PS_Ship_To_Attention_2', None), ('PS_Ship_To_Attention_3', None), ('PS_Ship_To_Attention_4', None), ('PS_Ship_To_Attention_5', None), ('PS_Ship_To_Attention_6', None), ('PS_Ship_To_Attention_7', None), ('PS_Ship_To_Attention_8', None), ('PS_Ship_To_Attention_9', None), ('PS_Tracking_Number_0', None), ('PS_Tracking_Number_1', None), ('PS_Tracking_Number_2', None), ('PS_Tracking_Number_3', None), ('PS_Tracking_Number_4', None), ('PS_Tracking_Number_5', None), ('PS_Tracking_Number_6', None), ('PS_Tracking_Number_7', None), ('PS_Tracking_Number_8', None), ('PS_Tracking_Number_9', None), ('QuotIT_Broker_ID', None), ('Rating', None), ('Referral_NPS', None), ('Referrer_Email', None), ('Referrer_ID', None), ('Referrer_Name', None), ('Referrer_Other', None), ('Referrer_Phone', None), ('Region', None), ('Region_Benefit', None), ('Related_Contact_Dials', None), ('Requested_Level_of_Access', None), ('ResponseTime', None), ('Retail_Broker', None), ('Revenue_Share_Percentage', None), ('Schedule_Day', None), ('Secondary_Partner', None), ('Secondary_Partner_Type', None), ('Security_Line_of_Business', None), ('Selling_Line_of_Business', None), ('Selling_Status', None), ('Service_Location', None), ('Service_NPS', None), ('Services_with_Vendor', None), ('SFI_ID', None), ('ShippingAddress', None), ('ShippingCity', None), ('ShippingCountry', None), ('ShippingCountryCode', None), ('ShippingPostalCode', None), ('ShippingState', None), ('ShippingStateCode', None), ('ShippingStreet', None), ('Sic', None), ('SicDesc', None), ('Site', None), ('SLASerialNumber', None), ('Source_Service_Rep', None), ('Source_System', None), ('SSN_Search', None), ('Status', None), ('Strategic_Alliance', None), ('Tax_Type', None), ('Telemarketer', None), ('Telemarketing_Disposition', None), ('Text_Notification_Mobile', None), ('TextName', None), ('TickerSymbol', None), ('Total_Cases_Sold', None), ('Total_Employees_on_Payroll', None), ('TPA_Notification_Email', None), ('Tracking_Number_s', None), ('Type', None), ('Union_Affliation', None), ('Vesting', None), ('WC_Carrier', None), ('Website', None), ('WL_YTD_for_Agency_s_Agents', None), ('WL_YTD_for_Agent_Agency', None), ('Work_phone', None), ('XP_PP_Corp_ID_Range', None), ('XP_PP_Partner_Code', None), ('ZChangeOrigin', None)], blank=True, null=True)
    matching_method = models.CharField(max_length=255, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Exact', 'Exact'), ('FirstName', 'Fuzzy: First Name'), ('LastName', 'Fuzzy: Last Name'), ('CompanyName', 'Fuzzy: Company Name'), ('Phone', 'Fuzzy: Phone'), ('City', 'Fuzzy: City'), ('Street', 'Fuzzy: Street'), ('Zip', 'Fuzzy: ZIP'), ('Title', 'Fuzzy: Title')], blank=True, null=True)
    blank_value_behavior = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('MatchBlanks'), choices=[('MatchBlanks', 'Match When Both Blank'), ('NullNotAllowed', 'Does Not Match If Null')])
    class Meta(models.Model.Meta):
        db_table = 'MatchingRuleItem'
        verbose_name = 'Matching Rule Item'
        verbose_name_plural = 'Matching Rule Items'
        # keyPrefix = '0JE'



class MilestoneType(models.Model):
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('none', 'No Recurrence'), ('recursIndependently', 'Independent'), ('recursChained', 'Sequential')], blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='milestonetype_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='milestonetype_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'MilestoneType'
        verbose_name = 'Milestone'
        verbose_name_plural = 'Milestones'
        # keyPrefix = '557'



class MobileApplicationDetail(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mobileapplicationdetail_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mobileapplicationdetail_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    version = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    device_platform = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('ios', 'iOS'), ('android', 'Android')])
    minimum_os_version = models.CharField(max_length=255, verbose_name='Minimum OS Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    device_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('phone', 'Phone'), ('tablet', 'Tablet'), ('minitablet', 'Mini-Tablet')], blank=True, null=True)
    application_file_length = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    application_icon = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_enterprise_app = models.BooleanField(verbose_name='Enterprise Application', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    app_install_url = models.URLField(verbose_name='Installation URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    application_bundle_identifier = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    application_binary_file_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    application_icon_file_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    application_binary = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'MobileApplicationDetail'
        verbose_name = 'Mobile Application Detail'
        verbose_name_plural = 'Mobile Application Details'
        # keyPrefix = '0IW'



class MutingPermissionSet(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Muting Permission Set Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Muting Permission Set Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mutingpermissionset_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mutingpermissionset_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    permissions_email_single = models.BooleanField(verbose_name='Send Email', sf_read_only=models.READ_ONLY)
    permissions_email_mass = models.BooleanField(verbose_name='Mass Email', sf_read_only=models.READ_ONLY)
    permissions_edit_task = models.BooleanField(verbose_name='Edit Tasks', sf_read_only=models.READ_ONLY)
    permissions_edit_event = models.BooleanField(verbose_name='Edit Events', sf_read_only=models.READ_ONLY)
    permissions_export_report = models.BooleanField(verbose_name='Export Reports', sf_read_only=models.READ_ONLY)
    permissions_import_personal = models.BooleanField(verbose_name='Import Personal Contacts', sf_read_only=models.READ_ONLY)
    permissions_data_export = models.BooleanField(verbose_name='Weekly Data Export', sf_read_only=models.READ_ONLY)
    permissions_manage_users = models.BooleanField(verbose_name='Manage Users', sf_read_only=models.READ_ONLY)
    permissions_edit_public_filters = models.BooleanField(verbose_name='Manage Public List Views', sf_read_only=models.READ_ONLY)
    permissions_edit_public_templates = models.BooleanField(verbose_name='Manage Public Classic Email Templates', sf_read_only=models.READ_ONLY)
    permissions_modify_all_data = models.BooleanField(verbose_name='Modify All Data', sf_read_only=models.READ_ONLY)
    permissions_manage_cases = models.BooleanField(verbose_name='Manage Cases', sf_read_only=models.READ_ONLY)
    permissions_mass_inline_edit = models.BooleanField(verbose_name='Mass Edits from Lists', sf_read_only=models.READ_ONLY)
    permissions_edit_knowledge = models.BooleanField(verbose_name='Manage Articles', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge = models.BooleanField(verbose_name='Manage Salesforce Knowledge', sf_read_only=models.READ_ONLY)
    permissions_manage_solutions = models.BooleanField(verbose_name='Manage Published Solutions', sf_read_only=models.READ_ONLY)
    permissions_customize_application = models.BooleanField(verbose_name='Customize Application', sf_read_only=models.READ_ONLY)
    permissions_edit_readonly_fields = models.BooleanField(verbose_name='Edit Read Only Fields', sf_read_only=models.READ_ONLY)
    permissions_run_reports = models.BooleanField(verbose_name='Run Reports', sf_read_only=models.READ_ONLY)
    permissions_view_setup = models.BooleanField(verbose_name='View Setup and Configuration', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_entity = models.BooleanField(verbose_name='Transfer Record', sf_read_only=models.READ_ONLY)
    permissions_new_report_builder = models.BooleanField(verbose_name='Report Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_css_users = models.BooleanField(verbose_name='Manage Customer Users', sf_read_only=models.READ_ONLY)
    permissions_activate_contract = models.BooleanField(verbose_name='Activate Contracts', sf_read_only=models.READ_ONLY)
    permissions_import_leads = models.BooleanField(verbose_name='Import Leads', sf_read_only=models.READ_ONLY)
    permissions_manage_leads = models.BooleanField(verbose_name='Manage Leads', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_lead = models.BooleanField(verbose_name='Transfer Leads', sf_read_only=models.READ_ONLY)
    permissions_view_all_data = models.BooleanField(verbose_name='View All Data', sf_read_only=models.READ_ONLY)
    permissions_edit_public_documents = models.BooleanField(verbose_name='Manage Public Documents', sf_read_only=models.READ_ONLY)
    permissions_view_encrypted_data = models.BooleanField(verbose_name='View Encrypted Data', sf_read_only=models.READ_ONLY)
    permissions_edit_brand_templates = models.BooleanField(verbose_name='Manage Letterheads', sf_read_only=models.READ_ONLY)
    permissions_edit_html_templates = models.BooleanField(verbose_name='Edit HTML Templates', sf_read_only=models.READ_ONLY)
    permissions_chatter_internal_user = models.BooleanField(verbose_name='Chatter Internal User', sf_read_only=models.READ_ONLY)
    permissions_manage_encryption_keys = models.BooleanField(verbose_name='Manage Encryption Keys', sf_read_only=models.READ_ONLY)
    permissions_delete_activated_contract = models.BooleanField(verbose_name='Delete Activated Contracts', sf_read_only=models.READ_ONLY)
    permissions_chatter_invite_external_users = models.BooleanField(verbose_name='Invite Customers To Chatter', sf_read_only=models.READ_ONLY)
    permissions_send_sit_requests = models.BooleanField(verbose_name='Send Stay-in-Touch Requests', sf_read_only=models.READ_ONLY)
    permissions_override_forecasts = models.BooleanField(verbose_name='Override Forecasts', sf_read_only=models.READ_ONLY)
    permissions_view_all_forecasts = models.BooleanField(verbose_name='View All Forecasts', sf_read_only=models.READ_ONLY)
    permissions_api_user_only = models.BooleanField(verbose_name='Api Only User', sf_read_only=models.READ_ONLY)
    permissions_manage_remote_access = models.BooleanField(verbose_name='Manage Connected Apps', sf_read_only=models.READ_ONLY)
    permissions_can_use_new_dashboard_builder = models.BooleanField(verbose_name='Drag-and-Drop Dashboard Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_categories = models.BooleanField(verbose_name='Manage Categories', sf_read_only=models.READ_ONLY)
    permissions_convert_leads = models.BooleanField(verbose_name='Convert Leads', sf_read_only=models.READ_ONLY)
    permissions_password_never_expires = models.BooleanField(verbose_name='Password Never Expires', sf_read_only=models.READ_ONLY)
    permissions_use_team_reassign_wizards = models.BooleanField(verbose_name='Use Team Reassignment Wizards', sf_read_only=models.READ_ONLY)
    permissions_install_packaging = models.BooleanField(verbose_name='Download AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_publish_packaging = models.BooleanField(verbose_name='Upload AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_partners = models.BooleanField(verbose_name='Manage External Users', sf_read_only=models.READ_ONLY)
    permissions_chatter_own_groups = models.BooleanField(verbose_name='Create and Own New Chatter Groups', sf_read_only=models.READ_ONLY)
    permissions_edit_opp_line_item_unit_price = models.BooleanField(verbose_name='Edit Opportunity Product Sales Price', sf_read_only=models.READ_ONLY)
    permissions_create_packaging = models.BooleanField(verbose_name='Create AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_bulk_api_hard_delete = models.BooleanField(verbose_name='Bulk API Hard Delete', sf_read_only=models.READ_ONLY)
    permissions_inbound_migration_tools_user = models.BooleanField(verbose_name='Deploy Change Sets', sf_read_only=models.READ_ONLY)
    permissions_solution_import = models.BooleanField(verbose_name='Import Solutions', sf_read_only=models.READ_ONLY)
    permissions_manage_call_centers = models.BooleanField(verbose_name='Manage Call Centers', sf_read_only=models.READ_ONLY)
    permissions_portal_super_user = models.BooleanField(verbose_name='Portal Super User', sf_read_only=models.READ_ONLY)
    permissions_manage_synonyms = models.BooleanField(verbose_name='Manage Synonyms', sf_read_only=models.READ_ONLY)
    permissions_outbound_migration_tools_user = models.BooleanField(verbose_name='Create and Upload Change Sets', sf_read_only=models.READ_ONLY)
    permissions_delegated_portal_user_admin = models.BooleanField(verbose_name='Delegated External User Administrator', sf_read_only=models.READ_ONLY)
    permissions_view_content = models.BooleanField(verbose_name='View Content in Portals', sf_read_only=models.READ_ONLY)
    permissions_manage_email_client_config = models.BooleanField(verbose_name='Manage Email Client Configurations', sf_read_only=models.READ_ONLY)
    permissions_enable_notifications = models.BooleanField(verbose_name='Send Outbound Messages', sf_read_only=models.READ_ONLY)
    permissions_is_sso_enabled = models.BooleanField(verbose_name='Is Single Sign-On Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_data_integrations = models.BooleanField(verbose_name='Manage Data Integrations', sf_read_only=models.READ_ONLY)
    permissions_distribute_from_pers_wksp = models.BooleanField(verbose_name='Create Content Deliveries', sf_read_only=models.READ_ONLY)
    permissions_view_data_categories = models.BooleanField(verbose_name='View Data Categories in Setup', sf_read_only=models.READ_ONLY)
    permissions_manage_data_categories = models.BooleanField(verbose_name='Manage Data Categories', sf_read_only=models.READ_ONLY)
    permissions_author_apex = models.BooleanField(verbose_name='Author Apex', sf_read_only=models.READ_ONLY)
    permissions_manage_mobile = models.BooleanField(verbose_name='Manage Mobile Configurations', sf_read_only=models.READ_ONLY)
    permissions_api_enabled = models.BooleanField(verbose_name='API Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_report_types = models.BooleanField(verbose_name='Manage Custom Report Types', sf_read_only=models.READ_ONLY)
    permissions_edit_case_comments = models.BooleanField(verbose_name='Edit Case Comments', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_case = models.BooleanField(verbose_name='Transfer Cases', sf_read_only=models.READ_ONLY)
    permissions_content_administrator = models.BooleanField(verbose_name='Manage Salesforce CRM Content', sf_read_only=models.READ_ONLY)
    permissions_create_workspaces = models.BooleanField(verbose_name='Create Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_content_permissions = models.BooleanField(verbose_name='Manage Content Permissions', sf_read_only=models.READ_ONLY)
    permissions_manage_content_properties = models.BooleanField(verbose_name='Manage Content Properties', sf_read_only=models.READ_ONLY)
    permissions_manage_content_types = models.BooleanField(verbose_name='Manage record types and layouts for Files', sf_read_only=models.READ_ONLY)
    permissions_schedule_job = models.BooleanField(verbose_name='Schedule Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_exchange_config = models.BooleanField(verbose_name='Manage Lightning Sync', sf_read_only=models.READ_ONLY)
    permissions_manage_analytic_snapshots = models.BooleanField(verbose_name='Manage Reporting Snapshots', sf_read_only=models.READ_ONLY)
    permissions_schedule_reports = models.BooleanField(verbose_name='Schedule Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_business_hour_holidays = models.BooleanField(verbose_name='Manage Business Hours Holidays', sf_read_only=models.READ_ONLY)
    permissions_manage_entitlements = models.BooleanField(verbose_name='Manage Entitlements', sf_read_only=models.READ_ONLY)
    permissions_manage_dynamic_dashboards = models.BooleanField(verbose_name='Manage Dynamic Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_interaction = models.BooleanField(verbose_name='Manage Flow', sf_read_only=models.READ_ONLY)
    permissions_view_my_teams_dashboards = models.BooleanField(verbose_name="View My Team's Dashboards", sf_read_only=models.READ_ONLY)
    permissions_moderate_chatter = models.BooleanField(verbose_name='Moderate Chatter', sf_read_only=models.READ_ONLY)
    permissions_reset_passwords = models.BooleanField(verbose_name='Reset User Passwords and Unlock Users', sf_read_only=models.READ_ONLY)
    permissions_flow_uflrequired = models.BooleanField(db_column='PermissionsFlowUFLRequired', verbose_name='Require Flow User Feature License', sf_read_only=models.READ_ONLY)
    permissions_can_insert_feed_system_fields = models.BooleanField(verbose_name='Insert System Field Values for Chatter Feeds', sf_read_only=models.READ_ONLY)
    permissions_activities_access = models.BooleanField(verbose_name='Access Activities', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge_import_export = models.BooleanField(verbose_name='Manage Knowledge Article Import/Export', sf_read_only=models.READ_ONLY)
    permissions_email_template_management = models.BooleanField(verbose_name='Manage Email Templates', sf_read_only=models.READ_ONLY)
    permissions_email_administration = models.BooleanField(verbose_name='Email Administration', sf_read_only=models.READ_ONLY)
    permissions_manage_chatter_messages = models.BooleanField(verbose_name='Manage Chatter Messages and Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_email_ic = models.BooleanField(db_column='PermissionsAllowEmailIC', verbose_name='Email-Based Identity Verification Option', sf_read_only=models.READ_ONLY)
    permissions_chatter_file_link = models.BooleanField(verbose_name='Create Public Links', sf_read_only=models.READ_ONLY)
    permissions_force_two_factor = models.BooleanField(verbose_name='Two-Factor Authentication for User Interface Logins', sf_read_only=models.READ_ONLY)
    permissions_view_event_log_files = models.BooleanField(verbose_name='View Event Log Files', sf_read_only=models.READ_ONLY)
    permissions_manage_networks = models.BooleanField(verbose_name='Create and Set Up Communities', sf_read_only=models.READ_ONLY)
    permissions_manage_auth_providers = models.BooleanField(verbose_name='Manage Auth. Providers', sf_read_only=models.READ_ONLY)
    permissions_run_flow = models.BooleanField(verbose_name='Run Flows', sf_read_only=models.READ_ONLY)
    permissions_view_global_header = models.BooleanField(verbose_name='View Global Header', sf_read_only=models.READ_ONLY)
    permissions_manage_quotas = models.BooleanField(verbose_name='Manage Quotas', sf_read_only=models.READ_ONLY)
    permissions_create_customize_dashboards = models.BooleanField(verbose_name='Create and Customize Dashboards', sf_read_only=models.READ_ONLY)
    permissions_create_dashboard_folders = models.BooleanField(verbose_name='Create Dashboard Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_dashboards = models.BooleanField(verbose_name='View Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_dashbds_in_pub_folders = models.BooleanField(verbose_name='Manage Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_create_customize_reports = models.BooleanField(verbose_name='Create and Customize Reports', sf_read_only=models.READ_ONLY)
    permissions_create_report_folders = models.BooleanField(verbose_name='Create Report Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_reports = models.BooleanField(verbose_name='View Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_reports_in_pub_folders = models.BooleanField(verbose_name='Manage Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_edit_my_dashboards = models.BooleanField(verbose_name='Edit My Dashboards', sf_read_only=models.READ_ONLY)
    permissions_edit_my_reports = models.BooleanField(verbose_name='Edit My Reports', sf_read_only=models.READ_ONLY)
    permissions_view_all_users = models.BooleanField(verbose_name='View All Users', sf_read_only=models.READ_ONLY)
    permissions_allow_universal_search = models.BooleanField(verbose_name='Knowledge One', sf_read_only=models.READ_ONLY)
    permissions_connect_org_to_environment_hub = models.BooleanField(verbose_name='Connect Organization to Environment Hub', sf_read_only=models.READ_ONLY)
    permissions_create_customize_filters = models.BooleanField(verbose_name='Create and Customize List Views', sf_read_only=models.READ_ONLY)
    permissions_content_hub_user = models.BooleanField(verbose_name='Files Connect Cloud', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_feeds = models.BooleanField(verbose_name='Moderate Communities Feeds', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_files = models.BooleanField(verbose_name='Moderate Communities Files', sf_read_only=models.READ_ONLY)
    permissions_govern_networks = models.BooleanField(verbose_name='Manage Communities', sf_read_only=models.READ_ONLY)
    permissions_sales_console = models.BooleanField(verbose_name='Sales Console', sf_read_only=models.READ_ONLY)
    permissions_two_factor_api = models.BooleanField(verbose_name='Two-Factor Authentication for API Logins', sf_read_only=models.READ_ONLY)
    permissions_delete_topics = models.BooleanField(verbose_name='Delete Topics', sf_read_only=models.READ_ONLY)
    permissions_edit_topics = models.BooleanField(verbose_name='Edit Topics', sf_read_only=models.READ_ONLY)
    permissions_create_topics = models.BooleanField(verbose_name='Create Topics', sf_read_only=models.READ_ONLY)
    permissions_assign_topics = models.BooleanField(verbose_name='Assign Topics', sf_read_only=models.READ_ONLY)
    permissions_identity_enabled = models.BooleanField(verbose_name='Use Identity Features', sf_read_only=models.READ_ONLY)
    permissions_identity_connect = models.BooleanField(verbose_name='Use Identity Connect', sf_read_only=models.READ_ONLY)
    permissions_allow_view_knowledge = models.BooleanField(verbose_name='Allow View Knowledge', sf_read_only=models.READ_ONLY)
    permissions_content_workspaces = models.BooleanField(verbose_name='Access Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_search_promotion_rules = models.BooleanField(verbose_name='Manage Promoted Search Terms', sf_read_only=models.READ_ONLY)
    permissions_custom_mobile_apps_access = models.BooleanField(verbose_name='Access Custom Mobile Apps', sf_read_only=models.READ_ONLY)
    permissions_view_help_link = models.BooleanField(verbose_name='View Help Link', sf_read_only=models.READ_ONLY)
    permissions_manage_profiles_permissionsets = models.BooleanField(verbose_name='Manage Profiles and Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_assign_permission_sets = models.BooleanField(verbose_name='Assign Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_manage_roles = models.BooleanField(verbose_name='Manage Roles', sf_read_only=models.READ_ONLY)
    permissions_manage_ip_addresses = models.BooleanField(verbose_name='Manage IP Addresses', sf_read_only=models.READ_ONLY)
    permissions_manage_sharing = models.BooleanField(verbose_name='Manage Sharing', sf_read_only=models.READ_ONLY)
    permissions_manage_internal_users = models.BooleanField(verbose_name='Manage Internal Users', sf_read_only=models.READ_ONLY)
    permissions_manage_password_policies = models.BooleanField(verbose_name='Manage Password Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_login_access_policies = models.BooleanField(verbose_name='Manage Login Access Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_permissions = models.BooleanField(verbose_name='Manage Custom Permissions', sf_read_only=models.READ_ONLY)
    permissions_can_verify_comment = models.BooleanField(verbose_name='Verify Answers to Chatter Questions', sf_read_only=models.READ_ONLY)
    permissions_manage_unlisted_groups = models.BooleanField(verbose_name='Manage Unlisted Groups', sf_read_only=models.READ_ONLY)
    permissions_std_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture Standard', sf_read_only=models.READ_ONLY)
    permissions_insights_app_dashboard_editor = models.BooleanField(verbose_name='Create and Edit Analytics Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in API', sf_read_only=models.READ_ONLY)
    permissions_insights_app_user = models.BooleanField(verbose_name='Use Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_admin = models.BooleanField(verbose_name='Manage Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_elt_editor = models.BooleanField(verbose_name='Edit Analytics Dataflows', sf_read_only=models.READ_ONLY)
    permissions_insights_app_upload_user = models.BooleanField(verbose_name='Upload External Data to Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_create_application = models.BooleanField(verbose_name='Create Analytics Apps', sf_read_only=models.READ_ONLY)
    permissions_debug_apex = models.BooleanField(verbose_name='Debug Apex', sf_read_only=models.READ_ONLY)
    permissions_lightning_experience_user = models.BooleanField(verbose_name='Lightning Experience User', sf_read_only=models.READ_ONLY)
    permissions_view_data_leakage_events = models.BooleanField(verbose_name='View Data Leakage Detection Events', sf_read_only=models.READ_ONLY)
    permissions_config_custom_recs = models.BooleanField(verbose_name='Configure Custom Recommendations', sf_read_only=models.READ_ONLY)
    permissions_submit_macros_allowed = models.BooleanField(verbose_name="Manage Macros Users Can't Undo", sf_read_only=models.READ_ONLY)
    permissions_bulk_macros_allowed = models.BooleanField(verbose_name='Run Macros on Multiple Records', sf_read_only=models.READ_ONLY)
    permissions_share_internal_articles = models.BooleanField(verbose_name='Share internal Knowledge articles externally', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_messages = models.BooleanField(verbose_name='Moderate Communities Chatter Messages', sf_read_only=models.READ_ONLY)
    permissions_manage_session_permission_sets = models.BooleanField(verbose_name='Manage Session Permission Set Activations', sf_read_only=models.READ_ONLY)
    permissions_manage_templated_app = models.BooleanField(verbose_name='Manage Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_use_templated_app = models.BooleanField(verbose_name='Use Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_send_announcement_emails = models.BooleanField(verbose_name='Send announcement emails', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_post = models.BooleanField(verbose_name='Edit My Own Posts', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_record_post = models.BooleanField(verbose_name='Edit Posts on Records I Own', sf_read_only=models.READ_ONLY)
    permissions_admin_analytics_user = models.BooleanField(verbose_name='Access Event Monitoring Analytics Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_create_audit_fields = models.BooleanField(verbose_name='Set Audit Fields upon Record Creation', sf_read_only=models.READ_ONLY)
    permissions_update_with_inactive_owner = models.BooleanField(verbose_name='Update Records with Inactive Owners', sf_read_only=models.READ_ONLY)
    permissions_assign_user_to_skill = models.BooleanField(verbose_name='Assign Chat Skills to Users', sf_read_only=models.READ_ONLY)
    permissions_wave_trend_reports = models.BooleanField(verbose_name='Trend Report Data in Analytics', sf_read_only=models.READ_ONLY)
    permissions_wave_tabular_download = models.BooleanField(verbose_name='Download Analytics Data', sf_read_only=models.READ_ONLY)
    permissions_manage_sandboxes = models.BooleanField(verbose_name='Manage Sandboxes', sf_read_only=models.READ_ONLY)
    permissions_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture', sf_read_only=models.READ_ONLY)
    permissions_import_custom_objects = models.BooleanField(verbose_name='Import Custom Objects', sf_read_only=models.READ_ONLY)
    permissions_delegated_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in User Interface', sf_read_only=models.READ_ONLY)
    permissions_chatter_compose_ui_codesnippet = models.BooleanField(verbose_name='Allow Inclusion of Code Snippets from UI', sf_read_only=models.READ_ONLY)
    permissions_select_files_from_salesforce = models.BooleanField(verbose_name='Select Files from Salesforce', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_users = models.BooleanField(verbose_name='Moderate Community Users', sf_read_only=models.READ_ONLY)
    permissions_merge_topics = models.BooleanField(verbose_name='Merge Topics', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_reports = models.BooleanField(verbose_name='Subscribe to Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_pvt_rpts_and_dashbds = models.BooleanField(verbose_name='Manage All Private Reports and Dashboards', sf_read_only=models.READ_ONLY)
    permissions_campaign_influence2 = models.BooleanField(verbose_name='Campaign Influence', sf_read_only=models.READ_ONLY)
    permissions_view_data_assessment = models.BooleanField(verbose_name='Access to view Data Assessment', sf_read_only=models.READ_ONLY)
    permissions_remove_direct_message_members = models.BooleanField(verbose_name='Remove People from Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_can_approve_feed_post = models.BooleanField(verbose_name='Can Approve Feed Post and Comment', sf_read_only=models.READ_ONLY)
    permissions_add_direct_message_members = models.BooleanField(verbose_name='Add People to Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_view_edit_converted_leads = models.BooleanField(verbose_name='View and Edit Converted Leads', sf_read_only=models.READ_ONLY)
    permissions_show_company_name_as_user_badge = models.BooleanField(verbose_name='Show Company Name as Community Role', sf_read_only=models.READ_ONLY)
    permissions_access_cmc = models.BooleanField(db_column='PermissionsAccessCMC', verbose_name='Access Community Management', sf_read_only=models.READ_ONLY)
    permissions_archive_articles = models.BooleanField(verbose_name='Archive Articles', sf_read_only=models.READ_ONLY)
    permissions_publish_articles = models.BooleanField(verbose_name='Publish Articles', sf_read_only=models.READ_ONLY)
    permissions_view_health_check = models.BooleanField(verbose_name='View Health Check', sf_read_only=models.READ_ONLY)
    permissions_manage_health_check = models.BooleanField(verbose_name='Manage Health Check', sf_read_only=models.READ_ONLY)
    permissions_packaging2 = models.BooleanField(verbose_name='Create and Update Second-Generation Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_certificates = models.BooleanField(verbose_name='Manage Certificates', sf_read_only=models.READ_ONLY)
    permissions_create_report_in_lightning = models.BooleanField(verbose_name='Report Builder (Lightning Experience)', sf_read_only=models.READ_ONLY)
    permissions_prevent_classic_experience = models.BooleanField(verbose_name='Hide Option to Switch to Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_hide_read_by_list = models.BooleanField(verbose_name='Hide the Seen By List', sf_read_only=models.READ_ONLY)
    permissions_submit_for_translation = models.BooleanField(verbose_name='Article Translation - Submit for Translation', sf_read_only=models.READ_ONLY)
    permissions_edit_translation = models.BooleanField(verbose_name='Article Translation - Edit', sf_read_only=models.READ_ONLY)
    permissions_publish_translation = models.BooleanField(verbose_name='Article Translation - Publish', sf_read_only=models.READ_ONLY)
    permissions_list_email_send = models.BooleanField(verbose_name='Allow sending of List Emails', sf_read_only=models.READ_ONLY)
    permissions_feed_pinning = models.BooleanField(verbose_name='Pin Posts in Feeds', sf_read_only=models.READ_ONLY)
    permissions_change_dashboard_colors = models.BooleanField(verbose_name='Change Dashboard Colors', sf_read_only=models.READ_ONLY)
    permissions_manage_recommendation_strategies = models.BooleanField(verbose_name='Manage Next Best Action Strategies', sf_read_only=models.READ_ONLY)
    permissions_manage_propositions = models.BooleanField(verbose_name='Manage Next Best Action Recommendations', sf_read_only=models.READ_ONLY)
    permissions_close_conversations = models.BooleanField(verbose_name='Close Conversation Threads', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_roles_grps = models.BooleanField(verbose_name='Subscribe to Reports: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_roles_grps = models.BooleanField(verbose_name='Subscribe to Dashboards: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_use_web_link = models.BooleanField(verbose_name='Allow Access to Customized Actions', sf_read_only=models.READ_ONLY)
    permissions_has_unlimited_nbaexecutions = models.BooleanField(db_column='PermissionsHasUnlimitedNBAExecutions', verbose_name='User Has Unlimited Next Best Action Strategy Executions', sf_read_only=models.READ_ONLY)
    permissions_view_only_embedded_app_user = models.BooleanField(verbose_name='Access to View-Only Licensed Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_view_all_activities = models.BooleanField(verbose_name='View All Activities', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_to_other_users = models.BooleanField(verbose_name='Subscribe to Reports: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_lightning_console_allowed_for_user = models.BooleanField(verbose_name='Lightning Console User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_reports_run_as_user = models.BooleanField(verbose_name='Subscribe to Reports: Set Running User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_dashboards = models.BooleanField(verbose_name='Subscribe to Dashboards', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_to_other_users = models.BooleanField(verbose_name='Subscribe to Dashboards: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_in_pub = models.BooleanField(verbose_name='Manage Public Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_transactional_email_send = models.BooleanField(verbose_name='Send Non-Commercial Email', sf_read_only=models.READ_ONLY)
    permissions_view_private_static_resources = models.BooleanField(verbose_name='View Private Static Resources', sf_read_only=models.READ_ONLY)
    permissions_view_customer_sentiment = models.BooleanField(verbose_name='View Community 360', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_folder = models.BooleanField(verbose_name='Create Folders for Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_apex_rest_services = models.BooleanField(verbose_name='Apex REST Services', sf_read_only=models.READ_ONLY)
    permissions_enable_community_app_launcher = models.BooleanField(verbose_name='Show App Launcher in Communities', sf_read_only=models.READ_ONLY)
    permissions_give_recognition_badge = models.BooleanField(verbose_name='Give Recognition Badges in Lightning Communities', sf_read_only=models.READ_ONLY)
    permissions_use_my_search = models.BooleanField(verbose_name='Einstein Search', sf_read_only=models.READ_ONLY)
    permissions_ltng_promo_reserved01_user_perm = models.BooleanField(verbose_name='Remain in Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_manage_subscriptions = models.BooleanField(verbose_name='Manage Analytics Subscriptions', sf_read_only=models.READ_ONLY)
    permissions_wave_manage_private_assets_user = models.BooleanField(verbose_name='Manage Analytics Private Assets', sf_read_only=models.READ_ONLY)
    permissions_can_edit_data_prep_recipe = models.BooleanField(verbose_name='Edit Dataset Recipes', sf_read_only=models.READ_ONLY)
    permissions_add_analytics_remote_connections = models.BooleanField(verbose_name='Add Analytics Remote Connections', sf_read_only=models.READ_ONLY)
    permissions_manage_surveys = models.BooleanField(verbose_name='Manage Surveys', sf_read_only=models.READ_ONLY)
    permissions_use_assistant_dialog = models.BooleanField(verbose_name='Einstein Search Record Previews', sf_read_only=models.READ_ONLY)
    permissions_use_query_suggestions = models.BooleanField(verbose_name='Einstein Search Results Based On Conversational Queries', sf_read_only=models.READ_ONLY)
    permissions_record_visibility_api = models.BooleanField(db_column='PermissionsRecordVisibilityAPI', verbose_name='Enable RecordVisibility API', sf_read_only=models.READ_ONLY)
    permissions_view_roles = models.BooleanField(verbose_name='View Roles and Role Hierarchy', sf_read_only=models.READ_ONLY)
    permissions_can_manage_maps = models.BooleanField(verbose_name='Manage Analytics Custom Maps', sf_read_only=models.READ_ONLY)
    permissions_lmoutbound_messaging_user_perm = models.BooleanField(db_column='PermissionsLMOutboundMessagingUserPerm', verbose_name='Agent Initiated Outbound Messaging', sf_read_only=models.READ_ONLY)
    permissions_modify_data_classification = models.BooleanField(verbose_name='Modify Data Classification', sf_read_only=models.READ_ONLY)
    permissions_privacy_data_access = models.BooleanField(verbose_name='Allow user to access privacy data', sf_read_only=models.READ_ONLY)
    permissions_query_all_files = models.BooleanField(verbose_name='Query All Files', sf_read_only=models.READ_ONLY)
    permissions_modify_metadata = models.BooleanField(verbose_name='Modify Metadata Through Metadata API Functions', sf_read_only=models.READ_ONLY)
    permissions_manage_cms = models.BooleanField(db_column='PermissionsManageCMS', verbose_name='Manage CMS Workspaces and Channels', sf_read_only=models.READ_ONLY)
    permissions_sandbox_testing_in_community_app = models.BooleanField(verbose_name='Enables testing a sandbox community in the Mobile Publisher for Community Cloud app.', sf_read_only=models.READ_ONLY)
    permissions_view_flow_usage_and_flow_event_data = models.BooleanField(verbose_name='View Flow Usage and Flow Event Data', sf_read_only=models.READ_ONLY)
    permissions_can_edit_prompts = models.BooleanField(verbose_name='Manage Prompts', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'MutingPermissionSet'
        verbose_name = 'Muting Permission Set'
        verbose_name_plural = 'Muting Permission Set'
        # keyPrefix = '0QM'



class MyDomainDiscoverableLogin(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mydomaindiscoverablelogin_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='mydomaindiscoverablelogin_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    apex_handler = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    execute_apex_handler_as = models.ForeignKey('User', models.DO_NOTHING, related_name='mydomaindiscoverablelogin_executeapexhandleras_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    username_label = models.CharField(max_length=255, verbose_name='Login Prompt', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'MyDomainDiscoverableLogin'
        verbose_name = 'My Domain Discoverable Login'
        verbose_name_plural = 'My Domain Discoverable Logins'
        # keyPrefix = '4hy'



class Name(models.Model):
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Account', None), ('AgentWork', None), ('Announcement', None), ('BackgroundOperation', None), ('CollaborationGroup', None), ('CollaborationGroupRecord', None), ('ConferenceNumber', None), ('ContentDistribution', None), ('ContentDocument', None), ('ContentFolder', None), ('ContentVersion', None), ('Dashboard', None), ('DashboardComponent', None), ('DuplicateJob', None), ('DuplicateJobMatchingRule', None), ('EnhancedLetterhead', None), ('Event', None), ('ExternalEvent', None), ('ExternalEventMapping', None), ('FileSearchActivity', None), ('FlowInterview', None), ('FlowStageRelation', None), ('ForecastingOwnerAdjustment', None), ('IdeaComment', None), ('InstalledMobileApp', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('LinkedArticle', None), ('ListEmail', None), ('ListEmailRecipientSource', None), ('MatchingInformation', None), ('NetworkDiscoverableLogin', None), ('NetworkSelfRegistration', None), ('PendingServiceRouting', None), ('ProcessInstanceNode', None), ('Queue', None), ('Recommendation', None), ('RecordAction', None), ('Report', None), ('SearchActivity', None), ('SelfServiceUser', None), ('SocialPersona', None), ('Task', None), ('TodayGoal', None), ('Topic', None), ('User', None), ('UserAppInfo', None), ('UserAppMenuCustomization', None), ('UserEmailPreferredPerson', None), ('UserServicePresence', None), ('WaveAutoInstallRequest', None), ('WaveCompatibilityCheckItem', None)], blank=True, null=True)
    alias = models.CharField(max_length=8, sf_read_only=models.READ_ONLY, blank=True, null=True)
    user_role = models.ForeignKey('UserRole', models.DO_NOTHING, related_name='name_userrole_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    record_type = models.ForeignKey('RecordType', models.DO_NOTHING, related_name='name_recordtype_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    profile = models.ForeignKey('Profile', models.DO_NOTHING, related_name='name_profile_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    email = models.EmailField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    phone = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name_or_alias = models.CharField(max_length=80, verbose_name='Name or Alias', sf_read_only=models.READ_ONLY, blank=True, null=True)
    username = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Name'
        verbose_name = 'Name'
        verbose_name_plural = 'Names'
        # keyPrefix = 'None'



class NamedCredential(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='namedcredential_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='namedcredential_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    endpoint = models.TextField(verbose_name='URL', sf_read_only=models.READ_ONLY, help_text='The URL for connecting to the external system.', blank=True, null=True)
    principal_type = models.CharField(max_length=255, verbose_name='Identity Type', sf_read_only=models.READ_ONLY, help_text='Used to track users accessing the external server. Anonymous implies a user identity is not specified for external server access. Named Principal uses one user identity for all users to access the external server.', choices=[('Anonymous', 'Anonymous'), ('PerUser', 'Per User'), ('NamedUser', 'Named Principal')])
    callout_options_generate_authorization_header = models.BooleanField(verbose_name='GenerateAuthorizationHeader', sf_read_only=models.READ_ONLY)
    callout_options_allow_merge_fields_in_header = models.BooleanField(verbose_name='AllowMergeFieldsInHeader', sf_read_only=models.READ_ONLY)
    callout_options_allow_merge_fields_in_body = models.BooleanField(verbose_name='AllowMergeFieldsInBody', sf_read_only=models.READ_ONLY)
    jwt_issuer = models.CharField(max_length=255, verbose_name='JWT Issuer', sf_read_only=models.READ_ONLY, blank=True, null=True)
    jwt_formula_subject = models.CharField(max_length=255, verbose_name='JWT Formula Subject', sf_read_only=models.READ_ONLY, blank=True, null=True)
    jwt_text_subject = models.CharField(max_length=255, verbose_name='JWT Text Subject', sf_read_only=models.READ_ONLY, blank=True, null=True)
    jwt_validity_period_seconds = models.IntegerField(verbose_name='JWT Validity Period in Seconds', sf_read_only=models.READ_ONLY, blank=True, null=True)
    jwt_audience = models.TextField(verbose_name='JWT Audience(s)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    auth_token_endpoint_url = models.TextField(verbose_name='Auth Token Endpoint URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'NamedCredential'
        verbose_name = 'Named Credential'
        verbose_name_plural = 'Named Credentials'
        # keyPrefix = '0XA'



class NavigationLinkSet(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name')
    language = models.CharField(max_length=40, verbose_name='Master Language', default=models.DEFAULTED_ON_CREATE, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    master_label = models.CharField(max_length=80, verbose_name='Label')
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='navigationlinkset_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='navigationlinkset_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    network = models.ForeignKey('Network', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'NavigationLinkSet'
        verbose_name = 'Navigation Link Set'
        verbose_name_plural = 'Navigation Link Sets'
        # keyPrefix = '0Lm'



class NavigationMenuItem(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='navigationmenuitem_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='navigationmenuitem_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    navigation_link_set = models.ForeignKey(NavigationLinkSet, models.DO_NOTHING)  # Master Detail Relationship *
    label = models.CharField(max_length=50)
    type = models.CharField(max_length=255, verbose_name='Navigation Menu Item Type', choices=[('SalesforceObject', None), ('ExternalLink', None), ('InternalLink', None), ('NavigationalTopic', None), ('MenuLabel', None), ('GlobalAction', None), ('DataSourceDriven', None)])
    target = models.CharField(max_length=255, blank=True, null=True)
    position = models.IntegerField()
    parent = models.ForeignKey('self', models.DO_NOTHING, related_name='navigationmenuitem_parent_set', blank=True, null=True)  # Master Detail Relationship *
    access_restriction = models.CharField(max_length=255, choices=[('None', None), ('LoginRequired', None)])
    default_list_view = models.ForeignKey(ListView, models.DO_NOTHING, blank=True, null=True)
    target_prefs = models.CharField(max_length=255, verbose_name='Target Preferences', choices=[('OpenExternalLinkInSameTab', None), ('None', None)], blank=True, null=True)
    status = models.CharField(max_length=255, verbose_name='Publish Status', sf_read_only=models.NOT_UPDATEABLE, choices=[('Draft', 'Draft'), ('Live', 'Live')], blank=True, null=True)
    draft_row = models.OneToOneField('self', models.DO_NOTHING, related_name='navigationmenuitem_draftrow_set', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'NavigationMenuItem'
        verbose_name = 'Navigation Menu Item'
        verbose_name_plural = 'Navigation Menu Items'
        # keyPrefix = '0Mi'



class Network(models.Model):
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='network_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='network_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('UnderConstruction'), choices=[('UnderConstruction', 'Preview'), ('Live', 'Published'), ('DownForMaintenance', 'Offline')])
    options_invitations_enabled = models.BooleanField(verbose_name='Invitations Enabled', sf_read_only=models.READ_ONLY)
    options_send_welcome_email = models.BooleanField(verbose_name='Send Welcome Email', sf_read_only=models.READ_ONLY)
    options_self_registration_enabled = models.BooleanField(verbose_name='Self Registration Enabled', sf_read_only=models.READ_ONLY)
    options_allow_members_to_flag = models.BooleanField(verbose_name='Allow Members To Flag', sf_read_only=models.READ_ONLY)
    options_site_as_container_enabled = models.BooleanField(verbose_name='Site.com as Community Container Enabled', sf_read_only=models.READ_ONLY)
    options_private_messages_enabled = models.BooleanField(verbose_name='Private Messages Enabled', sf_read_only=models.READ_ONLY)
    options_knowledgeable_enabled = models.BooleanField(verbose_name='Knowledgeable Enabled', sf_read_only=models.READ_ONLY)
    options_reputation_enabled = models.BooleanField(verbose_name='Reputation Enabled', sf_read_only=models.READ_ONLY)
    options_einstein_answers_snippet_enabled = models.BooleanField(verbose_name='EinsteinAnswersSnippetEnabled', sf_read_only=models.READ_ONLY)
    options_guest_chatter_enabled = models.BooleanField(verbose_name='Guest Chatter Enabled', sf_read_only=models.READ_ONLY)
    options_nickname_display_enabled = models.BooleanField(verbose_name='NicknameDisplayEnabled', sf_read_only=models.READ_ONLY)
    options_show_all_network_settings = models.BooleanField(verbose_name='ShowAllNetworkSettings', sf_read_only=models.READ_ONLY)
    options_allow_internal_user_login = models.BooleanField(verbose_name='Allow Internal User Login', sf_read_only=models.READ_ONLY)
    options_direct_messages_enabled = models.BooleanField(verbose_name='Direct Messages Enabled', sf_read_only=models.READ_ONLY)
    options_reputation_record_conversations_disabled = models.BooleanField(verbose_name='ReputationRecordConversationsDisabled', sf_read_only=models.READ_ONLY)
    options_guest_file_access_enabled = models.BooleanField(verbose_name='Guest File Access Enabled', sf_read_only=models.READ_ONLY)
    options_gather_customer_sentiment_data = models.BooleanField(verbose_name='Gather Community 360 Data', sf_read_only=models.READ_ONLY)
    options_network_sentiment_analysis = models.BooleanField(verbose_name='Sentiment Analysis on Feed Posts and Comments', sf_read_only=models.READ_ONLY)
    options_enable_topic_assignment_rules = models.BooleanField(verbose_name='EnableTopicAssignmentRules', sf_read_only=models.READ_ONLY)
    options_einstein_answers_enabled = models.BooleanField(verbose_name='EinsteinAnswersEnabled', sf_read_only=models.READ_ONLY)
    options_cwbanner_state = models.BooleanField(db_column='OptionsCWBannerState', verbose_name='CWBannerState', sf_read_only=models.READ_ONLY)
    options_topic_suggestions_enabled = models.BooleanField(verbose_name='TopicSuggestionsEnabled', sf_read_only=models.READ_ONLY)
    options_enable_talking_about_stats = models.BooleanField(verbose_name='EnableTalkingAboutStats', sf_read_only=models.READ_ONLY)
    options_up_down_vote_enabled = models.BooleanField(verbose_name='UpDownVoteEnabled', sf_read_only=models.READ_ONLY)
    options_disable_workspace_info = models.BooleanField(verbose_name='DisableWorkspaceInfo', sf_read_only=models.READ_ONLY)
    options_einstein_answers_qaenabled = models.BooleanField(db_column='OptionsEinsteinAnswersQAEnabled', verbose_name='EinsteinAnswersQAEnabled', sf_read_only=models.READ_ONLY)
    options_einstein_answers_kaenabled = models.BooleanField(db_column='OptionsEinsteinAnswersKAEnabled', verbose_name='EinsteinAnswersKAEnabled', sf_read_only=models.READ_ONLY)
    options_recognition_badging_enabled = models.BooleanField(verbose_name='\u200bRecognition badging for Lightning Communities', sf_read_only=models.READ_ONLY)
    options_threaded_discussions_enabled = models.BooleanField(verbose_name='ThreadedDiscussionsEnabled', sf_read_only=models.READ_ONLY)
    options_member_visibility = models.BooleanField(verbose_name='MemberVisibility', sf_read_only=models.READ_ONLY)
    options_mobile_image_optimization_enabled = models.BooleanField(verbose_name='MobileImageOptimizationEnabled', sf_read_only=models.READ_ONLY)
    welcome_email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, related_name='network_welcomeemailtemplate_set', sf_read_only=models.READ_ONLY)
    change_password_email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, related_name='network_changepasswordemailtemplate_set', sf_read_only=models.READ_ONLY)
    forgot_password_email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, related_name='network_forgotpasswordemailtemplate_set', sf_read_only=models.READ_ONLY)
    lockout_email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, related_name='network_lockoutemailtemplate_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    verification_email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, related_name='network_verificationemailtemplate_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    email_sender_name = models.CharField(max_length=80, verbose_name='From Email Name', sf_read_only=models.READ_ONLY)
    email_sender_address = models.EmailField(verbose_name='From Email Address', sf_read_only=models.READ_ONLY)
    new_sender_address = models.EmailField(verbose_name='Unverified Sender Email Address', sf_read_only=models.READ_ONLY, blank=True, null=True)
    email_footer_text = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    url_path_prefix = models.CharField(max_length=40, verbose_name='Community URL Prefix', sf_read_only=models.READ_ONLY, blank=True, null=True)
    case_comment_email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, related_name='network_casecommentemailtemplate_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    self_reg_profile = models.ForeignKey('Profile', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_activation_date = models.DateField(verbose_name='First Date Active', sf_read_only=models.READ_ONLY, blank=True, null=True)
    max_file_size_kb = models.IntegerField(verbose_name='Max File Size KB', sf_read_only=models.READ_ONLY, blank=True, null=True)
    allowed_extensions = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Network'
        verbose_name = 'Network'
        verbose_name_plural = 'Networks'
        # keyPrefix = '0DB'



class NetworkAffinity(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkaffinity_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkaffinity_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    profile = models.OneToOneField('Profile', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'NetworkAffinity'
        verbose_name = 'Default Community'
        verbose_name_plural = 'Default Communities'
        # keyPrefix = '0OV'



class NetworkDiscoverableLogin(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkdiscoverablelogin_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkdiscoverablelogin_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    network = models.OneToOneField(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    apex_handler = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    execute_apex_handler_as = models.ForeignKey('User', models.DO_NOTHING, related_name='networkdiscoverablelogin_executeapexhandleras_set', sf_read_only=models.READ_ONLY)
    username_label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'NetworkDiscoverableLogin'
        verbose_name = 'Community Discoverable Login'
        verbose_name_plural = 'Community Discoverable Logins'
        # keyPrefix = '7ov'



class NetworkMember(models.Model):
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkmember_createdby_set', sf_read_only=models.READ_ONLY)
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    member = models.ForeignKey('User', models.DO_NOTHING, related_name='networkmember_member_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    digest_frequency = models.CharField(max_length=40, verbose_name='Chatter Email Highlights Frequency', sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate('N'), choices=[('D', 'Daily'), ('W', 'Weekly'), ('N', 'Never')])
    default_group_notification_frequency = models.CharField(max_length=40, verbose_name='Default Notification Frequency when Joining Groups', sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate('N'), choices=[('P', 'Email on Each Post'), ('D', 'Daily Digests'), ('W', 'Weekly Digests'), ('N', 'Never')])
    preferences_disable_all_feeds_email = models.BooleanField(verbose_name='DisableAllFeedsEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_followers_email = models.BooleanField(verbose_name='DisableFollowersEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_profile_post_email = models.BooleanField(verbose_name='DisableProfilePostEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_change_comment_email = models.BooleanField(verbose_name='DisableChangeCommentEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_later_comment_email = models.BooleanField(verbose_name='DisableLaterCommentEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_dis_prof_post_comment_email = models.BooleanField(verbose_name='DisProfPostCommentEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_mentions_post_email = models.BooleanField(verbose_name='DisableMentionsPostEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_dis_mentions_comment_email = models.BooleanField(verbose_name='DisMentionsCommentEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_like_email = models.BooleanField(verbose_name='DisableLikeEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_dis_comment_after_like_email = models.BooleanField(verbose_name='DisCommentAfterLikeEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_bookmark_email = models.BooleanField(verbose_name='DisableBookmarkEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_share_post_email = models.BooleanField(verbose_name='DisableSharePostEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_item_flagged_email = models.BooleanField(verbose_name='DisableItemFlaggedEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_message_email = models.BooleanField(verbose_name='DisableMessageEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_endorsement_email = models.BooleanField(verbose_name='DisableEndorsementEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_pending_review_email = models.BooleanField(verbose_name='DisablePendingReviewEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_direct_message_email = models.BooleanField(verbose_name='DisableDirectMessageEmail', sf_read_only=models.NOT_CREATEABLE)
    preferences_disable_best_answer_email = models.BooleanField(verbose_name='DisableBestAnswerEmail', sf_read_only=models.NOT_CREATEABLE)
    reputation_points = models.DecimalField(max_digits=15, decimal_places=0, sf_read_only=models.NOT_CREATEABLE)
    last_chatter_activity_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'NetworkMember'
        verbose_name = 'Network Member'
        verbose_name_plural = 'Network Members'
        # keyPrefix = '0DO'



class NetworkMemberGroup(models.Model):
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkmembergroup_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkmembergroup_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    parent = models.ForeignKey('PermissionSet', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [PermissionSet, Profile]
    assignment_status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('WaitingForAdd'), choices=[('Added', 'Added'), ('WaitingForAdd', 'Waiting For Add'), ('WaitingForRemove', 'Waiting For Remove')])
    class Meta(models.Model.Meta):
        db_table = 'NetworkMemberGroup'
        verbose_name = 'Network Member Group'
        verbose_name_plural = 'Network Member Group'
        # keyPrefix = '0DL'



class NetworkPageOverride(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkpageoverride_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkpageoverride_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    override_type = models.CharField(max_length=255, verbose_name='Page Override Type', sf_read_only=models.READ_ONLY, choices=[('InMaintenance', 'Inactive Site Home Page'), ('LoginRequired', 'Authorization Required Page (401)'), ('FileNotFound', 'Page Not Found Page (404)'), ('Exception', 'Generic Error Page'), ('UnderConstruction', 'Maintenance Page(500/503)'), ('BandwidthExceeded', 'Limit Exceeded Page (509)'), ('SiteTemplate', 'Site Template'), ('RobotsTxt', 'Robots Configuration Page'), ('ChangePassword', 'Change Password Page'), ('MyProfile', 'My Profile Page'), ('SelfReg', 'Self Registration Page'), ('ForgotPassword', 'Forgot Password Page')])
    override_setting = models.CharField(max_length=255, verbose_name='Page Override Setting', sf_read_only=models.READ_ONLY, choices=[('Designer', None), ('VisualForce', None), ('Standard', None), ('Configurable', None)])
    class Meta(models.Model.Meta):
        db_table = 'NetworkPageOverride'
        verbose_name = 'Community Page Override'
        verbose_name_plural = 'Community Page Overrides'
        # keyPrefix = '0Dp'



class NetworkSelfRegistration(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkselfregistration_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='networkselfregistration_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    network = models.OneToOneField(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    account = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    options_show_first_name = models.BooleanField(verbose_name='First Name', sf_read_only=models.READ_ONLY)
    options_show_last_name = models.BooleanField(verbose_name='Last Name', sf_read_only=models.READ_ONLY)
    options_show_username = models.BooleanField(verbose_name='ShowUsername', sf_read_only=models.READ_ONLY)
    options_show_nickname = models.BooleanField(verbose_name='ShowNickname', sf_read_only=models.READ_ONLY)
    options_show_mobile_phone = models.BooleanField(verbose_name='Mobile', sf_read_only=models.READ_ONLY)
    options_show_email = models.BooleanField(verbose_name='Email', sf_read_only=models.READ_ONLY)
    options_include_password = models.BooleanField(verbose_name='IncludePassword', sf_read_only=models.READ_ONLY)
    apex_handler = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    execute_apex_handler_as = models.ForeignKey('User', models.DO_NOTHING, related_name='networkselfregistration_executeapexhandleras_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    verification_method = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('SyncEmail', 'Email message'), ('SMS', 'Text message')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'NetworkSelfRegistration'
        verbose_name = 'Community Self Registration'
        verbose_name_plural = 'Community Self Registrations'
        # keyPrefix = '0Dm'



class Note(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Account, LinkedArticle] Master Detail Relationship *
    title = models.CharField(max_length=80)
    is_private = models.BooleanField(verbose_name='Private', default=models.DefaultedOnCreate(False))
    body = models.TextField(blank=True, null=True)
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='note_owner_set')
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='note_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='note_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Note'
        verbose_name = 'Note'
        verbose_name_plural = 'Notes'
        # keyPrefix = '002'



class NoteAndAttachment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_note = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Account, LinkedArticle] Master Detail Relationship *
    title = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_private = models.BooleanField(verbose_name='Private', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='noteandattachment_owner_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='noteandattachment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='noteandattachment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'NoteAndAttachment'
        verbose_name = 'Note and Attachment'
        verbose_name_plural = 'Notes and Attachments'
        # keyPrefix = 'None'



class OauthToken(models.Model):
    access_token = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    user = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    request_token = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    app_name = models.CharField(max_length=255, verbose_name='Application Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_used_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    use_count = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    delete_token = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    app_menu_item = models.ForeignKey(AppMenuItem, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'OauthToken'
        verbose_name = 'Oauth Token'
        verbose_name_plural = 'Oauth Tokens'
        # keyPrefix = '0CQ'



class ObjectPermissions(models.Model):
    parent = models.ForeignKey('PermissionSet', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    sobject_type = models.CharField(max_length=40, verbose_name='Sobject Type Name', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('Account_Bundle__c', None), ('AccountBrand', None), ('AccountForecast', None), ('AccountRelationship', None), ('Accreditation', None), ('AcctMgrTarget', None), ('ActionCadence', None), ('ActionCadenceStep', None), ('ActionCadenceStepTracker', None), ('ActionCadenceTracker', None), ('ActionPlan', None), ('ActionPlanTemplate', None), ('ActionPlanTmplItmAssessmentInd', None), ('ActiveScratchOrg', None), ('AddOnDefinition', None), ('Address', None), ('Agent_Affiliation__c', None), ('AggregationRow', None), ('AiDataset', None), ('AiImageDetectedObject', None), ('AiImageTrainingObject', None), ('AIInsightReason', None), ('AIRecordInsight', None), ('AiVisionModel', None), ('AiVisionModelMetric', None), ('AiVisionModelObjectMetric', None), ('AiVisitSummary', None), ('Alert__c', None), ('ambition__AmbitionEmailRecipient__c', None), ('ambition__AmbitionEntity__c', None), ('ambition__AmbitionEntityField__c', None), ('ambition__AmbitionGeneralConfig__c', None), ('ambition__AmbitionLogEntry__c', None), ('ambition__AmbitionPushableObject__c', None), ('ambition__AmbitionPushableObjectField__c', None), ('ambition__AmbitionPushableObjectTestObject__c', None), ('ambition__AmbitionReportFilter__c', None), ('ambition__AmbitionReportInstance__c', None), ('ambition__AmbitionReportInstanceChunk__c', None), ('ambition__AmbitionReportRunConfig__c', None), ('ambition__log_entry__c', None), ('AMS_Account_Team__c', None), ('ANTS_Letters_and_Attachments__c', None), ('Apex_Error__c', None), ('AppAnalyticsQueryRequest', None), ('AssessmentIndicatorDefinition', None), ('AssessmentTask', None), ('AssessmentTaskContentDocument', None), ('AssessmentTaskDefinition', None), ('AssessmentTaskIndDefinition', None), ('AssessmentTaskOrder', None), ('Asset', None), ('AssetAction', None), ('AssetActionSource', None), ('AssetStatePeriod', None), ('AssistantText', None), ('AssistantTextRange', None), ('Assortment', None), ('AssortmentProduct', None), ('Authorization__c', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('AuthorizedInsuranceLine', None), ('Award', None), ('Benefits_Upsell_Opportunity__c', None), ('BillingDistributionMethod', None), ('BillingPeriodItem', None), ('BillingPeriodTaxItem', None), ('BillingPolicy', None), ('BillingSchedule', None), ('BillingScheduleCreationStatus', None), ('BillingTreatment', None), ('BoardCertification', None), ('Broker_Commission__c', None), ('Broker_Email_Archive__c', None), ('Broker_Favorites__c', None), ('Broker_Trip_Status__c', None), ('BrokerOpportunity__c', None), ('BrokerSales__c', None), ('BusinessLicense', None), ('BusinessLicenseApplication', None), ('BusinessMilestone', None), ('BusinessProfile', None), ('BusinessType', None), ('BusRegAuthorizationType', None), ('BuyerAccount', None), ('BuyerGroup', None), ('BuyerGroupPricebook', None), ('Campaign', None), ('CardPaymentMethod', None), ('CareBarrier', None), ('CareBarrierDeterminant', None), ('CareBarrierType', None), ('CareDeterminant', None), ('CareDeterminantType', None), ('CareDiagnosis', None), ('CareInterventionType', None), ('CarePreauth', None), ('CarePreauthItem', None), ('CareProgram', None), ('CareProgramCampaign', None), ('CareProgramEligibilityRule', None), ('CareProgramEnrollee', None), ('CareProgramEnrolleeProduct', None), ('CareProgramEnrollmentCard', None), ('CareProgramGoal', None), ('CareProgramProduct', None), ('CareProgramProvider', None), ('CareProgramTeamMember', None), ('CareProviderAdverseAction', None), ('CareProviderFacilitySpecialty', None), ('CareProviderSearchableField', None), ('CareRequest', None), ('CareRequestDrug', None), ('CareRequestExtension', None), ('CareRequestItem', None), ('CareSpecialty', None), ('CareTaxonomy', None), ('Carrier__c', None), ('Carrier_Data_Mapping__c', None), ('Carrier_RFP__c', None), ('CarrierLibrary__c', None), ('Case', None), ('Case_Dimension_Email__c', None), ('Case_Route__c', None), ('Certification', None), ('CertificationDef', None), ('CertificationSectionDef', None), ('CertificationStep', None), ('CertificationStepDef', None), ('ChannelProgram', None), ('ChannelProgramLevel', None), ('ChannelProgramMember', None), ('Checklist__c', None), ('Claim', None), ('ClaimCase', None), ('ClaimItem', None), ('ClaimParticipant', None), ('Class__c', None), ('CloudServiceProvider', None), ('CloudServiceProviderApi', None), ('CommerceEntitlementPolicy', None), ('Commission__c', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Community_Message__c', None), ('CommunityTiles__c', None), ('Connection_Credential__c', None), ('ConsumptionSchedule', None), ('Contact', None), ('ContactPointAddress', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('Contract', None), ('ContractLineItem', None), ('Course__c', None), ('CoverageBenefit', None), ('CoverageBenefitItem', None), ('CoverageType', None), ('Credential__c', None), ('CreditMemo', None), ('CustomerProperty', None), ('DandBCompany', None), ('DataConConfiguration', None), ('DataConnector', None), ('DataConnectorMC', None), ('DataConnectorS3', None), ('DataConnectorSftp', None), ('DataConnectorUpload', None), ('DataEntCategory', None), ('DataExportDefinition', None), ('DataExportIntOrgAccess', None), ('DataImportDefinition', None), ('DataModelEnt', None), ('DataModelEntAttr', None), ('DataModelEntAttrRel', None), ('DataModelRestriction', None), ('DataModelVersion', None), ('DataPlatform', None), ('DataSource', None), ('DataSourceObject', None), ('DataSrcEnt', None), ('DataSrcEntAttr', None), ('DataSrcEntAttrMap', None), ('DataSrcEntDefAttrMap', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DelegatedAccount', None), ('DigitalWallet', None), ('DistributorAuthorization', None), ('Document', None), ('DocumentChecklistItem', None), ('DuplicateRecordSet', None), ('EditionDefinition', None), ('ElectronicMediaGroup', None), ('Email_Signature_Attachments__c', None), ('Employee', None), ('EmployeeCompanyOrganization', None), ('EmployeeJob', None), ('EmployeeJobFamily', None), ('EmployeeJobPosition', None), ('EmployeeWorkerJobPosition', None), ('EngagementChannelType', None), ('EngagementProgram', None), ('EngagementProgramNode', None), ('EngagementProgramVersion', None), ('Enrollment__c', None), ('EnrollmentEligibilityCriteria', None), ('Entitlement', None), ('EntitlementContact', None), ('EnvironmentHubInvitation', None), ('EnvironmentHubMember', None), ('ExternalAccountHierarchy', None), ('ExternalDataConnector', None), ('Feedback__c', None), ('FtestAccountChild', None), ('FtestChild', None), ('FtestChildConcrete', None), ('FtestConcrete', None), ('FtestConcrete2', None), ('FtestConcrete3', None), ('FtestConcrete4', None), ('FtestConcrete5', None), ('FtestConcrete6', None), ('FtestConcrete7', None), ('FtestConcrete8', None), ('FtestConcreteNoDefault', None), ('FtestConcreteNoDefault2', None), ('FtestConcreteNoDefault3', None), ('FtestConcreteNoSup', None), ('FtestConcreteNoSup2', None), ('FtestConcreteNoSup3', None), ('FtestContactPointEmail', None), ('FtestContactPointPhone', None), ('FtestEntityFieldFamilyBase', None), ('FtestError', None), ('FtestErrorChild', None), ('FtestGrandChild', None), ('FtestHiddenName', None), ('FtestMain', None), ('FtestOffCoreRecord', None), ('FtestPerson', None), ('FTestStandardEventHV', None), ('FtestVirtualMain', None), ('FulfillmentOrder', None), ('FunctionInvocationRequest', None), ('Goal', None), ('GoalLink', None), ('Group_Calendar__c', None), ('HealthCareDiagnosis', None), ('HealthcareFacilityNetwork', None), ('HealthcarePayerNetwork', None), ('HealthcarePractitionerFacility', None), ('HealthCareProcedure', None), ('HealthcareProvider', None), ('HealthcareProviderNpi', None), ('HealthcareProviderSpecialty', None), ('HealthcareProviderTaxonomy', None), ('Household', None), ('Idea', None), ('IdeaTheme', None), ('IdentityDocument', None), ('Image', None), ('IncludedLicenseDefinition', None), ('Individual', None), ('INQ__Criteria_Fields_Status__c', None), ('INQ__Data_Mapping_Configuration__c', None), ('INQ__Data_Transfer_Criteria__c', None), ('INQ__Data_Transfer_Criteria_Detail__c', None), ('INQ__Email_Template_Mapping_Configuration__c', None), ('INQ__Exception_Logger__c', None), ('INQ__iConnectionStatus__c', None), ('INQ__Inquisium_Activity_Tracker__c', None), ('INQ__Respondent__c', None), ('INQ__Respondent_Field_Mapping__c', None), ('INQ__Survey_Answer__c', None), ('INQ__Survey_Criteria__c', None), ('INQ__Survey_Criteria_Detail__c', None), ('INQ__Survey_Program__c', None), ('INQ__Survey_Program_Question__c', None), ('INQ__Survey_Staging__c', None), ('INQ__Trigger_Object_Exclusion__c', None), ('InspectionAssessmentInd', None), ('InspectionType', None), ('InspectionViolation', None), ('InStoreLocation', None), ('InsuranceClaimAsset', None), ('InsurancePolicy', None), ('InsurancePolicyAsset', None), ('InsurancePolicyCoverage', None), ('InsurancePolicyMemberAsset', None), ('InsurancePolicyParticipant', None), ('InsuranceProfile', None), ('Intake__c', None), ('InternalOrganization', None), ('Invoice', None), ('JobProfile', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('Lead', None), ('Lead_Assignment_Rules__c', None), ('LegalEntity', None), ('LicensingError', None), ('LicensingRequest', None), ('LiveAgentSession', None), ('LiveChatTranscript', None), ('LiveChatVisitor', None), ('LoanApplicant', None), ('LoanApplicantAddress', None), ('LoanApplicantAsset', None), ('LoanApplicantDeclaration', None), ('LoanApplicantEmployment', None), ('LoanApplicantIncome', None), ('LoanApplicantLiability', None), ('LoanApplicationAsset', None), ('LoanApplicationFinancial', None), ('LoanApplicationLiability', None), ('LoanApplicationProperty', None), ('LoanApplicationTitleHolder', None), ('Location', None), ('LoyaltyMemberCurrency', None), ('LoyaltyMemberTier', None), ('LoyaltyPartnerProduct', None), ('LoyaltyProgram', None), ('LoyaltyProgramCurrency', None), ('LoyaltyProgramDecisionFlow', None), ('LoyaltyProgramMember', None), ('LoyaltyProgramPartner', None), ('LoyaltyTier', None), ('LoyaltyTierGroup', None), ('Macro', None), ('MaintenancePlan', None), ('ManagementAddOnLicense', None), ('ManagementEditionLicense', None), ('ManagementPlatformLicense', None), ('ManagementUserLicense', None), ('MarketSegment', None), ('MarketSegmentActivation', None), ('MemberPlan', None), ('Menu__c', None), ('MessagingEndUser', None), ('MessagingSession', None), ('Metric', None), ('MetricDataLink', None), ('Migration_Task__c', None), ('mkto_si__Best_Bets_View__c', None), ('mkto_si__Best_Bets_View_Detail__c', None), ('mkto_si__BestBetsCache__c', None), ('mkto_si__EmailActivityCache__c', None), ('mkto_si__GroupedWebActivityCache__c', None), ('mkto_si__InterestingMomentsCache__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c', None), ('mkto_si__ScoringCache__c', None), ('mkto_si__Value__c', None), ('mkto_si__WebActivityCache__c', None), ('MyCustomObject', None), ('myobj__c', None), ('NamespaceRegistry', None), ('Notification__c', None), ('OccupationLicenseApplication', None), ('OE_Error__c', None), ('Office__c', None), ('OperatingHours', None), ('Opportunity', None), ('Opportunity_Pipeline_Snapshot__c', None), ('Order', None), ('OrderDeliveryMethod', None), ('OrderSummary', None), ('OrgSnapshot', None), ('Out_Of_Office__c', None), ('PartnerFundAllocation', None), ('PartnerFundClaim', None), ('PartnerFundRequest', None), ('PartnerMarketingBudget', None), ('PartyConsent', None), ('PartyRelatedParty', None), ('PartyRelationshipType', None), ('Payment', None), ('PaymentApplicationMethod', None), ('PaymentAuthorization', None), ('PaymentGateway', None), ('PaymentGatewayLog', None), ('PaymentGroup', None), ('PaymentLineInvoice', None), ('PaymentPolicy', None), ('PaymentTreatment', None), ('Payroll_Price_Book__c', None), ('PersonEducation', None), ('PersonEmployment', None), ('PersonLifeEvent', None), ('PersonList', None), ('Plan_Selection__c', None), ('Plan_Type__c', None), ('PlanBenefit', None), ('PlanBenefitItem', None), ('Platform_History__c', None), ('PlatformLicenseDefinition', None), ('Postal_Code__c', None), ('PriceAdjustmentSchedule', None), ('Pricebook2', None), ('Producer', None), ('ProducerPolicyAssignment', None), ('Product2', None), ('ProductAttributeSetEntity', None), ('ProductAvailabilityProjection', None), ('ProductCatalog', None), ('ProductCategory', None), ('ProductCategoryProduct', None), ('ProductCoverage', None), ('ProductFulfillmentLocation', None), ('ProductItem', None), ('ProductMedia', None), ('ProductRequest', None), ('ProductTransfer', None), ('ProfileSkill', None), ('ProfileSkillEndorsement', None), ('ProfileSkillUser', None), ('Promotion', None), ('PromotionChannel', None), ('PromotionProduct', None), ('PromotionProductCategory', None), ('PublicComplaint', None), ('PurchaserPlan', None), ('PurchaserPlanAssn', None), ('PushTopic', None), ('qbdialer__ContactScore__c', None), ('qbdialer__DialerQuery__c', None), ('qbdialer__DialerQueryAttendee__c', None), ('qbdialer__DialerQueryItem__c', None), ('qbdialer__isDialerConfig__c', None), ('qbdialer__SeekInitiative__c', None), ('qbdialer__SeekInitiativeAttendee__c', None), ('qbdialer__SeekInitiativeItem__c', None), ('Question', None), ('QuickText', None), ('Quote', None), ('Quote_Line_Item__c', None), ('Referral__c', None), ('RefModelInstalled', None), ('Refund', None), ('RefundLinePayment', None), ('RegisteredMobileDevice', None), ('RegulatoryAuthority', None), ('RegulatoryAuthorizationType', None), ('RegulatoryCode', None), ('RegulatoryCodeAssessmentInd', None), ('RegulatoryCodeViolation', None), ('ResidentialLoanApplication', None), ('RetailLocationGroup', None), ('RetailStore', None), ('RetailStoreKpi', None), ('RetailVisitKpi', None), ('ReturnOrder', None), ('RevenueElement', None), ('SalesAgreement', None), ('SalesBundleProduct', None), ('SalesChannel', None), ('sbv2__Group__c', None), ('sbv2__List_Object__c', None), ('sbv2__Quality_Sample__c', None), ('sbv2__Sample_Criteria_Filter__c', None), ('sbv2__Score_List__c', None), ('sbv2__Summary_Score__c', None), ('sbv2__Team__c', None), ('sbv2__Team_User__c', None), ('Scorecard', None), ('ScorecardAssociation', None), ('ScorecardMetric', None), ('ScratchOrgInfo', None), ('SecuritiesHolding', None), ('Security_Questions__c', None), ('seismic__Debug_Log__c', None), ('ServiceAppointment', None), ('ServiceContract', None), ('ServiceCrew', None), ('ServiceResource', None), ('Services__c', None), ('ServiceTerritory', None), ('SettingUsageDefinition', None), ('SettingUsageMap', None), ('ShapeRepresentation', None), ('Shift', None), ('Shipment', None), ('Shipment__c', None), ('SIC_Code__c', None), ('SignupRequest', None), ('sma__AvailableField__c', None), ('sma__MAAJAXDebugLog__c', None), ('sma__MAAnalytic__c', None), ('sma__MAArcGISBatchPushLog__c', None), ('sma__MAArcGISBatchPushSetting__c', None), ('sma__MAArcGISBatchPushTest__c', None), ('sma__MAAssignmentDebugLog__c', None), ('sma__MAAssignmentPlan__c', None), ('sma__MAAssignmentRule__c', None), ('sma__MABaseObject__c', None), ('sma__MAButtonSet__c', None), ('sma__MACache__c', None), ('sma__MAClick2Create__c', None), ('sma__MACustomAction__c', None), ('sma__MADataLayerSetting__c', None), ('sma__MADataLoad__c', None), ('sma__MADataLoadSegment__c', None), ('sma__MADriveProfile__c', None), ('sma__MAEventBaseObj__c', None), ('sma__MAEventLookup__c', None), ('sma__MAExport__c', None), ('sma__MAExportRow__c', None), ('sma__MAFolder__c', None), ('sma__MAFolderPermission__c', None), ('sma__MALayer__c', None), ('sma__MALocation__c', None), ('sma__MALocationFolder__c', None), ('sma__MALog__c', None), ('sma__MAMiniMapSetting__c', None), ('sma__MARelatedList__c', None), ('sma__MARoute__c', None), ('sma__MASavedQry__c', None), ('sma__MASavedQryComponent__c', None), ('sma__MAScheduledJob__c', None), ('sma__MASettingsAssignments__c', None), ('sma__MASettingsGroup__c', None), ('sma__MAShift__c', None), ('sma__MATerritory__c', None), ('sma__MATerritoryAggregation__c', None), ('sma__MATerritoryAggregationSetting__c', None), ('sma__MATerritoryCollection__c', None), ('sma__MATerritoryCollectionBaseObject__c', None), ('sma__MATerritoryCollectionFieldUpdate__c', None), ('sma__MATerritoryGeometry__c', None), ('sma__MATerritoryNode__c', None), ('sma__MATerritoryRollup__c', None), ('sma__MATerritoryRollupComponent__c', None), ('sma__MATerritoryRollupFolder__c', None), ('sma__MATerritoryRollupRun__c', None), ('sma__MATerritoryRollupValue__c', None), ('sma__MAWaypoint__c', None), ('Snippet', None), ('SocialPost', None), ('Solution', None), ('SOSSession', None), ('Source_Account_Team__c', None), ('StoreActionPlanTemplate', None), ('StoreAssortment', None), ('StoreProduct', None), ('StreamingChannel', None), ('Survey', None), ('SurveyInvitation', None), ('SurveyResponse', None), ('SurveySubject', None), ('TaxNotice__c', None), ('Tenant', None), ('TenantParameterMap', None), ('TimeSheet', None), ('trailheadapp__Badge__c', None), ('trailheadapp__Debug_Log__c', None), ('trailheadapp__Trail__c', None), ('trailheadapp__Trailhead_User_Data__c', None), ('trailheadapp__Trailmix__c', None), ('trailheadapp__Trailmix_Assignment__c', None), ('trailheadapp__User_Badge__c', None), ('trailheadapp__User_Trailmix__c', None), ('TrainingEnrollment__c', None), ('TrialEnvironmentSignup', None), ('Trip_Status_Eligibility__c', None), ('Twilio_Voice_Response__c', None), ('Upsell_Opportunity__c', None), ('UsageEntitlement', None), ('UsageFactor', None), ('User_Login_Snapshot__c', None), ('UserLicenseDefinition', None), ('vidyard__Video_View__c', None), ('ViolationEnforcementAction', None), ('ViolationInspAssessmentInd', None), ('ViolationType', None), ('ViolationTypeAssessmentInd', None), ('Visit', None), ('VisitedParty', None), ('Visitor', None), ('WebCart', None), ('WebStore', None), ('WebStoreCatalog', None), ('WebStorePricebook', None), ('Wishlist', None), ('WorkCapacityLimit', None), ('WorkCoaching', None), ('WorkerCompCoverageClass', None), ('WorkFeedback', None), ('WorkFeedbackQuestion', None), ('WorkFeedbackQuestionSet', None), ('WorkFeedbackRequest', None), ('WorkFeedbackTemplate', None), ('WorkGoal', None), ('WorkGoalCollaborator', None), ('WorkGoalLink', None), ('WorkOrder', None), ('WorkPerformanceCycle', None), ('WorkReward', None), ('WorkRewardFund', None), ('WorkRewardFundType', None), ('WorkType', None), ('WorkTypeGroup', None), ('WorkUpgradeAction', None), ('WorkUpgradeCustomer', None), ('WorkUpgradeUser', None), ('XactlyCorp__XactlyUserBusiness__c', None), ('XactlyCorp__XCIncentBusiness__c', None)])
    permissions_create = models.BooleanField(verbose_name='Create Records', sf_read_only=models.READ_ONLY)
    permissions_read = models.BooleanField(verbose_name='Read Records', sf_read_only=models.READ_ONLY)
    permissions_edit = models.BooleanField(verbose_name='Edit Records', sf_read_only=models.READ_ONLY)
    permissions_delete = models.BooleanField(verbose_name='Delete Records', sf_read_only=models.READ_ONLY)
    permissions_view_all_records = models.BooleanField(verbose_name='Read All Records', sf_read_only=models.READ_ONLY)
    permissions_modify_all_records = models.BooleanField(verbose_name='Edit All Records', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='objectpermissions_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='objectpermissions_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ObjectPermissions'
        verbose_name = 'Object Permissions'
        verbose_name_plural = 'Object Permissions'
        # keyPrefix = '110'



class OnboardingMetrics(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='onboardingmetrics_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='onboardingmetrics_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='onboardingmetrics_user_set')  # Master Detail Relationship *
    seen_count = models.IntegerField(blank=True, null=True)
    experience_name = models.CharField(max_length=255)
    class Meta(models.Model.Meta):
        db_table = 'OnboardingMetrics'
        verbose_name = 'Onboarding Metrics'
        verbose_name_plural = 'Onboarding Metrics'
        # keyPrefix = '0UG'



class OpenActivity(models.Model):
    account = models.ForeignKey(Account, models.DO_NOTHING, related_name='openactivity_account_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    what = models.ForeignKey(Account, models.DO_NOTHING, related_name='openactivity_what_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Account, ListEmail] Master Detail Relationship *
    subject = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, choices=[('After Payroll Solutions', 'After Payroll Solutions'), ('AIQA Re-Audits', 'AIQA Re-Audits'), ('AIQA Times Returned', 'AIQA Times Returned'), ('Audit', 'Audit'), ('Call', 'Call'), ('Carrier Approval', 'Carrier Approval'), ('Client Training', 'Client Training'), ('Missing Item', 'Missing Item'), ('Other', 'Other'), ('Pending Item', 'Pending Item'), ('QA 2nd Audit Review Task', 'QA 2nd Audit Review Task'), ('QA Enrollment Task', 'QA Enrollment Task'), ('QAE Re-Audits', 'QAE Re-Audits'), ('QAE Times Returned', 'QAE Times Returned'), ('QA Task', 'QA Task'), ('Send Letter', 'Send Letter'), ('Send Quote', 'Send Quote'), ('Service Hand-Off', 'Service Hand-Off'), ('Specialized Training', 'Specialized Training')], blank=True, null=True)
    is_task = models.BooleanField(verbose_name='Task', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_date = models.DateField(verbose_name='Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_date_time = models.DateTimeField(verbose_name='Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    owner = models.ForeignKey(Calendar, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Calendar, User]
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Not Started'), choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Waiting on someone else', 'Waiting on someone else'), ('Deferred', 'Deferred')], blank=True, null=True)
    priority = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Normal'), choices=[('Critical', 'Critical'), ('High', 'High'), ('Normal', 'Normal'), ('Low', 'Low')], blank=True, null=True)
    is_high_priority = models.BooleanField(verbose_name='High Priority', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    activity_type = models.CharField(max_length=40, verbose_name='Type', sf_read_only=models.READ_ONLY, choices=[('A/R Collections', None), ('Activity Log/Issue Carrier/Plan', None), ('Admin Kits', None), ('Agent BMALL Visit', None), ('Agent BMLL Visit', None), ('APS Platform Change', None), ('Audit', None), ('BDM Meeting', None), ('BDM Meeting', None), ('Broker Escalation', None), ('Call', None), ('Call', None), ('Cancellation', None), ('CBRU 90 Day Renewal Call', None), ('Client Visit', None), ('Cold Call', None), ('Cold Call', None), ('Conference Call', None), ('Customer Visit', None), ('Drop Information', None), ('Email', None), ('Email', None), ('Employer Meeting', None), ('Enrollment Kits', None), ('Enrollment Meeting', None), ('Established Partner Meeting', None), ('EUP', None), ('Face to Face', None), ('Fax', None), ('First Meeting', None), ('First Meeting', None), ('Follow-up', None), ('Follow-up', None), ('General Meeting', None), ('General Meeting', None), ('Lunch/Learn', None), ('Open Enrollment Meeting', None), ('Other', None), ('Other', None), ('PartnerFocus', None), ('Partner Visit', None), ('Product Demo', None), ('Proposal Meeting', None), ('Proposal Meeting', None), ('Proposal Review', None), ('Q2E internal training', None), ('Q2E with broker', None), ('Reinstatement', None), ('Renewal Meeting', None), ('Renewal Meeting', None), ('Service Add-on', None), ('Set Up', None), ('SFBP', None), ('System Demo', None), ('System Training', None), ('TalentFocus - Site Support', None), ('TalentFocus - Transfer In from External Support', None), ('TalentFocus - Transfer Out to External Support', None), ('Transmission', None)], blank=True, null=True)
    is_closed = models.BooleanField(verbose_name='Closed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_all_day_event = models.BooleanField(verbose_name='All-Day Event', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    duration_in_minutes = models.IntegerField(verbose_name='Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    location = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(verbose_name='Comments', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='openactivity_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='openactivity_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    call_duration_in_seconds = models.IntegerField(verbose_name='Call Duration', sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Internal', 'Internal'), ('Inbound', 'Inbound'), ('Outbound', 'Outbound')], blank=True, null=True)
    call_disposition = models.CharField(max_length=255, verbose_name='Call Result', sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_object = models.CharField(max_length=255, verbose_name='Call Object Identifier', sf_read_only=models.READ_ONLY, blank=True, null=True)
    reminder_date_time = models.DateTimeField(verbose_name='Reminder Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_reminder_set = models.BooleanField(verbose_name='Reminder Set', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    end_date_time = models.DateTimeField(verbose_name='End', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date_time = models.DateTimeField(verbose_name='Start', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_subtype = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Task', 'Task'), ('Email', 'Email'), ('ListEmail', 'List Email'), ('Cadence', 'Cadence'), ('Call', 'Call'), ('Event', 'Event')], blank=True, null=True)
    event_outcome = models.CharField(custom=True, db_column='Event_Outcome__c', max_length=255, verbose_name='Event Outcome', sf_read_only=models.READ_ONLY, help_text='Select the value that best describes the outcome of the event.', choices=[('Meeting Completed', 'Meeting Completed'), ('DM No Show', 'DM No Show'), ('Customer Canceled', 'Customer Canceled'), ('Unable to Contact Customer', 'Unable to Contact Customer')], blank=True, null=True)
    activity_type_0 = models.CharField(db_column='Activity_Type__c', custom=True, max_length=255, verbose_name='Activity Type', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Field renamed because of name conflict.
    qbdialer_call_recording_url = models.URLField(db_column='qbdialer__CallRecordingURL__c', custom=True, verbose_name='Call Recording', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_date_time = models.DateTimeField(db_column='qbdialer__Call_Date_Time__c', custom=True, verbose_name='Call Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_dial_number = models.DecimalField(db_column='qbdialer__Call_Dial_Number__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Dial Number', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_hour = models.CharField(db_column='qbdialer__Call_Hour__c', custom=True, max_length=8, verbose_name='Call Hour', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_lead_status = models.CharField(db_column='qbdialer__Call_Lead_Status__c', custom=True, max_length=40, verbose_name='Call Lead Status', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_ring_time = models.DecimalField(db_column='qbdialer__Call_Ring_Time__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Ring Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_call_time_zone = models.CharField(db_column='qbdialer__Call_Time_Zone__c', custom=True, max_length=20, verbose_name='Call Time Zone', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    isdc_dialed_phone_number = models.CharField(custom=True, db_column='isdc_dialed_phone_number__c', max_length=40, verbose_name='Phone Dialed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    isdc_dialer_call_type = models.CharField(custom=True, db_column='isdc_dialer_call_type__c', max_length=255, verbose_name='Dialer Type', sf_read_only=models.READ_ONLY, choices=[('Click-to-Call', 'Click-to-Call'), ('Seek', 'Seek'), ('Domino', 'Domino')], blank=True, null=True)
    isdc_dialer_list_name = models.CharField(custom=True, db_column='isdc_dialer_list_name__c', max_length=80, verbose_name='List Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    isdc_dialer_query_name = models.CharField(custom=True, db_column='isdc_dialer_query_name__c', max_length=80, verbose_name='Query Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    task_external_id = models.CharField(custom=True, db_column='Task_External_Id__c', max_length=255, verbose_name='Task External Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    event_external_id = models.CharField(custom=True, db_column='Event_External_Id__c', max_length=255, verbose_name='Event External Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    telemarketing_call_type = models.CharField(custom=True, db_column='Telemarketing_Call_Type__c', max_length=255, verbose_name='Telemarketing Call Type', sf_read_only=models.READ_ONLY, choices=[('Contact', 'Contact'), ('Decision Maker', 'Decision Maker'), ('Disconnected Number', 'Disconnected Number'), ('No Answer', 'No Answer'), ('Set Call Back', 'Set Call Back'), ('Set Event', 'Set Event'), ('Voicemail No Message', 'Voicemail No Message'), ('Wrong Number', 'Wrong Number')], blank=True, null=True)
    audit_error_reason = models.CharField(custom=True, db_column='Audit_Error_Reason__c', max_length=255, verbose_name='Audit Error Reason', sf_read_only=models.READ_ONLY, choices=[('Address Truncated in IBAS', 'Address Truncated in IBAS'), ('Age Change Basis Incorrect', 'Age Change Basis Incorrect'), ('Ancillary', 'Ancillary'), ('App Not Signed', 'App Not Signed'), ('Benefit Amounts - Not added or Incorrect', 'Benefit Amounts - Not added or Incorrect'), ('Benefit Error', 'Benefit Error'), ('BMLL Box Not Checked', 'BMLL Box Not Checked'), ('Carrier Group Number Incorrect', 'Carrier Group Number Incorrect'), ('Carrier Incorrect Case Setup', 'Carrier Incorrect Case Setup'), ('City Incorrect', 'City Incorrect'), ('COB Not Updated', 'COB Not Updated'), ('Cobra Error', 'Cobra Error'), ('Cobra Med Codes', 'Cobra Med Codes'), ('Contact Phone Number Incorrect', 'Contact Phone Number Incorrect'), ('Contract Date/Period Incorrect or Not Updated', 'Contract Date/Period Incorrect or Not Updated'), ('Coverage Code Incorrect', 'Coverage Code Incorrect'), ('Coverage Code Missing', 'Coverage Code Missing'), ('Coverage Codes Not Termed', 'Coverage Codes Not Termed'), ('Coverage Level Incorrect', 'Coverage Level Incorrect'), ('CT # of Apps Field Not Updated or Incorrect', 'CT # of Apps Field Not Updated or Incorrect'), ('CT Date Sent to Audit Field Not Updated', 'CT Date Sent to Audit Field Not Updated'), ('CT Record Not Updated', 'CT Record Not Updated'), ('Date of Birth Incorrect', 'Date of Birth Incorrect'), ('Date of Hire Incorrect', 'Date of Hire Incorrect'), ('Dependent Date of Birth Incorrect', 'Dependent Date of Birth Incorrect'), ('Dependent Enrolled without Student Cert', 'Dependent Enrolled without Student Cert'), ('Dependent Name Misspelled', 'Dependent Name Misspelled'), ('Dependent Not Enrolled or Not Termed', 'Dependent Not Enrolled or Not Termed'), ('Dependent Not Entered', 'Dependent Not Entered'), ('Dependent SSN Incorrect', 'Dependent SSN Incorrect'), ('Domestic Partner Not Updated', 'Domestic Partner Not Updated'), ('Dual Coverage Not Updated', 'Dual Coverage Not Updated'), ('Effective Date Incorrect', 'Effective Date Incorrect'), ('Eligibility Period Incorrect', 'Eligibility Period Incorrect'), ('Employee Not Enrolled', 'Employee Not Enrolled'), ('ER Contributions', 'ER Contributions'), ('Error Removed', 'Error Removed'), ('Gender Incorrect', 'Gender Incorrect'), ('Group Address Not Updated or Incorrect', 'Group Address Not Updated or Incorrect'), ('Group Contact Incorrect', 'Group Contact Incorrect'), ('Group Size Incorrect', 'Group Size Incorrect'), ('HB1057 Box Not Checked', 'HB1057 Box Not Checked'), ('Home Phone Incorrect', 'Home Phone Incorrect'), ('Incorrect Broker Information', 'Incorrect Broker Information'), ('Incorrect Carrier Code', 'Incorrect Carrier Code'), ('Incorrect Class or Class Missing', 'Incorrect Class or Class Missing'), ('Incorrect HB8', 'Incorrect HB8'), ('Incorrect Or Missing Beneficiary', 'Incorrect Or Missing Beneficiary'), ('Incorrect or Misspelled Group Name', 'Incorrect or Misspelled Group Name'), ('Incorrect PCP Code Used', 'Incorrect PCP Code Used'), ('Incorrect PDF Number', 'Incorrect PDF Number'), ('Incorrect Plan', 'Incorrect Plan'), ('Incorrect Rate', 'Incorrect Rate'), ('Incorrect Tax ID Number', 'Incorrect Tax ID Number'), ('Incorrect Team', 'Incorrect Team'), ('Mapping Not Processed/Incorrect', 'Mapping Not Processed/Incorrect'), ('Member Name Misspelled', 'Member Name Misspelled'), ('Miscellaneous', 'Miscellaneous'), ('Missing Middle Initial', 'Missing Middle Initial'), ('Missing Student Cert Not Requested', 'Missing Student Cert Not Requested'), ('NCA Class Codes Incorrect or Missing', 'NCA Class Codes Incorrect or Missing'), ('Not Verified', 'Not Verified'), ('OFE O/E Not Updated', 'OFE O/E Not Updated'), ('Original Effective Date Not Updated or Incorrect', 'Original Effective Date Not Updated or Incorrect'), ('Overage Dependent Age Incorrect', 'Overage Dependent Age Incorrect'), ('Parallel Non-Parallel Incorrect', 'Parallel Non-Parallel Incorrect'), ('Part Time Eligibility Incorrect or Not Updated', 'Part Time Eligibility Incorrect or Not Updated'), ('PCP Error', 'PCP Error'), ('Plan Not Setup', 'Plan Not Setup'), ('Plan Not Termed', 'Plan Not Termed'), ('Rate(s) Not Termed', 'Rate(s) Not Termed'), ('Rate(s) Termed in Error', 'Rate(s) Termed in Error'), ('Rate Error', 'Rate Error'), ('Request Not Processed', 'Request Not Processed'), ('Retro Date Incorrect', 'Retro Date Incorrect'), ('Salary Incorrect', 'Salary Incorrect'), ('SSN Incorrect', 'SSN Incorrect'), ('State Incorrect', 'State Incorrect'), ('Street Address Incorrect or Misspelled', 'Street Address Incorrect or Misspelled'), ('Student Cert Status Incorrect or Not Updated', 'Student Cert Status Incorrect or Not Updated'), ('Supporting Documentation-Missing Info', 'Supporting Documentation-Missing Info'), ('System Error', 'System Error'), ('Termination Date Incorrect', 'Termination Date Incorrect'), ('Title Missing from Name', 'Title Missing from Name'), ('Transmission/Upload Issue', 'Transmission/Upload Issue'), ('Transmit to Carrier Missed', 'Transmit to Carrier Missed'), ('Wrong CT Record Updated', 'Wrong CT Record Updated'), ('Zip Code Incorrect', 'Zip Code Incorrect')], blank=True, null=True)
    audit_type = models.CharField(custom=True, db_column='Audit_Type__c', max_length=255, verbose_name='Audit Type', sf_read_only=models.READ_ONLY, choices=[('FYI', 'FYI'), ('Error', 'Error'), ('Group level error', 'Group level error'), ('Enrollment error', 'Enrollment error')], blank=True, null=True)
    call_back_date = models.DateField(custom=True, db_column='Call_Back_Date__c', verbose_name='Call Back Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    qbdialer_callback_date_time = models.DateTimeField(db_column='qbdialer__Callback_Date_Time__c', custom=True, verbose_name='Callback Date/Time', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_impression_id = models.DecimalField(db_column='qbdialer__ImpressionId__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Impression ID', sf_read_only=models.READ_ONLY, blank=True, null=True) 
    qbdialer_smsreminder = models.BooleanField(db_column='qbdialer__SMSReminder__c', custom=True, verbose_name='Send text msg reminder to all attendees', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False), help_text='Text message reminders will be sent to all attendees at the set reminder time.') 
    class Meta(models.Model.Meta):
        db_table = 'OpenActivity'
        verbose_name = 'Open Activity'
        verbose_name_plural = 'Open Activities'
        # keyPrefix = 'None'



class OrgWideEmailAddress(models.Model):
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='orgwideemailaddress_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='orgwideemailaddress_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    address = models.EmailField(verbose_name='Email Address', sf_read_only=models.READ_ONLY)
    display_name = models.CharField(max_length=300, sf_read_only=models.READ_ONLY)
    is_allow_all_profiles = models.BooleanField(verbose_name='Allow All Profiles', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'OrgWideEmailAddress'
        verbose_name = 'Organization-wide From Email Address'
        verbose_name_plural = 'Organization-wide From Email Addresses'
        # keyPrefix = '0D2'



class Organization(models.Model):
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    division = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    street = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    city = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    state = models.CharField(max_length=80, verbose_name='State/Province', sf_read_only=models.READ_ONLY, blank=True, null=True)
    postal_code = models.CharField(max_length=20, verbose_name='Zip/Postal Code', sf_read_only=models.READ_ONLY, blank=True, null=True)
    country = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    state_code = models.CharField(max_length=10, verbose_name='State/Province Code', sf_read_only=models.READ_ONLY, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], blank=True, null=True)
    country_code = models.CharField(max_length=10, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('US'), choices=[('CA', 'Canada'), ('US', 'United States')], blank=True, null=True)
    latitude = models.DecimalField(max_digits=18, decimal_places=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    longitude = models.DecimalField(max_digits=18, decimal_places=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    geocode_accuracy = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], blank=True, null=True)
    address = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    phone = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    fax = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    primary_contact = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    default_locale_sid_key = models.CharField(max_length=40, verbose_name='Locale', sf_read_only=models.READ_ONLY, choices=[('af_ZA', 'Afrikaans (South Africa)'), ('sq_AL', 'Albanian (Albania)'), ('ar_DZ', 'Arabic (Algeria)'), ('ar_BH', 'Arabic (Bahrain)'), ('ar_EG', 'Arabic (Egypt)'), ('ar_IQ', 'Arabic (Iraq)'), ('ar_JO', 'Arabic (Jordan)'), ('ar_KW', 'Arabic (Kuwait)'), ('ar_LB', 'Arabic (Lebanon)'), ('ar_LY', 'Arabic (Libya)'), ('ar_MA', 'Arabic (Morocco)'), ('ar_OM', 'Arabic (Oman)'), ('ar_QA', 'Arabic (Qatar)'), ('ar_SA', 'Arabic (Saudi Arabia)'), ('ar_SD', 'Arabic (Sudan)'), ('ar_SY', 'Arabic (Syria)'), ('ar_TN', 'Arabic (Tunisia)'), ('ar_AE', 'Arabic (United Arab Emirates)'), ('ar_YE', 'Arabic (Yemen)'), ('hy_AM', 'Armenian (Armenia)'), ('az_AZ', 'Azerbaijani (Azerbaijan)'), ('bn_BD', 'Bangla (Bangladesh)'), ('bn_IN', 'Bangla (India)'), ('eu_ES', 'Basque (Spain)'), ('be_BY', 'Belarusian (Belarus)'), ('bs_BA', 'Bosnian (Bosnia & Herzegovina)'), ('bg_BG', 'Bulgarian (Bulgaria)'), ('my_MM', 'Burmese (Myanmar (Burma))'), ('ca_ES', 'Catalan (Spain)'), ('zh_CN_PINYIN', 'Chinese (China, Pinyin Ordering)'), ('zh_CN_STROKE', 'Chinese (China, Stroke Ordering)'), ('zh_CN', 'Chinese (China)'), ('zh_HK_STROKE', 'Chinese (Hong Kong SAR China, Stroke Ordering)'), ('zh_HK', 'Chinese (Hong Kong SAR China)'), ('zh_MO', 'Chinese (Macao SAR China)'), ('zh_SG', 'Chinese (Singapore)'), ('zh_TW_STROKE', 'Chinese (Taiwan, Stroke Ordering)'), ('zh_TW', 'Chinese (Taiwan)'), ('hr_HR', 'Croatian (Croatia)'), ('cs_CZ', 'Czech (Czechia)'), ('da_DK', 'Danish (Denmark)'), ('nl_AW', 'Dutch (Aruba)'), ('nl_BE', 'Dutch (Belgium)'), ('nl_NL', 'Dutch (Netherlands)'), ('nl_SR', 'Dutch (Suriname)'), ('dz_BT', 'Dzongkha (Bhutan)'), ('en_AG', 'English (Antigua & Barbuda)'), ('en_AU', 'English (Australia)'), ('en_BS', 'English (Bahamas)'), ('en_BB', 'English (Barbados)'), ('en_BZ', 'English (Belize)'), ('en_BM', 'English (Bermuda)'), ('en_BW', 'English (Botswana)'), ('en_CM', 'English (Cameroon)'), ('en_CA', 'English (Canada)'), ('en_KY', 'English (Cayman Islands)'), ('en_ER', 'English (Eritrea)'), ('en_SZ', 'English (Eswatini)'), ('en_FK', 'English (Falkland Islands)'), ('en_FJ', 'English (Fiji)'), ('en_GM', 'English (Gambia)'), ('en_GH', 'English (Ghana)'), ('en_GI', 'English (Gibraltar)'), ('en_GY', 'English (Guyana)'), ('en_HK', 'English (Hong Kong SAR China)'), ('en_IN', 'English (India)'), ('en_ID', 'English (Indonesia)'), ('en_IE', 'English (Ireland)'), ('en_JM', 'English (Jamaica)'), ('en_KE', 'English (Kenya)'), ('en_LR', 'English (Liberia)'), ('en_MG', 'English (Madagascar)'), ('en_MW', 'English (Malawi)'), ('en_MY', 'English (Malaysia)'), ('en_MU', 'English (Mauritius)'), ('en_NA', 'English (Namibia)'), ('en_NZ', 'English (New Zealand)'), ('en_NG', 'English (Nigeria)'), ('en_PK', 'English (Pakistan)'), ('en_PG', 'English (Papua New Guinea)'), ('en_PH', 'English (Philippines)'), ('en_RW', 'English (Rwanda)'), ('en_WS', 'English (Samoa)'), ('en_SC', 'English (Seychelles)'), ('en_SL', 'English (Sierra Leone)'), ('en_SG', 'English (Singapore)'), ('en_SX', 'English (Sint Maarten)'), ('en_SB', 'English (Solomon Islands)'), ('en_ZA', 'English (South Africa)'), ('en_SH', 'English (St. Helena)'), ('en_TZ', 'English (Tanzania)'), ('en_TO', 'English (Tonga)'), ('en_TT', 'English (Trinidad & Tobago)'), ('en_UG', 'English (Uganda)'), ('en_GB', 'English (United Kingdom)'), ('en_US', 'English (United States)'), ('en_VU', 'English (Vanuatu)'), ('et_EE', 'Estonian (Estonia)'), ('fi_FI', 'Finnish (Finland)'), ('fr_BE', 'French (Belgium)'), ('fr_CA', 'French (Canada)'), ('fr_KM', 'French (Comoros)'), ('fr_FR', 'French (France)'), ('fr_GN', 'French (Guinea)'), ('fr_HT', 'French (Haiti)'), ('fr_LU', 'French (Luxembourg)'), ('fr_MR', 'French (Mauritania)'), ('fr_MC', 'French (Monaco)'), ('fr_CH', 'French (Switzerland)'), ('fr_WF', 'French (Wallis & Futuna)'), ('ka_GE', 'Georgian (Georgia)'), ('de_AT', 'German (Austria)'), ('de_BE', 'German (Belgium)'), ('de_DE', 'German (Germany)'), ('de_LU', 'German (Luxembourg)'), ('de_CH', 'German (Switzerland)'), ('el_GR', 'Greek (Greece)'), ('gu_IN', 'Gujarati (India)'), ('iw_IL', 'Hebrew (Israel)'), ('hi_IN', 'Hindi (India)'), ('hu_HU', 'Hungarian (Hungary)'), ('is_IS', 'Icelandic (Iceland)'), ('in_ID', 'Indonesian (Indonesia)'), ('ga_IE', 'Irish (Ireland)'), ('it_IT', 'Italian (Italy)'), ('it_CH', 'Italian (Switzerland)'), ('ja_JP', 'Japanese (Japan)'), ('kn_IN', 'Kannada (India)'), ('kk_KZ', 'Kazakh (Kazakhstan)'), ('km_KH', 'Khmer (Cambodia)'), ('ko_KP', 'Korean (North Korea)'), ('ko_KR', 'Korean (South Korea)'), ('ky_KG', 'Kyrgyz (Kyrgyzstan)'), ('lo_LA', 'Lao (Laos)'), ('lv_LV', 'Latvian (Latvia)'), ('lt_LT', 'Lithuanian (Lithuania)'), ('lu_CD', 'Luba-Katanga (Congo - Kinshasa)'), ('lb_LU', 'Luxembourgish (Luxembourg)'), ('mk_MK', 'Macedonian (North Macedonia)'), ('ms_BN', 'Malay (Brunei)'), ('ms_MY', 'Malay (Malaysia)'), ('ml_IN', 'Malayalam (India)'), ('mt_MT', 'Maltese (Malta)'), ('mi_NZ', 'Maori (New Zealand)'), ('mr_IN', 'Marathi (India)'), ('sh_ME_USD', 'Montenegrin (Montenegro, USD)'), ('sh_ME', 'Montenegrin (Montenegro)'), ('ne_NP', 'Nepali (Nepal)'), ('no_NO', 'Norwegian (Norway)'), ('ps_AF', 'Pashto (Afghanistan)'), ('fa_IR', 'Persian (Iran)'), ('pl_PL', 'Polish (Poland)'), ('pt_AO', 'Portuguese (Angola)'), ('pt_BR', 'Portuguese (Brazil)'), ('pt_CV', 'Portuguese (Cape Verde)'), ('pt_MZ', 'Portuguese (Mozambique)'), ('pt_PT', 'Portuguese (Portugal)'), ('pt_ST', 'Portuguese (São Tomé & Príncipe)'), ('ro_MD', 'Romanian (Moldova)'), ('ro_RO', 'Romanian (Romania)'), ('rm_CH', 'Romansh (Switzerland)'), ('rn_BI', 'Rundi (Burundi)'), ('ru_KZ', 'Russian (Kazakhstan)'), ('ru_RU', 'Russian (Russia)'), ('sr_BA', 'Serbian (Cyrillic) (Bosnia and Herzegovina)'), ('sr_CS', 'Serbian (Cyrillic) (Serbia)'), ('sh_BA', 'Serbian (Latin) (Bosnia and Herzegovina)'), ('sh_CS', 'Serbian (Latin) (Serbia)'), ('sr_RS', 'Serbian (Serbia)'), ('sk_SK', 'Slovak (Slovakia)'), ('sl_SI', 'Slovenian (Slovenia)'), ('so_DJ', 'Somali (Djibouti)'), ('so_SO', 'Somali (Somalia)'), ('es_AR', 'Spanish (Argentina)'), ('es_BO', 'Spanish (Bolivia)'), ('es_CL', 'Spanish (Chile)'), ('es_CO', 'Spanish (Colombia)'), ('es_CR', 'Spanish (Costa Rica)'), ('es_CU', 'Spanish (Cuba)'), ('es_DO', 'Spanish (Dominican Republic)'), ('es_EC', 'Spanish (Ecuador)'), ('es_SV', 'Spanish (El Salvador)'), ('es_GT', 'Spanish (Guatemala)'), ('es_HN', 'Spanish (Honduras)'), ('es_MX', 'Spanish (Mexico)'), ('es_NI', 'Spanish (Nicaragua)'), ('es_PA', 'Spanish (Panama)'), ('es_PY', 'Spanish (Paraguay)'), ('es_PE', 'Spanish (Peru)'), ('es_PR', 'Spanish (Puerto Rico)'), ('es_ES', 'Spanish (Spain)'), ('es_US', 'Spanish (United States)'), ('es_UY', 'Spanish (Uruguay)'), ('es_VE', 'Spanish (Venezuela)'), ('sw_KE', 'Swahili (Kenya)'), ('sv_SE', 'Swedish (Sweden)'), ('tl_PH', 'Tagalog (Philippines)'), ('tg_TJ', 'Tajik (Tajikistan)'), ('ta_IN', 'Tamil (India)'), ('ta_LK', 'Tamil (Sri Lanka)'), ('te_IN', 'Telugu (India)'), ('th_TH', 'Thai (Thailand)'), ('ti_ET', 'Tigrinya (Ethiopia)'), ('tr_TR', 'Turkish (Turkey)'), ('uk_UA', 'Ukrainian (Ukraine)'), ('ur_PK', 'Urdu (Pakistan)'), ('uz_LATN_UZ', 'Uzbek (LATN,UZ)'), ('vi_VN', 'Vietnamese (Vietnam)'), ('cy_GB', 'Welsh (United Kingdom)'), ('xh_ZA', 'Xhosa (South Africa)'), ('yo_BJ', 'Yoruba (Benin)'), ('zu_ZA', 'Zulu (South Africa)')])
    time_zone_sid_key = models.CharField(max_length=40, verbose_name='Time Zone', sf_read_only=models.READ_ONLY, choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')])
    language_locale_key = models.CharField(max_length=40, verbose_name='Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    receives_info_emails = models.BooleanField(verbose_name='Info Emails', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    receives_admin_info_emails = models.BooleanField(verbose_name='Info Emails Admin', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    preferences_require_opportunity_products = models.BooleanField(verbose_name='RequireOpportunityProducts', sf_read_only=models.READ_ONLY)
    fiscal_year_start_month = models.IntegerField(verbose_name='Fiscal Year Starts In', sf_read_only=models.READ_ONLY, blank=True, null=True)
    uses_start_date_as_fiscal_year_name = models.BooleanField(verbose_name='Fiscal Year Name by Start', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    default_account_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByLeadOrContact', 'ControlledByLeadOrContact'), ('ControlledByCampaign', 'ControlledByCampaign')], blank=True, null=True)
    default_contact_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByParent', 'Controlled By Parent')], blank=True, null=True)
    default_opportunity_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByLeadOrContact', 'ControlledByLeadOrContact'), ('ControlledByCampaign', 'ControlledByCampaign')], blank=True, null=True)
    default_lead_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ReadEditTransfer', 'Read/Write/Transfer')], blank=True, null=True)
    default_case_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ReadEditTransfer', 'Read/Write/Transfer')], blank=True, null=True)
    default_calendar_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('HideDetailsInsert'), choices=[('HideDetails', 'Hide Details'), ('HideDetailsInsert', 'Hide Details and Add Events'), ('ShowDetails', 'Show Details'), ('ShowDetailsInsert', 'Show Details and Add Events'), ('AllowEdits', 'Full Access')], blank=True, null=True)
    default_pricebook_access = models.CharField(max_length=40, verbose_name='Default Price Book Access', sf_read_only=models.READ_ONLY, choices=[('None', 'No Access'), ('Read', 'View Only'), ('ReadSelect', 'Use')], blank=True, null=True)
    default_campaign_access = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')], blank=True, null=True)
    delegated_authentication_service_url = models.URLField(verbose_name='Single Sign-On Gateway URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    compliance_bcc_email = models.EmailField(verbose_name='Compliance BCC Email', sf_read_only=models.READ_ONLY, blank=True, null=True)
    ui_skin = models.CharField(max_length=40, verbose_name='UI Skin', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Theme3'), choices=[('Theme1', 'salesforce.com Classic'), ('Theme2', 'Salesforce'), ('PortalDefault', 'Portal Default'), ('Webstore', 'Webstore'), ('Theme3', 'Aloha')], blank=True, null=True)
    signup_country_iso_code = models.CharField(max_length=2, verbose_name='Signup Country', sf_read_only=models.READ_ONLY, blank=True, null=True)
    trial_expiration_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    num_knowledge_service = models.IntegerField(verbose_name='Knowledge Licenses', sf_read_only=models.READ_ONLY, blank=True, null=True)
    organization_type = models.CharField(max_length=40, verbose_name='Edition', sf_read_only=models.READ_ONLY, choices=[('Team Edition', None), ('Professional Edition', None), ('Enterprise Edition', None), ('Developer Edition', None), ('Personal Edition', None), ('Unlimited Edition', None), ('Contact Manager Edition', None), ('Base Edition', None)], blank=True, null=True)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    instance_name = models.CharField(max_length=5, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_sandbox = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    web_to_case_default_origin = models.CharField(max_length=40, verbose_name='Web to Cases Default Origin', sf_read_only=models.READ_ONLY, blank=True, null=True)
    monthly_page_views_used = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    monthly_page_views_entitlement = models.IntegerField(verbose_name='Monthly Page Views Allowed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_read_only = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='organization_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='organization_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'Organization'
        verbose_name = 'Organization'
        verbose_name_plural = 'Organizations'
        # keyPrefix = '00D'



class OutgoingEmail(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='External ID', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    validated_from_address = models.CharField(max_length=255, verbose_name='From', sf_read_only=models.NOT_UPDATEABLE, choices=[('agencyworkspace@benefitmall.com', 'agencyworkspace@benefitmall.com <agencyworkspace@benefitmall.com>'), ('mahesh.kasu@benefitmall.com', 'Insite Integration <mahesh.kasu@benefitmall.com>'), ('no-reply@benefitmall.com', 'no-reply@benefitmall.com <no-reply@benefitmall.com>')], blank=True, null=True)
    to_address = models.CharField(max_length=4000, verbose_name='To', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    cc_address = models.CharField(max_length=4000, verbose_name='CC', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    bcc_address = models.CharField(max_length=4000, verbose_name='BCC', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    subject = models.CharField(max_length=3000, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    text_body = models.TextField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    html_body = models.TextField(verbose_name='HTML Body', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    related_to = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    email_template = models.ForeignKey(EmailTemplate, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'OutgoingEmail'
        verbose_name = 'Outgoing Email'
        verbose_name_plural = 'Outgoing Emails'
        # keyPrefix = '0Q1'



class OutgoingEmailRelation(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='External ID', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    outgoing_email_id = models.CharField(max_length=255, verbose_name='Outgoing Email ID', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    relation = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    relation_address = models.CharField(max_length=255, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'OutgoingEmailRelation'
        verbose_name = 'Outgoing Email Relation'
        verbose_name_plural = 'Outgoing Email Relations'
        # keyPrefix = '0Q3'



class OwnedContentDocument(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='ownedcontentdocument_owner_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    content_document = models.ForeignKey(ContentDocument, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='ownedcontentdocument_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(verbose_name='Created', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='ownedcontentdocument_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(verbose_name='Content Modified Date', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    file_type = models.CharField(max_length=20, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_size = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    file_extension = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_url = models.URLField(verbose_name='Content URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_data_source_name = models.CharField(max_length=80, verbose_name='External Data Source', sf_read_only=models.READ_ONLY, blank=True, null=True)
    external_data_source_type = models.CharField(max_length=80, verbose_name='Class ID', sf_read_only=models.READ_ONLY, choices=[('contentHubItem', None), ('Datajourney', None), ('Identity', None), ('OpenSearch', None), ('outgoingemail', None), ('recommendation', None), ('SimpleURL', None), ('Wrapper', None)], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'OwnedContentDocument'
        verbose_name = 'User Owned File'
        verbose_name_plural = 'User Owned File'
        # keyPrefix = 'None'



class OwnerChangeOptionInfo(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    entity_definition_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=150, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_editable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    default_value = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent_id = models.CharField(max_length=70, verbose_name='Change Owner Option ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'OwnerChangeOptionInfo'
        verbose_name = 'Change Owner Option Info'
        verbose_name_plural = 'Change Owner Options Info'
        # keyPrefix = '0Cy'



class PendingServiceRouting(models.Model):
    owner = models.ForeignKey(Group, models.DO_NOTHING, related_name='pendingservicerouting_owner_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='pendingservicerouting_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='pendingservicerouting_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    work_item = models.OneToOneField(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    queue = models.ForeignKey(Group, models.DO_NOTHING, related_name='pendingservicerouting_queue_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_push_attempted = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    service_channel = models.ForeignKey('ServiceChannel', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_pushed = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    serial = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_declined_agent_session = models.CharField(max_length=200, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_transfer = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    routing_model = models.CharField(max_length=255, verbose_name="Queue's Routing Model", sf_read_only=models.READ_ONLY, choices=[('LeastActive', 'Least Active'), ('MostAvailable', 'Most Available'), ('ExternalRouting', 'External Routing')], blank=True, null=True)
    custom_requested_date_time = models.DateTimeField(verbose_name='Custom Requested Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    routing_priority = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    routing_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('QueueBased', 'Queue Based'), ('SkillsBased', 'Skills Based')], blank=True, null=True)
    is_ready_for_routing = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    capacity_weight = models.DecimalField(max_digits=10, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    capacity_percentage = models.DecimalField(max_digits=5, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    push_timeout = models.IntegerField(verbose_name='Push Time-Out', sf_read_only=models.READ_ONLY, blank=True, null=True)
    preferred_user = models.ForeignKey('User', models.DO_NOTHING, related_name='pendingservicerouting_preferreduser_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    drop_additional_skills_timeout = models.IntegerField(verbose_name='Drop Additional Skills Time-Out', sf_read_only=models.READ_ONLY, blank=True, null=True)
    group = models.ForeignKey(Group, models.DO_NOTHING, related_name='pendingservicerouting_group_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PendingServiceRouting'
        verbose_name = 'Pending Service Routing'
        verbose_name_plural = 'Pending Service Routings'
        # keyPrefix = '0JR'



class PendingServiceRoutingShare(models.Model):
    parent = models.ForeignKey(PendingServiceRouting, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'PendingServiceRoutingShare'
        verbose_name = 'Pending Service Routing Share'
        verbose_name_plural = 'Pending Service Routing Share'
        # keyPrefix = 'None'



class Period(models.Model):
    fiscal_year_settings = models.ForeignKey(FiscalYearSettings, models.DO_NOTHING, related_name='period_fiscalyearsettings_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Month', None), ('Quarter', None), ('Week', None), ('Year', None)], blank=True, null=True)
    start_date = models.DateField(sf_read_only=models.READ_ONLY)
    end_date = models.DateField(sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_forecast_period = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    quarter_label = models.CharField(max_length=40, verbose_name='Quarter Name', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Spring'), choices=[('Spring', 'Spring'), ('Summer', 'Summer'), ('Fall', 'Fall'), ('Winter', 'Winter')], blank=True, null=True)
    period_label = models.CharField(max_length=40, verbose_name='Period Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    number = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    fully_qualified_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Period'
        verbose_name = 'Period'
        verbose_name_plural = 'Period'
        # keyPrefix = '026'



class PermissionSet(models.Model):
    name = models.CharField(max_length=80, verbose_name='Permission Set Name', sf_read_only=models.READ_ONLY)
    label = models.CharField(max_length=80, verbose_name='Permission Set Label', sf_read_only=models.READ_ONLY)
    license = models.ForeignKey('PermissionSetLicense', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [PermissionSetLicense, UserLicense]
    profile = models.ForeignKey('Profile', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_owned_by_profile = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_custom = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    permissions_email_single = models.BooleanField(verbose_name='Send Email', sf_read_only=models.READ_ONLY)
    permissions_email_mass = models.BooleanField(verbose_name='Mass Email', sf_read_only=models.READ_ONLY)
    permissions_edit_task = models.BooleanField(verbose_name='Edit Tasks', sf_read_only=models.READ_ONLY)
    permissions_edit_event = models.BooleanField(verbose_name='Edit Events', sf_read_only=models.READ_ONLY)
    permissions_export_report = models.BooleanField(verbose_name='Export Reports', sf_read_only=models.READ_ONLY)
    permissions_import_personal = models.BooleanField(verbose_name='Import Personal Contacts', sf_read_only=models.READ_ONLY)
    permissions_data_export = models.BooleanField(verbose_name='Weekly Data Export', sf_read_only=models.READ_ONLY)
    permissions_manage_users = models.BooleanField(verbose_name='Manage Users', sf_read_only=models.READ_ONLY)
    permissions_edit_public_filters = models.BooleanField(verbose_name='Manage Public List Views', sf_read_only=models.READ_ONLY)
    permissions_edit_public_templates = models.BooleanField(verbose_name='Manage Public Classic Email Templates', sf_read_only=models.READ_ONLY)
    permissions_modify_all_data = models.BooleanField(verbose_name='Modify All Data', sf_read_only=models.READ_ONLY)
    permissions_manage_cases = models.BooleanField(verbose_name='Manage Cases', sf_read_only=models.READ_ONLY)
    permissions_mass_inline_edit = models.BooleanField(verbose_name='Mass Edits from Lists', sf_read_only=models.READ_ONLY)
    permissions_edit_knowledge = models.BooleanField(verbose_name='Manage Articles', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge = models.BooleanField(verbose_name='Manage Salesforce Knowledge', sf_read_only=models.READ_ONLY)
    permissions_manage_solutions = models.BooleanField(verbose_name='Manage Published Solutions', sf_read_only=models.READ_ONLY)
    permissions_customize_application = models.BooleanField(verbose_name='Customize Application', sf_read_only=models.READ_ONLY)
    permissions_edit_readonly_fields = models.BooleanField(verbose_name='Edit Read Only Fields', sf_read_only=models.READ_ONLY)
    permissions_run_reports = models.BooleanField(verbose_name='Run Reports', sf_read_only=models.READ_ONLY)
    permissions_view_setup = models.BooleanField(verbose_name='View Setup and Configuration', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_entity = models.BooleanField(verbose_name='Transfer Record', sf_read_only=models.READ_ONLY)
    permissions_new_report_builder = models.BooleanField(verbose_name='Report Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_css_users = models.BooleanField(verbose_name='Manage Customer Users', sf_read_only=models.READ_ONLY)
    permissions_activate_contract = models.BooleanField(verbose_name='Activate Contracts', sf_read_only=models.READ_ONLY)
    permissions_import_leads = models.BooleanField(verbose_name='Import Leads', sf_read_only=models.READ_ONLY)
    permissions_manage_leads = models.BooleanField(verbose_name='Manage Leads', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_lead = models.BooleanField(verbose_name='Transfer Leads', sf_read_only=models.READ_ONLY)
    permissions_view_all_data = models.BooleanField(verbose_name='View All Data', sf_read_only=models.READ_ONLY)
    permissions_edit_public_documents = models.BooleanField(verbose_name='Manage Public Documents', sf_read_only=models.READ_ONLY)
    permissions_view_encrypted_data = models.BooleanField(verbose_name='View Encrypted Data', sf_read_only=models.READ_ONLY)
    permissions_edit_brand_templates = models.BooleanField(verbose_name='Manage Letterheads', sf_read_only=models.READ_ONLY)
    permissions_edit_html_templates = models.BooleanField(verbose_name='Edit HTML Templates', sf_read_only=models.READ_ONLY)
    permissions_chatter_internal_user = models.BooleanField(verbose_name='Chatter Internal User', sf_read_only=models.READ_ONLY)
    permissions_manage_encryption_keys = models.BooleanField(verbose_name='Manage Encryption Keys', sf_read_only=models.READ_ONLY)
    permissions_delete_activated_contract = models.BooleanField(verbose_name='Delete Activated Contracts', sf_read_only=models.READ_ONLY)
    permissions_chatter_invite_external_users = models.BooleanField(verbose_name='Invite Customers To Chatter', sf_read_only=models.READ_ONLY)
    permissions_send_sit_requests = models.BooleanField(verbose_name='Send Stay-in-Touch Requests', sf_read_only=models.READ_ONLY)
    permissions_override_forecasts = models.BooleanField(verbose_name='Override Forecasts', sf_read_only=models.READ_ONLY)
    permissions_view_all_forecasts = models.BooleanField(verbose_name='View All Forecasts', sf_read_only=models.READ_ONLY)
    permissions_api_user_only = models.BooleanField(verbose_name='Api Only User', sf_read_only=models.READ_ONLY)
    permissions_manage_remote_access = models.BooleanField(verbose_name='Manage Connected Apps', sf_read_only=models.READ_ONLY)
    permissions_can_use_new_dashboard_builder = models.BooleanField(verbose_name='Drag-and-Drop Dashboard Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_categories = models.BooleanField(verbose_name='Manage Categories', sf_read_only=models.READ_ONLY)
    permissions_convert_leads = models.BooleanField(verbose_name='Convert Leads', sf_read_only=models.READ_ONLY)
    permissions_password_never_expires = models.BooleanField(verbose_name='Password Never Expires', sf_read_only=models.READ_ONLY)
    permissions_use_team_reassign_wizards = models.BooleanField(verbose_name='Use Team Reassignment Wizards', sf_read_only=models.READ_ONLY)
    permissions_install_packaging = models.BooleanField(verbose_name='Download AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_publish_packaging = models.BooleanField(verbose_name='Upload AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_partners = models.BooleanField(verbose_name='Manage External Users', sf_read_only=models.READ_ONLY)
    permissions_chatter_own_groups = models.BooleanField(verbose_name='Create and Own New Chatter Groups', sf_read_only=models.READ_ONLY)
    permissions_edit_opp_line_item_unit_price = models.BooleanField(verbose_name='Edit Opportunity Product Sales Price', sf_read_only=models.READ_ONLY)
    permissions_create_packaging = models.BooleanField(verbose_name='Create AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_bulk_api_hard_delete = models.BooleanField(verbose_name='Bulk API Hard Delete', sf_read_only=models.READ_ONLY)
    permissions_inbound_migration_tools_user = models.BooleanField(verbose_name='Deploy Change Sets', sf_read_only=models.READ_ONLY)
    permissions_solution_import = models.BooleanField(verbose_name='Import Solutions', sf_read_only=models.READ_ONLY)
    permissions_manage_call_centers = models.BooleanField(verbose_name='Manage Call Centers', sf_read_only=models.READ_ONLY)
    permissions_portal_super_user = models.BooleanField(verbose_name='Portal Super User', sf_read_only=models.READ_ONLY)
    permissions_manage_synonyms = models.BooleanField(verbose_name='Manage Synonyms', sf_read_only=models.READ_ONLY)
    permissions_outbound_migration_tools_user = models.BooleanField(verbose_name='Create and Upload Change Sets', sf_read_only=models.READ_ONLY)
    permissions_delegated_portal_user_admin = models.BooleanField(verbose_name='Delegated External User Administrator', sf_read_only=models.READ_ONLY)
    permissions_view_content = models.BooleanField(verbose_name='View Content in Portals', sf_read_only=models.READ_ONLY)
    permissions_manage_email_client_config = models.BooleanField(verbose_name='Manage Email Client Configurations', sf_read_only=models.READ_ONLY)
    permissions_enable_notifications = models.BooleanField(verbose_name='Send Outbound Messages', sf_read_only=models.READ_ONLY)
    permissions_is_sso_enabled = models.BooleanField(verbose_name='Is Single Sign-On Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_data_integrations = models.BooleanField(verbose_name='Manage Data Integrations', sf_read_only=models.READ_ONLY)
    permissions_distribute_from_pers_wksp = models.BooleanField(verbose_name='Create Content Deliveries', sf_read_only=models.READ_ONLY)
    permissions_view_data_categories = models.BooleanField(verbose_name='View Data Categories in Setup', sf_read_only=models.READ_ONLY)
    permissions_manage_data_categories = models.BooleanField(verbose_name='Manage Data Categories', sf_read_only=models.READ_ONLY)
    permissions_author_apex = models.BooleanField(verbose_name='Author Apex', sf_read_only=models.READ_ONLY)
    permissions_manage_mobile = models.BooleanField(verbose_name='Manage Mobile Configurations', sf_read_only=models.READ_ONLY)
    permissions_api_enabled = models.BooleanField(verbose_name='API Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_report_types = models.BooleanField(verbose_name='Manage Custom Report Types', sf_read_only=models.READ_ONLY)
    permissions_edit_case_comments = models.BooleanField(verbose_name='Edit Case Comments', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_case = models.BooleanField(verbose_name='Transfer Cases', sf_read_only=models.READ_ONLY)
    permissions_content_administrator = models.BooleanField(verbose_name='Manage Salesforce CRM Content', sf_read_only=models.READ_ONLY)
    permissions_create_workspaces = models.BooleanField(verbose_name='Create Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_content_permissions = models.BooleanField(verbose_name='Manage Content Permissions', sf_read_only=models.READ_ONLY)
    permissions_manage_content_properties = models.BooleanField(verbose_name='Manage Content Properties', sf_read_only=models.READ_ONLY)
    permissions_manage_content_types = models.BooleanField(verbose_name='Manage record types and layouts for Files', sf_read_only=models.READ_ONLY)
    permissions_schedule_job = models.BooleanField(verbose_name='Schedule Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_exchange_config = models.BooleanField(verbose_name='Manage Lightning Sync', sf_read_only=models.READ_ONLY)
    permissions_manage_analytic_snapshots = models.BooleanField(verbose_name='Manage Reporting Snapshots', sf_read_only=models.READ_ONLY)
    permissions_schedule_reports = models.BooleanField(verbose_name='Schedule Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_business_hour_holidays = models.BooleanField(verbose_name='Manage Business Hours Holidays', sf_read_only=models.READ_ONLY)
    permissions_manage_entitlements = models.BooleanField(verbose_name='Manage Entitlements', sf_read_only=models.READ_ONLY)
    permissions_manage_dynamic_dashboards = models.BooleanField(verbose_name='Manage Dynamic Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_interaction = models.BooleanField(verbose_name='Manage Flow', sf_read_only=models.READ_ONLY)
    permissions_view_my_teams_dashboards = models.BooleanField(verbose_name="View My Team's Dashboards", sf_read_only=models.READ_ONLY)
    permissions_moderate_chatter = models.BooleanField(verbose_name='Moderate Chatter', sf_read_only=models.READ_ONLY)
    permissions_reset_passwords = models.BooleanField(verbose_name='Reset User Passwords and Unlock Users', sf_read_only=models.READ_ONLY)
    permissions_flow_uflrequired = models.BooleanField(db_column='PermissionsFlowUFLRequired', verbose_name='Require Flow User Feature License', sf_read_only=models.READ_ONLY)
    permissions_can_insert_feed_system_fields = models.BooleanField(verbose_name='Insert System Field Values for Chatter Feeds', sf_read_only=models.READ_ONLY)
    permissions_activities_access = models.BooleanField(verbose_name='Access Activities', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge_import_export = models.BooleanField(verbose_name='Manage Knowledge Article Import/Export', sf_read_only=models.READ_ONLY)
    permissions_email_template_management = models.BooleanField(verbose_name='Manage Email Templates', sf_read_only=models.READ_ONLY)
    permissions_email_administration = models.BooleanField(verbose_name='Email Administration', sf_read_only=models.READ_ONLY)
    permissions_manage_chatter_messages = models.BooleanField(verbose_name='Manage Chatter Messages and Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_email_ic = models.BooleanField(db_column='PermissionsAllowEmailIC', verbose_name='Email-Based Identity Verification Option', sf_read_only=models.READ_ONLY)
    permissions_chatter_file_link = models.BooleanField(verbose_name='Create Public Links', sf_read_only=models.READ_ONLY)
    permissions_force_two_factor = models.BooleanField(verbose_name='Two-Factor Authentication for User Interface Logins', sf_read_only=models.READ_ONLY)
    permissions_view_event_log_files = models.BooleanField(verbose_name='View Event Log Files', sf_read_only=models.READ_ONLY)
    permissions_manage_networks = models.BooleanField(verbose_name='Create and Set Up Communities', sf_read_only=models.READ_ONLY)
    permissions_manage_auth_providers = models.BooleanField(verbose_name='Manage Auth. Providers', sf_read_only=models.READ_ONLY)
    permissions_run_flow = models.BooleanField(verbose_name='Run Flows', sf_read_only=models.READ_ONLY)
    permissions_view_global_header = models.BooleanField(verbose_name='View Global Header', sf_read_only=models.READ_ONLY)
    permissions_manage_quotas = models.BooleanField(verbose_name='Manage Quotas', sf_read_only=models.READ_ONLY)
    permissions_create_customize_dashboards = models.BooleanField(verbose_name='Create and Customize Dashboards', sf_read_only=models.READ_ONLY)
    permissions_create_dashboard_folders = models.BooleanField(verbose_name='Create Dashboard Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_dashboards = models.BooleanField(verbose_name='View Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_dashbds_in_pub_folders = models.BooleanField(verbose_name='Manage Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_create_customize_reports = models.BooleanField(verbose_name='Create and Customize Reports', sf_read_only=models.READ_ONLY)
    permissions_create_report_folders = models.BooleanField(verbose_name='Create Report Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_reports = models.BooleanField(verbose_name='View Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_reports_in_pub_folders = models.BooleanField(verbose_name='Manage Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_edit_my_dashboards = models.BooleanField(verbose_name='Edit My Dashboards', sf_read_only=models.READ_ONLY)
    permissions_edit_my_reports = models.BooleanField(verbose_name='Edit My Reports', sf_read_only=models.READ_ONLY)
    permissions_view_all_users = models.BooleanField(verbose_name='View All Users', sf_read_only=models.READ_ONLY)
    permissions_allow_universal_search = models.BooleanField(verbose_name='Knowledge One', sf_read_only=models.READ_ONLY)
    permissions_connect_org_to_environment_hub = models.BooleanField(verbose_name='Connect Organization to Environment Hub', sf_read_only=models.READ_ONLY)
    permissions_create_customize_filters = models.BooleanField(verbose_name='Create and Customize List Views', sf_read_only=models.READ_ONLY)
    permissions_content_hub_user = models.BooleanField(verbose_name='Files Connect Cloud', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_feeds = models.BooleanField(verbose_name='Moderate Communities Feeds', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_files = models.BooleanField(verbose_name='Moderate Communities Files', sf_read_only=models.READ_ONLY)
    permissions_govern_networks = models.BooleanField(verbose_name='Manage Communities', sf_read_only=models.READ_ONLY)
    permissions_sales_console = models.BooleanField(verbose_name='Sales Console', sf_read_only=models.READ_ONLY)
    permissions_two_factor_api = models.BooleanField(verbose_name='Two-Factor Authentication for API Logins', sf_read_only=models.READ_ONLY)
    permissions_delete_topics = models.BooleanField(verbose_name='Delete Topics', sf_read_only=models.READ_ONLY)
    permissions_edit_topics = models.BooleanField(verbose_name='Edit Topics', sf_read_only=models.READ_ONLY)
    permissions_create_topics = models.BooleanField(verbose_name='Create Topics', sf_read_only=models.READ_ONLY)
    permissions_assign_topics = models.BooleanField(verbose_name='Assign Topics', sf_read_only=models.READ_ONLY)
    permissions_identity_enabled = models.BooleanField(verbose_name='Use Identity Features', sf_read_only=models.READ_ONLY)
    permissions_identity_connect = models.BooleanField(verbose_name='Use Identity Connect', sf_read_only=models.READ_ONLY)
    permissions_allow_view_knowledge = models.BooleanField(verbose_name='Allow View Knowledge', sf_read_only=models.READ_ONLY)
    permissions_content_workspaces = models.BooleanField(verbose_name='Access Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_search_promotion_rules = models.BooleanField(verbose_name='Manage Promoted Search Terms', sf_read_only=models.READ_ONLY)
    permissions_custom_mobile_apps_access = models.BooleanField(verbose_name='Access Custom Mobile Apps', sf_read_only=models.READ_ONLY)
    permissions_view_help_link = models.BooleanField(verbose_name='View Help Link', sf_read_only=models.READ_ONLY)
    permissions_manage_profiles_permissionsets = models.BooleanField(verbose_name='Manage Profiles and Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_assign_permission_sets = models.BooleanField(verbose_name='Assign Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_manage_roles = models.BooleanField(verbose_name='Manage Roles', sf_read_only=models.READ_ONLY)
    permissions_manage_ip_addresses = models.BooleanField(verbose_name='Manage IP Addresses', sf_read_only=models.READ_ONLY)
    permissions_manage_sharing = models.BooleanField(verbose_name='Manage Sharing', sf_read_only=models.READ_ONLY)
    permissions_manage_internal_users = models.BooleanField(verbose_name='Manage Internal Users', sf_read_only=models.READ_ONLY)
    permissions_manage_password_policies = models.BooleanField(verbose_name='Manage Password Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_login_access_policies = models.BooleanField(verbose_name='Manage Login Access Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_permissions = models.BooleanField(verbose_name='Manage Custom Permissions', sf_read_only=models.READ_ONLY)
    permissions_can_verify_comment = models.BooleanField(verbose_name='Verify Answers to Chatter Questions', sf_read_only=models.READ_ONLY)
    permissions_manage_unlisted_groups = models.BooleanField(verbose_name='Manage Unlisted Groups', sf_read_only=models.READ_ONLY)
    permissions_std_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture Standard', sf_read_only=models.READ_ONLY)
    permissions_insights_app_dashboard_editor = models.BooleanField(verbose_name='Create and Edit Analytics Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in API', sf_read_only=models.READ_ONLY)
    permissions_insights_app_user = models.BooleanField(verbose_name='Use Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_admin = models.BooleanField(verbose_name='Manage Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_elt_editor = models.BooleanField(verbose_name='Edit Analytics Dataflows', sf_read_only=models.READ_ONLY)
    permissions_insights_app_upload_user = models.BooleanField(verbose_name='Upload External Data to Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_create_application = models.BooleanField(verbose_name='Create Analytics Apps', sf_read_only=models.READ_ONLY)
    permissions_debug_apex = models.BooleanField(verbose_name='Debug Apex', sf_read_only=models.READ_ONLY)
    permissions_lightning_experience_user = models.BooleanField(verbose_name='Lightning Experience User', sf_read_only=models.READ_ONLY)
    permissions_view_data_leakage_events = models.BooleanField(verbose_name='View Data Leakage Detection Events', sf_read_only=models.READ_ONLY)
    permissions_config_custom_recs = models.BooleanField(verbose_name='Configure Custom Recommendations', sf_read_only=models.READ_ONLY)
    permissions_submit_macros_allowed = models.BooleanField(verbose_name="Manage Macros Users Can't Undo", sf_read_only=models.READ_ONLY)
    permissions_bulk_macros_allowed = models.BooleanField(verbose_name='Run Macros on Multiple Records', sf_read_only=models.READ_ONLY)
    permissions_share_internal_articles = models.BooleanField(verbose_name='Share internal Knowledge articles externally', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_messages = models.BooleanField(verbose_name='Moderate Communities Chatter Messages', sf_read_only=models.READ_ONLY)
    permissions_manage_session_permission_sets = models.BooleanField(verbose_name='Manage Session Permission Set Activations', sf_read_only=models.READ_ONLY)
    permissions_manage_templated_app = models.BooleanField(verbose_name='Manage Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_use_templated_app = models.BooleanField(verbose_name='Use Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_send_announcement_emails = models.BooleanField(verbose_name='Send announcement emails', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_post = models.BooleanField(verbose_name='Edit My Own Posts', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_record_post = models.BooleanField(verbose_name='Edit Posts on Records I Own', sf_read_only=models.READ_ONLY)
    permissions_admin_analytics_user = models.BooleanField(verbose_name='Access Event Monitoring Analytics Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_create_audit_fields = models.BooleanField(verbose_name='Set Audit Fields upon Record Creation', sf_read_only=models.READ_ONLY)
    permissions_update_with_inactive_owner = models.BooleanField(verbose_name='Update Records with Inactive Owners', sf_read_only=models.READ_ONLY)
    permissions_assign_user_to_skill = models.BooleanField(verbose_name='Assign Chat Skills to Users', sf_read_only=models.READ_ONLY)
    permissions_wave_trend_reports = models.BooleanField(verbose_name='Trend Report Data in Analytics', sf_read_only=models.READ_ONLY)
    permissions_wave_tabular_download = models.BooleanField(verbose_name='Download Analytics Data', sf_read_only=models.READ_ONLY)
    permissions_manage_sandboxes = models.BooleanField(verbose_name='Manage Sandboxes', sf_read_only=models.READ_ONLY)
    permissions_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture', sf_read_only=models.READ_ONLY)
    permissions_import_custom_objects = models.BooleanField(verbose_name='Import Custom Objects', sf_read_only=models.READ_ONLY)
    permissions_delegated_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in User Interface', sf_read_only=models.READ_ONLY)
    permissions_chatter_compose_ui_codesnippet = models.BooleanField(verbose_name='Allow Inclusion of Code Snippets from UI', sf_read_only=models.READ_ONLY)
    permissions_select_files_from_salesforce = models.BooleanField(verbose_name='Select Files from Salesforce', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_users = models.BooleanField(verbose_name='Moderate Community Users', sf_read_only=models.READ_ONLY)
    permissions_merge_topics = models.BooleanField(verbose_name='Merge Topics', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_reports = models.BooleanField(verbose_name='Subscribe to Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_pvt_rpts_and_dashbds = models.BooleanField(verbose_name='Manage All Private Reports and Dashboards', sf_read_only=models.READ_ONLY)
    permissions_campaign_influence2 = models.BooleanField(verbose_name='Campaign Influence', sf_read_only=models.READ_ONLY)
    permissions_view_data_assessment = models.BooleanField(verbose_name='Access to view Data Assessment', sf_read_only=models.READ_ONLY)
    permissions_remove_direct_message_members = models.BooleanField(verbose_name='Remove People from Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_can_approve_feed_post = models.BooleanField(verbose_name='Can Approve Feed Post and Comment', sf_read_only=models.READ_ONLY)
    permissions_add_direct_message_members = models.BooleanField(verbose_name='Add People to Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_view_edit_converted_leads = models.BooleanField(verbose_name='View and Edit Converted Leads', sf_read_only=models.READ_ONLY)
    permissions_show_company_name_as_user_badge = models.BooleanField(verbose_name='Show Company Name as Community Role', sf_read_only=models.READ_ONLY)
    permissions_access_cmc = models.BooleanField(db_column='PermissionsAccessCMC', verbose_name='Access Community Management', sf_read_only=models.READ_ONLY)
    permissions_archive_articles = models.BooleanField(verbose_name='Archive Articles', sf_read_only=models.READ_ONLY)
    permissions_publish_articles = models.BooleanField(verbose_name='Publish Articles', sf_read_only=models.READ_ONLY)
    permissions_view_health_check = models.BooleanField(verbose_name='View Health Check', sf_read_only=models.READ_ONLY)
    permissions_manage_health_check = models.BooleanField(verbose_name='Manage Health Check', sf_read_only=models.READ_ONLY)
    permissions_packaging2 = models.BooleanField(verbose_name='Create and Update Second-Generation Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_certificates = models.BooleanField(verbose_name='Manage Certificates', sf_read_only=models.READ_ONLY)
    permissions_create_report_in_lightning = models.BooleanField(verbose_name='Report Builder (Lightning Experience)', sf_read_only=models.READ_ONLY)
    permissions_prevent_classic_experience = models.BooleanField(verbose_name='Hide Option to Switch to Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_hide_read_by_list = models.BooleanField(verbose_name='Hide the Seen By List', sf_read_only=models.READ_ONLY)
    permissions_submit_for_translation = models.BooleanField(verbose_name='Article Translation - Submit for Translation', sf_read_only=models.READ_ONLY)
    permissions_edit_translation = models.BooleanField(verbose_name='Article Translation - Edit', sf_read_only=models.READ_ONLY)
    permissions_publish_translation = models.BooleanField(verbose_name='Article Translation - Publish', sf_read_only=models.READ_ONLY)
    permissions_list_email_send = models.BooleanField(verbose_name='Allow sending of List Emails', sf_read_only=models.READ_ONLY)
    permissions_feed_pinning = models.BooleanField(verbose_name='Pin Posts in Feeds', sf_read_only=models.READ_ONLY)
    permissions_change_dashboard_colors = models.BooleanField(verbose_name='Change Dashboard Colors', sf_read_only=models.READ_ONLY)
    permissions_manage_recommendation_strategies = models.BooleanField(verbose_name='Manage Next Best Action Strategies', sf_read_only=models.READ_ONLY)
    permissions_manage_propositions = models.BooleanField(verbose_name='Manage Next Best Action Recommendations', sf_read_only=models.READ_ONLY)
    permissions_close_conversations = models.BooleanField(verbose_name='Close Conversation Threads', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_roles_grps = models.BooleanField(verbose_name='Subscribe to Reports: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_roles_grps = models.BooleanField(verbose_name='Subscribe to Dashboards: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_use_web_link = models.BooleanField(verbose_name='Allow Access to Customized Actions', sf_read_only=models.READ_ONLY)
    permissions_has_unlimited_nbaexecutions = models.BooleanField(db_column='PermissionsHasUnlimitedNBAExecutions', verbose_name='User Has Unlimited Next Best Action Strategy Executions', sf_read_only=models.READ_ONLY)
    permissions_view_only_embedded_app_user = models.BooleanField(verbose_name='Access to View-Only Licensed Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_view_all_activities = models.BooleanField(verbose_name='View All Activities', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_to_other_users = models.BooleanField(verbose_name='Subscribe to Reports: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_lightning_console_allowed_for_user = models.BooleanField(verbose_name='Lightning Console User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_reports_run_as_user = models.BooleanField(verbose_name='Subscribe to Reports: Set Running User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_dashboards = models.BooleanField(verbose_name='Subscribe to Dashboards', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_to_other_users = models.BooleanField(verbose_name='Subscribe to Dashboards: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_in_pub = models.BooleanField(verbose_name='Manage Public Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_transactional_email_send = models.BooleanField(verbose_name='Send Non-Commercial Email', sf_read_only=models.READ_ONLY)
    permissions_view_private_static_resources = models.BooleanField(verbose_name='View Private Static Resources', sf_read_only=models.READ_ONLY)
    permissions_view_customer_sentiment = models.BooleanField(verbose_name='View Community 360', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_folder = models.BooleanField(verbose_name='Create Folders for Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_apex_rest_services = models.BooleanField(verbose_name='Apex REST Services', sf_read_only=models.READ_ONLY)
    permissions_enable_community_app_launcher = models.BooleanField(verbose_name='Show App Launcher in Communities', sf_read_only=models.READ_ONLY)
    permissions_give_recognition_badge = models.BooleanField(verbose_name='Give Recognition Badges in Lightning Communities', sf_read_only=models.READ_ONLY)
    permissions_use_my_search = models.BooleanField(verbose_name='Einstein Search', sf_read_only=models.READ_ONLY)
    permissions_ltng_promo_reserved01_user_perm = models.BooleanField(verbose_name='Remain in Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_manage_subscriptions = models.BooleanField(verbose_name='Manage Analytics Subscriptions', sf_read_only=models.READ_ONLY)
    permissions_wave_manage_private_assets_user = models.BooleanField(verbose_name='Manage Analytics Private Assets', sf_read_only=models.READ_ONLY)
    permissions_can_edit_data_prep_recipe = models.BooleanField(verbose_name='Edit Dataset Recipes', sf_read_only=models.READ_ONLY)
    permissions_add_analytics_remote_connections = models.BooleanField(verbose_name='Add Analytics Remote Connections', sf_read_only=models.READ_ONLY)
    permissions_manage_surveys = models.BooleanField(verbose_name='Manage Surveys', sf_read_only=models.READ_ONLY)
    permissions_use_assistant_dialog = models.BooleanField(verbose_name='Einstein Search Record Previews', sf_read_only=models.READ_ONLY)
    permissions_use_query_suggestions = models.BooleanField(verbose_name='Einstein Search Results Based On Conversational Queries', sf_read_only=models.READ_ONLY)
    permissions_record_visibility_api = models.BooleanField(db_column='PermissionsRecordVisibilityAPI', verbose_name='Enable RecordVisibility API', sf_read_only=models.READ_ONLY)
    permissions_view_roles = models.BooleanField(verbose_name='View Roles and Role Hierarchy', sf_read_only=models.READ_ONLY)
    permissions_can_manage_maps = models.BooleanField(verbose_name='Manage Analytics Custom Maps', sf_read_only=models.READ_ONLY)
    permissions_lmoutbound_messaging_user_perm = models.BooleanField(db_column='PermissionsLMOutboundMessagingUserPerm', verbose_name='Agent Initiated Outbound Messaging', sf_read_only=models.READ_ONLY)
    permissions_modify_data_classification = models.BooleanField(verbose_name='Modify Data Classification', sf_read_only=models.READ_ONLY)
    permissions_privacy_data_access = models.BooleanField(verbose_name='Allow user to access privacy data', sf_read_only=models.READ_ONLY)
    permissions_query_all_files = models.BooleanField(verbose_name='Query All Files', sf_read_only=models.READ_ONLY)
    permissions_modify_metadata = models.BooleanField(verbose_name='Modify Metadata Through Metadata API Functions', sf_read_only=models.READ_ONLY)
    permissions_manage_cms = models.BooleanField(db_column='PermissionsManageCMS', verbose_name='Manage CMS Workspaces and Channels', sf_read_only=models.READ_ONLY)
    permissions_sandbox_testing_in_community_app = models.BooleanField(verbose_name='Enables testing a sandbox community in the Mobile Publisher for Community Cloud app.', sf_read_only=models.READ_ONLY)
    permissions_view_flow_usage_and_flow_event_data = models.BooleanField(verbose_name='View Flow Usage and Flow Event Data', sf_read_only=models.READ_ONLY)
    permissions_can_edit_prompts = models.BooleanField(verbose_name='Manage Prompts', sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionset_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionset_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    has_activation_required = models.BooleanField(verbose_name='Session Activation Required', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    permission_set_group = models.ForeignKey('PermissionSetGroup', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=255, verbose_name='Permission Set Type', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Regular'), choices=[('Regular', None), ('Profile', None), ('Group', None), ('Session', None), ('Integration', None), ('Standard', None)], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PermissionSet'
        verbose_name = 'Permission Set'
        verbose_name_plural = 'Permission Sets'
        # keyPrefix = '0PS'



class PermissionSetAssignment(models.Model):
    permission_set = models.ForeignKey(PermissionSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    permission_set_group = models.ForeignKey('PermissionSetGroup', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    assignee = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    system_modstamp = models.DateTimeField(verbose_name='Date Assigned', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'PermissionSetAssignment'
        verbose_name = 'Permission Set Assignment'
        verbose_name_plural = 'Permission Set Assignments'
        # keyPrefix = '0Pa'



class PermissionSetGroup(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='API Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetgroup_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetgroup_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Updated'), choices=[('Updated', None), ('Outdated', None), ('Updating', None), ('Failed', None)])
    class Meta(models.Model.Meta):
        db_table = 'PermissionSetGroup'
        verbose_name = 'Permission Set Group'
        verbose_name_plural = 'Permission Set Groups'
        # keyPrefix = '0PG'



class PermissionSetGroupComponent(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetgroupcomponent_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetgroupcomponent_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    permission_set_group = models.ForeignKey(PermissionSetGroup, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    permission_set = models.ForeignKey(PermissionSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'PermissionSetGroupComponent'
        verbose_name = 'Permission Set Group Component'
        verbose_name_plural = 'Permission Set Group Components'
        # keyPrefix = '0PM'



class PermissionSetLicense(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Permission Set License Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetlicense_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetlicense_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    permission_set_license_key = models.CharField(unique=True, max_length=81, sf_read_only=models.READ_ONLY)
    total_licenses = models.IntegerField(sf_read_only=models.READ_ONLY)
    status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Active', 'Active'), ('Disabled', 'Disabled')])
    expiration_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    maximum_permissions_email_single = models.BooleanField(verbose_name='Send Email', sf_read_only=models.READ_ONLY)
    maximum_permissions_email_mass = models.BooleanField(verbose_name='Mass Email', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_task = models.BooleanField(verbose_name='Edit Tasks', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_event = models.BooleanField(verbose_name='Edit Events', sf_read_only=models.READ_ONLY)
    maximum_permissions_export_report = models.BooleanField(verbose_name='Export Reports', sf_read_only=models.READ_ONLY)
    maximum_permissions_import_personal = models.BooleanField(verbose_name='Import Personal Contacts', sf_read_only=models.READ_ONLY)
    maximum_permissions_data_export = models.BooleanField(verbose_name='Weekly Data Export', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_users = models.BooleanField(verbose_name='Manage Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_public_filters = models.BooleanField(verbose_name='Manage Public List Views', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_public_templates = models.BooleanField(verbose_name='Manage Public Classic Email Templates', sf_read_only=models.READ_ONLY)
    maximum_permissions_modify_all_data = models.BooleanField(verbose_name='Modify All Data', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_cases = models.BooleanField(verbose_name='Manage Cases', sf_read_only=models.READ_ONLY)
    maximum_permissions_mass_inline_edit = models.BooleanField(verbose_name='Mass Edits from Lists', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_knowledge = models.BooleanField(verbose_name='Manage Articles', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_knowledge = models.BooleanField(verbose_name='Manage Salesforce Knowledge', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_solutions = models.BooleanField(verbose_name='Manage Published Solutions', sf_read_only=models.READ_ONLY)
    maximum_permissions_customize_application = models.BooleanField(verbose_name='Customize Application', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_readonly_fields = models.BooleanField(verbose_name='Edit Read Only Fields', sf_read_only=models.READ_ONLY)
    maximum_permissions_run_reports = models.BooleanField(verbose_name='Run Reports', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_setup = models.BooleanField(verbose_name='View Setup and Configuration', sf_read_only=models.READ_ONLY)
    maximum_permissions_transfer_any_entity = models.BooleanField(verbose_name='Transfer Record', sf_read_only=models.READ_ONLY)
    maximum_permissions_new_report_builder = models.BooleanField(verbose_name='Report Builder', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_css_users = models.BooleanField(verbose_name='Manage Customer Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_activate_contract = models.BooleanField(verbose_name='Activate Contracts', sf_read_only=models.READ_ONLY)
    maximum_permissions_import_leads = models.BooleanField(verbose_name='Import Leads', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_leads = models.BooleanField(verbose_name='Manage Leads', sf_read_only=models.READ_ONLY)
    maximum_permissions_transfer_any_lead = models.BooleanField(verbose_name='Transfer Leads', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_all_data = models.BooleanField(verbose_name='View All Data', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_public_documents = models.BooleanField(verbose_name='Manage Public Documents', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_encrypted_data = models.BooleanField(verbose_name='View Encrypted Data', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_brand_templates = models.BooleanField(verbose_name='Manage Letterheads', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_html_templates = models.BooleanField(verbose_name='Edit HTML Templates', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_internal_user = models.BooleanField(verbose_name='Chatter Internal User', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_encryption_keys = models.BooleanField(verbose_name='Manage Encryption Keys', sf_read_only=models.READ_ONLY)
    maximum_permissions_delete_activated_contract = models.BooleanField(verbose_name='Delete Activated Contracts', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_invite_external_users = models.BooleanField(verbose_name='Invite Customers To Chatter', sf_read_only=models.READ_ONLY)
    maximum_permissions_send_sit_requests = models.BooleanField(verbose_name='Send Stay-in-Touch Requests', sf_read_only=models.READ_ONLY)
    maximum_permissions_override_forecasts = models.BooleanField(verbose_name='Override Forecasts', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_all_forecasts = models.BooleanField(verbose_name='View All Forecasts', sf_read_only=models.READ_ONLY)
    maximum_permissions_api_user_only = models.BooleanField(verbose_name='Api Only User', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_remote_access = models.BooleanField(verbose_name='Manage Connected Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_use_new_dashboard_builder = models.BooleanField(verbose_name='Drag-and-Drop Dashboard Builder', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_categories = models.BooleanField(verbose_name='Manage Categories', sf_read_only=models.READ_ONLY)
    maximum_permissions_convert_leads = models.BooleanField(verbose_name='Convert Leads', sf_read_only=models.READ_ONLY)
    maximum_permissions_password_never_expires = models.BooleanField(verbose_name='Password Never Expires', sf_read_only=models.READ_ONLY)
    maximum_permissions_use_team_reassign_wizards = models.BooleanField(verbose_name='Use Team Reassignment Wizards', sf_read_only=models.READ_ONLY)
    maximum_permissions_install_packaging = models.BooleanField(verbose_name='Download AppExchange Packages', sf_read_only=models.READ_ONLY)
    maximum_permissions_publish_packaging = models.BooleanField(verbose_name='Upload AppExchange Packages', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_partners = models.BooleanField(verbose_name='Manage External Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_own_groups = models.BooleanField(verbose_name='Create and Own New Chatter Groups', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_opp_line_item_unit_price = models.BooleanField(verbose_name='Edit Opportunity Product Sales Price', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_packaging = models.BooleanField(verbose_name='Create AppExchange Packages', sf_read_only=models.READ_ONLY)
    maximum_permissions_bulk_api_hard_delete = models.BooleanField(verbose_name='Bulk API Hard Delete', sf_read_only=models.READ_ONLY)
    maximum_permissions_inbound_migration_tools_user = models.BooleanField(verbose_name='Deploy Change Sets', sf_read_only=models.READ_ONLY)
    maximum_permissions_solution_import = models.BooleanField(verbose_name='Import Solutions', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_call_centers = models.BooleanField(verbose_name='Manage Call Centers', sf_read_only=models.READ_ONLY)
    maximum_permissions_portal_super_user = models.BooleanField(verbose_name='Portal Super User', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_synonyms = models.BooleanField(verbose_name='Manage Synonyms', sf_read_only=models.READ_ONLY)
    maximum_permissions_outbound_migration_tools_user = models.BooleanField(verbose_name='Create and Upload Change Sets', sf_read_only=models.READ_ONLY)
    maximum_permissions_delegated_portal_user_admin = models.BooleanField(verbose_name='Delegated External User Administrator', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_content = models.BooleanField(verbose_name='View Content in Portals', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_email_client_config = models.BooleanField(verbose_name='Manage Email Client Configurations', sf_read_only=models.READ_ONLY)
    maximum_permissions_enable_notifications = models.BooleanField(verbose_name='Send Outbound Messages', sf_read_only=models.READ_ONLY)
    maximum_permissions_is_sso_enabled = models.BooleanField(verbose_name='Is Single Sign-On Enabled', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_data_integrations = models.BooleanField(verbose_name='Manage Data Integrations', sf_read_only=models.READ_ONLY)
    maximum_permissions_distribute_from_pers_wksp = models.BooleanField(verbose_name='Create Content Deliveries', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_data_categories = models.BooleanField(verbose_name='View Data Categories in Setup', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_data_categories = models.BooleanField(verbose_name='Manage Data Categories', sf_read_only=models.READ_ONLY)
    maximum_permissions_author_apex = models.BooleanField(verbose_name='Author Apex', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_mobile = models.BooleanField(verbose_name='Manage Mobile Configurations', sf_read_only=models.READ_ONLY)
    maximum_permissions_api_enabled = models.BooleanField(verbose_name='API Enabled', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_custom_report_types = models.BooleanField(verbose_name='Manage Custom Report Types', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_case_comments = models.BooleanField(verbose_name='Edit Case Comments', sf_read_only=models.READ_ONLY)
    maximum_permissions_transfer_any_case = models.BooleanField(verbose_name='Transfer Cases', sf_read_only=models.READ_ONLY)
    maximum_permissions_content_administrator = models.BooleanField(verbose_name='Manage Salesforce CRM Content', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_workspaces = models.BooleanField(verbose_name='Create Libraries', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_content_permissions = models.BooleanField(verbose_name='Manage Content Permissions', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_content_properties = models.BooleanField(verbose_name='Manage Content Properties', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_content_types = models.BooleanField(verbose_name='Manage record types and layouts for Files', sf_read_only=models.READ_ONLY)
    maximum_permissions_schedule_job = models.BooleanField(verbose_name='Schedule Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_exchange_config = models.BooleanField(verbose_name='Manage Lightning Sync', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_analytic_snapshots = models.BooleanField(verbose_name='Manage Reporting Snapshots', sf_read_only=models.READ_ONLY)
    maximum_permissions_schedule_reports = models.BooleanField(verbose_name='Schedule Reports', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_business_hour_holidays = models.BooleanField(verbose_name='Manage Business Hours Holidays', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_entitlements = models.BooleanField(verbose_name='Manage Entitlements', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_dynamic_dashboards = models.BooleanField(verbose_name='Manage Dynamic Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_interaction = models.BooleanField(verbose_name='Manage Flow', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_my_teams_dashboards = models.BooleanField(verbose_name="View My Team's Dashboards", sf_read_only=models.READ_ONLY)
    maximum_permissions_moderate_chatter = models.BooleanField(verbose_name='Moderate Chatter', sf_read_only=models.READ_ONLY)
    maximum_permissions_reset_passwords = models.BooleanField(verbose_name='Reset User Passwords and Unlock Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_flow_uflrequired = models.BooleanField(db_column='MaximumPermissionsFlowUFLRequired', verbose_name='Require Flow User Feature License', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_insert_feed_system_fields = models.BooleanField(verbose_name='Insert System Field Values for Chatter Feeds', sf_read_only=models.READ_ONLY)
    maximum_permissions_activities_access = models.BooleanField(verbose_name='Access Activities', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_knowledge_import_export = models.BooleanField(verbose_name='Manage Knowledge Article Import/Export', sf_read_only=models.READ_ONLY)
    maximum_permissions_email_template_management = models.BooleanField(verbose_name='Manage Email Templates', sf_read_only=models.READ_ONLY)
    maximum_permissions_email_administration = models.BooleanField(verbose_name='Email Administration', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_chatter_messages = models.BooleanField(verbose_name='Manage Chatter Messages and Direct Messages', sf_read_only=models.READ_ONLY)
    maximum_permissions_allow_email_ic = models.BooleanField(db_column='MaximumPermissionsAllowEmailIC', verbose_name='Email-Based Identity Verification Option', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_file_link = models.BooleanField(verbose_name='Create Public Links', sf_read_only=models.READ_ONLY)
    maximum_permissions_force_two_factor = models.BooleanField(verbose_name='Two-Factor Authentication for User Interface Logins', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_event_log_files = models.BooleanField(verbose_name='View Event Log Files', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_networks = models.BooleanField(verbose_name='Create and Set Up Communities', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_auth_providers = models.BooleanField(verbose_name='Manage Auth. Providers', sf_read_only=models.READ_ONLY)
    maximum_permissions_run_flow = models.BooleanField(verbose_name='Run Flows', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_global_header = models.BooleanField(verbose_name='View Global Header', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_quotas = models.BooleanField(verbose_name='Manage Quotas', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_customize_dashboards = models.BooleanField(verbose_name='Create and Customize Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_dashboard_folders = models.BooleanField(verbose_name='Create Dashboard Folders', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_public_dashboards = models.BooleanField(verbose_name='View Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_dashbds_in_pub_folders = models.BooleanField(verbose_name='Manage Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_customize_reports = models.BooleanField(verbose_name='Create and Customize Reports', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_report_folders = models.BooleanField(verbose_name='Create Report Folders', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_public_reports = models.BooleanField(verbose_name='View Reports in Public Folders', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_reports_in_pub_folders = models.BooleanField(verbose_name='Manage Reports in Public Folders', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_my_dashboards = models.BooleanField(verbose_name='Edit My Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_my_reports = models.BooleanField(verbose_name='Edit My Reports', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_all_users = models.BooleanField(verbose_name='View All Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_allow_universal_search = models.BooleanField(verbose_name='Knowledge One', sf_read_only=models.READ_ONLY)
    maximum_permissions_connect_org_to_environment_hub = models.BooleanField(verbose_name='Connect Organization to Environment Hub', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_customize_filters = models.BooleanField(verbose_name='Create and Customize List Views', sf_read_only=models.READ_ONLY)
    maximum_permissions_content_hub_user = models.BooleanField(verbose_name='Files Connect Cloud', sf_read_only=models.READ_ONLY)
    maximum_permissions_moderate_network_feeds = models.BooleanField(verbose_name='Moderate Communities Feeds', sf_read_only=models.READ_ONLY)
    maximum_permissions_moderate_network_files = models.BooleanField(verbose_name='Moderate Communities Files', sf_read_only=models.READ_ONLY)
    maximum_permissions_govern_networks = models.BooleanField(verbose_name='Manage Communities', sf_read_only=models.READ_ONLY)
    maximum_permissions_sales_console = models.BooleanField(verbose_name='Sales Console', sf_read_only=models.READ_ONLY)
    maximum_permissions_two_factor_api = models.BooleanField(verbose_name='Two-Factor Authentication for API Logins', sf_read_only=models.READ_ONLY)
    maximum_permissions_delete_topics = models.BooleanField(verbose_name='Delete Topics', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_topics = models.BooleanField(verbose_name='Edit Topics', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_topics = models.BooleanField(verbose_name='Create Topics', sf_read_only=models.READ_ONLY)
    maximum_permissions_assign_topics = models.BooleanField(verbose_name='Assign Topics', sf_read_only=models.READ_ONLY)
    maximum_permissions_identity_enabled = models.BooleanField(verbose_name='Use Identity Features', sf_read_only=models.READ_ONLY)
    maximum_permissions_identity_connect = models.BooleanField(verbose_name='Use Identity Connect', sf_read_only=models.READ_ONLY)
    maximum_permissions_allow_view_knowledge = models.BooleanField(verbose_name='Allow View Knowledge', sf_read_only=models.READ_ONLY)
    maximum_permissions_content_workspaces = models.BooleanField(verbose_name='Access Libraries', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_search_promotion_rules = models.BooleanField(verbose_name='Manage Promoted Search Terms', sf_read_only=models.READ_ONLY)
    maximum_permissions_custom_mobile_apps_access = models.BooleanField(verbose_name='Access Custom Mobile Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_help_link = models.BooleanField(verbose_name='View Help Link', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_profiles_permissionsets = models.BooleanField(verbose_name='Manage Profiles and Permission Sets', sf_read_only=models.READ_ONLY)
    maximum_permissions_assign_permission_sets = models.BooleanField(verbose_name='Assign Permission Sets', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_roles = models.BooleanField(verbose_name='Manage Roles', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_ip_addresses = models.BooleanField(verbose_name='Manage IP Addresses', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_sharing = models.BooleanField(verbose_name='Manage Sharing', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_internal_users = models.BooleanField(verbose_name='Manage Internal Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_password_policies = models.BooleanField(verbose_name='Manage Password Policies', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_login_access_policies = models.BooleanField(verbose_name='Manage Login Access Policies', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_custom_permissions = models.BooleanField(verbose_name='Manage Custom Permissions', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_verify_comment = models.BooleanField(verbose_name='Verify Answers to Chatter Questions', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_unlisted_groups = models.BooleanField(verbose_name='Manage Unlisted Groups', sf_read_only=models.READ_ONLY)
    maximum_permissions_std_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture Standard', sf_read_only=models.READ_ONLY)
    maximum_permissions_insights_app_dashboard_editor = models.BooleanField(verbose_name='Create and Edit Analytics Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in API', sf_read_only=models.READ_ONLY)
    maximum_permissions_insights_app_user = models.BooleanField(verbose_name='Use Analytics', sf_read_only=models.READ_ONLY)
    maximum_permissions_insights_app_admin = models.BooleanField(verbose_name='Manage Analytics', sf_read_only=models.READ_ONLY)
    maximum_permissions_insights_app_elt_editor = models.BooleanField(verbose_name='Edit Analytics Dataflows', sf_read_only=models.READ_ONLY)
    maximum_permissions_insights_app_upload_user = models.BooleanField(verbose_name='Upload External Data to Analytics', sf_read_only=models.READ_ONLY)
    maximum_permissions_insights_create_application = models.BooleanField(verbose_name='Create Analytics Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_debug_apex = models.BooleanField(verbose_name='Debug Apex', sf_read_only=models.READ_ONLY)
    maximum_permissions_lightning_experience_user = models.BooleanField(verbose_name='Lightning Experience User', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_data_leakage_events = models.BooleanField(verbose_name='View Data Leakage Detection Events', sf_read_only=models.READ_ONLY)
    maximum_permissions_config_custom_recs = models.BooleanField(verbose_name='Configure Custom Recommendations', sf_read_only=models.READ_ONLY)
    maximum_permissions_submit_macros_allowed = models.BooleanField(verbose_name="Manage Macros Users Can't Undo", sf_read_only=models.READ_ONLY)
    maximum_permissions_bulk_macros_allowed = models.BooleanField(verbose_name='Run Macros on Multiple Records', sf_read_only=models.READ_ONLY)
    maximum_permissions_share_internal_articles = models.BooleanField(verbose_name='Share internal Knowledge articles externally', sf_read_only=models.READ_ONLY)
    maximum_permissions_moderate_network_messages = models.BooleanField(verbose_name='Moderate Communities Chatter Messages', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_session_permission_sets = models.BooleanField(verbose_name='Manage Session Permission Set Activations', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_templated_app = models.BooleanField(verbose_name='Manage Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_use_templated_app = models.BooleanField(verbose_name='Use Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_send_announcement_emails = models.BooleanField(verbose_name='Send announcement emails', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_edit_own_post = models.BooleanField(verbose_name='Edit My Own Posts', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_edit_own_record_post = models.BooleanField(verbose_name='Edit Posts on Records I Own', sf_read_only=models.READ_ONLY)
    maximum_permissions_admin_analytics_user = models.BooleanField(verbose_name='Access Event Monitoring Analytics Templates and Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_audit_fields = models.BooleanField(verbose_name='Set Audit Fields upon Record Creation', sf_read_only=models.READ_ONLY)
    maximum_permissions_update_with_inactive_owner = models.BooleanField(verbose_name='Update Records with Inactive Owners', sf_read_only=models.READ_ONLY)
    maximum_permissions_assign_user_to_skill = models.BooleanField(verbose_name='Assign Chat Skills to Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_wave_trend_reports = models.BooleanField(verbose_name='Trend Report Data in Analytics', sf_read_only=models.READ_ONLY)
    maximum_permissions_wave_tabular_download = models.BooleanField(verbose_name='Download Analytics Data', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_sandboxes = models.BooleanField(verbose_name='Manage Sandboxes', sf_read_only=models.READ_ONLY)
    maximum_permissions_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture', sf_read_only=models.READ_ONLY)
    maximum_permissions_import_custom_objects = models.BooleanField(verbose_name='Import Custom Objects', sf_read_only=models.READ_ONLY)
    maximum_permissions_delegated_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in User Interface', sf_read_only=models.READ_ONLY)
    maximum_permissions_chatter_compose_ui_codesnippet = models.BooleanField(verbose_name='Allow Inclusion of Code Snippets from UI', sf_read_only=models.READ_ONLY)
    maximum_permissions_select_files_from_salesforce = models.BooleanField(verbose_name='Select Files from Salesforce', sf_read_only=models.READ_ONLY)
    maximum_permissions_moderate_network_users = models.BooleanField(verbose_name='Moderate Community Users', sf_read_only=models.READ_ONLY)
    maximum_permissions_merge_topics = models.BooleanField(verbose_name='Merge Topics', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_to_lightning_reports = models.BooleanField(verbose_name='Subscribe to Reports', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_pvt_rpts_and_dashbds = models.BooleanField(verbose_name='Manage All Private Reports and Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_campaign_influence2 = models.BooleanField(verbose_name='Campaign Influence', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_data_assessment = models.BooleanField(verbose_name='Access to view Data Assessment', sf_read_only=models.READ_ONLY)
    maximum_permissions_remove_direct_message_members = models.BooleanField(verbose_name='Remove People from Direct Messages', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_approve_feed_post = models.BooleanField(verbose_name='Can Approve Feed Post and Comment', sf_read_only=models.READ_ONLY)
    maximum_permissions_add_direct_message_members = models.BooleanField(verbose_name='Add People to Direct Messages', sf_read_only=models.READ_ONLY)
    maximum_permissions_allow_view_edit_converted_leads = models.BooleanField(verbose_name='View and Edit Converted Leads', sf_read_only=models.READ_ONLY)
    maximum_permissions_show_company_name_as_user_badge = models.BooleanField(verbose_name='Show Company Name as Community Role', sf_read_only=models.READ_ONLY)
    maximum_permissions_access_cmc = models.BooleanField(db_column='MaximumPermissionsAccessCMC', verbose_name='Access Community Management', sf_read_only=models.READ_ONLY)
    maximum_permissions_archive_articles = models.BooleanField(verbose_name='Archive Articles', sf_read_only=models.READ_ONLY)
    maximum_permissions_publish_articles = models.BooleanField(verbose_name='Publish Articles', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_health_check = models.BooleanField(verbose_name='View Health Check', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_health_check = models.BooleanField(verbose_name='Manage Health Check', sf_read_only=models.READ_ONLY)
    maximum_permissions_packaging2 = models.BooleanField(verbose_name='Create and Update Second-Generation Packages', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_certificates = models.BooleanField(verbose_name='Manage Certificates', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_report_in_lightning = models.BooleanField(verbose_name='Report Builder (Lightning Experience)', sf_read_only=models.READ_ONLY)
    maximum_permissions_prevent_classic_experience = models.BooleanField(verbose_name='Hide Option to Switch to Salesforce Classic', sf_read_only=models.READ_ONLY)
    maximum_permissions_hide_read_by_list = models.BooleanField(verbose_name='Hide the Seen By List', sf_read_only=models.READ_ONLY)
    maximum_permissions_submit_for_translation = models.BooleanField(verbose_name='Article Translation - Submit for Translation', sf_read_only=models.READ_ONLY)
    maximum_permissions_edit_translation = models.BooleanField(verbose_name='Article Translation - Edit', sf_read_only=models.READ_ONLY)
    maximum_permissions_publish_translation = models.BooleanField(verbose_name='Article Translation - Publish', sf_read_only=models.READ_ONLY)
    maximum_permissions_list_email_send = models.BooleanField(verbose_name='Allow sending of List Emails', sf_read_only=models.READ_ONLY)
    maximum_permissions_feed_pinning = models.BooleanField(verbose_name='Pin Posts in Feeds', sf_read_only=models.READ_ONLY)
    maximum_permissions_change_dashboard_colors = models.BooleanField(verbose_name='Change Dashboard Colors', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_recommendation_strategies = models.BooleanField(verbose_name='Manage Next Best Action Strategies', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_propositions = models.BooleanField(verbose_name='Manage Next Best Action Recommendations', sf_read_only=models.READ_ONLY)
    maximum_permissions_close_conversations = models.BooleanField(verbose_name='Close Conversation Threads', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_report_roles_grps = models.BooleanField(verbose_name='Subscribe to Reports: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_dashboard_roles_grps = models.BooleanField(verbose_name='Subscribe to Dashboards: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    maximum_permissions_use_web_link = models.BooleanField(verbose_name='Allow Access to Customized Actions', sf_read_only=models.READ_ONLY)
    maximum_permissions_has_unlimited_nbaexecutions = models.BooleanField(db_column='MaximumPermissionsHasUnlimitedNBAExecutions', verbose_name='User Has Unlimited Next Best Action Strategy Executions', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_only_embedded_app_user = models.BooleanField(verbose_name='Access to View-Only Licensed Templates and Apps', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_all_activities = models.BooleanField(verbose_name='View All Activities', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_report_to_other_users = models.BooleanField(verbose_name='Subscribe to Reports: Add Recipients', sf_read_only=models.READ_ONLY)
    maximum_permissions_lightning_console_allowed_for_user = models.BooleanField(verbose_name='Lightning Console User', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_reports_run_as_user = models.BooleanField(verbose_name='Subscribe to Reports: Set Running User', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_to_lightning_dashboards = models.BooleanField(verbose_name='Subscribe to Dashboards', sf_read_only=models.READ_ONLY)
    maximum_permissions_subscribe_dashboard_to_other_users = models.BooleanField(verbose_name='Subscribe to Dashboards: Add Recipients', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_ltng_temp_in_pub = models.BooleanField(verbose_name='Manage Public Lightning Email Templates', sf_read_only=models.READ_ONLY)
    maximum_permissions_transactional_email_send = models.BooleanField(verbose_name='Send Non-Commercial Email', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_private_static_resources = models.BooleanField(verbose_name='View Private Static Resources', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_customer_sentiment = models.BooleanField(verbose_name='View Community 360', sf_read_only=models.READ_ONLY)
    maximum_permissions_create_ltng_temp_folder = models.BooleanField(verbose_name='Create Folders for Lightning Email Templates', sf_read_only=models.READ_ONLY)
    maximum_permissions_apex_rest_services = models.BooleanField(verbose_name='Apex REST Services', sf_read_only=models.READ_ONLY)
    maximum_permissions_enable_community_app_launcher = models.BooleanField(verbose_name='Show App Launcher in Communities', sf_read_only=models.READ_ONLY)
    maximum_permissions_give_recognition_badge = models.BooleanField(verbose_name='Give Recognition Badges in Lightning Communities', sf_read_only=models.READ_ONLY)
    maximum_permissions_use_my_search = models.BooleanField(verbose_name='Einstein Search', sf_read_only=models.READ_ONLY)
    maximum_permissions_ltng_promo_reserved01_user_perm = models.BooleanField(verbose_name='Remain in Salesforce Classic', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_subscriptions = models.BooleanField(verbose_name='Manage Analytics Subscriptions', sf_read_only=models.READ_ONLY)
    maximum_permissions_wave_manage_private_assets_user = models.BooleanField(verbose_name='Manage Analytics Private Assets', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_edit_data_prep_recipe = models.BooleanField(verbose_name='Edit Dataset Recipes', sf_read_only=models.READ_ONLY)
    maximum_permissions_add_analytics_remote_connections = models.BooleanField(verbose_name='Add Analytics Remote Connections', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_surveys = models.BooleanField(verbose_name='Manage Surveys', sf_read_only=models.READ_ONLY)
    maximum_permissions_use_assistant_dialog = models.BooleanField(verbose_name='Einstein Search Record Previews', sf_read_only=models.READ_ONLY)
    maximum_permissions_use_query_suggestions = models.BooleanField(verbose_name='Einstein Search Results Based On Conversational Queries', sf_read_only=models.READ_ONLY)
    maximum_permissions_record_visibility_api = models.BooleanField(db_column='MaximumPermissionsRecordVisibilityAPI', verbose_name='Enable RecordVisibility API', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_roles = models.BooleanField(verbose_name='View Roles and Role Hierarchy', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_manage_maps = models.BooleanField(verbose_name='Manage Analytics Custom Maps', sf_read_only=models.READ_ONLY)
    maximum_permissions_lmoutbound_messaging_user_perm = models.BooleanField(db_column='MaximumPermissionsLMOutboundMessagingUserPerm', verbose_name='Agent Initiated Outbound Messaging', sf_read_only=models.READ_ONLY)
    maximum_permissions_modify_data_classification = models.BooleanField(verbose_name='Modify Data Classification', sf_read_only=models.READ_ONLY)
    maximum_permissions_privacy_data_access = models.BooleanField(verbose_name='Allow user to access privacy data', sf_read_only=models.READ_ONLY)
    maximum_permissions_query_all_files = models.BooleanField(verbose_name='Query All Files', sf_read_only=models.READ_ONLY)
    maximum_permissions_modify_metadata = models.BooleanField(verbose_name='Modify Metadata Through Metadata API Functions', sf_read_only=models.READ_ONLY)
    maximum_permissions_manage_cms = models.BooleanField(db_column='MaximumPermissionsManageCMS', verbose_name='Manage CMS Workspaces and Channels', sf_read_only=models.READ_ONLY)
    maximum_permissions_sandbox_testing_in_community_app = models.BooleanField(verbose_name='Enables testing a sandbox community in the Mobile Publisher for Community Cloud app.', sf_read_only=models.READ_ONLY)
    maximum_permissions_view_flow_usage_and_flow_event_data = models.BooleanField(verbose_name='View Flow Usage and Flow Event Data', sf_read_only=models.READ_ONLY)
    maximum_permissions_can_edit_prompts = models.BooleanField(verbose_name='Manage Prompts', sf_read_only=models.READ_ONLY)
    used_licenses = models.IntegerField(sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'PermissionSetLicense'
        verbose_name = 'Permission Set License'
        verbose_name_plural = 'Permission Set Licenses'
        # keyPrefix = '0PL'



class PermissionSetLicenseAssign(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetlicenseassign_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetlicenseassign_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(verbose_name='Date Assigned', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    permission_set_license = models.ForeignKey(PermissionSetLicense, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    assignee = models.ForeignKey('User', models.DO_NOTHING, related_name='permissionsetlicenseassign_assignee_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'PermissionSetLicenseAssign'
        verbose_name = 'Permission Set License Assignment'
        verbose_name_plural = 'Permission Set License Assignments'
        # keyPrefix = '2LA'



class PermissionSetTabSetting(models.Model):
    parent = models.ForeignKey(PermissionSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('DefaultOff', 'Default Off'), ('DefaultOn', 'Default On')])
    name = models.CharField(max_length=60, verbose_name='Tab Name', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'PermissionSetTabSetting'
        verbose_name = 'Permission Set Tab Setting'
        verbose_name_plural = 'Permission Set Tab Setting'
        # keyPrefix = '01P'



class PicklistValueInfo(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    value = models.CharField(max_length=70, sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=70, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_default_value = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_active = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    valid_for = models.CharField(max_length=200, sf_read_only=models.READ_ONLY, blank=True, null=True)
    entity_particle_id = models.CharField(max_length=150, verbose_name='Entity Particle ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PicklistValueInfo'
        verbose_name = 'Picklist Value Info'
        verbose_name_plural = 'Picklist Value Info'
        # keyPrefix = '4pv'



class PlatformAction(models.Model):
    external_id = models.CharField(max_length=255, verbose_name='Platform Action ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('QuickAction', 'Quick Action'), ('StandardButton', 'Standard Button'), ('CustomButton', 'Custom Button'), ('ProductivityAction', 'Productivity (Highlight) Action'), ('ActionLink', 'ActionLink'), ('InvocableAction', 'Invocable Action')])
    subtype = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_name = models.CharField(max_length=255, verbose_name='API Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    action_target = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    action_target_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Describe', 'Target is for describing the action'), ('Invoke', 'Target is for invoking the action'), ('Visualforce', 'Target is for a visualforce page')], blank=True, null=True)
    confirmation_message = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    group_id = models.CharField(max_length=18, verbose_name='Group ID', sf_read_only=models.READ_ONLY, blank=True, null=True)  # No Reference table
    is_group_default = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    category = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Primary', 'Primary action'), ('Overflow', 'Overflow action')], blank=True, null=True)
    invocation_status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('New', 'New'), ('Pending', 'Pending'), ('Successful', 'Successful'), ('Failed', 'Failed')], blank=True, null=True)
    invoked_by_user = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    source_entity = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    action_list_context = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('ListView', 'Header for a list view'), ('RelatedList', 'Header for a related list'), ('ListViewRecord', 'View for a list view record'), ('RelatedListRecord', 'View for a related list record'), ('Record', 'View page for a record'), ('FeedElement', 'An element in the Feed'), ('Chatter', 'Chatter specific view'), ('Global', 'View page for Global'), ('Flexipage', 'View for Lightning Page'), ('MruList', 'Header for an MRU list'), ('MruRow', 'View for a MRU list record'), ('RecordEdit', 'Edit page for a record'), ('Photo', 'View for an entity photo detail component'), ('BannerPhoto', 'View for an entity Banner photo detail component'), ('ObjectHomeChart', 'View for object home charts'), ('ListViewDefinition', 'View for a list view definition'), ('Dockable', 'View for dockable actions'), ('Lookup', 'View for lookup'), ('Assistant', 'View for Assistant')], blank=True, null=True)
    device_format = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Phone'), choices=[('Phone', 'Phone'), ('Tablet', 'Tablet'), ('Desktop', 'Desktop'), ('Aloha', 'Aloha')], blank=True, null=True)
    icon_content_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    icon_height = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    icon_width = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    icon_url = models.URLField(verbose_name='Icon URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_mass_action = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    primary_color = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    related_source_entity = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    section = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Page', 'Page Actions'), ('ActivityComposer', 'Activity Composer Actions'), ('CollaborateComposer', 'Collaboration Composer Actions'), ('SingleActionLinks', 'Single Action Links')], blank=True, null=True)
    related_list_record_id = models.CharField(max_length=255, verbose_name='Related List Record ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    target_url = models.CharField(max_length=2048, verbose_name='Target URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    target_object = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PlatformAction'
        verbose_name = 'Platform Action'
        verbose_name_plural = 'Platform Actions'
        # keyPrefix = '0JV'



class PlatformCachePartition(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='platformcachepartition_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='platformcachepartition_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_default_partition = models.BooleanField(verbose_name='Default Partition', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'PlatformCachePartition'
        verbose_name = 'Platform Cache Partition'
        verbose_name_plural = 'Platform Cache Partitions'
        # keyPrefix = '0Er'



class PlatformCachePartitionType(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='platformcachepartitiontype_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='platformcachepartitiontype_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    platform_cache_partition = models.ForeignKey(PlatformCachePartition, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    cache_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Session', None), ('Organization', None)])
    allocated_capacity = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    allocated_purchased_capacity = models.IntegerField(verbose_name='Allocated Namespaced Purchased Capacity', sf_read_only=models.READ_ONLY, blank=True, null=True)
    allocated_trial_capacity = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PlatformCachePartitionType'
        verbose_name = 'Platform Cache Partition Type'
        verbose_name_plural = 'Platform Cache Partition Types'
        # keyPrefix = '0Ev'



class PresenceConfigDeclineReason(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceconfigdeclinereason_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceconfigdeclinereason_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    presence_user_config = models.ForeignKey('PresenceUserConfig', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    presence_decline_reason = models.ForeignKey('PresenceDeclineReason', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PresenceConfigDeclineReason'
        verbose_name = 'Presence Configuration Decline Reason'
        verbose_name_plural = 'Presence Configuration Decline Reasons'
        # keyPrefix = '0KP'



class PresenceDeclineReason(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Presence Decline Reason Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presencedeclinereason_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presencedeclinereason_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'PresenceDeclineReason'
        verbose_name = 'Presence Decline Reason'
        verbose_name_plural = 'Presence Decline Reasons'
        # keyPrefix = '0KR'



class PresenceUserConfig(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Presence Configuration Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceuserconfig_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceuserconfig_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    capacity = models.IntegerField(sf_read_only=models.READ_ONLY)
    options_is_auto_accept_enabled = models.BooleanField(verbose_name='IsAutoAcceptEnabled', sf_read_only=models.READ_ONLY)
    options_is_decline_enabled = models.BooleanField(verbose_name='IsDeclineEnabled', sf_read_only=models.READ_ONLY)
    options_is_decline_reason_enabled = models.BooleanField(verbose_name='IsDeclineReasonEnabled', sf_read_only=models.READ_ONLY)
    options_is_request_sound_enabled = models.BooleanField(verbose_name='IsRequestSoundEnabled', sf_read_only=models.READ_ONLY)
    options_is_disconnect_sound_enabled = models.BooleanField(verbose_name='IsDisconnectSoundEnabled', sf_read_only=models.READ_ONLY)
    presence_status_on_decline = models.ForeignKey('ServicePresenceStatus', models.DO_NOTHING, related_name='presenceuserconfig_presencestatusondecline_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    presence_status_on_push_timeout = models.ForeignKey('ServicePresenceStatus', models.DO_NOTHING, related_name='presenceuserconfig_presencestatusonpushtimeout_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PresenceUserConfig'
        verbose_name = 'Presence Configuration'
        verbose_name_plural = 'Presence Configurations'
        # keyPrefix = '0Nd'



class PresenceUserConfigProfile(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceuserconfigprofile_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceuserconfigprofile_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    presence_user_config = models.ForeignKey(PresenceUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    profile = models.OneToOneField('Profile', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PresenceUserConfigProfile'
        verbose_name = 'Presence Configuration for Profile'
        verbose_name_plural = 'Presence Configurations for Profiles'
        # keyPrefix = '0Nf'



class PresenceUserConfigUser(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceuserconfiguser_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='presenceuserconfiguser_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    presence_user_config = models.ForeignKey(PresenceUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    user = models.OneToOneField('User', models.DO_NOTHING, related_name='presenceuserconfiguser_user_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PresenceUserConfigUser'
        verbose_name = 'Presence Configuration for User'
        verbose_name_plural = 'Presence Configurations for Users'
        # keyPrefix = '0Ne'



class ProcessDefinition(models.Model):
    name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='Unique Name', sf_read_only=models.READ_ONLY)
    type = models.CharField(max_length=40, verbose_name='Process Definition Type', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Approval'), choices=[('Approval', 'Approval Process'), ('State', 'State-based Process')])
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    table_enum_or_id = models.CharField(max_length=40, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('Asset', None), ('AssetRelationship', None), ('AssistantProgress', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('Campaign', None), ('Case', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Contact', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('Contract', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('EmailMessage', None), ('EngagementChannelType', None), ('Entitlement', None), ('ExchangeUserMapping', None), ('ExternalEventMapping', None), ('Image', None), ('KnowledgeArticle', None), ('KnowledgeArticleVersion', None), ('Lead', None), ('MacroUsage', None), ('Opportunity', None), ('OrgDeleteRequest', None), ('OrgMetricScanResult', None), ('OrgMetricScanSummary', None), ('PartyConsent', None), ('PendingServiceRouting', None), ('Product2', None), ('PromptAction', None), ('QuickTextUsage', None), ('Quote', None), ('RecordMergeHistory', None), ('RequestsForAccessSIQ', None), ('ServiceContract', None), ('SocialPost', None), ('Solution', None), ('StreamingChannel', None), ('UserProvisioningRequest', None), ('UserServicePresence', None)])
    lock_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Total', None), ('Admin', None), ('Owner', None), ('Workitem', None), ('Node', None), ('none', None)])
    state = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Active', 'Active'), ('Inactive', 'Inactive'), ('Obsolete', 'Obsolete')])
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processdefinition_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processdefinition_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ProcessDefinition'
        verbose_name = 'Process Definition'
        verbose_name_plural = 'Process Definition'
        # keyPrefix = '04a'



class ProcessInstance(models.Model):
    process_definition = models.ForeignKey(ProcessDefinition, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    target_object = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Account, ExternalEventMapping, Knowledge__ka, Knowledge__kav, PendingServiceRouting, UserServicePresence] Master Detail Relationship *
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Removed', 'Recalled'), ('Fault', 'Fault'), ('Pending', 'Pending'), ('Held', 'Hold'), ('Reassigned', 'Reassigned'), ('Started', 'Submitted'), ('NoResponse', 'No Response')])
    completed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_actor = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstance_lastactor_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    elapsed_time_in_days = models.DecimalField(max_digits=7, decimal_places=3, verbose_name='Elapsed Time in Days', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_hours = models.DecimalField(max_digits=7, decimal_places=2, verbose_name='Elapsed Time in Hours', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_minutes = models.DecimalField(max_digits=8, decimal_places=0, verbose_name='Elapsed Time in Minutes', sf_read_only=models.READ_ONLY, blank=True, null=True)
    submitted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstance_submittedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstance_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstance_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ProcessInstance'
        verbose_name = 'Process Instance'
        verbose_name_plural = 'Process Instance'
        # keyPrefix = '04g'



class ProcessInstanceHistory(models.Model):
    is_pending = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    process_instance = models.ForeignKey(ProcessInstance, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    target_object = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Account, ExternalEventMapping, Knowledge__ka, Knowledge__kav, PendingServiceRouting, UserServicePresence]
    step_status = models.CharField(max_length=40, verbose_name='Status', sf_read_only=models.READ_ONLY, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Removed', 'Recalled'), ('Fault', 'Fault'), ('Pending', 'Pending'), ('Held', 'Hold'), ('Reassigned', 'Reassigned'), ('Started', 'Submitted'), ('NoResponse', 'No Response')], blank=True, null=True)
    process_node = models.ForeignKey('ProcessNode', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    original_actor = models.ForeignKey(Group, models.DO_NOTHING, related_name='processinstancehistory_originalactor_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User]
    actor = models.ForeignKey(Group, models.DO_NOTHING, related_name='processinstancehistory_actor_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User]
    reminders_sent = models.IntegerField(verbose_name='RemindersSent', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_days = models.DecimalField(max_digits=18, decimal_places=0, verbose_name='Elapsed Time in Days', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_hours = models.DecimalField(max_digits=7, decimal_places=2, verbose_name='Elapsed Time in Hours', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_minutes = models.DecimalField(max_digits=8, decimal_places=0, verbose_name='Elapsed Time in Minutes', sf_read_only=models.READ_ONLY, blank=True, null=True)
    comments = models.CharField(max_length=4000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ProcessInstanceHistory'
        verbose_name = 'Process Instance History'
        verbose_name_plural = 'Process Instance History'
        # keyPrefix = 'None'



class ProcessInstanceNode(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstancenode_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstancenode_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    process_instance = models.ForeignKey(ProcessInstance, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    process_node = models.ForeignKey('ProcessNode', models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    node_status = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Removed', 'Recalled'), ('Fault', 'Fault'), ('Pending', 'Pending'), ('Held', 'Hold'), ('Reassigned', 'Reassigned'), ('Started', 'Submitted'), ('NoResponse', 'No Response')], blank=True, null=True)
    completed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_actor = models.ForeignKey('User', models.DO_NOTHING, related_name='processinstancenode_lastactor_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    process_node_name = models.CharField(max_length=255, verbose_name='Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_days = models.DecimalField(max_digits=7, decimal_places=3, verbose_name='Elapsed Time in Days', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_hours = models.DecimalField(max_digits=7, decimal_places=2, verbose_name='Elapsed Time in Hours', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_minutes = models.DecimalField(max_digits=8, decimal_places=0, verbose_name='Elapsed Time in Minutes', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ProcessInstanceNode'
        verbose_name = 'Process Instance Node'
        verbose_name_plural = 'Process Instance Node'
        # keyPrefix = '0OO'



class ProcessInstanceStep(models.Model):
    process_instance = models.ForeignKey(ProcessInstance, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    step_status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected'), ('Removed', 'Recalled'), ('Fault', 'Fault'), ('Pending', 'Pending'), ('Held', 'Hold'), ('Reassigned', 'Reassigned'), ('Started', 'Submitted'), ('NoResponse', 'No Response')], blank=True, null=True)
    original_actor = models.ForeignKey(Group, models.DO_NOTHING, related_name='processinstancestep_originalactor_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User] Master Detail Relationship *
    actor = models.ForeignKey(Group, models.DO_NOTHING, related_name='processinstancestep_actor_set', sf_read_only=models.READ_ONLY)  # Reference to tables [Group, User] Master Detail Relationship *
    comments = models.CharField(max_length=4000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    step_node = models.ForeignKey('ProcessNode', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    elapsed_time_in_days = models.DecimalField(max_digits=18, decimal_places=0, verbose_name='Elapsed Time in Days', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_hours = models.DecimalField(max_digits=7, decimal_places=2, verbose_name='Elapsed Time in Hours', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_minutes = models.DecimalField(max_digits=8, decimal_places=0, verbose_name='Elapsed Time in Minutes', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ProcessInstanceStep'
        verbose_name = 'Process Instance Step'
        verbose_name_plural = 'Process Instance Step'
        # keyPrefix = '04h'



class ProcessInstanceWorkitem(models.Model):
    process_instance = models.ForeignKey(ProcessInstance, models.DO_NOTHING, sf_read_only=models.NOT_CREATEABLE)  # Master Detail Relationship *
    original_actor = models.ForeignKey(Group, models.DO_NOTHING, related_name='processinstanceworkitem_originalactor_set', sf_read_only=models.NOT_CREATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    actor = models.ForeignKey(Group, models.DO_NOTHING, related_name='processinstanceworkitem_actor_set', sf_read_only=models.NOT_CREATEABLE)  # Reference to tables [Group, User]
    elapsed_time_in_days = models.DecimalField(max_digits=7, decimal_places=3, verbose_name='Elapsed Time in Days', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_hours = models.DecimalField(max_digits=7, decimal_places=2, verbose_name='Elapsed Time in Hours', sf_read_only=models.READ_ONLY, blank=True, null=True)
    elapsed_time_in_minutes = models.DecimalField(max_digits=8, decimal_places=0, verbose_name='Elapsed Time in Minutes', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ProcessInstanceWorkitem'
        verbose_name = 'Approval Request'
        verbose_name_plural = 'Approval Requests'
        # keyPrefix = '04i'



class ProcessNode(models.Model):
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='Unique Name', sf_read_only=models.READ_ONLY)
    process_definition = models.ForeignKey(ProcessDefinition, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ProcessNode'
        verbose_name = 'Process Node'
        verbose_name_plural = 'Process Node'
        # keyPrefix = '04b'



class Profile(models.Model):
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    permissions_email_single = models.BooleanField(verbose_name='Send Email', sf_read_only=models.READ_ONLY)
    permissions_email_mass = models.BooleanField(verbose_name='Mass Email', sf_read_only=models.READ_ONLY)
    permissions_edit_task = models.BooleanField(verbose_name='Edit Tasks', sf_read_only=models.READ_ONLY)
    permissions_edit_event = models.BooleanField(verbose_name='Edit Events', sf_read_only=models.READ_ONLY)
    permissions_export_report = models.BooleanField(verbose_name='Export Reports', sf_read_only=models.READ_ONLY)
    permissions_import_personal = models.BooleanField(verbose_name='Import Personal Contacts', sf_read_only=models.READ_ONLY)
    permissions_data_export = models.BooleanField(verbose_name='Weekly Data Export', sf_read_only=models.READ_ONLY)
    permissions_manage_users = models.BooleanField(verbose_name='Manage Users', sf_read_only=models.READ_ONLY)
    permissions_edit_public_filters = models.BooleanField(verbose_name='Manage Public List Views', sf_read_only=models.READ_ONLY)
    permissions_edit_public_templates = models.BooleanField(verbose_name='Manage Public Classic Email Templates', sf_read_only=models.READ_ONLY)
    permissions_modify_all_data = models.BooleanField(verbose_name='Modify All Data', sf_read_only=models.READ_ONLY)
    permissions_manage_cases = models.BooleanField(verbose_name='Manage Cases', sf_read_only=models.READ_ONLY)
    permissions_mass_inline_edit = models.BooleanField(verbose_name='Mass Edits from Lists', sf_read_only=models.READ_ONLY)
    permissions_edit_knowledge = models.BooleanField(verbose_name='Manage Articles', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge = models.BooleanField(verbose_name='Manage Salesforce Knowledge', sf_read_only=models.READ_ONLY)
    permissions_manage_solutions = models.BooleanField(verbose_name='Manage Published Solutions', sf_read_only=models.READ_ONLY)
    permissions_customize_application = models.BooleanField(verbose_name='Customize Application', sf_read_only=models.READ_ONLY)
    permissions_edit_readonly_fields = models.BooleanField(verbose_name='Edit Read Only Fields', sf_read_only=models.READ_ONLY)
    permissions_run_reports = models.BooleanField(verbose_name='Run Reports', sf_read_only=models.READ_ONLY)
    permissions_view_setup = models.BooleanField(verbose_name='View Setup and Configuration', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_entity = models.BooleanField(verbose_name='Transfer Record', sf_read_only=models.READ_ONLY)
    permissions_new_report_builder = models.BooleanField(verbose_name='Report Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_css_users = models.BooleanField(verbose_name='Manage Customer Users', sf_read_only=models.READ_ONLY)
    permissions_activate_contract = models.BooleanField(verbose_name='Activate Contracts', sf_read_only=models.READ_ONLY)
    permissions_import_leads = models.BooleanField(verbose_name='Import Leads', sf_read_only=models.READ_ONLY)
    permissions_manage_leads = models.BooleanField(verbose_name='Manage Leads', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_lead = models.BooleanField(verbose_name='Transfer Leads', sf_read_only=models.READ_ONLY)
    permissions_view_all_data = models.BooleanField(verbose_name='View All Data', sf_read_only=models.READ_ONLY)
    permissions_edit_public_documents = models.BooleanField(verbose_name='Manage Public Documents', sf_read_only=models.READ_ONLY)
    permissions_view_encrypted_data = models.BooleanField(verbose_name='View Encrypted Data', sf_read_only=models.READ_ONLY)
    permissions_edit_brand_templates = models.BooleanField(verbose_name='Manage Letterheads', sf_read_only=models.READ_ONLY)
    permissions_edit_html_templates = models.BooleanField(verbose_name='Edit HTML Templates', sf_read_only=models.READ_ONLY)
    permissions_chatter_internal_user = models.BooleanField(verbose_name='Chatter Internal User', sf_read_only=models.READ_ONLY)
    permissions_manage_encryption_keys = models.BooleanField(verbose_name='Manage Encryption Keys', sf_read_only=models.READ_ONLY)
    permissions_delete_activated_contract = models.BooleanField(verbose_name='Delete Activated Contracts', sf_read_only=models.READ_ONLY)
    permissions_chatter_invite_external_users = models.BooleanField(verbose_name='Invite Customers To Chatter', sf_read_only=models.READ_ONLY)
    permissions_send_sit_requests = models.BooleanField(verbose_name='Send Stay-in-Touch Requests', sf_read_only=models.READ_ONLY)
    permissions_override_forecasts = models.BooleanField(verbose_name='Override Forecasts', sf_read_only=models.READ_ONLY)
    permissions_view_all_forecasts = models.BooleanField(verbose_name='View All Forecasts', sf_read_only=models.READ_ONLY)
    permissions_api_user_only = models.BooleanField(verbose_name='Api Only User', sf_read_only=models.READ_ONLY)
    permissions_manage_remote_access = models.BooleanField(verbose_name='Manage Connected Apps', sf_read_only=models.READ_ONLY)
    permissions_can_use_new_dashboard_builder = models.BooleanField(verbose_name='Drag-and-Drop Dashboard Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_categories = models.BooleanField(verbose_name='Manage Categories', sf_read_only=models.READ_ONLY)
    permissions_convert_leads = models.BooleanField(verbose_name='Convert Leads', sf_read_only=models.READ_ONLY)
    permissions_password_never_expires = models.BooleanField(verbose_name='Password Never Expires', sf_read_only=models.READ_ONLY)
    permissions_use_team_reassign_wizards = models.BooleanField(verbose_name='Use Team Reassignment Wizards', sf_read_only=models.READ_ONLY)
    permissions_install_multiforce = models.BooleanField(verbose_name='Download AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_publish_multiforce = models.BooleanField(verbose_name='Upload AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_partners = models.BooleanField(verbose_name='Manage External Users', sf_read_only=models.READ_ONLY)
    permissions_chatter_own_groups = models.BooleanField(verbose_name='Create and Own New Chatter Groups', sf_read_only=models.READ_ONLY)
    permissions_edit_opp_line_item_unit_price = models.BooleanField(verbose_name='Edit Opportunity Product Sales Price', sf_read_only=models.READ_ONLY)
    permissions_create_multiforce = models.BooleanField(verbose_name='Create AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_bulk_api_hard_delete = models.BooleanField(verbose_name='Bulk API Hard Delete', sf_read_only=models.READ_ONLY)
    permissions_inbound_migration_tools_user = models.BooleanField(verbose_name='Deploy Change Sets', sf_read_only=models.READ_ONLY)
    permissions_solution_import = models.BooleanField(verbose_name='Import Solutions', sf_read_only=models.READ_ONLY)
    permissions_manage_call_centers = models.BooleanField(verbose_name='Manage Call Centers', sf_read_only=models.READ_ONLY)
    permissions_portal_super_user = models.BooleanField(verbose_name='Portal Super User', sf_read_only=models.READ_ONLY)
    permissions_manage_synonyms = models.BooleanField(verbose_name='Manage Synonyms', sf_read_only=models.READ_ONLY)
    permissions_outbound_migration_tools_user = models.BooleanField(verbose_name='Create and Upload Change Sets', sf_read_only=models.READ_ONLY)
    permissions_delegated_portal_user_admin = models.BooleanField(verbose_name='Delegated External User Administrator', sf_read_only=models.READ_ONLY)
    permissions_view_content = models.BooleanField(verbose_name='View Content in Portals', sf_read_only=models.READ_ONLY)
    permissions_manage_email_client_config = models.BooleanField(verbose_name='Manage Email Client Configurations', sf_read_only=models.READ_ONLY)
    permissions_enable_notifications = models.BooleanField(verbose_name='Send Outbound Messages', sf_read_only=models.READ_ONLY)
    permissions_is_sso_enabled = models.BooleanField(verbose_name='Is Single Sign-On Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_data_integrations = models.BooleanField(verbose_name='Manage Data Integrations', sf_read_only=models.READ_ONLY)
    permissions_distribute_from_pers_wksp = models.BooleanField(verbose_name='Create Content Deliveries', sf_read_only=models.READ_ONLY)
    permissions_view_data_categories = models.BooleanField(verbose_name='View Data Categories in Setup', sf_read_only=models.READ_ONLY)
    permissions_manage_data_categories = models.BooleanField(verbose_name='Manage Data Categories', sf_read_only=models.READ_ONLY)
    permissions_author_apex = models.BooleanField(verbose_name='Author Apex', sf_read_only=models.READ_ONLY)
    permissions_manage_mobile = models.BooleanField(verbose_name='Manage Mobile Configurations', sf_read_only=models.READ_ONLY)
    permissions_api_enabled = models.BooleanField(verbose_name='API Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_report_types = models.BooleanField(verbose_name='Manage Custom Report Types', sf_read_only=models.READ_ONLY)
    permissions_edit_case_comments = models.BooleanField(verbose_name='Edit Case Comments', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_case = models.BooleanField(verbose_name='Transfer Cases', sf_read_only=models.READ_ONLY)
    permissions_content_administrator = models.BooleanField(verbose_name='Manage Salesforce CRM Content', sf_read_only=models.READ_ONLY)
    permissions_create_workspaces = models.BooleanField(verbose_name='Create Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_content_permissions = models.BooleanField(verbose_name='Manage Content Permissions', sf_read_only=models.READ_ONLY)
    permissions_manage_content_properties = models.BooleanField(verbose_name='Manage Content Properties', sf_read_only=models.READ_ONLY)
    permissions_manage_content_types = models.BooleanField(verbose_name='Manage record types and layouts for Files', sf_read_only=models.READ_ONLY)
    permissions_schedule_job = models.BooleanField(verbose_name='Schedule Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_exchange_config = models.BooleanField(verbose_name='Manage Lightning Sync', sf_read_only=models.READ_ONLY)
    permissions_manage_analytic_snapshots = models.BooleanField(verbose_name='Manage Reporting Snapshots', sf_read_only=models.READ_ONLY)
    permissions_schedule_reports = models.BooleanField(verbose_name='Schedule Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_business_hour_holidays = models.BooleanField(verbose_name='Manage Business Hours Holidays', sf_read_only=models.READ_ONLY)
    permissions_manage_entitlements = models.BooleanField(verbose_name='Manage Entitlements', sf_read_only=models.READ_ONLY)
    permissions_manage_dynamic_dashboards = models.BooleanField(verbose_name='Manage Dynamic Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_interaction = models.BooleanField(verbose_name='Manage Flow', sf_read_only=models.READ_ONLY)
    permissions_view_my_teams_dashboards = models.BooleanField(verbose_name="View My Team's Dashboards", sf_read_only=models.READ_ONLY)
    permissions_moderate_chatter = models.BooleanField(verbose_name='Moderate Chatter', sf_read_only=models.READ_ONLY)
    permissions_reset_passwords = models.BooleanField(verbose_name='Reset User Passwords and Unlock Users', sf_read_only=models.READ_ONLY)
    permissions_flow_uflrequired = models.BooleanField(db_column='PermissionsFlowUFLRequired', verbose_name='Require Flow User Feature License', sf_read_only=models.READ_ONLY)
    permissions_can_insert_feed_system_fields = models.BooleanField(verbose_name='Insert System Field Values for Chatter Feeds', sf_read_only=models.READ_ONLY)
    permissions_activities_access = models.BooleanField(verbose_name='Access Activities', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge_import_export = models.BooleanField(verbose_name='Manage Knowledge Article Import/Export', sf_read_only=models.READ_ONLY)
    permissions_email_template_management = models.BooleanField(verbose_name='Manage Email Templates', sf_read_only=models.READ_ONLY)
    permissions_email_administration = models.BooleanField(verbose_name='Email Administration', sf_read_only=models.READ_ONLY)
    permissions_manage_chatter_messages = models.BooleanField(verbose_name='Manage Chatter Messages and Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_email_ic = models.BooleanField(db_column='PermissionsAllowEmailIC', verbose_name='Email-Based Identity Verification Option', sf_read_only=models.READ_ONLY)
    permissions_chatter_file_link = models.BooleanField(verbose_name='Create Public Links', sf_read_only=models.READ_ONLY)
    permissions_force_two_factor = models.BooleanField(verbose_name='Two-Factor Authentication for User Interface Logins', sf_read_only=models.READ_ONLY)
    permissions_view_event_log_files = models.BooleanField(verbose_name='View Event Log Files', sf_read_only=models.READ_ONLY)
    permissions_manage_networks = models.BooleanField(verbose_name='Create and Set Up Communities', sf_read_only=models.READ_ONLY)
    permissions_manage_auth_providers = models.BooleanField(verbose_name='Manage Auth. Providers', sf_read_only=models.READ_ONLY)
    permissions_run_flow = models.BooleanField(verbose_name='Run Flows', sf_read_only=models.READ_ONLY)
    permissions_view_global_header = models.BooleanField(verbose_name='View Global Header', sf_read_only=models.READ_ONLY)
    permissions_manage_quotas = models.BooleanField(verbose_name='Manage Quotas', sf_read_only=models.READ_ONLY)
    permissions_create_customize_dashboards = models.BooleanField(verbose_name='Create and Customize Dashboards', sf_read_only=models.READ_ONLY)
    permissions_create_dashboard_folders = models.BooleanField(verbose_name='Create Dashboard Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_dashboards = models.BooleanField(verbose_name='View Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_dashbds_in_pub_folders = models.BooleanField(verbose_name='Manage Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_create_customize_reports = models.BooleanField(verbose_name='Create and Customize Reports', sf_read_only=models.READ_ONLY)
    permissions_create_report_folders = models.BooleanField(verbose_name='Create Report Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_reports = models.BooleanField(verbose_name='View Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_reports_in_pub_folders = models.BooleanField(verbose_name='Manage Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_edit_my_dashboards = models.BooleanField(verbose_name='Edit My Dashboards', sf_read_only=models.READ_ONLY)
    permissions_edit_my_reports = models.BooleanField(verbose_name='Edit My Reports', sf_read_only=models.READ_ONLY)
    permissions_view_all_users = models.BooleanField(verbose_name='View All Users', sf_read_only=models.READ_ONLY)
    permissions_allow_universal_search = models.BooleanField(verbose_name='Knowledge One', sf_read_only=models.READ_ONLY)
    permissions_connect_org_to_environment_hub = models.BooleanField(verbose_name='Connect Organization to Environment Hub', sf_read_only=models.READ_ONLY)
    permissions_create_customize_filters = models.BooleanField(verbose_name='Create and Customize List Views', sf_read_only=models.READ_ONLY)
    permissions_content_hub_user = models.BooleanField(verbose_name='Files Connect Cloud', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_feeds = models.BooleanField(verbose_name='Moderate Communities Feeds', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_files = models.BooleanField(verbose_name='Moderate Communities Files', sf_read_only=models.READ_ONLY)
    permissions_govern_networks = models.BooleanField(verbose_name='Manage Communities', sf_read_only=models.READ_ONLY)
    permissions_sales_console = models.BooleanField(verbose_name='Sales Console', sf_read_only=models.READ_ONLY)
    permissions_two_factor_api = models.BooleanField(verbose_name='Two-Factor Authentication for API Logins', sf_read_only=models.READ_ONLY)
    permissions_delete_topics = models.BooleanField(verbose_name='Delete Topics', sf_read_only=models.READ_ONLY)
    permissions_edit_topics = models.BooleanField(verbose_name='Edit Topics', sf_read_only=models.READ_ONLY)
    permissions_create_topics = models.BooleanField(verbose_name='Create Topics', sf_read_only=models.READ_ONLY)
    permissions_assign_topics = models.BooleanField(verbose_name='Assign Topics', sf_read_only=models.READ_ONLY)
    permissions_identity_enabled = models.BooleanField(verbose_name='Use Identity Features', sf_read_only=models.READ_ONLY)
    permissions_identity_connect = models.BooleanField(verbose_name='Use Identity Connect', sf_read_only=models.READ_ONLY)
    permissions_allow_view_knowledge = models.BooleanField(verbose_name='Allow View Knowledge', sf_read_only=models.READ_ONLY)
    permissions_content_workspaces = models.BooleanField(verbose_name='Access Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_search_promotion_rules = models.BooleanField(verbose_name='Manage Promoted Search Terms', sf_read_only=models.READ_ONLY)
    permissions_custom_mobile_apps_access = models.BooleanField(verbose_name='Access Custom Mobile Apps', sf_read_only=models.READ_ONLY)
    permissions_view_help_link = models.BooleanField(verbose_name='View Help Link', sf_read_only=models.READ_ONLY)
    permissions_manage_profiles_permissionsets = models.BooleanField(verbose_name='Manage Profiles and Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_assign_permission_sets = models.BooleanField(verbose_name='Assign Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_manage_roles = models.BooleanField(verbose_name='Manage Roles', sf_read_only=models.READ_ONLY)
    permissions_manage_ip_addresses = models.BooleanField(verbose_name='Manage IP Addresses', sf_read_only=models.READ_ONLY)
    permissions_manage_sharing = models.BooleanField(verbose_name='Manage Sharing', sf_read_only=models.READ_ONLY)
    permissions_manage_internal_users = models.BooleanField(verbose_name='Manage Internal Users', sf_read_only=models.READ_ONLY)
    permissions_manage_password_policies = models.BooleanField(verbose_name='Manage Password Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_login_access_policies = models.BooleanField(verbose_name='Manage Login Access Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_permissions = models.BooleanField(verbose_name='Manage Custom Permissions', sf_read_only=models.READ_ONLY)
    permissions_can_verify_comment = models.BooleanField(verbose_name='Verify Answers to Chatter Questions', sf_read_only=models.READ_ONLY)
    permissions_manage_unlisted_groups = models.BooleanField(verbose_name='Manage Unlisted Groups', sf_read_only=models.READ_ONLY)
    permissions_std_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture Standard', sf_read_only=models.READ_ONLY)
    permissions_insights_app_dashboard_editor = models.BooleanField(verbose_name='Create and Edit Analytics Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in API', sf_read_only=models.READ_ONLY)
    permissions_insights_app_user = models.BooleanField(verbose_name='Use Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_admin = models.BooleanField(verbose_name='Manage Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_elt_editor = models.BooleanField(verbose_name='Edit Analytics Dataflows', sf_read_only=models.READ_ONLY)
    permissions_insights_app_upload_user = models.BooleanField(verbose_name='Upload External Data to Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_create_application = models.BooleanField(verbose_name='Create Analytics Apps', sf_read_only=models.READ_ONLY)
    permissions_debug_apex = models.BooleanField(verbose_name='Debug Apex', sf_read_only=models.READ_ONLY)
    permissions_lightning_experience_user = models.BooleanField(verbose_name='Lightning Experience User', sf_read_only=models.READ_ONLY)
    permissions_view_data_leakage_events = models.BooleanField(verbose_name='View Data Leakage Detection Events', sf_read_only=models.READ_ONLY)
    permissions_config_custom_recs = models.BooleanField(verbose_name='Configure Custom Recommendations', sf_read_only=models.READ_ONLY)
    permissions_submit_macros_allowed = models.BooleanField(verbose_name="Manage Macros Users Can't Undo", sf_read_only=models.READ_ONLY)
    permissions_bulk_macros_allowed = models.BooleanField(verbose_name='Run Macros on Multiple Records', sf_read_only=models.READ_ONLY)
    permissions_share_internal_articles = models.BooleanField(verbose_name='Share internal Knowledge articles externally', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_messages = models.BooleanField(verbose_name='Moderate Communities Chatter Messages', sf_read_only=models.READ_ONLY)
    permissions_manage_session_permission_sets = models.BooleanField(verbose_name='Manage Session Permission Set Activations', sf_read_only=models.READ_ONLY)
    permissions_manage_templated_app = models.BooleanField(verbose_name='Manage Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_use_templated_app = models.BooleanField(verbose_name='Use Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_send_announcement_emails = models.BooleanField(verbose_name='Send announcement emails', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_post = models.BooleanField(verbose_name='Edit My Own Posts', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_record_post = models.BooleanField(verbose_name='Edit Posts on Records I Own', sf_read_only=models.READ_ONLY)
    permissions_admin_analytics_user = models.BooleanField(verbose_name='Access Event Monitoring Analytics Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_create_audit_fields = models.BooleanField(verbose_name='Set Audit Fields upon Record Creation', sf_read_only=models.READ_ONLY)
    permissions_update_with_inactive_owner = models.BooleanField(verbose_name='Update Records with Inactive Owners', sf_read_only=models.READ_ONLY)
    permissions_assign_user_to_skill = models.BooleanField(verbose_name='Assign Chat Skills to Users', sf_read_only=models.READ_ONLY)
    permissions_wave_trend_reports = models.BooleanField(verbose_name='Trend Report Data in Analytics', sf_read_only=models.READ_ONLY)
    permissions_wave_tabular_download = models.BooleanField(verbose_name='Download Analytics Data', sf_read_only=models.READ_ONLY)
    permissions_manage_sandboxes = models.BooleanField(verbose_name='Manage Sandboxes', sf_read_only=models.READ_ONLY)
    permissions_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture', sf_read_only=models.READ_ONLY)
    permissions_import_custom_objects = models.BooleanField(verbose_name='Import Custom Objects', sf_read_only=models.READ_ONLY)
    permissions_delegated_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in User Interface', sf_read_only=models.READ_ONLY)
    permissions_chatter_compose_ui_codesnippet = models.BooleanField(verbose_name='Allow Inclusion of Code Snippets from UI', sf_read_only=models.READ_ONLY)
    permissions_select_files_from_salesforce = models.BooleanField(verbose_name='Select Files from Salesforce', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_users = models.BooleanField(verbose_name='Moderate Community Users', sf_read_only=models.READ_ONLY)
    permissions_merge_topics = models.BooleanField(verbose_name='Merge Topics', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_reports = models.BooleanField(verbose_name='Subscribe to Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_pvt_rpts_and_dashbds = models.BooleanField(verbose_name='Manage All Private Reports and Dashboards', sf_read_only=models.READ_ONLY)
    permissions_campaign_influence2 = models.BooleanField(verbose_name='Campaign Influence', sf_read_only=models.READ_ONLY)
    permissions_view_data_assessment = models.BooleanField(verbose_name='Access to view Data Assessment', sf_read_only=models.READ_ONLY)
    permissions_remove_direct_message_members = models.BooleanField(verbose_name='Remove People from Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_can_approve_feed_post = models.BooleanField(verbose_name='Can Approve Feed Post and Comment', sf_read_only=models.READ_ONLY)
    permissions_add_direct_message_members = models.BooleanField(verbose_name='Add People to Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_view_edit_converted_leads = models.BooleanField(verbose_name='View and Edit Converted Leads', sf_read_only=models.READ_ONLY)
    permissions_show_company_name_as_user_badge = models.BooleanField(verbose_name='Show Company Name as Community Role', sf_read_only=models.READ_ONLY)
    permissions_access_cmc = models.BooleanField(db_column='PermissionsAccessCMC', verbose_name='Access Community Management', sf_read_only=models.READ_ONLY)
    permissions_archive_articles = models.BooleanField(verbose_name='Archive Articles', sf_read_only=models.READ_ONLY)
    permissions_publish_articles = models.BooleanField(verbose_name='Publish Articles', sf_read_only=models.READ_ONLY)
    permissions_view_health_check = models.BooleanField(verbose_name='View Health Check', sf_read_only=models.READ_ONLY)
    permissions_manage_health_check = models.BooleanField(verbose_name='Manage Health Check', sf_read_only=models.READ_ONLY)
    permissions_packaging2 = models.BooleanField(verbose_name='Create and Update Second-Generation Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_certificates = models.BooleanField(verbose_name='Manage Certificates', sf_read_only=models.READ_ONLY)
    permissions_create_report_in_lightning = models.BooleanField(verbose_name='Report Builder (Lightning Experience)', sf_read_only=models.READ_ONLY)
    permissions_prevent_classic_experience = models.BooleanField(verbose_name='Hide Option to Switch to Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_hide_read_by_list = models.BooleanField(verbose_name='Hide the Seen By List', sf_read_only=models.READ_ONLY)
    permissions_submit_for_translation = models.BooleanField(verbose_name='Article Translation - Submit for Translation', sf_read_only=models.READ_ONLY)
    permissions_edit_translation = models.BooleanField(verbose_name='Article Translation - Edit', sf_read_only=models.READ_ONLY)
    permissions_publish_translation = models.BooleanField(verbose_name='Article Translation - Publish', sf_read_only=models.READ_ONLY)
    permissions_list_email_send = models.BooleanField(verbose_name='Allow sending of List Emails', sf_read_only=models.READ_ONLY)
    permissions_feed_pinning = models.BooleanField(verbose_name='Pin Posts in Feeds', sf_read_only=models.READ_ONLY)
    permissions_change_dashboard_colors = models.BooleanField(verbose_name='Change Dashboard Colors', sf_read_only=models.READ_ONLY)
    permissions_manage_recommendation_strategies = models.BooleanField(verbose_name='Manage Next Best Action Strategies', sf_read_only=models.READ_ONLY)
    permissions_manage_propositions = models.BooleanField(verbose_name='Manage Next Best Action Recommendations', sf_read_only=models.READ_ONLY)
    permissions_close_conversations = models.BooleanField(verbose_name='Close Conversation Threads', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_roles_grps = models.BooleanField(verbose_name='Subscribe to Reports: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_roles_grps = models.BooleanField(verbose_name='Subscribe to Dashboards: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_use_web_link = models.BooleanField(verbose_name='Allow Access to Customized Actions', sf_read_only=models.READ_ONLY)
    permissions_has_unlimited_nbaexecutions = models.BooleanField(db_column='PermissionsHasUnlimitedNBAExecutions', verbose_name='User Has Unlimited Next Best Action Strategy Executions', sf_read_only=models.READ_ONLY)
    permissions_view_only_embedded_app_user = models.BooleanField(verbose_name='Access to View-Only Licensed Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_view_all_activities = models.BooleanField(verbose_name='View All Activities', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_to_other_users = models.BooleanField(verbose_name='Subscribe to Reports: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_lightning_console_allowed_for_user = models.BooleanField(verbose_name='Lightning Console User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_reports_run_as_user = models.BooleanField(verbose_name='Subscribe to Reports: Set Running User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_dashboards = models.BooleanField(verbose_name='Subscribe to Dashboards', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_to_other_users = models.BooleanField(verbose_name='Subscribe to Dashboards: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_in_pub = models.BooleanField(verbose_name='Manage Public Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_transactional_email_send = models.BooleanField(verbose_name='Send Non-Commercial Email', sf_read_only=models.READ_ONLY)
    permissions_view_private_static_resources = models.BooleanField(verbose_name='View Private Static Resources', sf_read_only=models.READ_ONLY)
    permissions_view_customer_sentiment = models.BooleanField(verbose_name='View Community 360', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_folder = models.BooleanField(verbose_name='Create Folders for Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_apex_rest_services = models.BooleanField(verbose_name='Apex REST Services', sf_read_only=models.READ_ONLY)
    permissions_enable_community_app_launcher = models.BooleanField(verbose_name='Show App Launcher in Communities', sf_read_only=models.READ_ONLY)
    permissions_give_recognition_badge = models.BooleanField(verbose_name='Give Recognition Badges in Lightning Communities', sf_read_only=models.READ_ONLY)
    permissions_use_my_search = models.BooleanField(verbose_name='Einstein Search', sf_read_only=models.READ_ONLY)
    permissions_ltng_promo_reserved01_user_perm = models.BooleanField(verbose_name='Remain in Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_manage_subscriptions = models.BooleanField(verbose_name='Manage Analytics Subscriptions', sf_read_only=models.READ_ONLY)
    permissions_wave_manage_private_assets_user = models.BooleanField(verbose_name='Manage Analytics Private Assets', sf_read_only=models.READ_ONLY)
    permissions_can_edit_data_prep_recipe = models.BooleanField(verbose_name='Edit Dataset Recipes', sf_read_only=models.READ_ONLY)
    permissions_add_analytics_remote_connections = models.BooleanField(verbose_name='Add Analytics Remote Connections', sf_read_only=models.READ_ONLY)
    permissions_manage_surveys = models.BooleanField(verbose_name='Manage Surveys', sf_read_only=models.READ_ONLY)
    permissions_use_assistant_dialog = models.BooleanField(verbose_name='Einstein Search Record Previews', sf_read_only=models.READ_ONLY)
    permissions_use_query_suggestions = models.BooleanField(verbose_name='Einstein Search Results Based On Conversational Queries', sf_read_only=models.READ_ONLY)
    permissions_record_visibility_api = models.BooleanField(db_column='PermissionsRecordVisibilityAPI', verbose_name='Enable RecordVisibility API', sf_read_only=models.READ_ONLY)
    permissions_view_roles = models.BooleanField(verbose_name='View Roles and Role Hierarchy', sf_read_only=models.READ_ONLY)
    permissions_can_manage_maps = models.BooleanField(verbose_name='Manage Analytics Custom Maps', sf_read_only=models.READ_ONLY)
    permissions_lmoutbound_messaging_user_perm = models.BooleanField(db_column='PermissionsLMOutboundMessagingUserPerm', verbose_name='Agent Initiated Outbound Messaging', sf_read_only=models.READ_ONLY)
    permissions_modify_data_classification = models.BooleanField(verbose_name='Modify Data Classification', sf_read_only=models.READ_ONLY)
    permissions_privacy_data_access = models.BooleanField(verbose_name='Allow user to access privacy data', sf_read_only=models.READ_ONLY)
    permissions_query_all_files = models.BooleanField(verbose_name='Query All Files', sf_read_only=models.READ_ONLY)
    permissions_modify_metadata = models.BooleanField(verbose_name='Modify Metadata Through Metadata API Functions', sf_read_only=models.READ_ONLY)
    permissions_manage_cms = models.BooleanField(db_column='PermissionsManageCMS', verbose_name='Manage CMS Workspaces and Channels', sf_read_only=models.READ_ONLY)
    permissions_sandbox_testing_in_community_app = models.BooleanField(verbose_name='Enables testing a sandbox community in the Mobile Publisher for Community Cloud app.', sf_read_only=models.READ_ONLY)
    permissions_view_flow_usage_and_flow_event_data = models.BooleanField(verbose_name='View Flow Usage and Flow Event Data', sf_read_only=models.READ_ONLY)
    permissions_can_edit_prompts = models.BooleanField(verbose_name='Manage Prompts', sf_read_only=models.READ_ONLY)
    user_license = models.ForeignKey('UserLicense', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    user_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Standard', 'Standard'), ('PowerPartner', 'Partner'), ('PowerCustomerSuccess', 'Customer Portal Manager'), ('CustomerSuccess', 'Customer Portal User'), ('Guest', 'Guest'), ('CspLitePortal', 'High Volume Portal'), ('CsnOnly', 'CSN Only'), ('SelfService', 'Self Service')], blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='profile_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='profile_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_sso_enabled = models.BooleanField(verbose_name='Is Single Sign-On Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Profile'
        verbose_name = 'Profile'
        verbose_name_plural = 'Profile'
        # keyPrefix = '00e'



class Prompt(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Prompt Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='prompt_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='prompt_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Prompt'
        verbose_name = 'Prompt'
        verbose_name_plural = 'Prompts'
        # keyPrefix = '0bs'



class PromptVersion(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='promptversion_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='promptversion_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent = models.ForeignKey(Prompt, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    master_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    display_type = models.CharField(max_length=255, verbose_name='Type', sf_read_only=models.READ_ONLY, choices=[('DockedComposer', 'Docked'), ('FloatingPanel', 'Floating')])
    display_position = models.CharField(max_length=255, verbose_name='Position', sf_read_only=models.READ_ONLY, choices=[('TopLeft', 'Top Left'), ('TopCenter', 'Top Center'), ('TopRight', 'Top Right'), ('BottomLeft', 'Bottom Left'), ('BottomCenter', 'Bottom Center'), ('BottomRight', 'Bottom Right')], blank=True, null=True)
    times_to_display = models.IntegerField(verbose_name='Number Of Times To Repeat', sf_read_only=models.READ_ONLY)
    delay_days = models.IntegerField(verbose_name='Days In Between Displays', sf_read_only=models.READ_ONLY)
    start_date = models.DateField(sf_read_only=models.READ_ONLY)
    end_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    user_access = models.CharField(max_length=255, verbose_name='Access Permissions', sf_read_only=models.READ_ONLY, choices=[('Everyone', 'Everyone'), ('SpecificPermissions', 'Specific Permissions')])
    is_published = models.BooleanField(verbose_name='Is Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    published_date = models.DateField(verbose_name='Active Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    published_by_user = models.ForeignKey('User', models.DO_NOTHING, related_name='promptversion_publishedbyuser_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    header = models.CharField(max_length=36, sf_read_only=models.READ_ONLY, blank=True, null=True)
    dismiss_button_label = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    should_display_action_button = models.BooleanField(verbose_name='Display Action Button', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    action_button_label = models.CharField(max_length=25, sf_read_only=models.READ_ONLY, blank=True, null=True)
    action_button_link = models.URLField(verbose_name='Action Button URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=36, verbose_name='Title Label', sf_read_only=models.READ_ONLY)
    version_number = models.IntegerField(sf_read_only=models.READ_ONLY)
    target_page_type = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    target_page_key1 = models.CharField(max_length=80, verbose_name='Target Page Key 1', sf_read_only=models.READ_ONLY)
    target_page_key2 = models.CharField(max_length=80, verbose_name='Target Page Key 2', sf_read_only=models.READ_ONLY, blank=True, null=True)
    target_app_namespace_prefix = models.CharField(max_length=15, verbose_name='Target Application Namespace Prefix', sf_read_only=models.READ_ONLY, blank=True, null=True)
    target_app_developer_name = models.CharField(max_length=80, verbose_name='Target Application Developer Name', sf_read_only=models.READ_ONLY)
    body = models.TextField(sf_read_only=models.READ_ONLY)
    index_with_is_published = models.CharField(max_length=400, verbose_name='Index Formula Field With Is Published Data', sf_read_only=models.READ_ONLY, blank=True, null=True)
    index_without_is_published = models.CharField(max_length=400, verbose_name='Index Formula Field Without Is Published Data', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'PromptVersion'
        verbose_name = 'Prompt Version'
        verbose_name_plural = 'Prompt Versions'
        # keyPrefix = '0bt'



class Publisher(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Publisher Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=70, verbose_name='Publisher Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    namespace_prefix = models.CharField(max_length=70, verbose_name='Publisher Namespace Prefix', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_salesforce = models.BooleanField(verbose_name='Is Salesforce the Publisher?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    major_version = models.IntegerField(verbose_name='Publisher Major Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    minor_version = models.IntegerField(verbose_name='Publisher Minor Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Publisher'
        verbose_name = 'Publisher'
        verbose_name_plural = 'Publishers'
        # keyPrefix = '4pb'



class QueueRoutingConfig(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Routing Configuration Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='queueroutingconfig_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='queueroutingconfig_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    routing_priority = models.IntegerField(sf_read_only=models.READ_ONLY)
    routing_model = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('LeastActive', 'Least Active'), ('MostAvailable', 'Most Available'), ('ExternalRouting', 'External Routing')])
    capacity_weight = models.DecimalField(max_digits=10, decimal_places=2, verbose_name='Units of Capacity', sf_read_only=models.READ_ONLY, blank=True, null=True)
    capacity_percentage = models.DecimalField(max_digits=5, decimal_places=2, verbose_name='Percentage  of Capacity', sf_read_only=models.READ_ONLY, blank=True, null=True)
    push_timeout = models.IntegerField(verbose_name='Push Time-Out (seconds)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    overflow_assignee = models.ForeignKey(Group, models.DO_NOTHING, related_name='queueroutingconfig_overflowassignee_set', sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Group, User]
    is_attribute_based = models.BooleanField(verbose_name='Use with Attribute Setup for Skills-Based Routing', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    drop_additional_skills_timeout = models.IntegerField(verbose_name='Drop Additional Skills Time-Out (seconds)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'QueueRoutingConfig'
        verbose_name = 'Routing Configuration'
        verbose_name_plural = 'Routing Configurations'
        # keyPrefix = '0K9'



class QueueSobject(models.Model):
    queue = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    sobject_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Account_Bundle__c', None), ('AccountBrand', None), ('Agent_Affiliation__c', None), ('AgentWork', None), ('ambition__AmbitionEmailRecipient__c', None), ('ambition__AmbitionEntity__c', None), ('ambition__AmbitionEntityField__c', None), ('ambition__AmbitionGeneralConfig__c', None), ('ambition__AmbitionLogEntry__c', None), ('ambition__AmbitionPushableObject__c', None), ('ambition__AmbitionPushableObjectField__c', None), ('ambition__AmbitionPushableObjectTestObject__c', None), ('ambition__AmbitionReportFilter__c', None), ('ambition__AmbitionReportInstance__c', None), ('ambition__AmbitionReportInstanceChunk__c', None), ('ambition__AmbitionReportRunConfig__c', None), ('ambition__log_entry__c', None), ('AMS_Account_Team__c', None), ('ANTS_Letters_and_Attachments__c', None), ('Apex_Error__c', None), ('Authorization__c', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('Benefits_Upsell_Opportunity__c', None), ('Broker_Email_Archive__c', None), ('Broker_Favorites__c', None), ('Carrier__c', None), ('Carrier_Data_Mapping__c', None), ('Carrier_RFP__c', None), ('CarrierLibrary__c', None), ('Case', None), ('Case_Route__c', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('Community_Message__c', None), ('CommunityTiles__c', None), ('Connection_Credential__c', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('Course__c', None), ('Credential__c', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('Email_Signature_Attachments__c', None), ('EngagementChannelType', None), ('Feedback__c', None), ('Group_Calendar__c', None), ('Image', None), ('INQ__Exception_Logger__c', None), ('INQ__iConnectionStatus__c', None), ('INQ__Survey_Program__c', None), ('INQ__Survey_Staging__c', None), ('INQ__Trigger_Object_Exclusion__c', None), ('Intake__c', None), ('KnowledgeArticleVersion', None), ('Lead', None), ('Lead_Assignment_Rules__c', None), ('LiveAgentSession', None), ('LiveChatTranscript', None), ('Macro', None), ('Menu__c', None), ('Migration_Task__c', None), ('mkto_si__Best_Bets_View__c', None), ('mkto_si__BestBetsCache__c', None), ('mkto_si__EmailActivityCache__c', None), ('mkto_si__GroupedWebActivityCache__c', None), ('mkto_si__InterestingMomentsCache__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c', None), ('mkto_si__ScoringCache__c', None), ('mkto_si__Value__c', None), ('mkto_si__WebActivityCache__c', None), ('myobj__c', None), ('Notification__c', None), ('Office__c', None), ('Opportunity_Pipeline_Snapshot__c', None), ('Out_Of_Office__c', None), ('PartyConsent', None), ('Payroll_Price_Book__c', None), ('Plan_Type__c', None), ('Postal_Code__c', None), ('qbdialer__ContactScore__c', None), ('qbdialer__DialerQuery__c', None), ('qbdialer__isDialerConfig__c', None), ('qbdialer__SeekInitiative__c', None), ('QuickText', None), ('Quote_Line_Item__c', None), ('sbv2__Group__c', None), ('sbv2__List_Object__c', None), ('sbv2__Quality_Sample__c', None), ('sbv2__Sample_Criteria_Filter__c', None), ('sbv2__Score_List__c', None), ('sbv2__Summary_Score__c', None), ('sbv2__Team__c', None), ('Scorecard', None), ('Security_Questions__c', None), ('seismic__Debug_Log__c', None), ('ServiceContract', None), ('SIC_Code__c', None), ('sma__MAAJAXDebugLog__c', None), ('sma__MAAnalytic__c', None), ('sma__MAArcGISBatchPushLog__c', None), ('sma__MAArcGISBatchPushSetting__c', None), ('sma__MAArcGISBatchPushTest__c', None), ('sma__MAAssignmentPlan__c', None), ('sma__MABaseObject__c', None), ('sma__MAButtonSet__c', None), ('sma__MAClick2Create__c', None), ('sma__MACustomAction__c', None), ('sma__MADataLayerSetting__c', None), ('sma__MADataLoad__c', None), ('sma__MADriveProfile__c', None), ('sma__MAEventBaseObj__c', None), ('sma__MAExport__c', None), ('sma__MAFolder__c', None), ('sma__MAFolderPermission__c', None), ('sma__MALayer__c', None), ('sma__MALocation__c', None), ('sma__MALocationFolder__c', None), ('sma__MALog__c', None), ('sma__MAMiniMapSetting__c', None), ('sma__MARoute__c', None), ('sma__MASavedQry__c', None), ('sma__MAScheduledJob__c', None), ('sma__MASettingsGroup__c', None), ('sma__MAShift__c', None), ('sma__MATerritory__c', None), ('sma__MATerritoryCollection__c', None), ('sma__MATerritoryCollectionBaseObject__c', None), ('sma__MATerritoryCollectionFieldUpdate__c', None), ('sma__MATerritoryRollup__c', None), ('sma__MATerritoryRollupFolder__c', None), ('sma__MATerritoryRollupRun__c', None), ('sma__MATerritoryRollupValue__c', None), ('SocialPost', None), ('Source_Account_Team__c', None), ('TaxNotice__c', None), ('trailheadapp__Badge__c', None), ('trailheadapp__Debug_Log__c', None), ('trailheadapp__Trail__c', None), ('trailheadapp__Trailhead_User_Data__c', None), ('trailheadapp__Trailmix__c', None), ('Trip_Status_Eligibility__c', None), ('Twilio_Voice_Response__c', None), ('Upsell_Opportunity__c', None), ('User_Login_Snapshot__c', None), ('UserProvisioningRequest', None), ('UserServicePresence', None), ('vidyard__Video_View__c', None), ('XactlyCorp__XactlyUserBusiness__c', None), ('XactlyCorp__XCIncentBusiness__c', None)])
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'QueueSobject'
        verbose_name = 'Queue Sobject'
        verbose_name_plural = 'Queue Sobjects'
        # keyPrefix = '03g'



class QuoteTemplateRichTextData(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Quote Template Rich Text Data', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='quotetemplaterichtextdata_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='quotetemplaterichtextdata_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    data = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'QuoteTemplateRichTextData'
        verbose_name = 'Quote Template Rich Text Data'
        verbose_name_plural = 'Quote Template Rich Text Data'
        # keyPrefix = '0QR'



class RecentlyViewed(models.Model):
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    first_name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Account', None), ('CollaborationGroup', None), ('ContentDocument', None), ('Dashboard', None), ('DuplicateJob', None), ('EnhancedLetterhead', None), ('Event', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('ListEmail', None), ('ListView', None), ('Profile', None), ('Recommendation', None), ('Report', None), ('Skill', None), ('SocialPersona', None), ('Task', None), ('Topic', None), ('User', None), ('UserAppMenuItem', None)], blank=True, null=True)
    alias = models.CharField(max_length=8, sf_read_only=models.READ_ONLY, blank=True, null=True)
    user_role = models.ForeignKey('UserRole', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    record_type = models.ForeignKey('RecordType', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    profile = models.ForeignKey(Profile, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    title = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    email = models.EmailField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    phone = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name_or_alias = models.CharField(max_length=80, verbose_name='Name or Alias', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    language = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'RecentlyViewed'
        verbose_name = 'Recently Viewed'
        verbose_name_plural = 'Recently Viewed'
        # keyPrefix = 'None'



class Recommendation(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recommendation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recommendation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    action_reference = models.CharField(max_length=255, verbose_name='Action', sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    image = models.ForeignKey(ContentAsset, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    acceptance_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    rejection_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    is_action_active = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    external_id = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Recommendation'
        verbose_name = 'Recommendation'
        verbose_name_plural = 'Recommendations'
        # keyPrefix = '0pr'



class RecordAction(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recordaction_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recordaction_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    record = models.ForeignKey(Account, models.DO_NOTHING)  # Reference to tables [Account, CollaborationGroup, EnhancedLetterhead, SocialPersona, User] Master Detail Relationship *
    flow_definition = models.CharField(max_length=255, verbose_name='Interaction Definition ID', choices=[('CompareT_CversionforPortalUsers', None), ('Create_Case_from_Oppty', None), ('CreatingReferralFromLead', None), ('Office_Finder', None), ('ReferralRecordUpdate', None), ('SDR_Cold_Call_Script', None), ('SDR_CPA_Call_Script', None), ('SDR_Hot_Leads_Scripts', None), ('SDR_NFIB_Script', None), ('Update_Account_From_Lead_Assignment', None), ('Update_Account_Team', None), ('Update_Opportunity_Team', None)], blank=True, null=True)
    flow_interview = models.ForeignKey(FlowInterview, models.DO_NOTHING, blank=True, null=True)
    order = models.IntegerField()
    status = models.CharField(max_length=255, default=models.DefaultedOnCreate('New'), choices=[('New', 'New'), ('Paused', 'Paused'), ('Complete', 'Complete'), ('Started', 'Started'), ('Unlinked', 'Unlinked')], blank=True, null=True)
    pinned = models.CharField(max_length=255, default=models.DefaultedOnCreate('None'), choices=[('None', 'None'), ('Top', 'Top'), ('Bottom', 'Bottom')], blank=True, null=True)
    action_type = models.CharField(max_length=255, default=models.DefaultedOnCreate('Flow'), choices=[('Flow', 'Flow'), ('QuickAction', 'QuickAction')], blank=True, null=True)
    action_definition = models.CharField(max_length=255, choices=[('CompareT_CversionforPortalUsers', None), ('Create_Case_from_Oppty', None), ('CreatingReferralFromLead', None), ('Office_Finder', None), ('QuickActionDefinition.Account.New_Note_Acct', None), ('QuickActionDefinition.Account.Send_Email_Action', None), ('QuickActionDefinition.CollaborationGroup.NewGroupMember', None), ('QuickActionDefinition.CollaborationGroup.NewGroupRecord', None), ('QuickActionDefinition.Create_Task', None), ('QuickActionDefinition.FeedItem.ContentPost', None), ('QuickActionDefinition.FeedItem.LinkPost', None), ('QuickActionDefinition.FeedItem.MobileSmartActions', None), ('QuickActionDefinition.FeedItem.PollPost', None), ('QuickActionDefinition.FeedItem.QuestionPost', None), ('QuickActionDefinition.FeedItem.TextPost', None), ('QuickActionDefinition.LogACall', None), ('QuickActionDefinition.NewEvent', None), ('QuickActionDefinition.NewGroup', None), ('QuickActionDefinition.NewNote', None), ('QuickActionDefinition.SendEmail', None), ('QuickActionDefinition.vidyard__Vidyard_prod', None), ('ReferralRecordUpdate', None), ('SDR_Cold_Call_Script', None), ('SDR_CPA_Call_Script', None), ('SDR_Hot_Leads_Scripts', None), ('SDR_NFIB_Script', None), ('Update_Account_From_Lead_Assignment', None), ('Update_Account_Team', None), ('Update_Opportunity_Team', None)], blank=True, null=True)
    is_mandatory = models.BooleanField(default=models.DefaultedOnCreate(False))
    is_ui_remove_hidden = models.BooleanField(verbose_name='Hide Remove Action in UI', default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'RecordAction'
        verbose_name = 'RecordAction'
        verbose_name_plural = 'RecordActions'
        # keyPrefix = '0Rw'



class RecordActionHistory(models.Model):
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recordactionhistory_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recordactionhistory_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent_record = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Account, CollaborationGroup, EnhancedLetterhead, SocialPersona, User]
    action_definition_api_name = models.CharField(max_length=255, verbose_name='Action Definition API Name', sf_read_only=models.READ_ONLY)
    action_definition_label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    action_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Flow'), choices=[('Flow', 'Flow'), ('QuickAction', 'QuickAction')])
    state = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Started'), choices=[('Started', 'Started'), ('Resumed', 'Resumed'), ('Paused', 'Paused'), ('Completed', 'Completed'), ('Unlinked', 'Unlinked')])
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='recordactionhistory_user_set', sf_read_only=models.READ_ONLY)
    record_action_id = models.CharField(max_length=18, verbose_name='RecordAction Id', sf_read_only=models.READ_ONLY)
    logged_time = models.DateTimeField(sf_read_only=models.READ_ONLY)
    pinned = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('None'), choices=[('None', 'None'), ('Top', 'Top'), ('Bottom', 'Bottom')], blank=True, null=True)
    is_mandatory = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'RecordActionHistory'
        verbose_name = 'RecordActionHistory'
        verbose_name_plural = 'RecordActionHistories'
        # keyPrefix = '0Ub'



class RecordType(models.Model):
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='Record Type Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    business_process = models.ForeignKey(BusinessProcess, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sobject_type = models.CharField(max_length=40, verbose_name='Sobject Type Name', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('Account_Bundle__c', None), ('AccountBrand', None), ('Agent_Affiliation__c', None), ('AgentWork', None), ('Alert__c', None), ('ambition__AmbitionEmailRecipient__c', None), ('ambition__AmbitionEntity__c', None), ('ambition__AmbitionEntityField__c', None), ('ambition__AmbitionGeneralConfig__c', None), ('ambition__AmbitionLogEntry__c', None), ('ambition__AmbitionPushableObject__c', None), ('ambition__AmbitionPushableObjectField__c', None), ('ambition__AmbitionPushableObjectTestObject__c', None), ('ambition__AmbitionReportFilter__c', None), ('ambition__AmbitionReportInstance__c', None), ('ambition__AmbitionReportInstanceChunk__c', None), ('ambition__AmbitionReportRunConfig__c', None), ('ambition__log_entry__c', None), ('AMS_Account_Team__c', None), ('Announcement', None), ('ANTS_Letters_and_Attachments__c', None), ('Apex_Error__c', None), ('AppAnalyticsQueryRequest', None), ('Asset', None), ('AssetRelationship', None), ('AssistantProgress', None), ('Authorization__c', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('Benefits_Upsell_Opportunity__c', None), ('Broker_Commission__c', None), ('Broker_Email_Archive__c', None), ('Broker_Favorites__c', None), ('Broker_Trip_Status__c', None), ('BrokerOpportunity__c', None), ('BrokerSales__c', None), ('CalendarModel', None), ('CalendarView', None), ('Campaign', None), ('CampaignMember', None), ('Carrier__c', None), ('Carrier_Data_Mapping__c', None), ('Carrier_RFP__c', None), ('CarrierLibrary__c', None), ('Case', None), ('Case_Dimension_Email__c', None), ('Case_Route__c', None), ('CaseExternalDocument', None), ('Checklist__c', None), ('Class__c', None), ('CollaborationGroup', None), ('CollaborationGroupRank', None), ('CollaborationGroupRecord', None), ('Commission__c', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Community_Message__c', None), ('CommunityTiles__c', None), ('ComponentResponseCache', None), ('Connection_Credential__c', None), ('Contact', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('ContentDocumentListViewMapping', None), ('ContentFolderDistribution', None), ('ContentVersion', None), ('Contract', None), ('ContractLineItem', None), ('ConversationContextEntry', None), ('Course__c', None), ('Credential__c', None), ('DataPrepServiceLocator', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DeflectionSignal', None), ('DuplicateErrorLog', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('Email_Signature_Attachments__c', None), ('EngagementChannelType', None), ('Enrollment__c', None), ('Entitlement', None), ('EntitlementContact', None), ('Event', None), ('ExpressionFilter', None), ('ExpressionFilterCriteria', None), ('Feedback__c', None), ('FileInspectionResult', None), ('FileSearchActivity', None), ('FlowExecutionEventMetric', None), ('FlowRecordRelation', None), ('FlowStageRelation', None), ('Group_Calendar__c', None), ('Idea', None), ('Image', None), ('InboundSocialPost', None), ('Individual', None), ('INQ__Criteria_Fields_Status__c', None), ('INQ__Data_Mapping_Configuration__c', None), ('INQ__Data_Transfer_Criteria__c', None), ('INQ__Data_Transfer_Criteria_Detail__c', None), ('INQ__Email_Template_Mapping_Configuration__c', None), ('INQ__Exception_Logger__c', None), ('INQ__iConnectionStatus__c', None), ('INQ__Inquisium_Activity_Tracker__c', None), ('INQ__Respondent__c', None), ('INQ__Respondent_Field_Mapping__c', None), ('INQ__Survey_Answer__c', None), ('INQ__Survey_Criteria__c', None), ('INQ__Survey_Criteria_Detail__c', None), ('INQ__Survey_Program__c', None), ('INQ__Survey_Program_Question__c', None), ('INQ__Survey_Staging__c', None), ('INQ__Trigger_Object_Exclusion__c', None), ('Intake__c', None), ('Knowledge__kav', None), ('KnowledgeMigrationStat', None), ('Lead', None), ('Lead_Assignment_Rules__c', None), ('LinkedArticle', None), ('ListEmail', None), ('ListEmailIndividualRecipient', None), ('ListEmailRecipientSource', None), ('ListEmailSentResult', None), ('LiveAgentSession', None), ('LiveChatFileToken', None), ('LiveChatTranscript', None), ('Macro', None), ('MacroAction', None), ('MacroInstruction', None), ('MacroUsage', None), ('ManagedContent', None), ('ManagedContentBlock', None), ('ManagedContentBlockVersion', None), ('ManagedContentBodyLink', None), ('ManagedContentChannel', None), ('ManagedContentFolderMember', None), ('ManagedContentMigration', None), ('ManagedContentNode', None), ('ManagedContentNodeRefTree', None), ('ManagedContentNodeRendition', None), ('ManagedContentRelease', None), ('ManagedContentReleaseItem', None), ('ManagedContentSet', None), ('ManagedContentSetLink', None), ('ManagedContentSpaceChannel', None), ('ManagedContentSpaceFolderMember', None), ('ManagedContentSpaceItem', None), ('ManagedContentTranslationJob', None), ('ManagedContentTranslationTask', None), ('ManagedContentTypeSearchBlackList', None), ('ManagedContentVariant', None), ('ManagedContentVersion', None), ('Menu__c', None), ('Migration_Task__c', None), ('mkto_si__Best_Bets_View__c', None), ('mkto_si__Best_Bets_View_Detail__c', None), ('mkto_si__BestBetsCache__c', None), ('mkto_si__EmailActivityCache__c', None), ('mkto_si__GroupedWebActivityCache__c', None), ('mkto_si__InterestingMomentsCache__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c', None), ('mkto_si__ScoringCache__c', None), ('mkto_si__Value__c', None), ('mkto_si__WebActivityCache__c', None), ('myobj__c', None), ('NetworkSearchQueryFrequency', None), ('NetworkUserHistoryRecent', None), ('Notification__c', None), ('OE_Error__c', None), ('Office__c', None), ('Opportunity', None), ('Opportunity_Pipeline_Snapshot__c', None), ('OrgDeleteRequest', None), ('OrgMetric', None), ('OrgMetricScanResult', None), ('OrgMetricScanSummary', None), ('Out_Of_Office__c', None), ('PartyConsent', None), ('Payroll_Price_Book__c', None), ('PendingServiceRouting', None), ('PersonalizationResource', None), ('Plan_Selection__c', None), ('Plan_Type__c', None), ('Platform_History__c', None), ('Postal_Code__c', None), ('Pricebook2', None), ('Product2', None), ('PromptAction', None), ('qbdialer__ContactScore__c', None), ('qbdialer__DialerQuery__c', None), ('qbdialer__DialerQueryAttendee__c', None), ('qbdialer__DialerQueryItem__c', None), ('qbdialer__isDialerConfig__c', None), ('qbdialer__SeekInitiative__c', None), ('qbdialer__SeekInitiativeAttendee__c', None), ('qbdialer__SeekInitiativeItem__c', None), ('QuickText', None), ('QuickTextUsage', None), ('Quote', None), ('Quote_Line_Item__c', None), ('Recommendation', None), ('RecommendationReaction', None), ('RecordAction', None), ('RecordMergeHistory', None), ('RecordOrigin', None), ('Referral__c', None), ('ReportResultBlob', None), ('RequestsForAccessSIQ', None), ('sbv2__Group__c', None), ('sbv2__List_Object__c', None), ('sbv2__Quality_Sample__c', None), ('sbv2__Sample_Criteria_Filter__c', None), ('sbv2__Score_List__c', None), ('sbv2__Summary_Score__c', None), ('sbv2__Team__c', None), ('sbv2__Team_User__c', None), ('Scorecard', None), ('ScorecardAssociation', None), ('ScorecardMetric', None), ('SearchActivity', None), ('SearchPromotionRule', None), ('Security_Questions__c', None), ('seismic__Debug_Log__c', None), ('ServiceContract', None), ('Services__c', None), ('SetupAssistantAnswer', None), ('SetupAssistantProgress', None), ('SetupFlowProgress', None), ('Shipment__c', None), ('SIC_Code__c', None), ('SiqUserBlacklist', None), ('sma__AvailableField__c', None), ('sma__MAAJAXDebugLog__c', None), ('sma__MAAnalytic__c', None), ('sma__MAArcGISBatchPushLog__c', None), ('sma__MAArcGISBatchPushSetting__c', None), ('sma__MAArcGISBatchPushTest__c', None), ('sma__MAAssignmentDebugLog__c', None), ('sma__MAAssignmentPlan__c', None), ('sma__MAAssignmentRule__c', None), ('sma__MABaseObject__c', None), ('sma__MAButtonSet__c', None), ('sma__MACache__c', None), ('sma__MAClick2Create__c', None), ('sma__MACustomAction__c', None), ('sma__MADataLayerSetting__c', None), ('sma__MADataLoad__c', None), ('sma__MADataLoadSegment__c', None), ('sma__MADriveProfile__c', None), ('sma__MAEventBaseObj__c', None), ('sma__MAEventLookup__c', None), ('sma__MAExport__c', None), ('sma__MAExportRow__c', None), ('sma__MAFolder__c', None), ('sma__MAFolderPermission__c', None), ('sma__MALayer__c', None), ('sma__MALocation__c', None), ('sma__MALocationFolder__c', None), ('sma__MALog__c', None), ('sma__MAMiniMapSetting__c', None), ('sma__MARelatedList__c', None), ('sma__MARoute__c', None), ('sma__MASavedQry__c', None), ('sma__MASavedQryComponent__c', None), ('sma__MAScheduledJob__c', None), ('sma__MASettingsAssignments__c', None), ('sma__MASettingsGroup__c', None), ('sma__MAShift__c', None), ('sma__MATerritory__c', None), ('sma__MATerritoryAggregation__c', None), ('sma__MATerritoryAggregationSetting__c', None), ('sma__MATerritoryCollection__c', None), ('sma__MATerritoryCollectionBaseObject__c', None), ('sma__MATerritoryCollectionFieldUpdate__c', None), ('sma__MATerritoryGeometry__c', None), ('sma__MATerritoryNode__c', None), ('sma__MATerritoryRollup__c', None), ('sma__MATerritoryRollupComponent__c', None), ('sma__MATerritoryRollupFolder__c', None), ('sma__MATerritoryRollupRun__c', None), ('sma__MATerritoryRollupValue__c', None), ('sma__MAWaypoint__c', None), ('SocialPost', None), ('Solution', None), ('Source_Account_Team__c', None), ('StrategyMonthlyStats', None), ('StreamActivityAccess', None), ('SyncTransactionLog', None), ('Task', None), ('TaxNotice__c', None), ('trailheadapp__Badge__c', None), ('trailheadapp__Debug_Log__c', None), ('trailheadapp__Trail__c', None), ('trailheadapp__Trailhead_User_Data__c', None), ('trailheadapp__Trailmix__c', None), ('trailheadapp__Trailmix_Assignment__c', None), ('trailheadapp__User_Badge__c', None), ('trailheadapp__User_Trailmix__c', None), ('TrainingEnrollment__c', None), ('TransactionSecurityAction', None), ('TransactionSecurityActionEvent', None), ('Trip_Status_Eligibility__c', None), ('Twilio_Voice_Response__c', None), ('Upsell_Opportunity__c', None), ('User_Login_Snapshot__c', None), ('UserEmailPreferredPerson', None), ('UserMetrics', None), ('UserNavItem', None), ('UserServicePresence', None), ('vidyard__Video_View__c', None), ('XactlyCorp__XactlyUserBusiness__c', None), ('XactlyCorp__XCIncentBusiness__c', None)])
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recordtype_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='recordtype_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'RecordType'
        verbose_name = 'Record Type'
        verbose_name_plural = 'Record Types'
        # keyPrefix = '012'



class RelationshipDomain(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Relationship Domain Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent_sobject_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    child_sobject_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    field_id = models.CharField(max_length=70, verbose_name='Field Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    relationship_info_id = models.CharField(max_length=70, verbose_name='Relationship Info ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    relationship_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_cascade_delete = models.BooleanField(verbose_name='Is Cascade Delete?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deprecated_and_hidden = models.BooleanField(verbose_name='Is Deprecated And Hidden?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_restricted_delete = models.BooleanField(verbose_name='Is Restricted Delete?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    junction_id_list_names = models.TextField(verbose_name='Names of the Junction Id Lists', sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    class Meta(models.Model.Meta):
        db_table = 'RelationshipDomain'
        verbose_name = 'Relationship Domain'
        verbose_name_plural = 'Relationship Domains'
        # keyPrefix = '0Jv'



class RelationshipInfo(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Relationship Info Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    child_sobject_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    field_id = models.CharField(max_length=70, verbose_name='Field Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_cascade_delete = models.BooleanField(verbose_name='Is Cascade Delete?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deprecated_and_hidden = models.BooleanField(verbose_name='Is Deprecated And Hidden?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_restricted_delete = models.BooleanField(verbose_name='Is Restricted Delete?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    junction_id_list_names = models.TextField(verbose_name='Names of the Junction Id Lists', sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    class Meta(models.Model.Meta):
        db_table = 'RelationshipInfo'
        verbose_name = 'Relationship'
        verbose_name_plural = 'Relationships'
        # keyPrefix = '0Ju'



class Report(models.Model):
    owner = models.ForeignKey(Folder, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Folder, Organization, User]
    folder_name = models.CharField(max_length=256, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='report_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='report_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=40, verbose_name='Report Name', sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    developer_name = models.CharField(max_length=80, verbose_name='Report Unique Name', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_run_date = models.DateTimeField(verbose_name='Last Run', sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    format = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('Tabular'), choices=[('MultiBlock', 'Joined'), ('Matrix', 'Matrix'), ('Summary', 'Summary'), ('Tabular', 'Tabular')])
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Report'
        verbose_name = 'Report'
        verbose_name_plural = 'Reports'
        # keyPrefix = '00O'



class ReportFeed(models.Model):
    parent = models.ForeignKey(Report, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='reportfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='reportfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'ReportFeed'
        verbose_name = 'Report Feed'
        verbose_name_plural = 'Report Feed'
        # keyPrefix = 'None'



class SamlSsoConfig(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='samlssoconfig_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='samlssoconfig_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    version = models.CharField(max_length=255, verbose_name='SAML Version', sf_read_only=models.READ_ONLY, choices=[('SAML1_1', None), ('SAML2_0', None)])
    issuer = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    options_sp_init_binding = models.BooleanField(verbose_name='SpInitBinding', sf_read_only=models.READ_ONLY)
    options_user_provisioning = models.BooleanField(verbose_name='UserProvisioning', sf_read_only=models.READ_ONLY)
    attribute_format = models.CharField(max_length=255, verbose_name='Name ID Format', sf_read_only=models.READ_ONLY, blank=True, null=True)
    attribute_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    audience = models.CharField(max_length=255, verbose_name='Entity ID', sf_read_only=models.READ_ONLY)
    identity_mapping = models.CharField(max_length=255, verbose_name='SAML Identity Type', sf_read_only=models.READ_ONLY, choices=[('Username', None), ('FederationId', None), ('UserId', None)])
    identity_location = models.CharField(max_length=255, verbose_name='SAML Identity Location', sf_read_only=models.READ_ONLY, choices=[('SubjectNameId', None), ('Attribute', None)])
    saml_jit_handler = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    execution_user = models.ForeignKey('User', models.DO_NOTHING, related_name='samlssoconfig_executionuser_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    login_url = models.CharField(max_length=1500, verbose_name='Identity Provider Login URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    logout_url = models.CharField(max_length=1500, verbose_name='Identity Provider Logout URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    error_url = models.CharField(max_length=500, verbose_name='Custom Error URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    validation_cert = models.CharField(max_length=4000, verbose_name='Identity Provider Certificate', sf_read_only=models.READ_ONLY)
    request_signature_method = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('RSA-SHA1', 'RSA-SHA1'), ('RSA-SHA256', 'RSA-SHA256')], blank=True, null=True)
    single_logout_url = models.CharField(max_length=255, verbose_name='Identity Provider Single Logout URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    single_logout_binding = models.CharField(max_length=255, verbose_name='Single Logout Request Binding', sf_read_only=models.READ_ONLY, choices=[('RedirectBinding', None), ('PostBinding', None)], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SamlSsoConfig'
        verbose_name = 'SAML Single Sign-On Setting'
        verbose_name_plural = 'SAML Single Sign-On Settings'
        # keyPrefix = '0LE'



class Scontrol(models.Model):
    name = models.CharField(max_length=80, verbose_name='Label', sf_read_only=models.READ_ONLY)
    developer_name = models.CharField(max_length=80, verbose_name='S-Control Name', sf_read_only=models.READ_ONLY)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    encoding_key = models.CharField(max_length=40, verbose_name='Encoding', sf_read_only=models.READ_ONLY, choices=[('UTF-8', 'Unicode (UTF-8)'), ('ISO-8859-1', 'General US & Western Europe (ISO-8859-1, ISO-LATIN-1)'), ('Shift_JIS', 'Japanese (Shift-JIS)'), ('ISO-2022-JP', 'Japanese (JIS)'), ('EUC-JP', 'Japanese (EUC)'), ('ks_c_5601-1987', 'Korean (ks_c_5601-1987)'), ('Big5', 'Traditional Chinese (Big5)'), ('GB2312', 'Simplified Chinese (GB2312)'), ('Big5-HKSCS', 'Traditional Chinese Hong Kong (Big5-HKSCS)'), ('x-SJIS_0213', 'Japanese (Shift-JIS_2004)')])
    html_wrapper = models.TextField(verbose_name='HTML Body', sf_read_only=models.READ_ONLY)
    filename = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body_length = models.IntegerField(verbose_name='Binary Length', sf_read_only=models.READ_ONLY)
    binary = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    content_source = models.CharField(max_length=40, verbose_name='Type', sf_read_only=models.READ_ONLY, choices=[('HTML', 'HTML'), ('URL', 'URL'), ('Snippet', 'Snippet')], blank=True, null=True)
    supports_caching = models.BooleanField(verbose_name='Prebuild In Page', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='scontrol_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='scontrol_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'Scontrol'
        verbose_name = 'Custom S-Control'
        verbose_name_plural = 'Custom S-Controls'
        # keyPrefix = '01N'



class SearchActivity(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Search Activity Name', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='searchactivity_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='searchactivity_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    search_term = models.CharField(max_length=100, sf_read_only=models.READ_ONLY)
    query_date = models.DateField(verbose_name='Search Date', sf_read_only=models.READ_ONLY)
    count_queries = models.IntegerField(verbose_name='Number of Searches', sf_read_only=models.READ_ONLY)
    count_users = models.IntegerField(verbose_name='Number of Users', sf_read_only=models.READ_ONLY)
    avg_num_results = models.DecimalField(max_digits=18, decimal_places=4, verbose_name='Number of Results', sf_read_only=models.READ_ONLY)
    kb_channel = models.CharField(max_length=255, verbose_name='Channel', sf_read_only=models.READ_ONLY, choices=[('AllChannels', 'All Channels'), ('App', 'Internal App'), ('Pkb', 'Public Knowledge Base'), ('Csp', 'Customer'), ('Prm', 'Partner')])
    period = models.CharField(max_length=255, verbose_name='Duration', sf_read_only=models.READ_ONLY, choices=[('DAY', 'Daily'), ('MONTH', 'Monthly'), ('YEAR', 'Yearly')])
    click_rank = models.DecimalField(max_digits=18, decimal_places=4, verbose_name='Average Click Rank', sf_read_only=models.READ_ONLY, blank=True, null=True)
    clicked_record = models.ForeignKey(KnowledgeKav, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    query_language = models.CharField(max_length=255, verbose_name='Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    clicked_record_name = models.CharField(max_length=255, verbose_name='Clicked Article Title', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SearchActivity'
        verbose_name = 'SearchActivity'
        verbose_name_plural = 'Knowledge Search Activity'
        # keyPrefix = '0JO'



class SearchLayout(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    layout_type = models.CharField(max_length=30, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    entity_definition_id = models.CharField(max_length=70, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    fields_displayed = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    buttons_displayed = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    class Meta(models.Model.Meta):
        db_table = 'SearchLayout'
        verbose_name = 'Search Layout'
        verbose_name_plural = 'Search Layouts'
        # keyPrefix = '4co'



class ServiceChannel(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Service Channel Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='servicechannel_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='servicechannel_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    related_entity = models.CharField(unique=True, max_length=255, verbose_name='Custom Object Definition ID', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('Activity', None)])
    class Meta(models.Model.Meta):
        db_table = 'ServiceChannel'
        verbose_name = 'Service Channel'
        verbose_name_plural = 'Service Channels'
        # keyPrefix = '0N9'



class ServiceChannelStatus(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='servicechannelstatus_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='servicechannelstatus_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    service_channel = models.ForeignKey(ServiceChannel, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    service_presence_status = models.ForeignKey('ServicePresenceStatus', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'ServiceChannelStatus'
        verbose_name = 'Service Channel Status'
        verbose_name_plural = 'Service Channel Statuses'
        # keyPrefix = '0NC'



class ServicePresenceStatus(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Status Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='servicepresencestatus_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='servicepresencestatus_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'ServicePresenceStatus'
        verbose_name = 'Service Presence Status'
        verbose_name_plural = 'Service Presence Statuses'
        # keyPrefix = '0N5'



class SessionPermSetActivation(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='sessionpermsetactivation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='sessionpermsetactivation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    auth_session = models.ForeignKey(AuthSession, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    permission_set = models.ForeignKey(PermissionSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='sessionpermsetactivation_user_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SessionPermSetActivation'
        verbose_name = 'Session Permission Set Activation'
        verbose_name_plural = 'Session Permission Set Activations'
        # keyPrefix = '5Pa'



class SetupAuditTrail(models.Model):
    action = models.CharField(max_length=120, sf_read_only=models.READ_ONLY)
    section = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    display = models.CharField(max_length=1000, sf_read_only=models.READ_ONLY, blank=True, null=True)
    delegate_user = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    responsible_namespace_prefix = models.CharField(max_length=15, verbose_name='Source Namespace Prefix', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_by_context = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_by_issuer = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SetupAuditTrail'
        verbose_name = 'Setup Audit Trail Entry'
        verbose_name_plural = 'Setup Audit Trail Entries'
        # keyPrefix = '0Ym'



class SetupEntityAccess(models.Model):
    parent = models.ForeignKey(PermissionSet, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    setup_entity = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [ApexClass, ApexPage, ConnectedApplication, CustomPermission, ExternalDataSource, ExternalSocialAccount, NamedCredential, ServicePresenceStatus] Master Detail Relationship *
    setup_entity_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('ApexClass', None), ('ApexPage', None), ('ConnectedApplication', None), ('ConnectedApplication', None), ('CustomPermission', None), ('ExternalDataSource', None), ('ExternalSocialAccount', None), ('NamedCredential', None), ('Network', None), ('ServicePresenceStatus', None), ('TabSet', None)], blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'SetupEntityAccess'
        verbose_name = 'Setup Entity Access'
        verbose_name_plural = 'Setup Entity Access'
        # keyPrefix = '0J0'



class Site(models.Model):
    name = models.CharField(max_length=80, verbose_name='Site Name', sf_read_only=models.READ_ONLY)
    subdomain = models.CharField(max_length=80, verbose_name='Site Subdomain Prefix', sf_read_only=models.READ_ONLY, blank=True, null=True)
    url_path_prefix = models.CharField(max_length=40, verbose_name='Default Web Address', sf_read_only=models.READ_ONLY, blank=True, null=True)
    guest_user = models.ForeignKey('User', models.DO_NOTHING, related_name='site_guestuser_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    status = models.CharField(max_length=40, verbose_name='Site Status', sf_read_only=models.READ_ONLY, choices=[('Active', 'Active'), ('Inactive', 'In Maintenance')])
    admin = models.ForeignKey('User', models.DO_NOTHING, related_name='site_admin_set', sf_read_only=models.READ_ONLY)
    options_enable_feeds = models.BooleanField(verbose_name='Enable Feeds', sf_read_only=models.READ_ONLY)
    options_require_https = models.BooleanField(verbose_name='Require Secure Connections (HTTPS)', sf_read_only=models.READ_ONLY)
    options_allow_home_page = models.BooleanField(verbose_name='Enable Standard Home Page', sf_read_only=models.READ_ONLY)
    options_allow_standard_ideas_pages = models.BooleanField(verbose_name='Enable Standard Ideas Pages', sf_read_only=models.READ_ONLY)
    options_allow_standard_search = models.BooleanField(verbose_name='Enable Standard Lookup Pages', sf_read_only=models.READ_ONLY)
    options_allow_standard_lookups = models.BooleanField(verbose_name='Enable Standard Search Pages', sf_read_only=models.READ_ONLY)
    options_allow_standard_answers_pages = models.BooleanField(verbose_name='Enable Standard Answers Pages', sf_read_only=models.READ_ONLY)
    options_allow_guest_support_api = models.BooleanField(verbose_name='Guest Access to the Support API', sf_read_only=models.READ_ONLY)
    options_allow_standard_portal_pages = models.BooleanField(verbose_name='Allow Access to Standard Salesforce Pages', sf_read_only=models.READ_ONLY)
    options_csp_upgrade_insecure_requests = models.BooleanField(verbose_name='Upgrade all requests to HTTPS', sf_read_only=models.READ_ONLY)
    options_content_sniffing_protection = models.BooleanField(verbose_name='Enable Content Sniffing Protection', sf_read_only=models.READ_ONLY)
    options_browser_xss_protection = models.BooleanField(verbose_name='Enable Browser Cross Site Scripting Protection', sf_read_only=models.READ_ONLY)
    options_referrer_policy_origin_when_cross_origin = models.BooleanField(verbose_name='Referrer URL Protection', sf_read_only=models.READ_ONLY)
    description = models.TextField(verbose_name='Site Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    master_label = models.CharField(max_length=255, verbose_name='Site Label', sf_read_only=models.READ_ONLY)
    analytics_tracking_code = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, blank=True, null=True)
    site_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Siteforce', 'Site.com'), ('Visualforce', 'Force.com'), ('ChatterNetwork', 'Community'), ('ChatterNetworkPicasso', 'Site.com Community'), ('User', 'User')])
    clickjack_protection_level = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate('SameOriginOnly'), choices=[('AllowAllFraming', 'Allow framing by any page (No protection)'), ('External', 'Allow framing of site or community pages on external domains (Good protection)'), ('SameOriginOnly', 'Allow framing by the same origin only (Recommended)'), ('NoFraming', "Don't allow framing by any page (Most protection)")])
    daily_bandwidth_limit = models.IntegerField(verbose_name='Daily Bandwidth Limit (MB)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    daily_bandwidth_used = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    daily_request_time_limit = models.IntegerField(verbose_name='Daily Request Time Limit (min)', sf_read_only=models.READ_ONLY, blank=True, null=True)
    daily_request_time_used = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    monthly_page_views_entitlement = models.IntegerField(verbose_name='Monthly Page Views Allowed', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='site_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='site_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Site'
        verbose_name = 'Site'
        verbose_name_plural = 'Sites'
        # keyPrefix = '0DM'



class SiteDetail(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Site ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_registration_enabled = models.BooleanField(verbose_name='Self-Registration Enabled', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    secure_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SiteDetail'
        verbose_name = 'Site Detail'
        verbose_name_plural = 'Site Details'
        # keyPrefix = '0GV'



class SiteFeed(models.Model):
    parent = models.ForeignKey(Site, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='sitefeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='sitefeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SiteFeed'
        verbose_name = 'Site'
        verbose_name_plural = 'Site'
        # keyPrefix = 'None'



class SiteHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    site = models.ForeignKey(Site, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    field = models.CharField(max_length=255, verbose_name='Changed Field', sf_read_only=models.READ_ONLY, choices=[('siteActive', 'Active'), ('IndexPage', 'Active Site Home Page'), ('SiteAllowStandardPortalPages', 'Allow Access to Standard Salesforce Pages'), ('AnalyticsTrackingCode', 'Analytics Tracking Code'), ('siteOverride401', 'Authorization Required Page (401)'), ('siteOverrideChangePassword', 'Change Password Page'), ('ClickjackProtectionLevel', 'Clickjack Protection Level'), ('created', 'Created.'), ('SiteDeleteDomain', 'Custom Web Address'), ('siteNewDomain', 'Custom Web Address'), ('TopLevelDomain', 'Custom Web Address'), ('DefaultDomain', 'Default Site Domain'), ('siteSetPrimaryDomain', 'Default Site Domain'), ('UrlPathPrefix', 'Default Web Address'), ('siteBTDisabled', 'Disable Site'), ('siteEnableFeeds', 'Enable Feeds'), ('siteAllowStandardAnswersPages', 'Enable Standard Answers Pages'), ('siteAllowHomePage', 'Enable Standard Home Page'), ('siteAllowStandardIdeasPages', 'Enable Standard Ideas Pages'), ('siteAllowStandardSearch', 'Enable Standard Lookup Pages'), ('siteAllowStandardLookups', 'Enable Standard Search Pages'), ('feedEvent', 'Feed event'), ('siteOverrideForgotPassword', 'Forgot Password Page'), ('siteOverride500', 'Generic Error Page'), ('GuestUser', 'Guest User'), ('siteOverrideInactive', 'Inactive Site Home Page'), ('individualMerged', 'Individual Merged'), ('siteOverride509', 'Limit Exceeded Page (509)'), ('siteOverride503', 'Maintenance Page(500/503)'), ('sitePageLimitExceeded', 'Monthly page view limit exceeded for org'), ('siteOverrideMyProfile', 'My Profile Page'), ('NewPassTemplate', 'New Password Template'), ('NewUserTemplate', 'New User Template'), ('Options', 'Options'), ('ownerAccepted', 'Owner (Accepted)'), ('ownerAssignment', 'Owner (Assignment)'), ('siteOverride404', 'Page Not Found Page (404)'), ('Portal', 'Portal'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('siteNewRedirect', 'redirection mappings. Created a new mapping'), ('siteDeleteRedirect', 'redirection mappings. Deleted the mapping'), ('siteChangeRedirect', 'redirection mappings. The new mapping value is'), ('siteRequireInsecurePortalAccess', 'Require Non-Secure Connections (HTTP)'), ('siteRequireHttps', 'Require Secure Connections (HTTPS)'), ('siteOverrideSelfReg', 'Self Registration Page'), ('ServerIsDown', 'Service Not Available'), ('Admin', 'Site Contact'), ('Description', 'Site Description'), ('FavoriteIcon', 'Site Favorite Icon'), ('MasterLabel', 'Site Label'), ('Language', 'Site Master Language'), ('Name', 'Site Name'), ('siteOverrideRobotsTxt', 'Site Robots.txt'), ('Status', 'Site Status'), ('Subdomain', 'Site Subdomain Prefix'), ('siteOverrideTemplate', 'Site Template'), ('SiteType', 'Site Type'), ('Guid', 'Unique ID'), ('UrlRewriterClass', 'URL Rewriter Class'), ('GuestRecordDefaultOwner', 'User')])
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SiteHistory'
        verbose_name = 'Site History'
        verbose_name_plural = 'Site History'
        # keyPrefix = 'None'



class SiteIframeWhiteListUrl(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='siteiframewhitelisturl_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='siteiframewhitelisturl_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    site = models.ForeignKey(Site, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    url = models.CharField(max_length=255, verbose_name='Domain', sf_read_only=models.READ_ONLY, help_text='Accepts these formats: example.com, *.example.com, and http://example.com', blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SiteIframeWhiteListUrl'
        verbose_name = 'Whitelisted Domains for Inline Frames'
        verbose_name_plural = 'Whitelisted Domains for Inline Frames'
        # keyPrefix = '0Xs'



class Skill(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    language = models.CharField(max_length=40, verbose_name='Master Language', sf_read_only=models.READ_ONLY, choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    master_label = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='skill_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='skill_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Skill'
        verbose_name = 'Skill'
        verbose_name_plural = 'Skills'
        # keyPrefix = '0C5'



class SkillProfile(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='skillprofile_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='skillprofile_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    skill = models.ForeignKey(Skill, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    profile = models.ForeignKey(Profile, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SkillProfile'
        verbose_name = 'Skill Profile'
        verbose_name_plural = 'Skill Profiles'
        # keyPrefix = '0CA'



class SkillUser(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='skilluser_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='skilluser_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    skill = models.ForeignKey(Skill, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    user = models.ForeignKey('User', models.DO_NOTHING, related_name='skilluser_user_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SkillUser'
        verbose_name = 'Skill User'
        verbose_name_plural = 'Skill Users'
        # keyPrefix = '0C9'



class SlaProcess(models.Model):
    name = models.CharField(max_length=120, verbose_name='Entitlement Process Name', sf_read_only=models.READ_ONLY)
    name_norm = models.CharField(max_length=240, verbose_name='Name', sf_read_only=models.READ_ONLY)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    version_number = models.IntegerField(verbose_name='Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_version_default = models.BooleanField(verbose_name='Default Version', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    version_notes = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    version_master = models.CharField(max_length=15, verbose_name='Entitlement Process Version Master ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_date_field = models.CharField(max_length=40, verbose_name='Custom Field Definition ID', sf_read_only=models.READ_ONLY, choices=[('Case.Account_Verified_Date__c', None), ('Case.Assigned_to_Carrier_Install__c', None), ('Case.Audit_Complete_Date_Time__c', None), ('Case.Backup_Demo_Date_Time__c', None), ('Case.Carrier_Install_Complete__c', None), ('Case.Carrier_Install_Started__c', None), ('Case.Case_Comment_Updated__c', None), ('Case.ClosedDate', None), ('Case.Conversion_Begin_Date__c', None), ('Case.Conversion_Complete_Date__c', None), ('Case.CreatedDate', None), ('Case.Credit_Check_Request__c', None), ('Case.Credit_Check_Response__c', None), ('Case.Credit_Decision_Date__c', None), ('Case.Date_Closed__c', None), ('Case.Date_Reported__c', None), ('Case.Date_Time_Assigned__c', None), ('Case.Date_Time_Escalated__c', None), ('Case.Demo_Scheduled_DateTime__c', None), ('Case.Due_DateTime__c', None), ('Case.Fraud_Check_Date__c', None), ('Case.IGS_Setup_Complete_Date__c', None), ('Case.Intake_Red_End__c', None), ('Case.Intake_Red_Start__c', None), ('Case.Intake_Updated_Date__c', None), ('Case.LastModifiedDate', None), ('Case.New_Document_Date_Time_Received__c', None), ('Case.Next_2_hour_alert__c', None), ('Case.Owner_Assigned_Time__c', None), ('Case.Prefferred_Demo_Date_Time__c', None), ('Case.qbdialer__LastCallTime__c', None), ('Case.Queue_Assigned_Time__c', None), ('Case.Setup_Items_Complete_Date_Time__c', None), ('Case.Setup_Items_Started_Date_Time__c', None), ('Case.Setup_Verified_by_Acct_Mgr__c', None), ('Case.SlaStartDate', None), ('Case.StopStartDate', None), ('Case.Verified_Date__c', None)])
    sobject_type = models.CharField(max_length=40, verbose_name='Entitlement Process Type', sf_read_only=models.READ_ONLY, choices=[('Account', None), ('AccountTeamMember', None), ('AgentWork', None), ('Asset', None), ('AssetRelationship', None), ('AssistantProgress', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('Campaign', None), ('CampaignInfluence', None), ('CampaignMember', None), ('Case', None), ('CaseComment', None), ('ChatterActivity', None), ('CollaborationGroup', None), ('CollaborationGroupMember', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Contact', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('Contract', None), ('ContractLineItem', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('EmailMessage', None), ('EngagementChannelType', None), ('Entitlement', None), ('EntitlementContact', None), ('Event', None), ('ExchangeUserMapping', None), ('ExpressionFilter', None), ('ExpressionFilterCriteria', None), ('ExternalEventMapping', None), ('FeedItem', None), ('Idea', None), ('Image', None), ('Individual', None), ('Lead', None), ('LinkedArticle', None), ('LiveAgentSession', None), ('LiveChatTranscript', None), ('LiveChatTranscriptEvent', None), ('LiveChatTranscriptSkill', None), ('Macro', None), ('MacroAction', None), ('MacroInstruction', None), ('MacroUsage', None), ('NetworkMember', None), ('Opportunity', None), ('OpportunityContactRole', None), ('OpportunityLineItem', None), ('OpportunityTeamMember', None), ('Organization', None), ('OrgDeleteRequest', None), ('OrgMetricScanResult', None), ('OrgMetricScanSummary', None), ('PartyConsent', None), ('PendingServiceRouting', None), ('Product2', None), ('PromptAction', None), ('QuickText', None), ('QuickTextUsage', None), ('Quote', None), ('QuoteLineItem', None), ('RecordMergeHistory', None), ('RequestsForAccessSIQ', None), ('ServiceContract', None), ('Site', None), ('SocialPersona', None), ('SocialPost', None), ('Solution', None), ('StreamActivityAccess', None), ('StreamingChannel', None), ('Task', None), ('Topic', None), ('TopicAssignment', None), ('User', None), ('UserProvisioningRequest', None), ('UserServicePresence', None)])
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='slaprocess_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='slaprocess_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    business_hours = models.ForeignKey(BusinessHours, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SlaProcess'
        verbose_name = 'Entitlement Process'
        verbose_name_plural = 'Entitlement Processes'
        # keyPrefix = '552'



class SocialPersona(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Social Handle')
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='socialpersona_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='socialpersona_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    parent = models.ForeignKey(Account, models.DO_NOTHING)  # Master Detail Relationship *
    provider = models.CharField(max_length=255, verbose_name='Social Network', choices=[('Twitter', 'Twitter'), ('Facebook', 'Facebook'), ('LinkedIn', 'LinkedIn'), ('YouTube', 'YouTube'), ('Klout', 'Klout'), ('Rypple', 'Rypple'), ('GooglePlus', 'Google+'), ('SinaWeibo', 'Sina Weibo'), ('WeChat', 'WeChat'), ('Line', 'Line'), ('WhatsApp', 'WhatsApp'), ('Pinterest', 'Pinterest'), ('Instagram', 'Instagram'), ('vKontakte', 'vKontakte'), ('Azure', 'Azure'), ('Skype', 'Skype'), ('Telegram', 'Telegram'), ('Snapchat', 'Snapchat'), ('Messenger', 'Messenger'), ('Kik', 'Kik'), ('KakaoTalk', 'KakaoTalk'), ('QQ', 'QQ'), ('SMS', 'SMS'), ('Spark', 'Spark'), ('InstagramBusiness', 'InstagramBusiness'), ('GoogleRtc', 'GoogleRTC'), ('Other', 'Other Media Type')])
    external_id = models.CharField(max_length=255, verbose_name='Social Persona Provider External Id', blank=True, null=True)
    is_default = models.BooleanField(verbose_name='Default', default=models.DefaultedOnCreate(False))
    external_picture_url = models.URLField(db_column='ExternalPictureURL', verbose_name='Provider External Picture URL', blank=True, null=True)
    profile_url = models.URLField(verbose_name='Profile URL', blank=True, null=True)
    source_app = models.CharField(max_length=255, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    avatar_url = models.CharField(max_length=1024, verbose_name='Avatar URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SocialPersona'
        verbose_name = 'Social Persona'
        verbose_name_plural = 'Social Personas'
        # keyPrefix = '0SP'



class SocialPersonaHistory(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    social_persona = models.ForeignKey(SocialPersona, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    field = models.CharField(max_length=255, verbose_name='Changed Field', sf_read_only=models.READ_ONLY, choices=[('AreWeFollowing', 'Are we following'), ('AuthorLabels', 'Author Labels'), ('Bio', 'Bio'), ('IsBlacklisted', 'Blacklisted'), ('created', 'Created.'), ('feedEvent', 'Feed event'), ('Followers', 'Followers'), ('Following', 'Following'), ('individualMerged', 'Individual Merged'), ('InfluencerScore', 'Influencer Score'), ('IsFollowingUs', 'Is following us'), ('Klout', 'Klout Rating'), ('ListedCount', 'Listed Count'), ('NumberOfFriends', 'Number Of Friends'), ('NumberOfTweets', 'Number Of Tweets'), ('ownerAccepted', 'Owner (Accepted)'), ('ownerAssignment', 'Owner (Assignment)'), ('IsPageScopedIdMigrated', 'Page Scoped Id Migrated'), ('Parent', 'Parent'), ('ProfileType', 'Profile Type'), ('ProfileUrl', 'Profile URL'), ('ExternalPictureURL', 'Provider External Picture URL'), ('RealName', 'Real Name'), ('locked', 'Record locked.'), ('unlocked', 'Record unlocked.'), ('Name', 'Social Handle'), ('Provider', 'Social Network'), ('MediaProvider', 'Social Studio Media Provider'), ('MediaType', 'Social Studio Media Type'), ('R6SourceId', 'Social Studio Source Id'), ('UserId', 'Social Studio User Id'), ('SourceApp', 'Source App'), ('TopicType', 'Topic Type'), ('IsVerified', 'Verified')])
    old_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    new_value = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'SocialPersonaHistory'
        verbose_name = 'Social Persona History'
        verbose_name_plural = 'Social Persona History'
        # keyPrefix = 'None'



class Stamp(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Reference to tables [Network, Organization] Master Detail Relationship *
    master_label = models.CharField(max_length=50, verbose_name='Label', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='stamp_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='stamp_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    description = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'Stamp'
        verbose_name = 'Stamp'
        verbose_name_plural = 'Stamps'
        # keyPrefix = '1ST'



class StampAssignment(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='stampassignment_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='stampassignment_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    stamp = models.ForeignKey(Stamp, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    subject = models.ForeignKey('User', models.DO_NOTHING, related_name='stampassignment_subject_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'StampAssignment'
        verbose_name = 'Stamp Assignment'
        verbose_name_plural = 'Stamp Assignments'
        # keyPrefix = '1SA'



class StaticResource(models.Model):
    namespace_prefix = models.CharField(max_length=15, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    content_type = models.CharField(max_length=120, verbose_name='MIME Type', sf_read_only=models.READ_ONLY)
    body_length = models.IntegerField(verbose_name='Size', sf_read_only=models.READ_ONLY)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='staticresource_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='staticresource_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    cache_control = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Private', 'Private'), ('Public', 'Public')])
    class Meta(models.Model.Meta):
        db_table = 'StaticResource'
        verbose_name = 'Static Resource'
        verbose_name_plural = 'Static Resources'
        # keyPrefix = '081'



class SupervisorAgentConfigSkill(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='supervisoragentconfigskill_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='supervisoragentconfigskill_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    live_chat_user_config = models.ForeignKey(LiveChatUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    skill = models.ForeignKey(Skill, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'SupervisorAgentConfigSkill'
        verbose_name = 'SupervisorAgentConfigSkill'
        verbose_name_plural = 'SupervisorAgentConfigSkills'
        # keyPrefix = '0Ie'



class TabDefinition(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Tab Definition Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_custom = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    sobject_name = models.CharField(max_length=255, verbose_name='sObject Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    url = models.CharField(max_length=255, verbose_name='URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_available_in_aloha = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_available_in_lightning = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_available_in_mobile = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_available_in_desktop = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    mobile_url = models.CharField(max_length=255, verbose_name='Mobile URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'TabDefinition'
        verbose_name = 'Tab Definition'
        verbose_name_plural = 'Tab Definitions'
        # keyPrefix = '0KD'



class Task(models.Model):
    record_type = models.ForeignKey(RecordType, models.DO_NOTHING, blank=True, null=True)
    what = models.ForeignKey(Account, models.DO_NOTHING, related_name='task_what_set', blank=True, null=True)  # Reference to tables [Account, ListEmail] Master Detail Relationship *
    subject = models.CharField(max_length=255, choices=[('After Payroll Solutions', 'After Payroll Solutions'), ('AIQA Re-Audits', 'AIQA Re-Audits'), ('AIQA Times Returned', 'AIQA Times Returned'), ('Audit', 'Audit'), ('Call', 'Call'), ('Carrier Approval', 'Carrier Approval'), ('Client Training', 'Client Training'), ('Missing Item', 'Missing Item'), ('Other', 'Other'), ('Pending Item', 'Pending Item'), ('QA 2nd Audit Review Task', 'QA 2nd Audit Review Task'), ('QA Enrollment Task', 'QA Enrollment Task'), ('QAE Re-Audits', 'QAE Re-Audits'), ('QAE Times Returned', 'QAE Times Returned'), ('QA Task', 'QA Task'), ('Send Letter', 'Send Letter'), ('Send Quote', 'Send Quote'), ('Service Hand-Off', 'Service Hand-Off'), ('Specialized Training', 'Specialized Training')], blank=True, null=True)
    activity_date = models.DateField(verbose_name='Due Date Only', blank=True, null=True)
    status = models.CharField(max_length=40, default=models.DefaultedOnCreate('Not Started'), choices=[('Not Started', 'Not Started'), ('In Progress', 'In Progress'), ('Completed', 'Completed'), ('Waiting on someone else', 'Waiting on someone else'), ('Deferred', 'Deferred')])
    priority = models.CharField(max_length=40, default=models.DefaultedOnCreate('Normal'), choices=[('Critical', 'Critical'), ('High', 'High'), ('Normal', 'Normal'), ('Low', 'Low')])
    is_high_priority = models.BooleanField(verbose_name='High Priority', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    owner = models.ForeignKey('User', models.DO_NOTHING, related_name='task_owner_set')
    description = models.TextField(blank=True, null=True)
    type = models.CharField(max_length=40, default=models.DefaultedOnCreate('Other'), choices=[('A/R Collections', 'A/R Collections'), ('Activity Log/Issue Carrier/Plan', 'Activity Log/Issue Carrier/Plan'), ('Admin Kits', 'Admin Kits'), ('Agent BMLL Visit', 'Agent BMLL Visit'), ('APS Platform Change', 'APS Platform Change'), ('Audit', 'Audit'), ('BDM Meeting', 'BDM Meeting'), ('Broker Escalation', 'Broker Escalation'), ('Call', 'Call'), ('Cancellation', 'Cancellation'), ('CBRU 90 Day Renewal Call', 'CBRU 90 Day Renewal Call'), ('Cold Call', 'Cold Call'), ('Conference Call', 'Conference Call'), ('Customer Visit', 'Customer Visit'), ('Email', 'Email'), ('Employer Meeting', 'Employer Meeting'), ('Enrollment Kits', 'Enrollment Kits'), ('Enrollment Meeting', 'Enrollment Meeting'), ('EUP', 'EUP'), ('Face to Face', 'Face to Face'), ('First Meeting', 'First Meeting'), ('Follow-up', 'Follow-up'), ('General Meeting', 'General Meeting'), ('Lunch/Learn', 'Lunch/Learn'), ('Other', 'Other'), ('PartnerFocus', 'PartnerFocus'), ('Partner Visit', 'Partner Visit'), ('Proposal Meeting', 'Proposal Meeting'), ('Proposal Review', 'Proposal Review'), ('Reinstatement', 'Reinstatement'), ('Renewal Meeting', 'Renewal Meeting'), ('Service Add-on', 'Service Add-on'), ('Set Up', 'Set Up'), ('SFBP', 'SFBP'), ('System Demo', 'System Demo'), ('System Training', 'System Training'), ('Transmission', 'Transmission'), ('TalentFocus - Site Support', 'TalentFocus - Site Support'), ('TalentFocus - Transfer Out to External Support', 'TalentFocus - Transfer Out to External Support'), ('TalentFocus - Transfer In from External Support', 'TalentFocus - Transfer In from External Support')], blank=True, null=True)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    account = models.ForeignKey(Account, models.DO_NOTHING, related_name='task_account_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_closed = models.BooleanField(verbose_name='Closed', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='task_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='task_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_archived = models.BooleanField(verbose_name='Archived', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    call_duration_in_seconds = models.IntegerField(verbose_name='Call Duration', blank=True, null=True)
    call_type = models.CharField(max_length=40, choices=[('Internal', 'Internal'), ('Inbound', 'Inbound'), ('Outbound', 'Outbound')], blank=True, null=True)
    call_disposition = models.CharField(max_length=255, verbose_name='Call Result', blank=True, null=True)
    call_object = models.CharField(max_length=255, verbose_name='Call Object Identifier', blank=True, null=True)
    reminder_date_time = models.DateTimeField(verbose_name='Reminder Date/Time', blank=True, null=True)
    is_reminder_set = models.BooleanField(verbose_name='Reminder Set', default=models.DefaultedOnCreate(False))
    recurrence_activity = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_recurrence = models.BooleanField(verbose_name='Create Recurring Series of Tasks', sf_read_only=models.NOT_UPDATEABLE, default=models.DefaultedOnCreate(False))
    recurrence_start_date_only = models.DateField(verbose_name='Recurrence Start', blank=True, null=True)
    recurrence_end_date_only = models.DateField(verbose_name='Recurrence End', blank=True, null=True)
    recurrence_time_zone_sid_key = models.CharField(max_length=40, verbose_name='Recurrence Time Zone', choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')], blank=True, null=True)
    recurrence_type = models.CharField(max_length=40, choices=[('RecursDaily', 'Recurs Daily'), ('RecursEveryWeekday', 'Recurs Every Weekday'), ('RecursMonthly', 'Recurs Monthly'), ('RecursMonthlyNth', 'Recurs Monthy Nth'), ('RecursWeekly', 'Recurs Weekly'), ('RecursYearly', 'Recurs Yearly'), ('RecursYearlyNth', 'Recurs Yearly Nth')], blank=True, null=True)
    recurrence_interval = models.IntegerField(blank=True, null=True)
    recurrence_day_of_week_mask = models.IntegerField(verbose_name='Recurrence Day of Week Mask', blank=True, null=True)
    recurrence_day_of_month = models.IntegerField(verbose_name='Recurrence Day of Month', blank=True, null=True)
    recurrence_instance = models.CharField(max_length=40, choices=[('First', '1st'), ('Second', '2nd'), ('Third', '3rd'), ('Fourth', '4th'), ('Last', 'last')], blank=True, null=True)
    recurrence_month_of_year = models.CharField(max_length=40, verbose_name='Recurrence Month of Year', choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], blank=True, null=True)
    recurrence_regenerated_type = models.CharField(max_length=40, verbose_name='Repeat This Task', choices=[('RecurrenceRegenerateAfterDueDate', 'After due date'), ('RecurrenceRegenerateAfterToday', 'After date completed'), ('RecurrenceRegenerated', '(Task Closed)')], blank=True, null=True)
    task_subtype = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Task', 'Task'), ('Email', 'Email'), ('ListEmail', 'List Email'), ('Cadence', 'Cadence'), ('Call', 'Call')], blank=True, null=True)
    completed_date_time = models.DateTimeField(verbose_name='Completed Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    event_outcome = models.CharField(custom=True, db_column='Event_Outcome__c', max_length=255, verbose_name='Event Outcome', sf_read_only=models.READ_ONLY, help_text='Select the value that best describes the outcome of the event.', choices=[('Meeting Completed', 'Meeting Completed'), ('DM No Show', 'DM No Show'), ('Customer Canceled', 'Customer Canceled'), ('Unable to Contact Customer', 'Unable to Contact Customer')], blank=True, null=True)
    activity_type = models.CharField(custom=True, db_column='Activity_Type__c', max_length=255, verbose_name='Activity Type', blank=True, null=True)
    qbdialer_call_recording_url = models.URLField(db_column='qbdialer__CallRecordingURL__c', custom=True, verbose_name='Call Recording', blank=True, null=True) 
    qbdialer_call_date_time = models.DateTimeField(db_column='qbdialer__Call_Date_Time__c', custom=True, verbose_name='Call Date/Time', blank=True, null=True) 
    qbdialer_call_dial_number = models.DecimalField(db_column='qbdialer__Call_Dial_Number__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Dial Number', blank=True, null=True) 
    qbdialer_call_hour = models.CharField(db_column='qbdialer__Call_Hour__c', custom=True, max_length=8, verbose_name='Call Hour', blank=True, null=True) 
    qbdialer_call_lead_status = models.CharField(db_column='qbdialer__Call_Lead_Status__c', custom=True, max_length=40, verbose_name='Call Lead Status', blank=True, null=True) 
    qbdialer_call_ring_time = models.DecimalField(db_column='qbdialer__Call_Ring_Time__c', custom=True, max_digits=18, decimal_places=0, verbose_name='Call Ring Time', blank=True, null=True) 
    qbdialer_call_time_zone = models.CharField(db_column='qbdialer__Call_Time_Zone__c', custom=True, max_length=20, verbose_name='Call Time Zone', blank=True, null=True) 
    isdc_dialed_phone_number = models.CharField(custom=True, db_column='isdc_dialed_phone_number__c', max_length=40, verbose_name='Phone Dialed', blank=True, null=True)
    isdc_dialer_call_type = models.CharField(custom=True, db_column='isdc_dialer_call_type__c', max_length=255, verbose_name='Dialer Type', choices=[('Click-to-Call', 'Click-to-Call'), ('Seek', 'Seek'), ('Domino', 'Domino')], blank=True, null=True)
    isdc_dialer_list_name = models.CharField(custom=True, db_column='isdc_dialer_list_name__c', max_length=80, verbose_name='List Name', blank=True, null=True)
    isdc_dialer_query_name = models.CharField(custom=True, db_column='isdc_dialer_query_name__c', max_length=80, verbose_name='Query Name', blank=True, null=True)
    task_external_id = models.CharField(custom=True, db_column='Task_External_Id__c', max_length=255, verbose_name='Task External Id', blank=True, null=True)
    event_external_id = models.CharField(custom=True, db_column='Event_External_Id__c', max_length=255, verbose_name='Event External Id', blank=True, null=True)
    telemarketing_call_type = models.CharField(custom=True, db_column='Telemarketing_Call_Type__c', max_length=255, verbose_name='Telemarketing Call Type', choices=[('Contact', 'Contact'), ('Decision Maker', 'Decision Maker'), ('Disconnected Number', 'Disconnected Number'), ('No Answer', 'No Answer'), ('Set Call Back', 'Set Call Back'), ('Set Event', 'Set Event'), ('Voicemail No Message', 'Voicemail No Message'), ('Wrong Number', 'Wrong Number')], blank=True, null=True)
    audit_error_reason = models.CharField(custom=True, db_column='Audit_Error_Reason__c', max_length=255, verbose_name='Audit Error Reason', choices=[('Address Truncated in IBAS', 'Address Truncated in IBAS'), ('Age Change Basis Incorrect', 'Age Change Basis Incorrect'), ('Ancillary', 'Ancillary'), ('App Not Signed', 'App Not Signed'), ('Benefit Amounts - Not added or Incorrect', 'Benefit Amounts - Not added or Incorrect'), ('Benefit Error', 'Benefit Error'), ('BMLL Box Not Checked', 'BMLL Box Not Checked'), ('Carrier Group Number Incorrect', 'Carrier Group Number Incorrect'), ('Carrier Incorrect Case Setup', 'Carrier Incorrect Case Setup'), ('City Incorrect', 'City Incorrect'), ('COB Not Updated', 'COB Not Updated'), ('Cobra Error', 'Cobra Error'), ('Cobra Med Codes', 'Cobra Med Codes'), ('Contact Phone Number Incorrect', 'Contact Phone Number Incorrect'), ('Contract Date/Period Incorrect or Not Updated', 'Contract Date/Period Incorrect or Not Updated'), ('Coverage Code Incorrect', 'Coverage Code Incorrect'), ('Coverage Code Missing', 'Coverage Code Missing'), ('Coverage Codes Not Termed', 'Coverage Codes Not Termed'), ('Coverage Level Incorrect', 'Coverage Level Incorrect'), ('CT # of Apps Field Not Updated or Incorrect', 'CT # of Apps Field Not Updated or Incorrect'), ('CT Date Sent to Audit Field Not Updated', 'CT Date Sent to Audit Field Not Updated'), ('CT Record Not Updated', 'CT Record Not Updated'), ('Date of Birth Incorrect', 'Date of Birth Incorrect'), ('Date of Hire Incorrect', 'Date of Hire Incorrect'), ('Dependent Date of Birth Incorrect', 'Dependent Date of Birth Incorrect'), ('Dependent Enrolled without Student Cert', 'Dependent Enrolled without Student Cert'), ('Dependent Name Misspelled', 'Dependent Name Misspelled'), ('Dependent Not Enrolled or Not Termed', 'Dependent Not Enrolled or Not Termed'), ('Dependent Not Entered', 'Dependent Not Entered'), ('Dependent SSN Incorrect', 'Dependent SSN Incorrect'), ('Domestic Partner Not Updated', 'Domestic Partner Not Updated'), ('Dual Coverage Not Updated', 'Dual Coverage Not Updated'), ('Effective Date Incorrect', 'Effective Date Incorrect'), ('Eligibility Period Incorrect', 'Eligibility Period Incorrect'), ('Employee Not Enrolled', 'Employee Not Enrolled'), ('ER Contributions', 'ER Contributions'), ('Error Removed', 'Error Removed'), ('Gender Incorrect', 'Gender Incorrect'), ('Group Address Not Updated or Incorrect', 'Group Address Not Updated or Incorrect'), ('Group Contact Incorrect', 'Group Contact Incorrect'), ('Group Size Incorrect', 'Group Size Incorrect'), ('HB1057 Box Not Checked', 'HB1057 Box Not Checked'), ('Home Phone Incorrect', 'Home Phone Incorrect'), ('Incorrect Broker Information', 'Incorrect Broker Information'), ('Incorrect Carrier Code', 'Incorrect Carrier Code'), ('Incorrect Class or Class Missing', 'Incorrect Class or Class Missing'), ('Incorrect HB8', 'Incorrect HB8'), ('Incorrect Or Missing Beneficiary', 'Incorrect Or Missing Beneficiary'), ('Incorrect or Misspelled Group Name', 'Incorrect or Misspelled Group Name'), ('Incorrect PCP Code Used', 'Incorrect PCP Code Used'), ('Incorrect PDF Number', 'Incorrect PDF Number'), ('Incorrect Plan', 'Incorrect Plan'), ('Incorrect Rate', 'Incorrect Rate'), ('Incorrect Tax ID Number', 'Incorrect Tax ID Number'), ('Incorrect Team', 'Incorrect Team'), ('Mapping Not Processed/Incorrect', 'Mapping Not Processed/Incorrect'), ('Member Name Misspelled', 'Member Name Misspelled'), ('Miscellaneous', 'Miscellaneous'), ('Missing Middle Initial', 'Missing Middle Initial'), ('Missing Student Cert Not Requested', 'Missing Student Cert Not Requested'), ('NCA Class Codes Incorrect or Missing', 'NCA Class Codes Incorrect or Missing'), ('Not Verified', 'Not Verified'), ('OFE O/E Not Updated', 'OFE O/E Not Updated'), ('Original Effective Date Not Updated or Incorrect', 'Original Effective Date Not Updated or Incorrect'), ('Overage Dependent Age Incorrect', 'Overage Dependent Age Incorrect'), ('Parallel Non-Parallel Incorrect', 'Parallel Non-Parallel Incorrect'), ('Part Time Eligibility Incorrect or Not Updated', 'Part Time Eligibility Incorrect or Not Updated'), ('PCP Error', 'PCP Error'), ('Plan Not Setup', 'Plan Not Setup'), ('Plan Not Termed', 'Plan Not Termed'), ('Rate(s) Not Termed', 'Rate(s) Not Termed'), ('Rate(s) Termed in Error', 'Rate(s) Termed in Error'), ('Rate Error', 'Rate Error'), ('Request Not Processed', 'Request Not Processed'), ('Retro Date Incorrect', 'Retro Date Incorrect'), ('Salary Incorrect', 'Salary Incorrect'), ('SSN Incorrect', 'SSN Incorrect'), ('State Incorrect', 'State Incorrect'), ('Street Address Incorrect or Misspelled', 'Street Address Incorrect or Misspelled'), ('Student Cert Status Incorrect or Not Updated', 'Student Cert Status Incorrect or Not Updated'), ('Supporting Documentation-Missing Info', 'Supporting Documentation-Missing Info'), ('System Error', 'System Error'), ('Termination Date Incorrect', 'Termination Date Incorrect'), ('Title Missing from Name', 'Title Missing from Name'), ('Transmission/Upload Issue', 'Transmission/Upload Issue'), ('Transmit to Carrier Missed', 'Transmit to Carrier Missed'), ('Wrong CT Record Updated', 'Wrong CT Record Updated'), ('Zip Code Incorrect', 'Zip Code Incorrect')], blank=True, null=True)
    audit_type = models.CharField(custom=True, db_column='Audit_Type__c', max_length=255, verbose_name='Audit Type', choices=[('FYI', 'FYI'), ('Error', 'Error'), ('Group level error', 'Group level error'), ('Enrollment error', 'Enrollment error')], blank=True, null=True)
    call_back_date = models.DateField(custom=True, db_column='Call_Back_Date__c', verbose_name='Call Back Date', blank=True, null=True)
    qbdialer_callback_date_time = models.DateTimeField(db_column='qbdialer__Callback_Date_Time__c', custom=True, verbose_name='Callback Date/Time', blank=True, null=True) 
    qbdialer_impression_id = models.DecimalField(db_column='qbdialer__ImpressionId__c', custom=True, unique=True, max_digits=18, decimal_places=0, verbose_name='Impression ID', blank=True, null=True) 
    qbdialer_smsreminder = models.BooleanField(db_column='qbdialer__SMSReminder__c', custom=True, verbose_name='Send text msg reminder to all attendees', default=models.DefaultedOnCreate(False), help_text='Text message reminders will be sent to all attendees at the set reminder time.') 
    class Meta(models.Model.Meta):
        db_table = 'Task'
        verbose_name = 'Task'
        verbose_name_plural = 'Tasks'
        # keyPrefix = '00T'



class TaskFeed(models.Model):
    parent = models.ForeignKey(Task, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'TaskFeed'
        verbose_name = 'Task Feed'
        verbose_name_plural = 'Task Feed'
        # keyPrefix = 'None'



class TaskPriority(models.Model):
    master_label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_default = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_high_priority = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskpriority_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskpriority_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'TaskPriority'
        verbose_name = 'Task Priority Value'
        verbose_name_plural = 'Task Priority Value'
        # keyPrefix = 'None'



class TaskRecurrenceException(models.Model):
    is_deletion = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    task = models.ForeignKey(Task, models.DO_NOTHING, related_name='taskrecurrenceexception_task_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    activity_date_original = models.DateTimeField(verbose_name='Original Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    recurrence_task = models.ForeignKey(Task, models.DO_NOTHING, related_name='taskrecurrenceexception_recurrencetask_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskrecurrenceexception_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskrecurrenceexception_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'TaskRecurrenceException'
        verbose_name = 'Task Recurrence Exception'
        verbose_name_plural = 'Task Recurrence Exception'
        # keyPrefix = '10y'



class TaskStatus(models.Model):
    master_label = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    api_name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_default = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_closed = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskstatus_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='taskstatus_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'TaskStatus'
        verbose_name = 'Task Status Value'
        verbose_name_plural = 'Task Status Value'
        # keyPrefix = 'None'



class TenantUsageEntitlement(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='tenantusageentitlement_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='tenantusageentitlement_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    resource_group_key = models.CharField(max_length=120, sf_read_only=models.READ_ONLY)
    setting = models.CharField(max_length=120, sf_read_only=models.READ_ONLY)
    start_date = models.DateField(sf_read_only=models.READ_ONLY)
    end_date = models.DateField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    current_amount_allowed = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY)
    frequency = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Fortnightly', 'Fortnightly'), ('Monthly', 'Monthly'), ('Once', 'Once'), ('Quarterly', 'Quarterly'), ('Yearly', 'Yearly')], blank=True, null=True)
    is_persistent_resource = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_rollover = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    overage_grace = models.DecimalField(max_digits=5, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    amount_used = models.DecimalField(max_digits=18, decimal_places=0, sf_read_only=models.READ_ONLY, blank=True, null=True)
    usage_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    master_label = models.CharField(max_length=255, verbose_name='Setting Label', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'TenantUsageEntitlement'
        verbose_name = 'Tenant Usage Entitlement'
        verbose_name_plural = 'Tenant Usage Entitlements'
        # keyPrefix = '0UT'



class TestSuiteMembership(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='testsuitemembership_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='testsuitemembership_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    apex_test_suite = models.ForeignKey(ApexTestSuite, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    apex_class = models.ForeignKey(ApexClass, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'TestSuiteMembership'
        verbose_name = 'Test Suite Membership'
        verbose_name_plural = 'Test Suite Memberships'
        # keyPrefix = '0Hd'



class ThirdPartyAccountLink(models.Model):
    third_party_account_link_key = models.CharField(max_length=255, verbose_name='Third Party Account Link Unique Key', sf_read_only=models.READ_ONLY, blank=True, null=True)
    user = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    handle = models.CharField(max_length=375, verbose_name='External User Handle', sf_read_only=models.READ_ONLY, blank=True, null=True)
    remote_identifier = models.CharField(max_length=128, verbose_name='External User Id', sf_read_only=models.READ_ONLY, blank=True, null=True)
    provider = models.CharField(max_length=128, sf_read_only=models.READ_ONLY, blank=True, null=True)
    sso_provider_name = models.CharField(max_length=255, verbose_name='Single Sign-On Provider Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_not_sso_usable = models.BooleanField(verbose_name='Is Not SSO Usable', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'ThirdPartyAccountLink'
        verbose_name = 'Third Party Account Link'
        verbose_name_plural = 'Third Party Account Links'
        # keyPrefix = '0Jr'



class TodayGoal(models.Model):
    owner = models.ForeignKey(Group, models.DO_NOTHING)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='todaygoal_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='todaygoal_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    value = models.DecimalField(max_digits=18, decimal_places=0, blank=True, null=True)
    user = models.OneToOneField('User', models.DO_NOTHING, related_name='todaygoal_user_set')  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'TodayGoal'
        verbose_name = 'Goal'
        verbose_name_plural = 'Goals'
        # keyPrefix = '0Jz'



class TodayGoalShare(models.Model):
    parent = models.ForeignKey(TodayGoal, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'TodayGoalShare'
        verbose_name = 'Goal Share'
        verbose_name_plural = 'Goal Share'
        # keyPrefix = 'None'



class Topic(models.Model):
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    name = models.CharField(max_length=99)
    description = models.CharField(max_length=1000, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    talking_about = models.IntegerField(sf_read_only=models.READ_ONLY)
    managed_topic_type = models.CharField(max_length=99, verbose_name='Enabled For', sf_read_only=models.READ_ONLY, blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Topic'
        verbose_name = 'Topic'
        verbose_name_plural = 'Topics'
        # keyPrefix = '0TO'



class TopicAssignment(models.Model):
    network = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    topic = models.ForeignKey(Topic, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    entity = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Account, ContentDocument, Event, FeedItem, Knowledge__kav, LinkedArticle, Task] Master Detail Relationship *
    entity_key_prefix = models.CharField(max_length=3, verbose_name='Record Key Prefix', sf_read_only=models.READ_ONLY)
    entity_type = models.CharField(max_length=80, verbose_name='Object Type', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'TopicAssignment'
        verbose_name = 'Topic Assignment'
        verbose_name_plural = 'Topic Assignments'
        # keyPrefix = '0FT'



class TopicFeed(models.Model):
    parent = models.ForeignKey(Topic, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='topicfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey('User', models.DO_NOTHING, related_name='topicfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'TopicFeed'
        verbose_name = 'Topic Feed'
        verbose_name_plural = 'Topic Feed'
        # keyPrefix = 'None'



class UndecidedEventRelation(models.Model):
    relation = models.ForeignKey(Calendar, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Calendar, User]
    event = models.ForeignKey(Event, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    responded_date = models.DateTimeField(verbose_name='Response Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    response = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('User', models.DO_NOTHING, related_name='undecidedeventrelation_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('User', models.DO_NOTHING, related_name='undecidedeventrelation_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    type = models.CharField(max_length=50, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UndecidedEventRelation'
        verbose_name = 'Undecided Event Relation'
        verbose_name_plural = 'Undecided Event Relations'
        # keyPrefix = 'None'



class User(models.Model):
    username = models.CharField(max_length=80)
    last_name = models.CharField(max_length=80)
    first_name = models.CharField(max_length=40, blank=True, null=True)
    name = models.CharField(max_length=121, verbose_name='Full Name', sf_read_only=models.READ_ONLY)
    company_name = models.CharField(max_length=80, blank=True, null=True)
    division = models.CharField(max_length=80, blank=True, null=True)
    department = models.CharField(max_length=80, blank=True, null=True)
    title = models.CharField(max_length=80, blank=True, null=True)
    street = models.TextField(blank=True, null=True)
    city = models.CharField(max_length=40, blank=True, null=True)
    state = models.CharField(max_length=80, verbose_name='State/Province', blank=True, null=True)
    postal_code = models.CharField(max_length=20, verbose_name='Zip/Postal Code', blank=True, null=True)
    country = models.CharField(max_length=80, blank=True, null=True)
    state_code = models.CharField(max_length=10, verbose_name='State/Province Code', choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], blank=True, null=True)
    country_code = models.CharField(max_length=10, default=models.DefaultedOnCreate('US'), choices=[('CA', 'Canada'), ('US', 'United States')], blank=True, null=True)
    latitude = models.DecimalField(max_digits=18, decimal_places=15, blank=True, null=True)
    longitude = models.DecimalField(max_digits=18, decimal_places=15, blank=True, null=True)
    geocode_accuracy = models.CharField(max_length=40, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], blank=True, null=True)
    address = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)  # This field type is a guess.
    email = models.EmailField()
    email_preferences_auto_bcc = models.BooleanField(verbose_name='AutoBcc')
    email_preferences_auto_bcc_stay_in_touch = models.BooleanField(verbose_name='AutoBccStayInTouch')
    email_preferences_stay_in_touch_reminder = models.BooleanField(verbose_name='StayInTouchReminder')
    sender_email = models.EmailField(verbose_name='Email Sender Address', blank=True, null=True)
    sender_name = models.CharField(max_length=80, verbose_name='Email Sender Name', blank=True, null=True)
    signature = models.TextField(verbose_name='Email Signature', blank=True, null=True)
    stay_in_touch_subject = models.CharField(max_length=80, verbose_name='Stay-in-Touch Email Subject', blank=True, null=True)
    stay_in_touch_signature = models.TextField(verbose_name='Stay-in-Touch Email Signature', blank=True, null=True)
    stay_in_touch_note = models.CharField(max_length=512, verbose_name='Stay-in-Touch Email Note', blank=True, null=True)
    phone = models.CharField(max_length=40, blank=True, null=True)
    fax = models.CharField(max_length=40, blank=True, null=True)
    mobile_phone = models.CharField(max_length=40, verbose_name='Mobile', blank=True, null=True)
    alias = models.CharField(max_length=8)
    community_nickname = models.CharField(max_length=40, verbose_name='Nickname')
    badge_text = models.CharField(max_length=80, verbose_name='User Photo badge text overlay', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_active = models.BooleanField(verbose_name='Active', default=models.DefaultedOnCreate(False))
    time_zone_sid_key = models.CharField(max_length=40, verbose_name='Time Zone', choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')])
    user_role = models.ForeignKey('UserRole', models.DO_NOTHING, blank=True, null=True)
    locale_sid_key = models.CharField(max_length=40, verbose_name='Locale', choices=[('af_ZA', 'Afrikaans (South Africa)'), ('sq_AL', 'Albanian (Albania)'), ('ar_DZ', 'Arabic (Algeria)'), ('ar_BH', 'Arabic (Bahrain)'), ('ar_EG', 'Arabic (Egypt)'), ('ar_IQ', 'Arabic (Iraq)'), ('ar_JO', 'Arabic (Jordan)'), ('ar_KW', 'Arabic (Kuwait)'), ('ar_LB', 'Arabic (Lebanon)'), ('ar_LY', 'Arabic (Libya)'), ('ar_MA', 'Arabic (Morocco)'), ('ar_OM', 'Arabic (Oman)'), ('ar_QA', 'Arabic (Qatar)'), ('ar_SA', 'Arabic (Saudi Arabia)'), ('ar_SD', 'Arabic (Sudan)'), ('ar_SY', 'Arabic (Syria)'), ('ar_TN', 'Arabic (Tunisia)'), ('ar_AE', 'Arabic (United Arab Emirates)'), ('ar_YE', 'Arabic (Yemen)'), ('hy_AM', 'Armenian (Armenia)'), ('az_AZ', 'Azerbaijani (Azerbaijan)'), ('bn_BD', 'Bangla (Bangladesh)'), ('bn_IN', 'Bangla (India)'), ('eu_ES', 'Basque (Spain)'), ('be_BY', 'Belarusian (Belarus)'), ('bs_BA', 'Bosnian (Bosnia & Herzegovina)'), ('bg_BG', 'Bulgarian (Bulgaria)'), ('my_MM', 'Burmese (Myanmar (Burma))'), ('ca_ES', 'Catalan (Spain)'), ('zh_CN_PINYIN', 'Chinese (China, Pinyin Ordering)'), ('zh_CN_STROKE', 'Chinese (China, Stroke Ordering)'), ('zh_CN', 'Chinese (China)'), ('zh_HK_STROKE', 'Chinese (Hong Kong SAR China, Stroke Ordering)'), ('zh_HK', 'Chinese (Hong Kong SAR China)'), ('zh_MO', 'Chinese (Macao SAR China)'), ('zh_SG', 'Chinese (Singapore)'), ('zh_TW_STROKE', 'Chinese (Taiwan, Stroke Ordering)'), ('zh_TW', 'Chinese (Taiwan)'), ('hr_HR', 'Croatian (Croatia)'), ('cs_CZ', 'Czech (Czechia)'), ('da_DK', 'Danish (Denmark)'), ('nl_AW', 'Dutch (Aruba)'), ('nl_BE', 'Dutch (Belgium)'), ('nl_NL', 'Dutch (Netherlands)'), ('nl_SR', 'Dutch (Suriname)'), ('dz_BT', 'Dzongkha (Bhutan)'), ('en_AG', 'English (Antigua & Barbuda)'), ('en_AU', 'English (Australia)'), ('en_BS', 'English (Bahamas)'), ('en_BB', 'English (Barbados)'), ('en_BZ', 'English (Belize)'), ('en_BM', 'English (Bermuda)'), ('en_BW', 'English (Botswana)'), ('en_CM', 'English (Cameroon)'), ('en_CA', 'English (Canada)'), ('en_KY', 'English (Cayman Islands)'), ('en_ER', 'English (Eritrea)'), ('en_SZ', 'English (Eswatini)'), ('en_FK', 'English (Falkland Islands)'), ('en_FJ', 'English (Fiji)'), ('en_GM', 'English (Gambia)'), ('en_GH', 'English (Ghana)'), ('en_GI', 'English (Gibraltar)'), ('en_GY', 'English (Guyana)'), ('en_HK', 'English (Hong Kong SAR China)'), ('en_IN', 'English (India)'), ('en_ID', 'English (Indonesia)'), ('en_IE', 'English (Ireland)'), ('en_JM', 'English (Jamaica)'), ('en_KE', 'English (Kenya)'), ('en_LR', 'English (Liberia)'), ('en_MG', 'English (Madagascar)'), ('en_MW', 'English (Malawi)'), ('en_MY', 'English (Malaysia)'), ('en_MU', 'English (Mauritius)'), ('en_NA', 'English (Namibia)'), ('en_NZ', 'English (New Zealand)'), ('en_NG', 'English (Nigeria)'), ('en_PK', 'English (Pakistan)'), ('en_PG', 'English (Papua New Guinea)'), ('en_PH', 'English (Philippines)'), ('en_RW', 'English (Rwanda)'), ('en_WS', 'English (Samoa)'), ('en_SC', 'English (Seychelles)'), ('en_SL', 'English (Sierra Leone)'), ('en_SG', 'English (Singapore)'), ('en_SX', 'English (Sint Maarten)'), ('en_SB', 'English (Solomon Islands)'), ('en_ZA', 'English (South Africa)'), ('en_SH', 'English (St. Helena)'), ('en_TZ', 'English (Tanzania)'), ('en_TO', 'English (Tonga)'), ('en_TT', 'English (Trinidad & Tobago)'), ('en_UG', 'English (Uganda)'), ('en_GB', 'English (United Kingdom)'), ('en_US', 'English (United States)'), ('en_VU', 'English (Vanuatu)'), ('et_EE', 'Estonian (Estonia)'), ('fi_FI', 'Finnish (Finland)'), ('fr_BE', 'French (Belgium)'), ('fr_CA', 'French (Canada)'), ('fr_KM', 'French (Comoros)'), ('fr_FR', 'French (France)'), ('fr_GN', 'French (Guinea)'), ('fr_HT', 'French (Haiti)'), ('fr_LU', 'French (Luxembourg)'), ('fr_MR', 'French (Mauritania)'), ('fr_MC', 'French (Monaco)'), ('fr_CH', 'French (Switzerland)'), ('fr_WF', 'French (Wallis & Futuna)'), ('ka_GE', 'Georgian (Georgia)'), ('de_AT', 'German (Austria)'), ('de_BE', 'German (Belgium)'), ('de_DE', 'German (Germany)'), ('de_LU', 'German (Luxembourg)'), ('de_CH', 'German (Switzerland)'), ('el_GR', 'Greek (Greece)'), ('gu_IN', 'Gujarati (India)'), ('iw_IL', 'Hebrew (Israel)'), ('hi_IN', 'Hindi (India)'), ('hu_HU', 'Hungarian (Hungary)'), ('is_IS', 'Icelandic (Iceland)'), ('in_ID', 'Indonesian (Indonesia)'), ('ga_IE', 'Irish (Ireland)'), ('it_IT', 'Italian (Italy)'), ('it_CH', 'Italian (Switzerland)'), ('ja_JP', 'Japanese (Japan)'), ('kn_IN', 'Kannada (India)'), ('kk_KZ', 'Kazakh (Kazakhstan)'), ('km_KH', 'Khmer (Cambodia)'), ('ko_KP', 'Korean (North Korea)'), ('ko_KR', 'Korean (South Korea)'), ('ky_KG', 'Kyrgyz (Kyrgyzstan)'), ('lo_LA', 'Lao (Laos)'), ('lv_LV', 'Latvian (Latvia)'), ('lt_LT', 'Lithuanian (Lithuania)'), ('lu_CD', 'Luba-Katanga (Congo - Kinshasa)'), ('lb_LU', 'Luxembourgish (Luxembourg)'), ('mk_MK', 'Macedonian (North Macedonia)'), ('ms_BN', 'Malay (Brunei)'), ('ms_MY', 'Malay (Malaysia)'), ('ml_IN', 'Malayalam (India)'), ('mt_MT', 'Maltese (Malta)'), ('mi_NZ', 'Maori (New Zealand)'), ('mr_IN', 'Marathi (India)'), ('sh_ME_USD', 'Montenegrin (Montenegro, USD)'), ('sh_ME', 'Montenegrin (Montenegro)'), ('ne_NP', 'Nepali (Nepal)'), ('no_NO', 'Norwegian (Norway)'), ('ps_AF', 'Pashto (Afghanistan)'), ('fa_IR', 'Persian (Iran)'), ('pl_PL', 'Polish (Poland)'), ('pt_AO', 'Portuguese (Angola)'), ('pt_BR', 'Portuguese (Brazil)'), ('pt_CV', 'Portuguese (Cape Verde)'), ('pt_MZ', 'Portuguese (Mozambique)'), ('pt_PT', 'Portuguese (Portugal)'), ('pt_ST', 'Portuguese (São Tomé & Príncipe)'), ('ro_MD', 'Romanian (Moldova)'), ('ro_RO', 'Romanian (Romania)'), ('rm_CH', 'Romansh (Switzerland)'), ('rn_BI', 'Rundi (Burundi)'), ('ru_KZ', 'Russian (Kazakhstan)'), ('ru_RU', 'Russian (Russia)'), ('sr_BA', 'Serbian (Cyrillic) (Bosnia and Herzegovina)'), ('sr_CS', 'Serbian (Cyrillic) (Serbia)'), ('sh_BA', 'Serbian (Latin) (Bosnia and Herzegovina)'), ('sh_CS', 'Serbian (Latin) (Serbia)'), ('sr_RS', 'Serbian (Serbia)'), ('sk_SK', 'Slovak (Slovakia)'), ('sl_SI', 'Slovenian (Slovenia)'), ('so_DJ', 'Somali (Djibouti)'), ('so_SO', 'Somali (Somalia)'), ('es_AR', 'Spanish (Argentina)'), ('es_BO', 'Spanish (Bolivia)'), ('es_CL', 'Spanish (Chile)'), ('es_CO', 'Spanish (Colombia)'), ('es_CR', 'Spanish (Costa Rica)'), ('es_CU', 'Spanish (Cuba)'), ('es_DO', 'Spanish (Dominican Republic)'), ('es_EC', 'Spanish (Ecuador)'), ('es_SV', 'Spanish (El Salvador)'), ('es_GT', 'Spanish (Guatemala)'), ('es_HN', 'Spanish (Honduras)'), ('es_MX', 'Spanish (Mexico)'), ('es_NI', 'Spanish (Nicaragua)'), ('es_PA', 'Spanish (Panama)'), ('es_PY', 'Spanish (Paraguay)'), ('es_PE', 'Spanish (Peru)'), ('es_PR', 'Spanish (Puerto Rico)'), ('es_ES', 'Spanish (Spain)'), ('es_US', 'Spanish (United States)'), ('es_UY', 'Spanish (Uruguay)'), ('es_VE', 'Spanish (Venezuela)'), ('sw_KE', 'Swahili (Kenya)'), ('sv_SE', 'Swedish (Sweden)'), ('tl_PH', 'Tagalog (Philippines)'), ('tg_TJ', 'Tajik (Tajikistan)'), ('ta_IN', 'Tamil (India)'), ('ta_LK', 'Tamil (Sri Lanka)'), ('te_IN', 'Telugu (India)'), ('th_TH', 'Thai (Thailand)'), ('ti_ET', 'Tigrinya (Ethiopia)'), ('tr_TR', 'Turkish (Turkey)'), ('uk_UA', 'Ukrainian (Ukraine)'), ('ur_PK', 'Urdu (Pakistan)'), ('uz_LATN_UZ', 'Uzbek (LATN,UZ)'), ('vi_VN', 'Vietnamese (Vietnam)'), ('cy_GB', 'Welsh (United Kingdom)'), ('xh_ZA', 'Xhosa (South Africa)'), ('yo_BJ', 'Yoruba (Benin)'), ('zu_ZA', 'Zulu (South Africa)')])
    receives_info_emails = models.BooleanField(verbose_name='Info Emails', default=models.DefaultedOnCreate(False))
    receives_admin_info_emails = models.BooleanField(verbose_name='Admin Info Emails', default=models.DefaultedOnCreate(False))
    email_encoding_key = models.CharField(max_length=40, verbose_name='Email Encoding', choices=[('UTF-8', 'Unicode (UTF-8)'), ('ISO-8859-1', 'General US & Western Europe (ISO-8859-1, ISO-LATIN-1)'), ('Shift_JIS', 'Japanese (Shift-JIS)'), ('ISO-2022-JP', 'Japanese (JIS)'), ('EUC-JP', 'Japanese (EUC)'), ('ks_c_5601-1987', 'Korean (ks_c_5601-1987)'), ('Big5', 'Traditional Chinese (Big5)'), ('GB2312', 'Simplified Chinese (GB2312)'), ('Big5-HKSCS', 'Traditional Chinese Hong Kong (Big5-HKSCS)'), ('x-SJIS_0213', 'Japanese (Shift-JIS_2004)')])
    profile = models.ForeignKey(Profile, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    user_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Standard', 'Standard'), ('PowerPartner', 'Partner'), ('PowerCustomerSuccess', 'Customer Portal Manager'), ('CustomerSuccess', 'Customer Portal User'), ('Guest', 'Guest'), ('CspLitePortal', 'High Volume Portal'), ('CsnOnly', 'CSN Only'), ('SelfService', 'Self Service')], blank=True, null=True)
    language_locale_key = models.CharField(max_length=40, verbose_name='Language', choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')])
    employee_number = models.CharField(max_length=20, blank=True, null=True)
    delegated_approver = models.ForeignKey(Group, models.DO_NOTHING, blank=True, null=True)  # Reference to tables [Group, User]
    manager = models.ForeignKey('self', models.DO_NOTHING, related_name='user_manager_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_login_date = models.DateTimeField(verbose_name='Last Login', sf_read_only=models.READ_ONLY, blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey('self', models.DO_NOTHING, related_name='user_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey('self', models.DO_NOTHING, related_name='user_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    offline_trial_expiration_date = models.DateTimeField(verbose_name='Offline Edition Trial Expiration Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    offline_pda_trial_expiration_date = models.DateTimeField(verbose_name='Sales Anywhere Trial Expiration Date', sf_read_only=models.READ_ONLY, blank=True, null=True)
    user_permissions_marketing_user = models.BooleanField(verbose_name='Marketing User', sf_read_only=models.READ_ONLY)
    user_permissions_offline_user = models.BooleanField(verbose_name='Offline User', sf_read_only=models.READ_ONLY)
    user_permissions_avantgo_user = models.BooleanField(verbose_name='AvantGo User', sf_read_only=models.READ_ONLY)
    user_permissions_call_center_auto_login = models.BooleanField(verbose_name='Auto-login To Call Center')
    user_permissions_mobile_user = models.BooleanField(verbose_name='Apex Mobile User', sf_read_only=models.READ_ONLY)
    user_permissions_sfcontent_user = models.BooleanField(db_column='UserPermissionsSFContentUser', verbose_name='Salesforce CRM Content User', sf_read_only=models.READ_ONLY)
    user_permissions_knowledge_user = models.BooleanField(verbose_name='Knowledge User', sf_read_only=models.READ_ONLY)
    user_permissions_interaction_user = models.BooleanField(verbose_name='Flow User', sf_read_only=models.READ_ONLY)
    user_permissions_support_user = models.BooleanField(verbose_name='Service Cloud User', sf_read_only=models.READ_ONLY)
    user_permissions_live_agent_user = models.BooleanField(verbose_name='Chat User', sf_read_only=models.READ_ONLY)
    user_permissions_chatter_answers_user = models.BooleanField(verbose_name='Chatter Answers User', sf_read_only=models.READ_ONLY)
    forecast_enabled = models.BooleanField(verbose_name='Allow Forecasting', default=models.DefaultedOnCreate(False))
    user_preferences_activity_reminders_popup = models.BooleanField(verbose_name='ActivityRemindersPopup')
    user_preferences_event_reminders_checkbox_default = models.BooleanField(verbose_name='EventRemindersCheckboxDefault')
    user_preferences_task_reminders_checkbox_default = models.BooleanField(verbose_name='TaskRemindersCheckboxDefault')
    user_preferences_reminder_sound_off = models.BooleanField(verbose_name='ReminderSoundOff')
    user_preferences_disable_all_feeds_email = models.BooleanField(verbose_name='DisableAllFeedsEmail')
    user_preferences_disable_followers_email = models.BooleanField(verbose_name='DisableFollowersEmail')
    user_preferences_disable_profile_post_email = models.BooleanField(verbose_name='DisableProfilePostEmail')
    user_preferences_disable_change_comment_email = models.BooleanField(verbose_name='DisableChangeCommentEmail')
    user_preferences_disable_later_comment_email = models.BooleanField(verbose_name='DisableLaterCommentEmail')
    user_preferences_dis_prof_post_comment_email = models.BooleanField(verbose_name='DisProfPostCommentEmail')
    user_preferences_content_no_email = models.BooleanField(verbose_name='ContentNoEmail')
    user_preferences_content_email_as_and_when = models.BooleanField(verbose_name='ContentEmailAsAndWhen')
    user_preferences_apex_pages_developer_mode = models.BooleanField(verbose_name='ApexPagesDeveloperMode')
    user_preferences_receive_no_notifications_as_approver = models.BooleanField(verbose_name='ReceiveNoNotificationsAsApprover')
    user_preferences_receive_notifications_as_delegated_approver = models.BooleanField(verbose_name='ReceiveNotificationsAsDelegatedApprover')
    user_preferences_hide_csnget_chatter_mobile_task = models.BooleanField(db_column='UserPreferencesHideCSNGetChatterMobileTask', verbose_name='HideCSNGetChatterMobileTask')
    user_preferences_disable_mentions_post_email = models.BooleanField(verbose_name='DisableMentionsPostEmail')
    user_preferences_dis_mentions_comment_email = models.BooleanField(verbose_name='DisMentionsCommentEmail')
    user_preferences_hide_csndesktop_task = models.BooleanField(db_column='UserPreferencesHideCSNDesktopTask', verbose_name='HideCSNDesktopTask')
    user_preferences_hide_chatter_onboarding_splash = models.BooleanField(verbose_name='HideChatterOnboardingSplash')
    user_preferences_hide_second_chatter_onboarding_splash = models.BooleanField(verbose_name='HideSecondChatterOnboardingSplash')
    user_preferences_dis_comment_after_like_email = models.BooleanField(verbose_name='DisCommentAfterLikeEmail')
    user_preferences_disable_like_email = models.BooleanField(verbose_name='DisableLikeEmail')
    user_preferences_sort_feed_by_comment = models.BooleanField(verbose_name='SortFeedByComment')
    user_preferences_disable_message_email = models.BooleanField(verbose_name='DisableMessageEmail')
    user_preferences_disable_bookmark_email = models.BooleanField(verbose_name='DisableBookmarkEmail')
    user_preferences_disable_share_post_email = models.BooleanField(verbose_name='DisableSharePostEmail')
    user_preferences_enable_auto_sub_for_feeds = models.BooleanField(verbose_name='EnableAutoSubForFeeds')
    user_preferences_disable_file_share_notifications_for_api = models.BooleanField(verbose_name='DisableFileShareNotificationsForApi')
    user_preferences_show_title_to_external_users = models.BooleanField(verbose_name='ShowTitleToExternalUsers')
    user_preferences_show_manager_to_external_users = models.BooleanField(verbose_name='ShowManagerToExternalUsers')
    user_preferences_show_email_to_external_users = models.BooleanField(verbose_name='ShowEmailToExternalUsers')
    user_preferences_show_work_phone_to_external_users = models.BooleanField(verbose_name='ShowWorkPhoneToExternalUsers')
    user_preferences_show_mobile_phone_to_external_users = models.BooleanField(verbose_name='ShowMobilePhoneToExternalUsers')
    user_preferences_show_fax_to_external_users = models.BooleanField(verbose_name='ShowFaxToExternalUsers')
    user_preferences_show_street_address_to_external_users = models.BooleanField(verbose_name='ShowStreetAddressToExternalUsers')
    user_preferences_show_city_to_external_users = models.BooleanField(verbose_name='ShowCityToExternalUsers')
    user_preferences_show_state_to_external_users = models.BooleanField(verbose_name='ShowStateToExternalUsers')
    user_preferences_show_postal_code_to_external_users = models.BooleanField(verbose_name='ShowPostalCodeToExternalUsers')
    user_preferences_show_country_to_external_users = models.BooleanField(verbose_name='ShowCountryToExternalUsers')
    user_preferences_show_profile_pic_to_guest_users = models.BooleanField(verbose_name='ShowProfilePicToGuestUsers')
    user_preferences_show_title_to_guest_users = models.BooleanField(verbose_name='ShowTitleToGuestUsers')
    user_preferences_show_city_to_guest_users = models.BooleanField(verbose_name='ShowCityToGuestUsers')
    user_preferences_show_state_to_guest_users = models.BooleanField(verbose_name='ShowStateToGuestUsers')
    user_preferences_show_postal_code_to_guest_users = models.BooleanField(verbose_name='ShowPostalCodeToGuestUsers')
    user_preferences_show_country_to_guest_users = models.BooleanField(verbose_name='ShowCountryToGuestUsers')
    user_preferences_pipeline_view_hide_help_popover = models.BooleanField(verbose_name='PipelineViewHideHelpPopover')
    user_preferences_hide_s1_browser_ui = models.BooleanField(db_column='UserPreferencesHideS1BrowserUI', verbose_name='HideS1BrowserUI')
    user_preferences_disable_endorsement_email = models.BooleanField(verbose_name='DisableEndorsementEmail')
    user_preferences_path_assistant_collapsed = models.BooleanField(verbose_name='PathAssistantCollapsed')
    user_preferences_cache_diagnostics = models.BooleanField(verbose_name='CacheDiagnostics')
    user_preferences_show_email_to_guest_users = models.BooleanField(verbose_name='ShowEmailToGuestUsers')
    user_preferences_show_manager_to_guest_users = models.BooleanField(verbose_name='ShowManagerToGuestUsers')
    user_preferences_show_work_phone_to_guest_users = models.BooleanField(verbose_name='ShowWorkPhoneToGuestUsers')
    user_preferences_show_mobile_phone_to_guest_users = models.BooleanField(verbose_name='ShowMobilePhoneToGuestUsers')
    user_preferences_show_fax_to_guest_users = models.BooleanField(verbose_name='ShowFaxToGuestUsers')
    user_preferences_show_street_address_to_guest_users = models.BooleanField(verbose_name='ShowStreetAddressToGuestUsers')
    user_preferences_lightning_experience_preferred = models.BooleanField(verbose_name='LightningExperiencePreferred')
    user_preferences_hide_end_user_onboarding_assistant_modal = models.BooleanField(verbose_name='HideEndUserOnboardingAssistantModal')
    user_preferences_hide_lightning_migration_modal = models.BooleanField(verbose_name='HideLightningMigrationModal')
    user_preferences_hide_sfx_welcome_mat = models.BooleanField(verbose_name='HideSfxWelcomeMat')
    user_preferences_hide_bigger_photo_callout = models.BooleanField(verbose_name='HideBiggerPhotoCallout')
    user_preferences_global_nav_bar_wtshown = models.BooleanField(db_column='UserPreferencesGlobalNavBarWTShown', verbose_name='GlobalNavBarWTShown')
    user_preferences_global_nav_grid_menu_wtshown = models.BooleanField(db_column='UserPreferencesGlobalNavGridMenuWTShown', verbose_name='GlobalNavGridMenuWTShown')
    user_preferences_create_lexapps_wtshown = models.BooleanField(db_column='UserPreferencesCreateLEXAppsWTShown', verbose_name='CreateLEXAppsWTShown')
    user_preferences_favorites_wtshown = models.BooleanField(db_column='UserPreferencesFavoritesWTShown', verbose_name='FavoritesWTShown')
    user_preferences_record_home_section_collapse_wtshown = models.BooleanField(db_column='UserPreferencesRecordHomeSectionCollapseWTShown', verbose_name='RecordHomeSectionCollapseWTShown')
    user_preferences_record_home_reserved_wtshown = models.BooleanField(db_column='UserPreferencesRecordHomeReservedWTShown', verbose_name='RecordHomeReservedWTShown')
    user_preferences_favorites_show_top_favorites = models.BooleanField(verbose_name='FavoritesShowTopFavorites')
    user_preferences_exclude_mail_app_attachments = models.BooleanField(verbose_name='ExcludeMailAppAttachments')
    user_preferences_suppress_task_sfxreminders = models.BooleanField(db_column='UserPreferencesSuppressTaskSFXReminders', verbose_name='SuppressTaskSFXReminders')
    user_preferences_suppress_event_sfxreminders = models.BooleanField(db_column='UserPreferencesSuppressEventSFXReminders', verbose_name='SuppressEventSFXReminders')
    user_preferences_preview_custom_theme = models.BooleanField(verbose_name='PreviewCustomTheme')
    user_preferences_has_celebration_badge = models.BooleanField(verbose_name='HasCelebrationBadge')
    user_preferences_user_debug_mode_pref = models.BooleanField(verbose_name='UserDebugModePref')
    user_preferences_srhoverride_activities = models.BooleanField(db_column='UserPreferencesSRHOverrideActivities', verbose_name='SRHOverrideActivities')
    user_preferences_new_lightning_report_run_page_enabled = models.BooleanField(verbose_name='NewLightningReportRunPageEnabled')
    account = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    call_center = models.ForeignKey(CallCenter, models.DO_NOTHING, blank=True, null=True)
    extension = models.CharField(max_length=40, blank=True, null=True)
    portal_role = models.CharField(max_length=40, verbose_name='Portal Role Level', choices=[('Executive', 'Executive'), ('Manager', 'Manager'), ('Worker', 'User'), ('PersonAccount', 'Person Account')], blank=True, null=True)
    is_portal_enabled = models.BooleanField(sf_read_only=models.NOT_CREATEABLE, default=models.DefaultedOnCreate(False))
    federation_identifier = models.CharField(max_length=512, verbose_name='SAML Federation ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    about_me = models.TextField(blank=True, null=True)
    full_photo_url = models.URLField(verbose_name='Url for full-sized Photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    small_photo_url = models.URLField(verbose_name='Photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_ext_indicator_visible = models.BooleanField(verbose_name='Show external indicator', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    out_of_office_message = models.CharField(max_length=40, verbose_name='Out of office message', sf_read_only=models.READ_ONLY, blank=True, null=True)
    medium_photo_url = models.URLField(verbose_name='Url for medium profile photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    digest_frequency = models.CharField(max_length=40, verbose_name='Chatter Email Highlights Frequency', default=models.DefaultedOnCreate('N'), choices=[('D', 'Daily'), ('W', 'Weekly'), ('N', 'Never')])
    default_group_notification_frequency = models.CharField(max_length=40, verbose_name='Default Notification Frequency when Joining Groups', default=models.DefaultedOnCreate('N'), choices=[('P', 'Email on Each Post'), ('D', 'Daily Digests'), ('W', 'Weekly Digests'), ('N', 'Never')])
    last_viewed_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    last_referenced_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    banner_photo_url = models.URLField(verbose_name='Url for banner photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    small_banner_photo_url = models.URLField(verbose_name='Url for IOS banner photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    medium_banner_photo_url = models.URLField(verbose_name='Url for Android banner photo', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_profile_photo_active = models.BooleanField(verbose_name='Has Profile Photo', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    new_account_setup = models.CharField(custom=True, db_column='New_Account_Setup__c', max_length=255, verbose_name='New Account Setup Region', sf_read_only=models.READ_ONLY, choices=[('East', 'East'), ('Central', 'Central'), ('West', 'West')], blank=True, null=True)
    benefit_region = models.CharField(custom=True, db_column='Benefit_Region__c', max_length=255, verbose_name='Benefit Region', choices=[('West', 'West'), ('Southwest', 'Southwest'), ('Southeast', 'Southeast'), ('East', 'East'), ('Northeast', 'Northeast'), ('National', 'National')], blank=True, null=True)
    hire_date = models.DateField(custom=True, db_column='Hire_Date__c', verbose_name='Hire Date', help_text='Employee Hire Date', blank=True, null=True)
    termination_date = models.DateField(custom=True, db_column='Termination_Date__c', verbose_name='Termination Date', blank=True, null=True)
    mkto_si_is_caching_anon_web_activity_list = models.BooleanField(db_column='mkto_si__IsCachingAnonWebActivityList__c', custom=True, verbose_name='IsCachingAnonWebActivityList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_best_bets = models.BooleanField(db_column='mkto_si__IsCachingBestBets__c', custom=True, verbose_name='IsCachingBestBets', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_email_activity_list = models.BooleanField(db_column='mkto_si__IsCachingEmailActivityList__c', custom=True, verbose_name='IsCachingEmailActivityList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_grouped_web_activity_list = models.BooleanField(db_column='mkto_si__IsCachingGroupedWebActivityList__c', custom=True, verbose_name='IsCachingGroupedWebActivityList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_interesting_moments_list = models.BooleanField(db_column='mkto_si__IsCachingInterestingMomentsList__c', custom=True, verbose_name='IsCachingInterestingMomentsList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_scoring_list = models.BooleanField(db_column='mkto_si__IsCachingScoringList__c', custom=True, verbose_name='IsCachingScoringList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_stream_list = models.BooleanField(db_column='mkto_si__IsCachingStreamList__c', custom=True, verbose_name='IsCachingStreamList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_watch_list = models.BooleanField(db_column='mkto_si__IsCachingWatchList__c', custom=True, verbose_name='IsCachingWatchList', default=models.DefaultedOnCreate(False)) 
    mkto_si_is_caching_web_activity_list = models.BooleanField(db_column='mkto_si__IsCachingWebActivityList__c', custom=True, verbose_name='IsCachingWebActivityList', default=models.DefaultedOnCreate(False)) 
    mkto_si_sales_insight_counter = models.DecimalField(db_column='mkto_si__Sales_Insight_Counter__c', custom=True, max_digits=4, decimal_places=0, verbose_name='Marketo Sales Insight Welcome Counter', default=models.DEFAULTED_ON_CREATE, blank=True, null=True) 
    payroll_area = models.CharField(custom=True, db_column='Payroll_Area__c', max_length=255, verbose_name='Payroll Area', sf_read_only=models.READ_ONLY, choices=[('APS', 'APS'), ('California', 'California'), ('Florida', 'Florida'), ('Inside Sales NA', 'Inside Sales NA'), ('Inside Sales SB', 'Inside Sales SB'), ('Mid Atlantic', 'Mid Atlantic'), ('New Jersey', 'New Jersey'), ('New York', 'New York'), ('Northeast', 'Northeast'), ('Northwest', 'Northwest'), ('Southeast', 'Southeast'), ('Southwest', 'Southwest'), ('Texas', 'Texas')], blank=True, null=True)
    payroll_market = models.CharField(custom=True, db_column='Payroll_Market__c', max_length=255, verbose_name='Payroll Market', sf_read_only=models.READ_ONLY, choices=[('Arizona', 'Arizona'), ('Central Florida', 'Central Florida'), ('Central Texas', 'Central Texas'), ('Colorado', 'Colorado'), ('Houston', 'Houston'), ('Inside Sales', 'Inside Sales'), ('Inside Sales Channel', 'Inside Sales Channel'), ('Inside Sales Dallas', 'Inside Sales Dallas'), ('Irvine', 'Irvine'), ('Long Island/Queens', 'Long Island/Queens'), ('Los Angeles', 'Los Angeles'), ('Miami North', 'Miami North'), ('Miami South', 'Miami South'), ('Mid Atlantic', 'Mid Atlantic'), ('Miramar', 'Miramar'), ('N. California', 'N. California'), ('National Accounts', 'National Accounts'), ('Nevada', 'Nevada'), ('New England', 'New England'), ('New Jersey', 'New Jersey'), ('New York City', 'New York City'), ('NYC South', 'NYC South'), ('North Texas', 'North Texas'), ('Northwest', 'Northwest'), ('Orange County', 'Orange County'), ('Phoenix', 'Phoenix'), ('San Diego', 'San Diego'), ('Southeast', 'Southeast'), ('West Palm Beach', 'West Palm Beach'), ('Woodland Hills', 'Woodland Hills')], blank=True, null=True)
    payroll_region = models.CharField(custom=True, db_column='Payroll_Region__c', max_length=255, verbose_name='Payroll Region', sf_read_only=models.READ_ONLY, choices=[('Northeast', 'Northeast'), ('Southeast', 'Southeast'), ('West', 'West'), ('Inside Sales', 'Inside Sales'), ('Business Development', 'Business Development')], blank=True, null=True)
    team_name = models.CharField(custom=True, db_column='Team_Name__c', max_length=255, verbose_name='Team Name', sf_read_only=models.READ_ONLY, choices=[('Accounts_Receivable', 'Accounts Receivable'), ('APS - 401k', 'APS - 401k'), ('APS - Other', 'APS - Other'), ('APS - Sec125', 'APS - Sec125'), ('APS - Workers Comp', 'APS - Workers Comp'), ('Conversion', 'Conversion'), ('Executive', 'Executive'), ('HRIS Support', 'HRIS Support'), ('New Accounts - East', 'New Accounts - East'), ('New Accounts HRIS', 'New Accounts HRIS'), ('New Accounts - Mid-Market', 'New Accounts - Mid-Market'), ('New Accounts  PayFocus Central', 'New Accounts  PayFocus Central'), ('New Accounts PayFocus East', 'New Accounts PayFocus East'), ('New Accounts  PayFocus Tampa', 'New Accounts  PayFocus Tampa'), ('New Accounts PayFocus West', 'New Accounts PayFocus West'), ('New Accounts PRO Central', 'New Accounts PRO Central'), ('New Accounts PRO East', 'New Accounts PRO East'), ('New Accounts PRO West', 'New Accounts PRO West'), ('New Accounts QA Team - Construction Payroll', 'New Accounts QA Team - Construction Payroll'), ('New Accounts QA Team - CPO', 'New Accounts QA Team - CPO'), ('New Accounts QA Team - PAM', 'New Accounts QA Team - PAM'), ('New Accounts QA Team - PayFocus', 'New Accounts QA Team - PayFocus'), ('New Accounts QA Team - Payload', 'New Accounts QA Team - Payload'), ('New Accounts QA Team - PP/XP', 'New Accounts QA Team - PP/XP'), ('New Accounts - West', 'New Accounts - West'), ('PayFocus Support', 'PayFocus Support'), ('Service East - Construction Payroll', 'Service East - Construction Payroll'), ('Service East - Franklin', 'Service East - Franklin'), ('Service East - Maine', 'Service East - Maine'), ('Service East - Miramar', 'Service East - Miramar'), ('Service East - Tampa', 'Service East - Tampa'), ('Service Full Service - Miramar', 'Service Full Service - Miramar'), ('Service Full Service - Orange County', 'Service Full Service - Orange County'), ('Service Full Service - Phoenix', 'Service Full Service - Phoenix'), ('Service Full Service - Seattle', 'Service Full Service - Seattle'), ('Service Full Service - Tampa', 'Service Full Service - Tampa'), ('Service West - Orange County', 'Service West - Orange County'), ('Service West - Phoenix', 'Service West - Phoenix'), ('Service West - Seattle', 'Service West - Seattle'), ('Support - Credit', 'Support - Credit'), ('Support - Operations', 'Support - Operations'), ('Support - Tax Amendment', 'Support - Tax Amendment'), ('Support - Tax Compliance', 'Support - Tax Compliance'), ('Support - Tax Entity', 'Support - Tax Entity'), ('Support - Tax Notice', 'Support - Tax Notice'), ('Support - Tax Operations', 'Support - Tax Operations'), ('Support - Tax QA', 'Support - Tax QA'), ('Support - Tax Support Center', 'Support - Tax Support Center'), ('Support Team - Professional Services', 'Support Team - Professional Services'), ('Support - Treasury', 'Support - Treasury'), ('Tax Quality Assurance', 'Tax Quality Assurance'), ('White Glove - New Accounts and Support', 'White Glove - New Accounts and Support')], blank=True, null=True)
    application_supported = models.CharField(custom=True, db_column='Application_Supported__c', max_length=4099, verbose_name='Application Supported', sf_read_only=models.READ_ONLY, choices=[('CPO', 'CPO'), ('DSI', 'DSI'), ('PAM', 'PAM'), ('PL', 'PL'), ('PP/XP', 'PP/XP'), ('All', 'All')], blank=True, null=True)
    sma_allow_map_anything_exports = models.BooleanField(db_column='sma__AllowMapAnythingExports__c', custom=True, verbose_name='Allow MapAnything Exports', default=models.DefaultedOnCreate(False)) 
    sma_default_proximity_radius = models.DecimalField(db_column='sma__DefaultProximityRadius__c', custom=True, max_digits=7, decimal_places=2, verbose_name='Default Proximity Radius', blank=True, null=True) 
    sma_edit_map_anything_org_wirde_queries = models.BooleanField(db_column='sma__EditMapAnythingOrgWirdeQueries__c', custom=True, verbose_name='Edit MapAnything Org Wide Queries', default=models.DefaultedOnCreate(False)) 
    sma_mabeta_tester = models.BooleanField(db_column='sma__MABetaTester__c', custom=True, verbose_name='MapAnything Beta Tester', default=models.DefaultedOnCreate(False)) 
    sma_madefault_latitude = models.DecimalField(db_column='sma__MADefaultLatitude__c', custom=True, max_digits=18, decimal_places=15, verbose_name='MapAnything Default Latitude', blank=True, null=True) 
    sma_madefault_longitude = models.DecimalField(db_column='sma__MADefaultLongitude__c', custom=True, max_digits=18, decimal_places=15, verbose_name='MapAnything Default Longitude', blank=True, null=True) 
    sma_madefault_type = models.CharField(db_column='sma__MADefaultType__c', custom=True, max_length=255, verbose_name='MADefaultType', blank=True, null=True) 
    sma_madefault_zoom_level = models.DecimalField(db_column='sma__MADefaultZoomLevel__c', custom=True, max_digits=2, decimal_places=0, verbose_name='MapAnything Default Zoom Level', blank=True, null=True) 
    sma_mamax_export_size = models.DecimalField(db_column='sma__MAMaxExportSize__c', custom=True, max_digits=18, decimal_places=0, verbose_name='MapAnything Max Export Size', blank=True, null=True) 
    sma_mamax_query_size = models.DecimalField(db_column='sma__MAMaxQuerySize__c', custom=True, max_digits=6, decimal_places=0, verbose_name='MapAnything Max Query Size', blank=True, null=True) 
    sma_maversion = models.CharField(db_column='sma__MAVersion__c', custom=True, max_length=255, verbose_name='MapAnything Version', choices=[('Previous', 'Previous'), ('Current', 'Current'), ('Beta', 'Beta')], blank=True, null=True) 
    sma_map_anything_settings = models.TextField(db_column='sma__MapAnythingSettings__c', custom=True, verbose_name='Map Anything Settings', blank=True, null=True) 
    sma_preferred_type_of_measurement = models.CharField(db_column='sma__PreferredTypeOfMeasurement__c', custom=True, max_length=255, verbose_name='Preferred Type of Measurement', choices=[('Miles', 'Miles'), ('Km', 'Km'), ('Meters', 'Meters'), ('Yards', 'Yards'), ('Feet', 'Feet')], blank=True, null=True) 
    sma_receive_batch_exception_emails = models.BooleanField(db_column='sma__ReceiveBatchExceptionEmails__c', custom=True, verbose_name='Receive Batch Exception Emails', default=models.DefaultedOnCreate(False)) 
    qbdialer_inside_sales_admin = models.BooleanField(db_column='qbdialer__InsideSales_Admin__c', custom=True, verbose_name='InsideSales Admin', default=models.DefaultedOnCreate(False)) 
    qbdialer_is_subdomain = models.CharField(db_column='qbdialer__is_subdomain__c', custom=True, max_length=20, verbose_name='InsideSales Subdomain', blank=True, null=True) 
    qbdialer_is_token = models.CharField(db_column='qbdialer__is_token__c', custom=True, max_length=128, verbose_name='InsideSales Authorization Token', blank=True, null=True) 
    qbdialer_password = models.CharField(db_column='qbdialer__password__c', custom=True, max_length=16, verbose_name='InsideSales Password', blank=True, null=True) 
    qbdialer_permissions = models.TextField(db_column='qbdialer__permissions__c', custom=True, verbose_name='InsideSales Permissions', blank=True, null=True) 
    qbdialer_username = models.CharField(db_column='qbdialer__username__c', custom=True, max_length=55, verbose_name='InsideSales Username', blank=True, null=True) 
    benefit_market = models.CharField(custom=True, db_column='Benefit_Market__c', max_length=255, verbose_name='Benefit Market', choices=[('North CA', 'North CA'), ('South CA', 'South CA'), ('Colorado', 'Colorado'), ('North TX', 'North TX'), ('South TX', 'South TX'), ('Central TX', 'Central TX'), ('North FL', 'North FL'), ('South FL', 'South FL'), ('Georgia', 'Georgia'), ('Mid-Atlantic', 'Mid-Atlantic'), ('North NJ', 'North NJ'), ('South NJ', 'South NJ'), ('Ohio', 'Ohio'), ('NY North', 'NY North'), ('NY South', 'NY South'), ('National', 'National')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'User'
        verbose_name = 'User'
        verbose_name_plural = 'Users'
        # keyPrefix = '005'



class UserAccountTeamMember(models.Model):
    owner = models.ForeignKey(User, models.DO_NOTHING, related_name='useraccountteammember_owner_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='useraccountteammember_user_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    account_access_level = models.CharField(max_length=40, verbose_name='Account Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write')])
    opportunity_access_level = models.CharField(max_length=40, verbose_name='Opportunity Access', choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')])
    case_access_level = models.CharField(max_length=40, verbose_name='Case Access', choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')])
    contact_access_level = models.CharField(max_length=40, verbose_name='Contact Access', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')])
    team_member_role = models.CharField(max_length=40, verbose_name='Team Role', choices=[('APS', 'APS'), ('BSE', 'BSE'), ('DM', 'DM'), ('RSM', 'RSM'), ('Service Rep', 'Service Rep'), ('Lead Credit User', 'Lead Credit User'), ('Broker Affiliate', 'Broker Affiliate')], blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='useraccountteammember_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='useraccountteammember_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'UserAccountTeamMember'
        verbose_name = 'User Account Team Member'
        verbose_name_plural = 'User Account Team Member'
        # keyPrefix = '01D'



class UserAppInfo(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userappinfo_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userappinfo_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='userappinfo_user_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    form_factor = models.CharField(max_length=255, choices=[('Small', 'Phone'), ('Medium', 'Tablet'), ('Large', 'Desktop')])
    app_definition = models.ForeignKey(AppDefinition, models.DO_NOTHING, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserAppInfo'
        verbose_name = 'Last Used App'
        verbose_name_plural = 'Last Used App'
        # keyPrefix = '0Ds'



class UserAppMenuCustomization(models.Model):
    owner = models.ForeignKey(Group, models.DO_NOTHING)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userappmenucustomization_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userappmenucustomization_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    application = models.ForeignKey(ConnectedApplication, models.DO_NOTHING, blank=True, null=True)  # Reference to tables [ConnectedApplication, Network] Master Detail Relationship *
    sort_order = models.IntegerField(blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserAppMenuCustomization'
        verbose_name = 'UserAppMenuCustomization'
        verbose_name_plural = 'UserAppMenuCustomizations'
        # keyPrefix = '0Nw'



class UserAppMenuCustomizationShare(models.Model):
    parent = models.ForeignKey(UserAppMenuCustomization, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'UserAppMenuCustomizationShare'
        verbose_name = 'UserAppMenuCustomization Share'
        verbose_name_plural = 'UserAppMenuCustomization Share'
        # keyPrefix = 'None'



class UserAppMenuItem(models.Model):
    app_menu_item_id = models.CharField(max_length=255, verbose_name='AppMenuItem ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    application_id = models.CharField(max_length=18, verbose_name='Application ID', sf_read_only=models.READ_ONLY, blank=True, null=True)  # No Reference table
    label = models.CharField(max_length=80, verbose_name='Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    description = models.CharField(max_length=250, sf_read_only=models.READ_ONLY, blank=True, null=True)
    name = models.CharField(max_length=250, verbose_name='Developer Name', sf_read_only=models.READ_ONLY, blank=True, null=True)
    user_sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    sort_order = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    type = models.CharField(max_length=255, verbose_name='App Type', sf_read_only=models.READ_ONLY, choices=[('ConnectedApplication', None), ('Network', None), ('ServiceProvider', None), ('TabSet', None)], blank=True, null=True)
    logo_url = models.URLField(verbose_name='Logo Image URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    icon_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    info_url = models.URLField(verbose_name='Info URL', sf_read_only=models.READ_ONLY, blank=True, null=True)
    start_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    mobile_start_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_visible = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_using_admin_authorization = models.BooleanField(verbose_name='IsUsingAdminAuthorization', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'UserAppMenuItem'
        verbose_name = 'Application'
        verbose_name_plural = 'Applications'
        # keyPrefix = '07p'



class UserConfigTransferButton(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userconfigtransferbutton_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userconfigtransferbutton_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    live_chat_user_config = models.ForeignKey(LiveChatUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    live_chat_button = models.ForeignKey(LiveChatButton, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'UserConfigTransferButton'
        verbose_name = 'UserConfigTransferButton'
        verbose_name_plural = 'UserConfigTransferButtons'
        # keyPrefix = '0KB'



class UserConfigTransferSkill(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userconfigtransferskill_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userconfigtransferskill_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    live_chat_user_config = models.ForeignKey(LiveChatUserConfig, models.DO_NOTHING, sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    skill = models.ForeignKey(Skill, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'UserConfigTransferSkill'
        verbose_name = 'UserConfigTransferSkill'
        verbose_name_plural = 'UserConfigTransferSkills'
        # keyPrefix = '0KA'



class UserCustomBadge(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='usercustombadge_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='usercustombadge_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    parent = models.ForeignKey(Network, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Reference to tables [Network, Organization]
    badge_type = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, choices=[('Customer', 'Customer'), ('Partner', 'Partner'), ('Employee', 'Employee')])
    custom_text = models.CharField(max_length=50, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserCustomBadge'
        verbose_name = 'Custom User Badge'
        verbose_name_plural = 'Custom User Badges'
        # keyPrefix = '0MQ'



class UserEmailPreferredPerson(models.Model):
    owner = models.ForeignKey(Group, models.DO_NOTHING)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='User Email Preferred Person Name', sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='useremailpreferredperson_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='useremailpreferredperson_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    email = models.EmailField()
    person_record = models.ForeignKey(User, models.DO_NOTHING, related_name='useremailpreferredperson_personrecord_set')  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'UserEmailPreferredPerson'
        verbose_name = 'User Email Preferred Person'
        verbose_name_plural = 'User Email Preferred People'
        # keyPrefix = '0UV'



class UserEmailPreferredPersonShare(models.Model):
    parent = models.ForeignKey(UserEmailPreferredPerson, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'UserEmailPreferredPersonShare'
        verbose_name = 'User Email Preferred Person Share'
        verbose_name_plural = 'User Email Preferred Person Share'
        # keyPrefix = 'None'



class UserEntityAccess(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    user = models.ForeignKey(User, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_mergeable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_updatable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_activateable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_readable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_creatable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_editable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_deletable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_undeletable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_fls_updatable = models.BooleanField(verbose_name='Is Field-level Security Updatable?', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    entity_definition_id = models.CharField(max_length=150, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserEntityAccess'
        verbose_name = 'User Entity Access'
        verbose_name_plural = 'User Entity Access'
        # keyPrefix = '07u'



class UserFeed(models.Model):
    parent = models.ForeignKey(User, models.DO_NOTHING, related_name='userfeed_parent_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Feed Item Type', sf_read_only=models.READ_ONLY, choices=[('TrackedChange', 'Tracked Change'), ('UserStatus', 'User Status'), ('TextPost', 'Text Post'), ('AdvancedTextPost', 'Advanced Text Post'), ('LinkPost', 'Link Post'), ('ContentPost', 'Content Post'), ('PollPost', 'Poll'), ('RypplePost', 'Work.com Thanks'), ('ProfileSkillPost', 'Profile Skill Post'), ('DashboardComponentSnapshot', 'Dashboard Component Snapshot'), ('ApprovalPost', 'Approval Post'), ('CaseCommentPost', 'Case Comment Feed'), ('ReplyPost', 'Reply Post'), ('EmailMessageEvent', 'Email Message Feed'), ('CallLogPost', 'Call Log Feed'), ('ChangeStatusPost', 'Change Status Feed'), ('AttachArticleEvent', 'Attached Article'), ('MilestoneEvent', 'Milestone Event'), ('ActivityEvent', 'Activity Change'), ('ChatTranscriptPost', 'Chat Transcript Post'), ('CollaborationGroupCreated', 'Collaboration Group Created'), ('CollaborationGroupUnarchived', 'Collaboration Group Reactivated'), ('SocialPost', 'Social Post'), ('QuestionPost', 'Question Post'), ('FacebookPost', 'Facebook Post'), ('BasicTemplateFeedItem', 'Basic Template Post'), ('CreateRecordEvent', 'Created Record'), ('CanvasPost', 'Canvas'), ('AnnouncementPost', 'a')], blank=True, null=True)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userfeed_createdby_set', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    comment_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    like_count = models.IntegerField(sf_read_only=models.READ_ONLY)
    title = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    body = models.TextField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    link_url = models.URLField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_rich_text = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    related_record = models.ForeignKey(ContentVersion, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    inserted_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userfeed_insertedby_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    network_scope = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllNetworks', 'All Networks')], blank=True, null=True)
    visibility = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('AllUsers', 'All Users'), ('InternalUsers', 'Internal Users')], blank=True, null=True)
    best_comment = models.ForeignKey(FeedComment, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserFeed'
        verbose_name = 'User Feed'
        verbose_name_plural = 'User Feed'
        # keyPrefix = 'None'



class UserFieldAccess(models.Model):
    durable_id = models.CharField(max_length=255, verbose_name='Durable ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    user = models.ForeignKey(User, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_updatable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_creatable = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_accessible = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    entity_definition_id = models.CharField(max_length=150, verbose_name='Entity Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    field_definition_id = models.CharField(max_length=150, verbose_name='Field Definition ID', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserFieldAccess'
        verbose_name = 'User Field Access'
        verbose_name_plural = 'User Field Access'
        # keyPrefix = '4fp'



class UserLicense(models.Model):
    license_definition_key = models.CharField(max_length=40, verbose_name='License Def. ID', sf_read_only=models.READ_ONLY)
    total_licenses = models.IntegerField(sf_read_only=models.READ_ONLY)
    status = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Active', 'Active'), ('Disabled', 'Disabled')])
    used_licenses = models.IntegerField(sf_read_only=models.READ_ONLY)
    used_licenses_last_updated = models.DateTimeField(sf_read_only=models.READ_ONLY)
    name = models.CharField(max_length=40, sf_read_only=models.READ_ONLY)
    master_label = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'UserLicense'
        verbose_name = 'User License'
        verbose_name_plural = 'User Licenses'
        # keyPrefix = '100'



class UserListView(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userlistview_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userlistview_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='userlistview_user_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    list_view = models.ForeignKey(ListView, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    sobject_type = models.CharField(max_length=255, verbose_name='Custom Object Definition ID', choices=[('Account', None), ('AccountTeamMember', None), ('ActionApex', None), ('ActionChatterPost', None), ('ActionEmail', None), ('ActionFieldUpdate', None), ('ActionKnowledgeSubmit', None), ('ActionLinkGroupTemplate', None), ('ActionLinkTemplate', None), ('ActionOverrideMetrics', None), ('ActionQuickCreate', None), ('ActionSend', None), ('ActionTask', None), ('Activity', None), ('AdditionalNumber', None), ('AddressableEventInterface', None), ('AgentWork', None), ('AllInstalledPackageVersion', None), ('AllOrganization', None), ('AllPackage', None), ('AllPackageVersion', None), ('AllUsersBasic', None), ('Announcement', None), ('ApexClass', None), ('ApexComponent', None), ('ApexLog', None), ('ApexPage', None), ('ApexPageInfo', None), ('ApexTestResult', None), ('ApexTestRunResult', None), ('ApexTestRunResultMetrics', None), ('ApexTrigger', None), ('AppDefinition', None), ('AppIpRange', None), ('AppleDomainVerification', None), ('AppMenuItem', None), ('AppNotifTypeUserSetting', None), ('AppTabMember', None), ('AsyncApexJob', None), ('AsyncApiBatch', None), ('AsyncApiBatchOptions', None), ('AsyncApiChunkResults', None), ('AsyncApiJobOptions', None), ('AsyncApiTransformationSpec', None), ('Attachment', None), ('Auditable', None), ('AuraDefinitionBundle', None), ('AuraDefinitionBundleInfo', None), ('AuraDefinitionInfo', None), ('AuthProvider', None), ('AuthSession', None), ('AutoActivityCaptureMetrics', None), ('BackgroundOperation', None), ('BaseEventInterface', None), ('BaseEventPackageInterface', None), ('BaseSessionInterface', None), ('BigObjectsRecordMetrics', None), ('BrandTemplate', None), ('BusinessHours', None), ('C2CPermissionBinding', None), ('Calendar', None), ('CallCenter', None), ('CaseEscalation', None), ('Certificate', None), ('CertificateIp', None), ('ChannelAccountMetrics', None), ('ChatterActivityDailyMetrics', None), ('ChatterMetrics', None), ('ChatterOrgWideMetrics', None), ('ChatterUniqueContributorDailyMetrics', None), ('CleanRule', None), ('ClientBrowser', None), ('CollaborationGroup', None), ('CollaborationGroupRecord', None), ('ColorDefinition', None), ('CommerceIntegrationEvent', None), ('CommerceIntegrationResponse', None), ('Community', None), ('CommunityTemplateDefinition', None), ('CommunityThemeDefinition', None), ('CommunityWorkspacesNode', None), ('CompactLayoutInfo', None), ('CompactLayoutItemInfo', None), ('ConnectedApplication', None), ('ConnectedApplication2', None), ('ConnectivityAttributes', None), ('ContentAsset', None), ('ContentDistribution', None), ('ContentDistributionView', None), ('ContentDocument', None), ('ContentFolderItem', None), ('ContentNote', None), ('ContentVersion', None), ('ContentWorkspace', None), ('ContextFieldAttributes', None), ('CronTrigger', None), ('CspTrustedSite', None), ('CustomAppMetrics', None), ('CustomConsoleComponent', None), ('CustomEntityDefinition', None), ('CustomHttpHeader', None), ('CustomIndex', None), ('CustomObjectUserLicenseMetrics', None), ('CustomObjTeamMemberMetric', None), ('CustomPermission', None), ('CustomPermissionDependency', None), ('CustomPermissionSet', None), ('CustomReportType', None), ('Dashboard', None), ('DashboardComponent', None), ('DataAssessmentBIMetrics', None), ('DatacloudAddress', None), ('DataDotComListPoolMetrics', None), ('DataExportEventInterface', None), ('DataIntegrationRecordPurchasePermission', None), ('DatasetExportEvent', None), ('DataStatistics', None), ('DataType', None), ('DeclarativePlatformMetrics', None), ('DeleteEvent', None), ('DialerBasicAudioRecMetrics', None), ('DialerBasicFeatureMetrics', None), ('DialerMinutesMetrics', None), ('DmPermissionSetMetrics', None), ('DmProfileMetric', None), ('DmUserLicenseMetrics', None), ('DmUserLoginMetrics', None), ('DmUserRoleMetrics', None), ('Domain', None), ('DomainSite', None), ('DuplicateErrorLog', None), ('DuplicateJob', None), ('DuplicateRule', None), ('EmailBrand', None), ('EmailDomainFilter', None), ('EmailDomainKey', None), ('EmailRelay', None), ('EmailRoutingAddress', None), ('EmailServicesAddress', None), ('EmailServicesFunction', None), ('EmailStatus', None), ('EmailTemplate', None), ('EmbeddedServiceConfig', None), ('EmbeddedServiceDetail', None), ('EmbeddedServiceLabel', None), ('EmbeddedServiceMenuSettings', None), ('EngagementEvent', None), ('EnhancedLetterhead', None), ('EntitlementTemplate', None), ('EntityDefinition', None), ('EntityEventInterface', None), ('EntityHistory', None), ('EntityLimit', None), ('EntityParticle', None), ('EntitySubscription', None), ('Event', None), ('EventAssociationItem', None), ('EventBusSubscriber', None), ('EventTypeDefinition', None), ('EventTypeFieldDefinition', None), ('ExternalCredential', None), ('ExternalDataSource', None), ('ExternalDataUserAuth', None), ('ExternalServiceDataType', None), ('ExternalSocialAccount', None), ('ExternalString', None), ('ExtIdentityLoginMetrics', None), ('FeatureLicense', None), ('FeedPostTemplate', None), ('FieldDefinition', None), ('FlexiPage', None), ('FlexipageComponentMetrics', None), ('FlexipagePageTypeMetrics', None), ('FlexQueueItem', None), ('FlowApexClassDescriptor', None), ('FlowApexClassPropertyDesc', None), ('FlowDefinition', None), ('FlowDefinitionView', None), ('FlowExtension', None), ('FlowExtensionGenericType', None), ('FlowExtensionParam', None), ('FlowExtensionProcessType', None), ('FlowInterview', None), ('FlowTriggerTypeDefinition', None), ('FlowVariableView', None), ('FlowVersionView', None), ('Folder', None), ('ForecastingTypeMetrics', None), ('FormulaFunction', None), ('FormulaFunctionCategory', None), ('FormulaOperator', None), ('FormulaParticle', None), ('FormulaVariable', None), ('FTestGenBodyInterface', None), ('FTestGenInterface', None), ('GenericContentFolder', None), ('GenericContentFolderItem', None), ('GenericContentFolderMember', None), ('GlobalVariable', None), ('GlobalVariableType', None), ('Group', None), ('HammerResultStatus', None), ('Holiday', None), ('IconDefinition', None), ('IdeaMetrics', None), ('InboundSocialPost', None), ('InteractionDefinitionVersion', None), ('InteractionLanguageMetrics', None), ('InteractionLayoutDetail', None), ('InteractionLCMetrics', None), ('InteractionTranslMetrics', None), ('InteractionUsageMetrics', None), ('InvocableAction', None), ('InvocableActionGenericType', None), ('InvocableActionParameter', None), ('InvocableActionPicklist', None), ('InvoiceUsageMetrics', None), ('IpWhitelist', None), ('Knowledge__ka', None), ('Knowledge__kav', None), ('LayoutParticle', None), ('LbpmMetrics', None), ('LicensedCustomPermission', None), ('LicenseDefinition', None), ('LightningComponentBundle', None), ('LightningComponentMetrics', None), ('LightningServiceMetrics', None), ('LimitSnapshot', None), ('ListColumn', None), ('ListEmail', None), ('ListEmailSentResult', None), ('ListView', None), ('ListViewChartInstance', None), ('LiveChatBlockingRule', None), ('LiveChatButton', None), ('LiveChatDeployment', None), ('LiveChatSensitiveDataRule', None), ('LiveChatUserConfig', None), ('LocalizedValue', None), ('LocalNamespace', None), ('LoginBrand', None), ('LoginBrandAsset', None), ('LoginFlow', None), ('LoginHistory', None), ('LoginIp', None), ('MailAssociationItem', None), ('MailmergeTemplate', None), ('ManagedContentVersion', None), ('MassMail', None), ('MatchIndexValue', None), ('MatchingRule', None), ('MenuItem', None), ('MetadataChangeTemplate', None), ('MetadataContainerMember', None), ('MetadataContainerMemberWithBinaryBody', None), ('MetadataContainerMemberWithBody', None), ('MetadataContainerMemberWithSymbolTable', None), ('MetricsInMQMetrics', None), ('Milestone', None), ('MilestoneType', None), ('MobileConfig', None), ('MobileEvent', None), ('MobilePushServiceDevice', None), ('MobileSecurityUserMetric', None), ('MultiCurrency', None), ('MutingPermissionSet', None), ('Nameable', None), ('NamedCredential', None), ('NetworkActiveMemberMetrics', None), ('NetworkActivityDailyMetrics', None), ('NetworkCustMemberMetrics', None), ('NetworkCustomerDailyLoginMetrics', None), ('NetworkCustomerLoginMetrics', None), ('NetworkMembershipDailyMetrics', None), ('NetworkPartnerDailyLoginMetrics', None), ('NetworkPartnerLoginMetrics', None), ('NetworkPartnerMemberMetrics', None), ('NetworkPCustDailyLoginMetrics', None), ('NetworkPowerCustomerLoginMetrics', None), ('NetworkPowerCustomerMemberMetrics', None), ('NetworkPublicUsageDailyMetrics', None), ('NetworkRegularMemberMetrics', None), ('NetworkTenantUsageEntitlementWklyMetrics', None), ('NetworkUniqueContributorDailyMetrics', None), ('NetworkUserParticipationDailyMetrics', None), ('NextBestActionUsageMetrics', None), ('Note', None), ('NotifTypeUserSetting', None), ('OauthConsumer', None), ('OauthCustomScope', None), ('ObjectPermissions', None), ('OpportunityMetrics', None), ('OpportunitySplitMetrics', None), ('OpptyAndPricingMetrics', None), ('Organization', None), ('OrganizationValueInfo', None), ('OrgObjectsMetrics', None), ('OutgoingEmailRelation', None), ('OverridableEntities', None), ('OwnerChangeOptionInfo', None), ('Package2Member', None), ('PackageBooleanValue', None), ('PackageDateValue', None), ('PackageIntegerValue', None), ('PackageLicense', None), ('PackageOperationError', None), ('ParallelJobStatus', None), ('PathAssistant', None), ('PendingServiceRouting', None), ('PermissionSet', None), ('PermissionSetAssignment', None), ('PermissionSetGroup', None), ('PermissionSetLicense', None), ('PermissionSetLicenseAssign', None), ('PermissionSetLicenseMetrics', None), ('PersonAccountMetrics', None), ('PicklistValueInfo', None), ('PlatformAction', None), ('PlatformCachePartition', None), ('PlatformCachePartitionType', None), ('PlatformEventConduitMetrics', None), ('PlatformOrgObjectMetrics', None), ('PresenceDeclineReason', None), ('PresenceUserConfig', None), ('PresenceUserConfigInfo', None), ('ProcessDefinition', None), ('ProcessInstanceStep', None), ('ProcessInstanceWorkitem', None), ('ProcessMetrics', None), ('ProcessPluginParameter', None), ('ProcessTimeQueue', None), ('ProcessTypeDefinition', None), ('Profile', None), ('ProfileIpRestrictionMetrics', None), ('PublishableEntity', None), ('Publisher', None), ('PushUpgradeJob', None), ('PushUpgradeJobError', None), ('PushUpgradeRequest', None), ('QueueRoutingConfig', None), ('QuickActionDefinition', None), ('QuickActionMetrics', None), ('Recommendation', None), ('RecordUserAccessInterface', None), ('RedirectWhitelistUrl', None), ('RelatedEntity', None), ('RelationshipDomain', None), ('RelationshipInfo', None), ('RemoteProxy', None), ('Report', None), ('ReportJob', None), ('SamlSsoConfig', None), ('SandboxDimensionMetrics', None), ('SandboxOrgDimensionMetrics', None), ('SchemaBuilderLayout', None), ('SchemaBuilderLayoutItem', None), ('Scontrol', None), ('Service', None), ('ServiceChannel', None), ('ServiceDataType', None), ('ServiceFieldDataType', None), ('ServicePresenceStatus', None), ('ServicePresenceStatusInfo', None), ('ServiceVersion', None), ('SessionPermSetActivation', None), ('SettingsTemplate', None), ('SetupNode', None), ('ShareInterface', None), ('SharingMetrics', None), ('SharingOrgDefaultMetrics', None), ('SharingOrgStandardMetrics', None), ('SharingPortalMetrics', None), ('SharingRowCauseMetrics', None), ('SharingUserMetrics', None), ('SiteDetail', None), ('SiteIframeWhiteListUrl', None), ('Skill', None), ('SlaProcess', None), ('SlaProcessPushRule', None), ('SocialPersona', None), ('SoftDeletable', None), ('SoftLimitsApiUsageMetrics', None), ('SoftphoneLayout', None), ('SPSamlAttributes', None), ('StandardValueSet', None), ('StaticResource', None), ('SupportOrgWideMetrics', None), ('SurveyResponseUsageMetrics', None), ('TabDefinition', None), ('Task', None), ('TaskAssociationItem', None), ('TenantAddOnLicense', None), ('TenantEditionLicense', None), ('TenantPlatformLicense', None), ('TenantSecret', None), ('TenantUsageEntitlement', None), ('TenantUserLicense', None), ('Topic', None), ('Training', None), ('TransactionSecurityEventInterface', None), ('TwoFactorMetrics', None), ('TwoFactorTempCode', None), ('User', None), ('UserAppMenuItem', None), ('UserDimMetrics', None), ('UserEntityAccess', None), ('UserFieldAccess', None), ('UserLicense', None), ('UserLicenseMetrics', None), ('UserListPreference', None), ('UserProvAccount', None), ('UserProvisioningConfig', None), ('UserRole', None), ('UserServicePresence', None), ('UtilityBarMetrics', None), ('VerificationMessageCreditMetrics', None), ('Vote', None), ('WebServiceDefinition', None), ('WorkflowRule', None), ('WorkflowTimeQueue', None), ('WsdlDataType', None), ('XCleanMatchRateMetrics', None), ('XmlSchema', None)], blank=True, null=True)
    last_viewed_chart = models.CharField(max_length=255, verbose_name='List View Chart ID', choices=[('AccountsByIndustry', None)], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserListView'
        verbose_name = 'User List View'
        verbose_name_plural = 'User List View'
        # keyPrefix = '0Na'



class UserListViewCriterion(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userlistviewcriterion_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userlistviewcriterion_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user_list_view = models.ForeignKey(UserListView, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    sort_order = models.IntegerField()
    column_name = models.CharField(max_length=40)
    operation = models.CharField(max_length=255, choices=[('equals', 'equals'), ('startsWith', 'starts with'), ('contains', 'contains'), ('rangeInclusive', 'range inclusive'), ('includes', 'includes')])
    value = models.CharField(max_length=85, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserListViewCriterion'
        verbose_name = 'User List View Criteria'
        verbose_name_plural = 'User List View Criteria'
        # keyPrefix = '0JU'



class UserLogin(models.Model):
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='userlogin_user_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_frozen = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    is_password_locked = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userlogin_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'UserLogin'
        verbose_name = 'User Login'
        verbose_name_plural = 'User Login'
        # keyPrefix = '0Yw'



class UserPermissionAccess(models.Model):
    last_cache_update = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    permissions_email_single = models.BooleanField(verbose_name='Send Email', sf_read_only=models.READ_ONLY)
    permissions_email_mass = models.BooleanField(verbose_name='Mass Email', sf_read_only=models.READ_ONLY)
    permissions_edit_task = models.BooleanField(verbose_name='Edit Tasks', sf_read_only=models.READ_ONLY)
    permissions_edit_event = models.BooleanField(verbose_name='Edit Events', sf_read_only=models.READ_ONLY)
    permissions_export_report = models.BooleanField(verbose_name='Export Reports', sf_read_only=models.READ_ONLY)
    permissions_import_personal = models.BooleanField(verbose_name='Import Personal Contacts', sf_read_only=models.READ_ONLY)
    permissions_data_export = models.BooleanField(verbose_name='Weekly Data Export', sf_read_only=models.READ_ONLY)
    permissions_manage_users = models.BooleanField(verbose_name='Manage Users', sf_read_only=models.READ_ONLY)
    permissions_edit_public_filters = models.BooleanField(verbose_name='Manage Public List Views', sf_read_only=models.READ_ONLY)
    permissions_edit_public_templates = models.BooleanField(verbose_name='Manage Public Classic Email Templates', sf_read_only=models.READ_ONLY)
    permissions_modify_all_data = models.BooleanField(verbose_name='Modify All Data', sf_read_only=models.READ_ONLY)
    permissions_manage_cases = models.BooleanField(verbose_name='Manage Cases', sf_read_only=models.READ_ONLY)
    permissions_mass_inline_edit = models.BooleanField(verbose_name='Mass Edits from Lists', sf_read_only=models.READ_ONLY)
    permissions_edit_knowledge = models.BooleanField(verbose_name='Manage Articles', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge = models.BooleanField(verbose_name='Manage Salesforce Knowledge', sf_read_only=models.READ_ONLY)
    permissions_manage_solutions = models.BooleanField(verbose_name='Manage Published Solutions', sf_read_only=models.READ_ONLY)
    permissions_customize_application = models.BooleanField(verbose_name='Customize Application', sf_read_only=models.READ_ONLY)
    permissions_edit_readonly_fields = models.BooleanField(verbose_name='Edit Read Only Fields', sf_read_only=models.READ_ONLY)
    permissions_run_reports = models.BooleanField(verbose_name='Run Reports', sf_read_only=models.READ_ONLY)
    permissions_view_setup = models.BooleanField(verbose_name='View Setup and Configuration', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_entity = models.BooleanField(verbose_name='Transfer Record', sf_read_only=models.READ_ONLY)
    permissions_new_report_builder = models.BooleanField(verbose_name='Report Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_css_users = models.BooleanField(verbose_name='Manage Customer Users', sf_read_only=models.READ_ONLY)
    permissions_activate_contract = models.BooleanField(verbose_name='Activate Contracts', sf_read_only=models.READ_ONLY)
    permissions_import_leads = models.BooleanField(verbose_name='Import Leads', sf_read_only=models.READ_ONLY)
    permissions_manage_leads = models.BooleanField(verbose_name='Manage Leads', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_lead = models.BooleanField(verbose_name='Transfer Leads', sf_read_only=models.READ_ONLY)
    permissions_view_all_data = models.BooleanField(verbose_name='View All Data', sf_read_only=models.READ_ONLY)
    permissions_edit_public_documents = models.BooleanField(verbose_name='Manage Public Documents', sf_read_only=models.READ_ONLY)
    permissions_view_encrypted_data = models.BooleanField(verbose_name='View Encrypted Data', sf_read_only=models.READ_ONLY)
    permissions_edit_brand_templates = models.BooleanField(verbose_name='Manage Letterheads', sf_read_only=models.READ_ONLY)
    permissions_edit_html_templates = models.BooleanField(verbose_name='Edit HTML Templates', sf_read_only=models.READ_ONLY)
    permissions_chatter_internal_user = models.BooleanField(verbose_name='Chatter Internal User', sf_read_only=models.READ_ONLY)
    permissions_manage_encryption_keys = models.BooleanField(verbose_name='Manage Encryption Keys', sf_read_only=models.READ_ONLY)
    permissions_delete_activated_contract = models.BooleanField(verbose_name='Delete Activated Contracts', sf_read_only=models.READ_ONLY)
    permissions_chatter_invite_external_users = models.BooleanField(verbose_name='Invite Customers To Chatter', sf_read_only=models.READ_ONLY)
    permissions_send_sit_requests = models.BooleanField(verbose_name='Send Stay-in-Touch Requests', sf_read_only=models.READ_ONLY)
    permissions_override_forecasts = models.BooleanField(verbose_name='Override Forecasts', sf_read_only=models.READ_ONLY)
    permissions_view_all_forecasts = models.BooleanField(verbose_name='View All Forecasts', sf_read_only=models.READ_ONLY)
    permissions_api_user_only = models.BooleanField(verbose_name='Api Only User', sf_read_only=models.READ_ONLY)
    permissions_manage_remote_access = models.BooleanField(verbose_name='Manage Connected Apps', sf_read_only=models.READ_ONLY)
    permissions_can_use_new_dashboard_builder = models.BooleanField(verbose_name='Drag-and-Drop Dashboard Builder', sf_read_only=models.READ_ONLY)
    permissions_manage_categories = models.BooleanField(verbose_name='Manage Categories', sf_read_only=models.READ_ONLY)
    permissions_convert_leads = models.BooleanField(verbose_name='Convert Leads', sf_read_only=models.READ_ONLY)
    permissions_password_never_expires = models.BooleanField(verbose_name='Password Never Expires', sf_read_only=models.READ_ONLY)
    permissions_use_team_reassign_wizards = models.BooleanField(verbose_name='Use Team Reassignment Wizards', sf_read_only=models.READ_ONLY)
    permissions_install_packaging = models.BooleanField(verbose_name='Download AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_publish_packaging = models.BooleanField(verbose_name='Upload AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_partners = models.BooleanField(verbose_name='Manage External Users', sf_read_only=models.READ_ONLY)
    permissions_chatter_own_groups = models.BooleanField(verbose_name='Create and Own New Chatter Groups', sf_read_only=models.READ_ONLY)
    permissions_edit_opp_line_item_unit_price = models.BooleanField(verbose_name='Edit Opportunity Product Sales Price', sf_read_only=models.READ_ONLY)
    permissions_create_packaging = models.BooleanField(verbose_name='Create AppExchange Packages', sf_read_only=models.READ_ONLY)
    permissions_bulk_api_hard_delete = models.BooleanField(verbose_name='Bulk API Hard Delete', sf_read_only=models.READ_ONLY)
    permissions_inbound_migration_tools_user = models.BooleanField(verbose_name='Deploy Change Sets', sf_read_only=models.READ_ONLY)
    permissions_solution_import = models.BooleanField(verbose_name='Import Solutions', sf_read_only=models.READ_ONLY)
    permissions_manage_call_centers = models.BooleanField(verbose_name='Manage Call Centers', sf_read_only=models.READ_ONLY)
    permissions_portal_super_user = models.BooleanField(verbose_name='Portal Super User', sf_read_only=models.READ_ONLY)
    permissions_manage_synonyms = models.BooleanField(verbose_name='Manage Synonyms', sf_read_only=models.READ_ONLY)
    permissions_outbound_migration_tools_user = models.BooleanField(verbose_name='Create and Upload Change Sets', sf_read_only=models.READ_ONLY)
    permissions_delegated_portal_user_admin = models.BooleanField(verbose_name='Delegated External User Administrator', sf_read_only=models.READ_ONLY)
    permissions_view_content = models.BooleanField(verbose_name='View Content in Portals', sf_read_only=models.READ_ONLY)
    permissions_manage_email_client_config = models.BooleanField(verbose_name='Manage Email Client Configurations', sf_read_only=models.READ_ONLY)
    permissions_enable_notifications = models.BooleanField(verbose_name='Send Outbound Messages', sf_read_only=models.READ_ONLY)
    permissions_is_sso_enabled = models.BooleanField(verbose_name='Is Single Sign-On Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_data_integrations = models.BooleanField(verbose_name='Manage Data Integrations', sf_read_only=models.READ_ONLY)
    permissions_distribute_from_pers_wksp = models.BooleanField(verbose_name='Create Content Deliveries', sf_read_only=models.READ_ONLY)
    permissions_view_data_categories = models.BooleanField(verbose_name='View Data Categories in Setup', sf_read_only=models.READ_ONLY)
    permissions_manage_data_categories = models.BooleanField(verbose_name='Manage Data Categories', sf_read_only=models.READ_ONLY)
    permissions_author_apex = models.BooleanField(verbose_name='Author Apex', sf_read_only=models.READ_ONLY)
    permissions_manage_mobile = models.BooleanField(verbose_name='Manage Mobile Configurations', sf_read_only=models.READ_ONLY)
    permissions_api_enabled = models.BooleanField(verbose_name='API Enabled', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_report_types = models.BooleanField(verbose_name='Manage Custom Report Types', sf_read_only=models.READ_ONLY)
    permissions_edit_case_comments = models.BooleanField(verbose_name='Edit Case Comments', sf_read_only=models.READ_ONLY)
    permissions_transfer_any_case = models.BooleanField(verbose_name='Transfer Cases', sf_read_only=models.READ_ONLY)
    permissions_content_administrator = models.BooleanField(verbose_name='Manage Salesforce CRM Content', sf_read_only=models.READ_ONLY)
    permissions_create_workspaces = models.BooleanField(verbose_name='Create Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_content_permissions = models.BooleanField(verbose_name='Manage Content Permissions', sf_read_only=models.READ_ONLY)
    permissions_manage_content_properties = models.BooleanField(verbose_name='Manage Content Properties', sf_read_only=models.READ_ONLY)
    permissions_manage_content_types = models.BooleanField(verbose_name='Manage record types and layouts for Files', sf_read_only=models.READ_ONLY)
    permissions_schedule_job = models.BooleanField(verbose_name='Schedule Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_exchange_config = models.BooleanField(verbose_name='Manage Lightning Sync', sf_read_only=models.READ_ONLY)
    permissions_manage_analytic_snapshots = models.BooleanField(verbose_name='Manage Reporting Snapshots', sf_read_only=models.READ_ONLY)
    permissions_schedule_reports = models.BooleanField(verbose_name='Schedule Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_business_hour_holidays = models.BooleanField(verbose_name='Manage Business Hours Holidays', sf_read_only=models.READ_ONLY)
    permissions_manage_entitlements = models.BooleanField(verbose_name='Manage Entitlements', sf_read_only=models.READ_ONLY)
    permissions_manage_dynamic_dashboards = models.BooleanField(verbose_name='Manage Dynamic Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_interaction = models.BooleanField(verbose_name='Manage Flow', sf_read_only=models.READ_ONLY)
    permissions_view_my_teams_dashboards = models.BooleanField(verbose_name="View My Team's Dashboards", sf_read_only=models.READ_ONLY)
    permissions_moderate_chatter = models.BooleanField(verbose_name='Moderate Chatter', sf_read_only=models.READ_ONLY)
    permissions_reset_passwords = models.BooleanField(verbose_name='Reset User Passwords and Unlock Users', sf_read_only=models.READ_ONLY)
    permissions_flow_uflrequired = models.BooleanField(db_column='PermissionsFlowUFLRequired', verbose_name='Require Flow User Feature License', sf_read_only=models.READ_ONLY)
    permissions_can_insert_feed_system_fields = models.BooleanField(verbose_name='Insert System Field Values for Chatter Feeds', sf_read_only=models.READ_ONLY)
    permissions_activities_access = models.BooleanField(verbose_name='Access Activities', sf_read_only=models.READ_ONLY)
    permissions_manage_knowledge_import_export = models.BooleanField(verbose_name='Manage Knowledge Article Import/Export', sf_read_only=models.READ_ONLY)
    permissions_email_template_management = models.BooleanField(verbose_name='Manage Email Templates', sf_read_only=models.READ_ONLY)
    permissions_email_administration = models.BooleanField(verbose_name='Email Administration', sf_read_only=models.READ_ONLY)
    permissions_manage_chatter_messages = models.BooleanField(verbose_name='Manage Chatter Messages and Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_email_ic = models.BooleanField(db_column='PermissionsAllowEmailIC', verbose_name='Email-Based Identity Verification Option', sf_read_only=models.READ_ONLY)
    permissions_chatter_file_link = models.BooleanField(verbose_name='Create Public Links', sf_read_only=models.READ_ONLY)
    permissions_force_two_factor = models.BooleanField(verbose_name='Two-Factor Authentication for User Interface Logins', sf_read_only=models.READ_ONLY)
    permissions_view_event_log_files = models.BooleanField(verbose_name='View Event Log Files', sf_read_only=models.READ_ONLY)
    permissions_manage_networks = models.BooleanField(verbose_name='Create and Set Up Communities', sf_read_only=models.READ_ONLY)
    permissions_manage_auth_providers = models.BooleanField(verbose_name='Manage Auth. Providers', sf_read_only=models.READ_ONLY)
    permissions_run_flow = models.BooleanField(verbose_name='Run Flows', sf_read_only=models.READ_ONLY)
    permissions_view_global_header = models.BooleanField(verbose_name='View Global Header', sf_read_only=models.READ_ONLY)
    permissions_manage_quotas = models.BooleanField(verbose_name='Manage Quotas', sf_read_only=models.READ_ONLY)
    permissions_create_customize_dashboards = models.BooleanField(verbose_name='Create and Customize Dashboards', sf_read_only=models.READ_ONLY)
    permissions_create_dashboard_folders = models.BooleanField(verbose_name='Create Dashboard Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_dashboards = models.BooleanField(verbose_name='View Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_dashbds_in_pub_folders = models.BooleanField(verbose_name='Manage Dashboards in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_create_customize_reports = models.BooleanField(verbose_name='Create and Customize Reports', sf_read_only=models.READ_ONLY)
    permissions_create_report_folders = models.BooleanField(verbose_name='Create Report Folders', sf_read_only=models.READ_ONLY)
    permissions_view_public_reports = models.BooleanField(verbose_name='View Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_manage_reports_in_pub_folders = models.BooleanField(verbose_name='Manage Reports in Public Folders', sf_read_only=models.READ_ONLY)
    permissions_edit_my_dashboards = models.BooleanField(verbose_name='Edit My Dashboards', sf_read_only=models.READ_ONLY)
    permissions_edit_my_reports = models.BooleanField(verbose_name='Edit My Reports', sf_read_only=models.READ_ONLY)
    permissions_view_all_users = models.BooleanField(verbose_name='View All Users', sf_read_only=models.READ_ONLY)
    permissions_allow_universal_search = models.BooleanField(verbose_name='Knowledge One', sf_read_only=models.READ_ONLY)
    permissions_connect_org_to_environment_hub = models.BooleanField(verbose_name='Connect Organization to Environment Hub', sf_read_only=models.READ_ONLY)
    permissions_create_customize_filters = models.BooleanField(verbose_name='Create and Customize List Views', sf_read_only=models.READ_ONLY)
    permissions_content_hub_user = models.BooleanField(verbose_name='Files Connect Cloud', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_feeds = models.BooleanField(verbose_name='Moderate Communities Feeds', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_files = models.BooleanField(verbose_name='Moderate Communities Files', sf_read_only=models.READ_ONLY)
    permissions_govern_networks = models.BooleanField(verbose_name='Manage Communities', sf_read_only=models.READ_ONLY)
    permissions_sales_console = models.BooleanField(verbose_name='Sales Console', sf_read_only=models.READ_ONLY)
    permissions_two_factor_api = models.BooleanField(verbose_name='Two-Factor Authentication for API Logins', sf_read_only=models.READ_ONLY)
    permissions_delete_topics = models.BooleanField(verbose_name='Delete Topics', sf_read_only=models.READ_ONLY)
    permissions_edit_topics = models.BooleanField(verbose_name='Edit Topics', sf_read_only=models.READ_ONLY)
    permissions_create_topics = models.BooleanField(verbose_name='Create Topics', sf_read_only=models.READ_ONLY)
    permissions_assign_topics = models.BooleanField(verbose_name='Assign Topics', sf_read_only=models.READ_ONLY)
    permissions_identity_enabled = models.BooleanField(verbose_name='Use Identity Features', sf_read_only=models.READ_ONLY)
    permissions_identity_connect = models.BooleanField(verbose_name='Use Identity Connect', sf_read_only=models.READ_ONLY)
    permissions_allow_view_knowledge = models.BooleanField(verbose_name='Allow View Knowledge', sf_read_only=models.READ_ONLY)
    permissions_content_workspaces = models.BooleanField(verbose_name='Access Libraries', sf_read_only=models.READ_ONLY)
    permissions_manage_search_promotion_rules = models.BooleanField(verbose_name='Manage Promoted Search Terms', sf_read_only=models.READ_ONLY)
    permissions_custom_mobile_apps_access = models.BooleanField(verbose_name='Access Custom Mobile Apps', sf_read_only=models.READ_ONLY)
    permissions_view_help_link = models.BooleanField(verbose_name='View Help Link', sf_read_only=models.READ_ONLY)
    permissions_manage_profiles_permissionsets = models.BooleanField(verbose_name='Manage Profiles and Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_assign_permission_sets = models.BooleanField(verbose_name='Assign Permission Sets', sf_read_only=models.READ_ONLY)
    permissions_manage_roles = models.BooleanField(verbose_name='Manage Roles', sf_read_only=models.READ_ONLY)
    permissions_manage_ip_addresses = models.BooleanField(verbose_name='Manage IP Addresses', sf_read_only=models.READ_ONLY)
    permissions_manage_sharing = models.BooleanField(verbose_name='Manage Sharing', sf_read_only=models.READ_ONLY)
    permissions_manage_internal_users = models.BooleanField(verbose_name='Manage Internal Users', sf_read_only=models.READ_ONLY)
    permissions_manage_password_policies = models.BooleanField(verbose_name='Manage Password Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_login_access_policies = models.BooleanField(verbose_name='Manage Login Access Policies', sf_read_only=models.READ_ONLY)
    permissions_manage_custom_permissions = models.BooleanField(verbose_name='Manage Custom Permissions', sf_read_only=models.READ_ONLY)
    permissions_can_verify_comment = models.BooleanField(verbose_name='Verify Answers to Chatter Questions', sf_read_only=models.READ_ONLY)
    permissions_manage_unlisted_groups = models.BooleanField(verbose_name='Manage Unlisted Groups', sf_read_only=models.READ_ONLY)
    permissions_std_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture Standard', sf_read_only=models.READ_ONLY)
    permissions_insights_app_dashboard_editor = models.BooleanField(verbose_name='Create and Edit Analytics Dashboards', sf_read_only=models.READ_ONLY)
    permissions_manage_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in API', sf_read_only=models.READ_ONLY)
    permissions_insights_app_user = models.BooleanField(verbose_name='Use Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_admin = models.BooleanField(verbose_name='Manage Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_app_elt_editor = models.BooleanField(verbose_name='Edit Analytics Dataflows', sf_read_only=models.READ_ONLY)
    permissions_insights_app_upload_user = models.BooleanField(verbose_name='Upload External Data to Analytics', sf_read_only=models.READ_ONLY)
    permissions_insights_create_application = models.BooleanField(verbose_name='Create Analytics Apps', sf_read_only=models.READ_ONLY)
    permissions_debug_apex = models.BooleanField(verbose_name='Debug Apex', sf_read_only=models.READ_ONLY)
    permissions_lightning_experience_user = models.BooleanField(verbose_name='Lightning Experience User', sf_read_only=models.READ_ONLY)
    permissions_view_data_leakage_events = models.BooleanField(verbose_name='View Data Leakage Detection Events', sf_read_only=models.READ_ONLY)
    permissions_config_custom_recs = models.BooleanField(verbose_name='Configure Custom Recommendations', sf_read_only=models.READ_ONLY)
    permissions_submit_macros_allowed = models.BooleanField(verbose_name="Manage Macros Users Can't Undo", sf_read_only=models.READ_ONLY)
    permissions_bulk_macros_allowed = models.BooleanField(verbose_name='Run Macros on Multiple Records', sf_read_only=models.READ_ONLY)
    permissions_share_internal_articles = models.BooleanField(verbose_name='Share internal Knowledge articles externally', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_messages = models.BooleanField(verbose_name='Moderate Communities Chatter Messages', sf_read_only=models.READ_ONLY)
    permissions_manage_session_permission_sets = models.BooleanField(verbose_name='Manage Session Permission Set Activations', sf_read_only=models.READ_ONLY)
    permissions_manage_templated_app = models.BooleanField(verbose_name='Manage Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_use_templated_app = models.BooleanField(verbose_name='Use Analytics Templated Apps', sf_read_only=models.READ_ONLY)
    permissions_send_announcement_emails = models.BooleanField(verbose_name='Send announcement emails', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_post = models.BooleanField(verbose_name='Edit My Own Posts', sf_read_only=models.READ_ONLY)
    permissions_chatter_edit_own_record_post = models.BooleanField(verbose_name='Edit Posts on Records I Own', sf_read_only=models.READ_ONLY)
    permissions_admin_analytics_user = models.BooleanField(verbose_name='Access Event Monitoring Analytics Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_create_audit_fields = models.BooleanField(verbose_name='Set Audit Fields upon Record Creation', sf_read_only=models.READ_ONLY)
    permissions_update_with_inactive_owner = models.BooleanField(verbose_name='Update Records with Inactive Owners', sf_read_only=models.READ_ONLY)
    permissions_assign_user_to_skill = models.BooleanField(verbose_name='Assign Chat Skills to Users', sf_read_only=models.READ_ONLY)
    permissions_wave_trend_reports = models.BooleanField(verbose_name='Trend Report Data in Analytics', sf_read_only=models.READ_ONLY)
    permissions_wave_tabular_download = models.BooleanField(verbose_name='Download Analytics Data', sf_read_only=models.READ_ONLY)
    permissions_manage_sandboxes = models.BooleanField(verbose_name='Manage Sandboxes', sf_read_only=models.READ_ONLY)
    permissions_automatic_activity_capture = models.BooleanField(verbose_name='Use Einstein Activity Capture', sf_read_only=models.READ_ONLY)
    permissions_import_custom_objects = models.BooleanField(verbose_name='Import Custom Objects', sf_read_only=models.READ_ONLY)
    permissions_delegated_two_factor = models.BooleanField(verbose_name='Manage Two-Factor Authentication in User Interface', sf_read_only=models.READ_ONLY)
    permissions_chatter_compose_ui_codesnippet = models.BooleanField(verbose_name='Allow Inclusion of Code Snippets from UI', sf_read_only=models.READ_ONLY)
    permissions_select_files_from_salesforce = models.BooleanField(verbose_name='Select Files from Salesforce', sf_read_only=models.READ_ONLY)
    permissions_moderate_network_users = models.BooleanField(verbose_name='Moderate Community Users', sf_read_only=models.READ_ONLY)
    permissions_merge_topics = models.BooleanField(verbose_name='Merge Topics', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_reports = models.BooleanField(verbose_name='Subscribe to Reports', sf_read_only=models.READ_ONLY)
    permissions_manage_pvt_rpts_and_dashbds = models.BooleanField(verbose_name='Manage All Private Reports and Dashboards', sf_read_only=models.READ_ONLY)
    permissions_campaign_influence2 = models.BooleanField(verbose_name='Campaign Influence', sf_read_only=models.READ_ONLY)
    permissions_view_data_assessment = models.BooleanField(verbose_name='Access to view Data Assessment', sf_read_only=models.READ_ONLY)
    permissions_remove_direct_message_members = models.BooleanField(verbose_name='Remove People from Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_can_approve_feed_post = models.BooleanField(verbose_name='Can Approve Feed Post and Comment', sf_read_only=models.READ_ONLY)
    permissions_add_direct_message_members = models.BooleanField(verbose_name='Add People to Direct Messages', sf_read_only=models.READ_ONLY)
    permissions_allow_view_edit_converted_leads = models.BooleanField(verbose_name='View and Edit Converted Leads', sf_read_only=models.READ_ONLY)
    permissions_show_company_name_as_user_badge = models.BooleanField(verbose_name='Show Company Name as Community Role', sf_read_only=models.READ_ONLY)
    permissions_access_cmc = models.BooleanField(db_column='PermissionsAccessCMC', verbose_name='Access Community Management', sf_read_only=models.READ_ONLY)
    permissions_archive_articles = models.BooleanField(verbose_name='Archive Articles', sf_read_only=models.READ_ONLY)
    permissions_publish_articles = models.BooleanField(verbose_name='Publish Articles', sf_read_only=models.READ_ONLY)
    permissions_view_health_check = models.BooleanField(verbose_name='View Health Check', sf_read_only=models.READ_ONLY)
    permissions_manage_health_check = models.BooleanField(verbose_name='Manage Health Check', sf_read_only=models.READ_ONLY)
    permissions_packaging2 = models.BooleanField(verbose_name='Create and Update Second-Generation Packages', sf_read_only=models.READ_ONLY)
    permissions_manage_certificates = models.BooleanField(verbose_name='Manage Certificates', sf_read_only=models.READ_ONLY)
    permissions_create_report_in_lightning = models.BooleanField(verbose_name='Report Builder (Lightning Experience)', sf_read_only=models.READ_ONLY)
    permissions_prevent_classic_experience = models.BooleanField(verbose_name='Hide Option to Switch to Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_hide_read_by_list = models.BooleanField(verbose_name='Hide the Seen By List', sf_read_only=models.READ_ONLY)
    permissions_submit_for_translation = models.BooleanField(verbose_name='Article Translation - Submit for Translation', sf_read_only=models.READ_ONLY)
    permissions_edit_translation = models.BooleanField(verbose_name='Article Translation - Edit', sf_read_only=models.READ_ONLY)
    permissions_publish_translation = models.BooleanField(verbose_name='Article Translation - Publish', sf_read_only=models.READ_ONLY)
    permissions_list_email_send = models.BooleanField(verbose_name='Allow sending of List Emails', sf_read_only=models.READ_ONLY)
    permissions_feed_pinning = models.BooleanField(verbose_name='Pin Posts in Feeds', sf_read_only=models.READ_ONLY)
    permissions_change_dashboard_colors = models.BooleanField(verbose_name='Change Dashboard Colors', sf_read_only=models.READ_ONLY)
    permissions_manage_recommendation_strategies = models.BooleanField(verbose_name='Manage Next Best Action Strategies', sf_read_only=models.READ_ONLY)
    permissions_manage_propositions = models.BooleanField(verbose_name='Manage Next Best Action Recommendations', sf_read_only=models.READ_ONLY)
    permissions_close_conversations = models.BooleanField(verbose_name='Close Conversation Threads', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_roles_grps = models.BooleanField(verbose_name='Subscribe to Reports: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_roles_grps = models.BooleanField(verbose_name='Subscribe to Dashboards: Send to Groups and Roles', sf_read_only=models.READ_ONLY)
    permissions_use_web_link = models.BooleanField(verbose_name='Allow Access to Customized Actions', sf_read_only=models.READ_ONLY)
    permissions_has_unlimited_nbaexecutions = models.BooleanField(db_column='PermissionsHasUnlimitedNBAExecutions', verbose_name='User Has Unlimited Next Best Action Strategy Executions', sf_read_only=models.READ_ONLY)
    permissions_view_only_embedded_app_user = models.BooleanField(verbose_name='Access to View-Only Licensed Templates and Apps', sf_read_only=models.READ_ONLY)
    permissions_view_all_activities = models.BooleanField(verbose_name='View All Activities', sf_read_only=models.READ_ONLY)
    permissions_subscribe_report_to_other_users = models.BooleanField(verbose_name='Subscribe to Reports: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_lightning_console_allowed_for_user = models.BooleanField(verbose_name='Lightning Console User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_reports_run_as_user = models.BooleanField(verbose_name='Subscribe to Reports: Set Running User', sf_read_only=models.READ_ONLY)
    permissions_subscribe_to_lightning_dashboards = models.BooleanField(verbose_name='Subscribe to Dashboards', sf_read_only=models.READ_ONLY)
    permissions_subscribe_dashboard_to_other_users = models.BooleanField(verbose_name='Subscribe to Dashboards: Add Recipients', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_in_pub = models.BooleanField(verbose_name='Manage Public Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_transactional_email_send = models.BooleanField(verbose_name='Send Non-Commercial Email', sf_read_only=models.READ_ONLY)
    permissions_view_private_static_resources = models.BooleanField(verbose_name='View Private Static Resources', sf_read_only=models.READ_ONLY)
    permissions_view_customer_sentiment = models.BooleanField(verbose_name='View Community 360', sf_read_only=models.READ_ONLY)
    permissions_create_ltng_temp_folder = models.BooleanField(verbose_name='Create Folders for Lightning Email Templates', sf_read_only=models.READ_ONLY)
    permissions_apex_rest_services = models.BooleanField(verbose_name='Apex REST Services', sf_read_only=models.READ_ONLY)
    permissions_enable_community_app_launcher = models.BooleanField(verbose_name='Show App Launcher in Communities', sf_read_only=models.READ_ONLY)
    permissions_give_recognition_badge = models.BooleanField(verbose_name='Give Recognition Badges in Lightning Communities', sf_read_only=models.READ_ONLY)
    permissions_use_my_search = models.BooleanField(verbose_name='Einstein Search', sf_read_only=models.READ_ONLY)
    permissions_ltng_promo_reserved01_user_perm = models.BooleanField(verbose_name='Remain in Salesforce Classic', sf_read_only=models.READ_ONLY)
    permissions_manage_subscriptions = models.BooleanField(verbose_name='Manage Analytics Subscriptions', sf_read_only=models.READ_ONLY)
    permissions_wave_manage_private_assets_user = models.BooleanField(verbose_name='Manage Analytics Private Assets', sf_read_only=models.READ_ONLY)
    permissions_can_edit_data_prep_recipe = models.BooleanField(verbose_name='Edit Dataset Recipes', sf_read_only=models.READ_ONLY)
    permissions_add_analytics_remote_connections = models.BooleanField(verbose_name='Add Analytics Remote Connections', sf_read_only=models.READ_ONLY)
    permissions_manage_surveys = models.BooleanField(verbose_name='Manage Surveys', sf_read_only=models.READ_ONLY)
    permissions_use_assistant_dialog = models.BooleanField(verbose_name='Einstein Search Record Previews', sf_read_only=models.READ_ONLY)
    permissions_use_query_suggestions = models.BooleanField(verbose_name='Einstein Search Results Based On Conversational Queries', sf_read_only=models.READ_ONLY)
    permissions_record_visibility_api = models.BooleanField(db_column='PermissionsRecordVisibilityAPI', verbose_name='Enable RecordVisibility API', sf_read_only=models.READ_ONLY)
    permissions_view_roles = models.BooleanField(verbose_name='View Roles and Role Hierarchy', sf_read_only=models.READ_ONLY)
    permissions_can_manage_maps = models.BooleanField(verbose_name='Manage Analytics Custom Maps', sf_read_only=models.READ_ONLY)
    permissions_lmoutbound_messaging_user_perm = models.BooleanField(db_column='PermissionsLMOutboundMessagingUserPerm', verbose_name='Agent Initiated Outbound Messaging', sf_read_only=models.READ_ONLY)
    permissions_modify_data_classification = models.BooleanField(verbose_name='Modify Data Classification', sf_read_only=models.READ_ONLY)
    permissions_privacy_data_access = models.BooleanField(verbose_name='Allow user to access privacy data', sf_read_only=models.READ_ONLY)
    permissions_query_all_files = models.BooleanField(verbose_name='Query All Files', sf_read_only=models.READ_ONLY)
    permissions_modify_metadata = models.BooleanField(verbose_name='Modify Metadata Through Metadata API Functions', sf_read_only=models.READ_ONLY)
    permissions_manage_cms = models.BooleanField(db_column='PermissionsManageCMS', verbose_name='Manage CMS Workspaces and Channels', sf_read_only=models.READ_ONLY)
    permissions_sandbox_testing_in_community_app = models.BooleanField(verbose_name='Enables testing a sandbox community in the Mobile Publisher for Community Cloud app.', sf_read_only=models.READ_ONLY)
    permissions_view_flow_usage_and_flow_event_data = models.BooleanField(verbose_name='View Flow Usage and Flow Event Data', sf_read_only=models.READ_ONLY)
    permissions_can_edit_prompts = models.BooleanField(verbose_name='Manage Prompts', sf_read_only=models.READ_ONLY)
    class Meta(models.Model.Meta):
        db_table = 'UserPermissionAccess'
        verbose_name = 'User Permission Access'
        verbose_name_plural = 'User Permission Access'
        # keyPrefix = '0up'



class UserPreference(models.Model):
    user = models.ForeignKey(User, models.DO_NOTHING)  # Master Detail Relationship *
    preference = models.CharField(max_length=40, default=models.DefaultedOnCreate('93'), choices=[('57', 'Event Reminder Default Lead Time'), ('58', 'Task Reminder Default Time'), ('91', 'Prevent Logs on Load'), ('92', 'Autocomplete Apex After Key Press'), ('93', 'Visualforce Viewstate Inspector'), ('94', 'Forecasting Displayed Type'), ('96', 'Editor Theme'), ('97', 'Editor Font Size'), ('98', 'Pinned Folders'), ('99', 'Enable Query Plan'), ('100', 'Enable New Open Dialog'), ('101', 'Email Transport Type'), ('102', 'Pinned Wave Folders'), ('108', 'Density'), ('109', 'Lightning Flow Builder preferences'), ('111', 'Format With Tabs'), ('112', 'Format Tab Width'), ('113', 'Format Print Width'), ('114', 'Record Page Activities Display')])
    value = models.TextField(blank=True, null=True)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'UserPreference'
        verbose_name = 'User Preference'
        verbose_name_plural = 'User Preferences'
        # keyPrefix = '03u'



class UserRecordAccess(models.Model):
    user = models.ForeignKey(User, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    record_id = models.CharField(max_length=40, verbose_name='Record ID', sf_read_only=models.READ_ONLY)
    has_read_access = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_edit_access = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_delete_access = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_transfer_access = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    has_all_access = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    max_access_level = models.CharField(max_length=40, verbose_name='Maximum Access Level', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('Delete', 'Delete'), ('Transfer', 'Read/Write/Transfer'), ('All', 'Owner')], blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserRecordAccess'
        verbose_name = 'User Record Access'
        verbose_name_plural = 'User Record Access'
        # keyPrefix = 'None'



class UserRole(models.Model):
    name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY)
    parent_role = models.ForeignKey('self', models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    rollup_description = models.CharField(max_length=80, verbose_name='Description', sf_read_only=models.READ_ONLY, blank=True, null=True)
    opportunity_access_for_account_owner = models.CharField(max_length=40, verbose_name='Opportunity Access Level for Account Owner', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')])
    case_access_for_account_owner = models.CharField(max_length=40, verbose_name='Case Access Level for Account Owner', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')], blank=True, null=True)
    contact_access_for_account_owner = models.CharField(max_length=40, verbose_name='Contact Access Level for Account Owner', sf_read_only=models.READ_ONLY, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')], blank=True, null=True)
    forecast_user = models.ForeignKey(User, models.DO_NOTHING, related_name='userrole_forecastuser_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    may_forecast_manager_share = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userrole_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    developer_name = models.CharField(max_length=80, sf_read_only=models.READ_ONLY, blank=True, null=True)
    portal_account = models.ForeignKey(Account, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)
    portal_type = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('None', 'None'), ('CustomerPortal', 'Customer Portal'), ('Partner', 'Partner Portal')], blank=True, null=True)
    portal_role = models.CharField(max_length=40, sf_read_only=models.READ_ONLY, choices=[('Executive', 'Executive'), ('Manager', 'Manager'), ('Worker', 'User'), ('PersonAccount', 'Person Account')], blank=True, null=True)
    portal_account_owner = models.ForeignKey(User, models.DO_NOTHING, related_name='userrole_portalaccountowner_set', sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserRole'
        verbose_name = 'Role'
        verbose_name_plural = 'Role'
        # keyPrefix = '00E'



class UserServicePresence(models.Model):
    owner = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_CREATEABLE)  # Reference to tables [Group, User]
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userservicepresence_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userservicepresence_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='userservicepresence_user_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    service_presence_status = models.ForeignKey(ServicePresenceStatus, models.DO_NOTHING, sf_read_only=models.NOT_CREATEABLE, blank=True, null=True)
    status_start_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    configured_capacity = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    status_end_date = models.DateTimeField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_away = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    idle_duration = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    at_capacity_duration = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    average_capacity = models.DecimalField(max_digits=10, decimal_places=2, sf_read_only=models.READ_ONLY, blank=True, null=True)
    is_current_state = models.BooleanField(sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    status_duration = models.IntegerField(sf_read_only=models.READ_ONLY, blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'UserServicePresence'
        verbose_name = 'User Presence'
        verbose_name_plural = 'User Presences'
        # keyPrefix = '0R1'



class UserServicePresenceShare(models.Model):
    parent = models.ForeignKey(UserServicePresence, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    access_level = models.CharField(max_length=40, verbose_name='Custom Object Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, sf_read_only=models.READ_ONLY)
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'UserServicePresenceShare'
        verbose_name = 'User Presence Share'
        verbose_name_plural = 'User Presence Share'
        # keyPrefix = 'None'



class UserShare(models.Model):
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='usershare_user_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    user_or_group = models.ForeignKey(Group, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Reference to tables [Group, User] Master Detail Relationship *
    user_access_level = models.CharField(max_length=40, choices=[('Read', 'Read Only'), ('Edit', 'Read/Write')])
    row_cause = models.CharField(max_length=40, sf_read_only=models.NOT_UPDATEABLE, choices=[('Owner', 'Owner'), ('Manual', 'Manual Sharing'), ('Rule', 'Sharing Rule'), ('ImplicitChild', 'Account Sharing'), ('ImplicitParent', 'Associated record owner or sharing'), ('ImplicitPerson', 'Person Contact'), ('Team', 'Sales Team'), ('Territory', 'Territory Assignment Rule'), ('TerritoryManual', 'Territory Manual'), ('Territory2AssociationManual', 'Territory Manual'), ('TerritoryRule', 'Territory Sharing Rule'), ('Territory2Forecast', 'Territory assignment for forecasting and reporting'), ('GuestRule', 'Guest User Sharing Rule'), ('GuestParentImplicit', 'Associated guest user sharing'), ('GuestPersonImplicit', 'Associated Guest User Sharing'), ('SurveyShare', 'Survey Sharing Rule')], blank=True, null=True)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='usershare_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    is_active = models.BooleanField(verbose_name='Active', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    class Meta(models.Model.Meta):
        db_table = 'UserShare'
        verbose_name = 'User Share'
        verbose_name_plural = 'User Share'
        # keyPrefix = '0N2'



class UserTeamMember(models.Model):
    owner = models.ForeignKey(User, models.DO_NOTHING, related_name='userteammember_owner_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    user = models.ForeignKey(User, models.DO_NOTHING, related_name='userteammember_user_set', sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    opportunity_access_level = models.CharField(max_length=40, verbose_name='Opportunity Access', choices=[('Read', 'Read Only'), ('Edit', 'Read/Write')])
    team_member_role = models.CharField(max_length=40, verbose_name='Team Role', choices=[('APS', 'APS'), ('BSE', 'BSE'), ('DM', 'DM'), ('RSM', 'RSM'), ('Service Rep', 'Service Rep'), ('Lead Credit User', 'Lead Credit User'), ('Broker Affiliate', 'Broker Affiliate')], blank=True, null=True)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userteammember_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='userteammember_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'UserTeamMember'
        verbose_name = 'User Team Member'
        verbose_name_plural = 'User Team Member'
        # keyPrefix = '00p'



class Vote(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    parent = models.ForeignKey(KnowledgeKa, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE)  # Master Detail Relationship *
    type = models.CharField(max_length=40, verbose_name='Vote Type', choices=[('Up', None), ('Down', None), ('1', None), ('2', None), ('3', None), ('4', None), ('5', None)])
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='vote_createdby_set', sf_read_only=models.READ_ONLY)  # Master Detail Relationship *
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='vote_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    class Meta(models.Model.Meta):
        db_table = 'Vote'
        verbose_name = 'Vote'
        verbose_name_plural = 'Votes'
        # keyPrefix = '083'



class WaveAutoInstallRequest(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Request Name')
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='waveautoinstallrequest_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='waveautoinstallrequest_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    template_api_name = models.CharField(max_length=255, verbose_name='Wave Template Api Name', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    template_version = models.CharField(max_length=50, verbose_name='Wave Template Version', sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    folder = models.ForeignKey(Folder, models.DO_NOTHING, sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)  # Master Detail Relationship *
    request_type = models.CharField(max_length=255, sf_read_only=models.NOT_UPDATEABLE)
    request_status = models.CharField(max_length=255)
    failed_reason = models.CharField(max_length=255, sf_read_only=models.READ_ONLY, blank=True, null=True)
    configuration = models.TextField(sf_read_only=models.NOT_UPDATEABLE, blank=True, null=True)
    request_log = models.TextField(blank=True, null=True)
    class Meta(models.Model.Meta):
        db_table = 'WaveAutoInstallRequest'
        verbose_name = 'Wave Auto Install Request'
        verbose_name_plural = 'Wave Auto Install Requests'
        # keyPrefix = '0UZ'



class WaveCompatibilityCheckItem(models.Model):
    is_deleted = models.BooleanField(verbose_name='Deleted', sf_read_only=models.READ_ONLY, default=models.DefaultedOnCreate(False))
    name = models.CharField(max_length=255, verbose_name='Checklist Item Name', sf_read_only=models.READ_ONLY)
    created_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    created_by = models.ForeignKey(User, models.DO_NOTHING, related_name='wavecompatibilitycheckitem_createdby_set', sf_read_only=models.READ_ONLY)
    last_modified_date = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    last_modified_by = models.ForeignKey(User, models.DO_NOTHING, related_name='wavecompatibilitycheckitem_lastmodifiedby_set', sf_read_only=models.READ_ONLY)
    system_modstamp = models.DateTimeField(sf_read_only=models.READ_ONLY, default=models.DEFAULTED_ON_CREATE)
    task_name = models.CharField(max_length=255, verbose_name='Checklist Item Task Name', sf_read_only=models.READ_ONLY)
    task_result = models.CharField(max_length=255, verbose_name='Checklist Item Result', sf_read_only=models.READ_ONLY)
    template_api_name = models.CharField(max_length=255, verbose_name='Wave Template Api Name', sf_read_only=models.READ_ONLY)
    template_version = models.CharField(max_length=50, verbose_name='Wave Template Version', sf_read_only=models.READ_ONLY, blank=True, null=True)
    payload = models.TextField(verbose_name='Checklist Task Payload', sf_read_only=models.READ_ONLY, blank=True, null=True)
    wave_auto_install_request = models.ForeignKey(WaveAutoInstallRequest, models.DO_NOTHING, sf_read_only=models.READ_ONLY, blank=True, null=True)  # Master Detail Relationship *
    class Meta(models.Model.Meta):
        db_table = 'WaveCompatibilityCheckItem'
        verbose_name = 'Wave Compatibility Check Item'
        verbose_name_plural = 'Wave Compatibility Check Items'
        # keyPrefix = '0OZ'

