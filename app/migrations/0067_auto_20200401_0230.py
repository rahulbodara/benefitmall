# Generated by Django 3.0.4 on 2020-04-01 02:30

import app.blocks.custom_choice_block
import app.blocks.gallery_block
import app.blocks.pricing_block
import app.blocks.products_block
import app.widgets.custom_radio_select
from django.db import migrations
import django.db.models.deletion
import salesforce.backend.operations
import salesforce.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0066_auto_20200327_2052'),
    ]

    operations = [
        # migrations.CreateModel(
        #     name='Account',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('is_deleted', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Deleted')),
        #         ('name', salesforce.fields.CharField(max_length=255, verbose_name='Account Name')),
        #         ('type', salesforce.fields.CharField(blank=True, choices=[('Customer', 'Customer'), ('Prospect', 'Prospect'), ('Partner - Formal', 'Partner - Formal'), ('Partner - Informal', 'Partner - Informal'), ('Agency', 'Agency'), ('Agent', 'Agent'), ('Group', 'Group'), ('Individual', 'Individual'), ('Partner - Prospective', 'Partner - Prospective'), ('Dead Partner', 'Dead Partner'), ('Partner - Inactive', 'Partner - Inactive'), ('Enterprise', 'Enterprise'), ('Customer Contact', 'Customer Contact'), ('Carrier', 'Carrier')], default=salesforce.backend.operations.DefaultedOnCreate('Prospect'), max_length=40, null=True, verbose_name='Account Type')),
        #         ('billing_street', salesforce.fields.TextField(blank=True, null=True)),
        #         ('billing_city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('billing_state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Billing State/Province')),
        #         ('billing_postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Billing Zip/Postal Code')),
        #         ('billing_country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('billing_state_code', salesforce.fields.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], max_length=10, null=True, verbose_name='Billing State/Province Code')),
        #         ('billing_country_code', salesforce.fields.CharField(blank=True, choices=[('CA', 'Canada'), ('US', 'United States')], default=salesforce.backend.operations.DefaultedOnCreate('US'), max_length=10, null=True)),
        #         ('billing_latitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('billing_longitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('billing_geocode_accuracy', salesforce.fields.CharField(blank=True, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], max_length=40, null=True)),
        #         ('billing_address', salesforce.fields.TextField(blank=True, null=True)),
        #         ('shipping_street', salesforce.fields.TextField(blank=True, null=True)),
        #         ('shipping_city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('shipping_state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Shipping State/Province')),
        #         ('shipping_postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Shipping Zip/Postal Code')),
        #         ('shipping_country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('shipping_state_code', salesforce.fields.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], max_length=10, null=True, verbose_name='Shipping State/Province Code')),
        #         ('shipping_country_code', salesforce.fields.CharField(blank=True, choices=[('CA', 'Canada'), ('US', 'United States')], default=salesforce.backend.operations.DefaultedOnCreate('US'), max_length=10, null=True)),
        #         ('shipping_latitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('shipping_longitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('shipping_geocode_accuracy', salesforce.fields.CharField(blank=True, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], max_length=40, null=True)),
        #         ('shipping_address', salesforce.fields.TextField(blank=True, null=True)),
        #         ('phone', salesforce.fields.CharField(blank=True, max_length=40, null=True, verbose_name='Account Phone')),
        #         ('fax', salesforce.fields.CharField(blank=True, max_length=40, null=True, verbose_name='Account Fax')),
        #         ('website', salesforce.fields.URLField(blank=True, null=True)),
        #         ('photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Photo URL')),
        #         ('sic', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='SIC Code')),
        #         ('industry', salesforce.fields.CharField(blank=True, choices=[('Agriculture', 'Agriculture'), ('Apparel', 'Apparel'), ('Aviation', 'Aviation'), ('Banking', 'Banking'), ('Biotechnology', 'Biotechnology'), ('Chemicals', 'Chemicals'), ('Communications', 'Communications'), ('Construction', 'Construction'), ('Consulting', 'Consulting'), ('Education', 'Education'), ('Electronics', 'Electronics'), ('Energy', 'Energy'), ('Engineering', 'Engineering'), ('Entertainment', 'Entertainment'), ('Environmental', 'Environmental'), ('Finance', 'Finance'), ('Food & Beverage', 'Food & Beverage'), ('Government', 'Government'), ('Healthcare', 'Healthcare'), ('Hospitality', 'Hospitality'), ('Insurance', 'Insurance'), ('Machinery', 'Machinery'), ('Manufacturing', 'Manufacturing'), ('Media', 'Media'), ('Not For Profit', 'Not For Profit'), ('Other', 'Other'), ('Real Estate', 'Real Estate'), ('Recreation', 'Recreation'), ('Retail', 'Retail'), ('Shipping', 'Shipping'), ('Spa', 'Spa'), ('Technology', 'Technology'), ('Telecommunications', 'Telecommunications'), ('Transportation', 'Transportation'), ('Utilities', 'Utilities'), ('Waste Management', 'Waste Management')], max_length=40, null=True)),
        #         ('number_of_employees', salesforce.fields.IntegerField(blank=True, null=True, verbose_name='Employees')),
        #         ('description', salesforce.fields.TextField(blank=True, null=True, verbose_name='Account Description')),
        #         ('rating', salesforce.fields.CharField(blank=True, choices=[('Hot', 'Hot'), ('Warm', 'Warm'), ('Cold', 'Cold')], max_length=40, null=True, verbose_name='Account Rating')),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_activity_date', salesforce.fields.DateField(blank=True, null=True, verbose_name='Last Activity')),
        #         ('last_viewed_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #         ('last_referenced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #         ('is_customer_portal', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Customer Portal Account')),
        #         ('jigsaw_company_id', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Jigsaw Company ID')),
        #         ('account_source', salesforce.fields.CharField(blank=True, choices=[('Client', 'Client'), ('Sales Generated', 'Sales Generated'), ('Partner', 'Partner'), ('Advertisement', 'Advertisement'), ('Internal Employee Referral', 'Internal Employee Referral'), ('Marketing Lists', 'Marketing Lists'), ('Public Relations', 'Public Relations'), ('Social Media', 'Social Media'), ('Toll Free', 'Toll Free'), ('Trade Show', 'Trade Show'), ('Website', 'Website'), ('Product', 'Product'), ('Association', 'Association'), ('Associations', 'Associations'), ('Bank', 'Bank'), ('Broker', 'Broker'), ('Chat', 'Chat'), ('Client Add On', 'Client Add On'), ('Clientele Conversion', 'Clientele Conversion'), ('Compliance', 'Compliance'), ('CPA', 'CPA'), ('Customer Referral', 'Customer Referral'), ('DSI', 'DSI'), ('EIN Change', 'EIN Change'), ('Existing Client', 'Existing Client'), ('External Referral', 'External Referral'), ('Franchisee', 'Franchisee'), ('Jigsaw', 'Jigsaw'), ('Networking', 'Networking'), ('Rest. List', 'Rest. List'), ('Sage', 'Sage'), ('Self Gen', 'Self Gen'), ('Self Generated', 'Self Generated'), ('Strategic Alliance', 'Strategic Alliance'), ('Tony Dillard', 'Tony Dillard'), ('Web Forms', 'Web Forms'), ('Webinar', 'Webinar'), ('PartnerFocus', 'PartnerFocus'), ('Acquisition - Planet Payroll', 'Acquisition - Planet Payroll'), ('Agency Workspace', 'Agency Workspace'), ('Acquisition - Rams', 'Acquisition - Rams')], default=salesforce.backend.operations.DefaultedOnCreate('Sales Generated'), max_length=40, null=True)),
        #         ('print_location', salesforce.fields.CharField(blank=True, choices=[('016 - West Palm Beach', '016 - West Palm Beach'), ('C99 - Tennessee', 'C99 - Tennessee'), ('001 - Miramar', '001 - Miramar'), ('002 - Tampa', '002 - Tampa'), ('003 - Phoenix', '003 - Phoenix'), ('004 - New York', '004 - New York'), ('005 - Atlanta', '005 - Atlanta'), ('006 - Long Island', '006 - Long Island'), ('007 - Selma', '007 - Selma'), ('008 - Maine', '008 - Maine'), ('010 - Tennessee', '010 - Tennessee'), ('011 - Chicago', '011 - Chicago'), ('012 - Orange County', '012 - Orange County'), ('013 - Boston', '013 - Boston'), ('014 - Walnut Creek', '014 - Walnut Creek'), ('097 - Seattle', '097 - Seattle'), ('095 - Tennessee', '095 - Tennessee'), ('P12 - Orange County', 'P12 - Orange County'), ('C02 - Tampa', 'C02 - Tampa'), ('C07 - Selma', 'C07 - Selma'), ('C34 - Seattle', 'C34 - Seattle'), ('C36 - Las Vegas', 'C36 - Las Vegas'), ('099 - Tennessee', '099 - Tennessee'), ('035 - New Jersey', '035 - New Jersey'), ('C03 - Phoenix', 'C03 - Phoenix')], db_column='Print_Location__c', help_text='For Operations users to indicate where the accountâ€™s checks and reports are printed and shipped.', max_length=255, null=True, verbose_name='Print Location')),
        #         ('telemarketing_lead', salesforce.fields.BooleanField(db_column='Telemarketing_Lead__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Telemarketing Lead')),
        #         ('cpay_business_size', salesforce.fields.CharField(blank=True, db_column='CPAY_Business_Size__c', max_length=1300, null=True, verbose_name='CPAY Business Size')),
        #         ('bmll_business_size', salesforce.fields.CharField(blank=True, db_column='BMLL_Business_Size__c', max_length=1300, null=True, verbose_name='BMLL Business Size')),
        #         ('frequency_of_payroll', salesforce.fields.CharField(blank=True, choices=[('Weekly (52)', 'Weekly (52)'), ('Biweekly (26)', 'Biweekly (26)'), ('Semimonthly (24)', 'Semimonthly (24)'), ('Monthly (12)', 'Monthly (12)'), ('Quarterly (4)', 'Quarterly (4)')], db_column='Frequency_of_Payroll__c', max_length=255, null=True, verbose_name='Frequency of Payroll')),
        #         ('partner_type', salesforce.fields.CharField(blank=True, choices=[('Accountant', 'Accountant'), ('Association', 'Association'), ('Bank', 'Bank'), ('BMall GA Agency', 'BMall GA Agency'), ('Broker', 'Broker'), ('Brokerage Agency', 'Brokerage Agency'), ('Strategic', 'Strategic'), ('Other', 'Other')], db_column='Partner_Type__c', max_length=255, null=True, verbose_name='Partner Type')),
        #         ('ein', salesforce.fields.CharField(blank=True, db_column='EIN__c', max_length=10, null=True, verbose_name='EIN')),
        #         ('source_system', salesforce.fields.CharField(blank=True, choices=[('PayFocus', 'PayFocus'), ('PayFocus Full Service', 'PayFocus Full Service'), ('PayFocus Pro', 'PayFocus Pro'), ('PayFocus2 Full Service', 'PayFocus2 Full Service'), ('Construction Payroll', 'Construction Payroll'), ('M3', 'M3'), ('PayEntry (Mpay)', 'PayEntry (Mpay)'), ('Payload', 'Payload'), ('PayRight', 'PayRight'), ('PowerPay', 'PowerPay'), ('XpressPay', 'XpressPay'), ('BenefitPoint', 'BenefitPoint'), ('AMS', 'AMS'), ('CXC', 'CXC')], db_column='Source_System__c', max_length=255, null=True, verbose_name='Source System')),
        #         ('service_location', salesforce.fields.CharField(blank=True, choices=[('001 - Miramar', '001 - Miramar'), ('002 - Tampa', '002 - Tampa'), ('003 - Phoenix', '003 - Phoenix'), ('004 - New York', '004 - New York'), ('005 - Atlanta', '005 - Atlanta'), ('006 - PayFocus General Support', '006 - PayFocus General Support'), ('007 - Selma', '007 - Selma'), ('008 - Maine', '008 - Maine'), ('010 - Tennessee', '010 - Tennessee'), ('011 - Chicago', '011 - Chicago'), ('012 - Orange County', '012 - Orange County'), ('013 - Boston', '013 - Boston'), ('014 - Walnut Creek', '014 - Walnut Creek'), ('015 - PayFocus Partner Support', '015 - PayFocus Partner Support'), ('016 - West Palm Beach', '016 - West Palm Beach'), ('035 - New Jersey', '035 - New Jersey'), ('095 - Tennessee', '095 - Tennessee'), ('097 - Seattle', '097 - Seattle'), ('099 - Tennessee', '099 - Tennessee'), ('C02 - Tampa', 'C02 - Tampa'), ('C07 - Selma', 'C07 - Selma'), ('C34 - Seattle', 'C34 - Seattle'), ('C36 - Las Vegas', 'C36 - Las Vegas'), ('C99 - Tennessee', 'C99 - Tennessee'), ('P12 - Orange County', 'P12 - Orange County'), ('C15 - Dallas', 'C15 - Dallas'), ('C03 - Phoenix', 'C03 - Phoenix')], db_column='Service_Location__c', help_text='Operations users will populate this field with the location of the Service Rep who works the account.', max_length=255, null=True, verbose_name='Service Location')),
        #         ('client_code', salesforce.fields.CharField(blank=True, db_column='Client_Code__c', max_length=20, null=True, verbose_name='Client Code')),
        #         ('platform_integration_id', salesforce.fields.CharField(blank=True, db_column='PlatformIntegrationID__c', help_text='The unique ID of the account from the source system', max_length=20, null=True, unique=True, verbose_name='PlatformIntegrationID')),
        #         ('preferred_marketing_method', salesforce.fields.CharField(blank=True, choices=[('Newsletter Articles', 'Newsletter Articles'), ('Statement Stuffers', 'Statement Stuffers'), ('Small Business Month', 'Small Business Month'), ('Promotions', 'Promotions')], db_column='Preferred_Marketing_Method__c', max_length=255, null=True, verbose_name='Preferred Marketing Method')),
        #         ('attrition_reason', salesforce.fields.CharField(blank=True, choices=[('Acquisition Conversion Issue', 'Acquisition Conversion Issue'), ('Annual Price Increase', 'Annual Price Increase'), ('Bank/CPA Relationship', 'Bank/CPA Relationship'), ('Bankruptcy', 'Bankruptcy'), ('Branch Service Issues', 'Branch Service Issues'), ('Copy Over - Changing Platforms', 'Copy Over - Changing Platforms'), ('Copy Over - Same Platform', 'Copy Over - Same Platform'), ('Distribution Issues', 'Distribution Issues'), ('Employee Leasing', 'Employee Leasing'), ('In House', 'In House'), ('Local Processing', 'Local Processing'), ("Moved EE's to a current account", "Moved EE's to a current account"), ('Never Processed One Payroll', 'Never Processed One Payroll'), ('No Employees', 'No Employees'), ('NSF/Past Due', 'NSF/Past Due'), ('Oversold by Sales', 'Oversold by Sales'), ('Permanently Closed Business', 'Permanently Closed Business'), ('Pricing', 'Pricing'), ('Products/Features', 'Products/Features'), ('Sold Business - not replaced', 'Sold Business - not replaced'), ('Tax Issues', 'Tax Issues'), ('Treasury Issues', 'Treasury Issues'), ('Workers Comp Issues', 'Workers Comp Issues'), ('Other', 'Other'), ('Service - Canâ€™t Contact', 'Service - Canâ€™t Contact')], db_column='Attrition_Reason__c', max_length=255, null=True, verbose_name='Attrition Reason')),
        #         ('attrition_other_reason', salesforce.fields.TextField(blank=True, db_column='Attrition_Other_Reason__c', null=True, verbose_name='Attrition Other Reason')),
        #         ('new_provider', salesforce.fields.CharField(blank=True, choices=[('ADP', 'ADP'), ('Banking Service [Require field to specify]', 'Banking Service [Require field to specify]'), ('Ceridian', 'Ceridian'), ('CPA', 'CPA'), ('In House', 'In House'), ('Internal Transfer', 'Internal Transfer'), ('Intuit (QuickBooks)', 'Intuit (QuickBooks)'), ('Ovation Payroll', 'Ovation Payroll'), ('Paychex', 'Paychex'), ('PayChoice', 'PayChoice'), ('Paycor', 'Paycor'), ('Paylocity', 'Paylocity'), ('PrimePay', 'PrimePay'), ('SurePayroll', 'SurePayroll'), ('Unknown', 'Unknown'), ('Other', 'Other')], db_column='New_Provider__c', max_length=255, null=True, verbose_name='New Provider')),
        #         ('other_new_provider', salesforce.fields.CharField(blank=True, db_column='Other_New_Provider__c', max_length=20, null=True, verbose_name='Other New Provider')),
        #         ('new_method', salesforce.fields.CharField(blank=True, choices=[('Phone', 'Phone'), ('Mobile', 'Mobile'), ('Fax', 'Fax'), ('Desktop Software', 'Desktop Software'), ('Web', 'Web'), ('Other', 'Other')], db_column='New_Method__c', max_length=255, null=True, verbose_name='New Method')),
        #         ('other_new_method', salesforce.fields.CharField(blank=True, db_column='Other_New_Method__c', max_length=20, null=True, verbose_name='Other New Method')),
        #         ('high_visibility', salesforce.fields.BooleanField(db_column='High_Visibility__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='High Visibility')),
        #         ('last_process_date', salesforce.fields.DateTimeField(blank=True, db_column='Last_Process_Date__c', null=True, verbose_name='Last Process Date')),
        #         ('source_service_rep', salesforce.fields.CharField(blank=True, db_column='Source_Service_Rep__c', max_length=100, null=True, verbose_name='Source Service Rep')),
        #         ('next_check_date', salesforce.fields.DateField(blank=True, db_column='Next_Check_Date__c', null=True, verbose_name='Next Check Date')),
        #         ('next_schedule_date', salesforce.fields.DateTimeField(blank=True, db_column='Next_Schedule_Date__c', null=True, verbose_name='Next Schedule Date')),
        #         ('tax_type', salesforce.fields.CharField(blank=True, choices=[('941 Only', '941 Only'), ('944 Only', '944 Only'), ('943 Only', '943 Only'), ('941/943', '941/943'), ('944', '944'), ('943', '943'), ('Household', 'Household')], db_column='Tax_Type__c', max_length=255, null=True, verbose_name='Tax Type')),
        #         ('processing_type', salesforce.fields.CharField(blank=True, choices=[('Auto', 'Auto'), ('Call-In', 'Call-In'), ('Call-Out', 'Call-Out'), ('Email', 'Email'), ('Fax-In', 'Fax-In'), ('Hosted', 'Hosted'), ('Online', 'Online'), ('Remote (PC)', 'Remote (PC)')], db_column='Processing_Type__c', max_length=255, null=True, verbose_name='Processing Type')),
        #         ('processing_deadline', salesforce.fields.DateField(blank=True, db_column='Processing_Deadline__c', null=True, verbose_name='Processing Deadline')),
        #         ('branch', salesforce.fields.CharField(blank=True, max_length=50, null=True)),
        #         ('consolidate', salesforce.fields.CharField(blank=True, choices=[('None', 'None'), ('Child', 'Child'), ('Master', 'Master')], max_length=255, null=True)),
        #         ('processing_discount', salesforce.fields.DecimalField(blank=True, db_column='Processing_Discount__c', decimal_places=2, max_digits=5, null=True, verbose_name='Processing Discount')),
        #         ('telemarketer', salesforce.fields.CharField(blank=True, max_length=100, null=True)),
        #         ('termination_date', salesforce.fields.DateField(blank=True, db_column='Termination_Date__c', null=True, verbose_name='Termination Date')),
        #         ('location', salesforce.fields.CharField(blank=True, choices=[('001 - Miramar', '001 - Miramar'), ('016 - West Palm Beach', '016 - West Palm Beach'), ('C99 - Tennessee', 'C99 - Tennessee'), ('002 - Tampa', '002 - Tampa'), ('003 - Phoenix', '003 - Phoenix'), ('004 - New York', '004 - New York'), ('005 - Atlanta', '005 - Atlanta'), ('006 - Long Island', '006 - Long Island'), ('007 - Selma', '007 - Selma'), ('008 - Maine', '008 - Maine'), ('010 - Tennessee', '010 - Tennessee'), ('012 - Orange County', '012 - Orange County'), ('013 - Boston', '013 - Boston'), ('014 - Walnut Creek', '014 - Walnut Creek'), ('035 - New Jersey', '035 - New Jersey'), ('095 - Tennessee', '095 - Tennessee'), ('097 - Seattle', '097 - Seattle'), ('099 - Tennessee', '099 - Tennessee'), ('C02 - Tampa', 'C02 - Tampa'), ('C07 - Selma', 'C07 - Selma'), ('C34 - Seattle', 'C34 - Seattle'), ('C36 - Las Vegas', 'C36 - Las Vegas'), ('P12 - Orange County', 'P12 - Orange County'), ('011 - Chicago', '011 - Chicago'), ('C15 - PayFocus Pro Dallas', 'C15 - PayFocus Pro Dallas'), ('015 - Dallas PAM', '015 - Dallas PAM'), ('C03 - Phoenix', 'C03 - Phoenix')], help_text='For Operations users to indicate the cost center to which these accounts are coded.', max_length=255, null=True, verbose_name='Data Location')),
        #         ('direct_deposit_ach_term', salesforce.fields.CharField(blank=True, choices=[('ACH24', 'ACH24'), ('ACH48', 'ACH48'), ('ACH72', 'ACH72'), ('ACH96', 'ACH96'), ('ACH120', 'ACH120'), ('WIRE', 'WIRE'), ('REV WIRE', 'REV WIRE'), ('ACH Credit', 'ACH Credit'), ('N/A', 'N/A')], db_column='Direct_Deposit_ACH_Term__c', help_text='N/A = Not on Service', max_length=255, null=True, verbose_name='Direct Deposit ACH Term')),
        #         ('legacy_id', salesforce.fields.CharField(blank=True, db_column='Legacy_ID__c', max_length=24, null=True, verbose_name='Legacy ID')),
        #         ('year_end_hold', salesforce.fields.BooleanField(db_column='Year_End_Hold__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Year End Hold')),
        #         ('quarter_end_hold', salesforce.fields.BooleanField(db_column='Quarter_End_Hold__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Quarter End Hold')),
        #         ('business_type', salesforce.fields.CharField(blank=True, choices=[('S-Corp', 'S-Corp'), ('C-Corp', 'C-Corp'), ('Partnership', 'Partnership'), ('LLC', 'LLC'), ('Sole Proprietor', 'Sole Proprietor'), ('Corporation', 'Corporation'), ('Non-profit Organization', 'Non-profit Organization')], db_column='Business_Type__c', max_length=255, null=True, verbose_name='Business Type')),
        #         ('first_payroll_of_transactions', salesforce.fields.DecimalField(blank=True, db_column='First_Payroll_of_Transactions__c', decimal_places=0, max_digits=16, null=True, verbose_name='First Payroll # of Transactions')),
        #         ('previous_provider', salesforce.fields.CharField(blank=True, choices=[('ADP', 'ADP'), ('Bamboo HR', 'Bamboo HR'), ('Banking Service', 'Banking Service'), ('Ceridian', 'Ceridian'), ('CPA', 'CPA'), ('In House', 'In House'), ('Internal Transfer', 'Internal Transfer'), ('Intuit (QuickBooks)', 'Intuit (QuickBooks)'), ('Other', 'Other'), ('Ovation Payroll', 'Ovation Payroll'), ('Patriot Software', 'Patriot Software'), ('Paychex', 'Paychex'), ('Pay Choice', 'Pay Choice'), ('Paycor', 'Paycor'), ('Paylocity', 'Paylocity'), ('PrimePay', 'PrimePay'), ('SurePayroll', 'SurePayroll'), ('Unknown', 'Unknown')], db_column='Previous_Provider__c', max_length=255, null=True, verbose_name='Previous Provider')),
        #         ('record_type_name', salesforce.fields.CharField(blank=True, db_column='Record_Type_Name__c', max_length=1300, null=True, verbose_name='Record Type Name')),
        #         ('lead_referral_id', salesforce.fields.CharField(blank=True, db_column='Lead_Referral_ID__c', max_length=20, null=True, verbose_name='Lead Referral ID')),
        #         ('state_sui_filing', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='State_SUI_Filing__c', max_length=4099, null=True, verbose_name='State SUI Filing')),
        #         ('date_of_first_payroll', salesforce.fields.DateField(blank=True, db_column='Date_of_First_Payroll__c', null=True, verbose_name='Date of First Payroll')),
        #         ('dba', salesforce.fields.CharField(blank=True, db_column='DBA__c', max_length=100, null=True, verbose_name='DBA')),
        #         ('partner_code', salesforce.fields.CharField(blank=True, db_column='Partner_Code__c', max_length=20, null=True, verbose_name='Partner Code')),
        #         ('advisory_notice', salesforce.fields.TextField(blank=True, db_column='Advisory_Notice__c', null=True, verbose_name='Advisory Notice')),
        #         ('state_swt_filing', salesforce.fields.CharField(blank=True, choices=[('Values', 'Values'), ('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='State_SWT_Filing__c', max_length=4099, null=True, verbose_name='State SWT Filing')),
        #         ('state_sdi_filing', salesforce.fields.CharField(blank=True, choices=[('Values', 'Values'), ('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='State_SDI_Filing__c', max_length=4099, null=True, verbose_name='State SDI Filing')),
        #         ('payroll_url', salesforce.fields.URLField(blank=True, db_column='Payroll_URL__c', null=True, verbose_name='Payroll URL')),
        #         ('officer', salesforce.fields.CharField(blank=True, max_length=25, null=True)),
        #         ('broker_payroll_referral_program', salesforce.fields.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], db_column='Broker_Payroll_Referral_Program__c', max_length=255, null=True, verbose_name='Broker Payroll Referral Program')),
        #         ('file_thru_date', salesforce.fields.CharField(blank=True, db_column='File_Thru_Date__c', max_length=6, null=True, verbose_name='File Thru Date')),
        #         ('region', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('premium', salesforce.fields.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
        #         ('annualized_payroll_revenue', salesforce.fields.DecimalField(blank=True, db_column='Annualized_Payroll_Revenue__c', decimal_places=2, help_text='The revolving sum of the last 12 months of invoices combined.', max_digits=18, null=True, verbose_name='Annualized Payroll Revenue')),
        #         ('maximum_discount_allowable', salesforce.fields.DecimalField(blank=True, db_column='Maximum_Discount_Allowable__c', decimal_places=2, help_text='The maximum discount that Sales is allowed to grant', max_digits=5, null=True, verbose_name='Maximum Discount Allowable')),
        #         ('contracted_pricing_schedule', salesforce.fields.CharField(blank=True, db_column='Contracted_Pricing_Schedule__c', max_length=40, null=True, verbose_name='Contracted Pricing Schedule')),
        #         ('xp_pp_corp_id_range', salesforce.fields.CharField(blank=True, db_column='XP_PP_Corp_ID_Range__c', max_length=40, null=True, verbose_name='XP/PP Corp ID Range')),
        #         ('xp_pp_partner_code', salesforce.fields.CharField(blank=True, db_column='XP_PP_Partner_Code__c', max_length=40, null=True, verbose_name='XP/PP Partner Code')),
        #         ('pam_cpo_partner_code', salesforce.fields.CharField(blank=True, db_column='PAM_CPO_Partner_Code__c', max_length=40, null=True, verbose_name='PAM/CPO Partner Code')),
        #         ('back_office_partner_code', salesforce.fields.CharField(blank=True, db_column='Back_Office_Partner_Code__c', max_length=40, null=True, verbose_name='Back Office Partner Code')),
        #         ('partner_category', salesforce.fields.CharField(blank=True, choices=[('Accountant', 'Accountant'), ('Acumatica VAR', 'Acumatica VAR'), ('Bank-Branch', 'Bank-Branch'), ('Bank-Main', 'Bank-Main'), ('BenefitMall broker', 'BenefitMall broker'), ('Benefitmall - Top Tier', 'Benefitmall - Top Tier'), ('Benefitmall - All Other', 'Benefitmall - All Other'), ('Benefitmall - Market Broker Prospect', 'Benefitmall - Market Broker Prospect'), ('Non-Benefitmall Broker', 'Non-Benefitmall Broker'), ('Business partner (other)', 'Business partner (other)'), ('Complimentary Payroll', 'Complimentary Payroll'), ('Financial institution', 'Financial institution'), ('Main', 'Main'), ('Sage', 'Sage'), ('Smart Tax Franchise', 'Smart Tax Franchise'), ('Warren/Averett', 'Warren/Averett')], db_column='Partner_Category__c', max_length=255, null=True, verbose_name='Partner Category')),
        #         ('partner_subcategory', salesforce.fields.CharField(blank=True, choices=[('Acquisition', 'Acquisition'), ('Back-office', 'Back-office'), ('Referral', 'Referral'), ('Sage BusinessWorks', 'Sage BusinessWorks'), ('Sage DacEasy', 'Sage DacEasy'), ('Sage HRMS', 'Sage HRMS'), ('Sage 50', 'Sage 50'), ('Sage 100 Contractor', 'Sage 100 Contractor'), ('Sage 100 ERP', 'Sage 100 ERP'), ('Sage 100 Fund Accounting', 'Sage 100 Fund Accounting'), ('Sage 300 Construction and Real Estate', 'Sage 300 Construction and Real Estate'), ('Sage 300 ERP', 'Sage 300 ERP'), ('Sage 500 ERP', 'Sage 500 ERP'), ('KeyBank Referral', 'KeyBank Referral'), ('KeyBank Back Office', 'KeyBank Back Office'), ('Wholesale Program', 'Wholesale Program')], db_column='Partner_Subcategory__c', max_length=4099, null=True, verbose_name='Partner Subcategory')),
        #         ('billing', salesforce.fields.CharField(blank=True, choices=[('Bill Client', 'Bill Client'), ('Bill Accountant', 'Bill Accountant')], max_length=255, null=True)),
        #         ('coverage', salesforce.fields.CharField(blank=True, choices=[('Field Sales', 'Field Sales'), ('Inside Sales', 'Inside Sales'), ('Mid Market', 'Mid Market'), ('Corporate/National Sales', 'Corporate/National Sales')], max_length=255, null=True)),
        #         ('contract_entrance_date', salesforce.fields.DateField(blank=True, db_column='Contract_Entrance_Date__c', null=True, verbose_name='Contract Entrance Date')),
        #         ('payment_schedule', salesforce.fields.CharField(blank=True, choices=[('Monthly', 'Monthly'), ('Quarterly', 'Quarterly')], db_column='Payment_Schedule__c', max_length=255, null=True, verbose_name='Payment Schedule')),
        #         ('promotions', salesforce.fields.CharField(blank=True, choices=[('1 month free', '1 month free'), ('2 months free', '2 months free'), ('Free W-2s', 'Free W-2s')], max_length=255, null=True)),
        #         ('office', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('last_check_date', salesforce.fields.DateField(blank=True, db_column='Last_Check_Date__c', null=True, verbose_name='Last Check Date')),
        #         ('schedule_day', salesforce.fields.CharField(blank=True, choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], db_column='Schedule_Day__c', max_length=255, null=True, verbose_name='Schedule Day')),
        #         ('do_not_sell', salesforce.fields.CharField(blank=True, choices=[('401k', '401k'), ('Accting SW', 'Accting SW'), ('All', 'All'), ('Casualty', 'Casualty'), ('Data Risk Management', 'Data Risk Management'), ('Emp Background Scrn', 'Emp Background Scrn'), ('FSA', 'FSA'), ('Gen Liability', 'Gen Liability'), ('Health to BMLL Broker', 'Health to BMLL Broker'), ('HR360', 'HR360'), ('HRA', 'HRA'), ('HRIS', 'HRIS'), ('HR Mgr Helpline', 'HR Mgr Helpline'), ('HSA', 'HSA'), ('L&D', 'L&D'), ('Mgr Self-Svc', 'Mgr Self-Svc'), ('NY SDI Prem Calc', 'NY SDI Prem Calc'), ('OnePay Svc', 'OnePay Svc'), ('PayComp', 'PayComp'), ('Payroll', 'Payroll'), ('P-Cards', 'P-Cards'), ('POP', 'POP'), ('PowerCobra', 'PowerCobra'), ('Prof Liability', 'Prof Liability'), ('Sec 132', 'Sec 132'), ('Tax Credit Rec', 'Tax Credit Rec'), ('Time & Att', 'Time & Att'), ('Unemployment', 'Unemployment'), ('Voluntary Benes', 'Voluntary Benes'), ('WC BMLL (P&C)', 'WC BMLL (P&C)'), ('WC Direct Bill', 'WC Direct Bill'), ('WC Other', 'WC Other'), ('WC PayComp', 'WC PayComp'), ('WC Wholesale', 'WC Wholesale'), ('Welfare', 'Welfare')], db_column='Do_Not_Sell__c', max_length=4099, null=True, verbose_name='Do Not Sell')),
        #         ('broker_id', salesforce.fields.CharField(blank=True, db_column='Broker_ID__c', max_length=15, null=True, verbose_name='Broker ID')),
        #         ('high_vis_yes_no', salesforce.fields.CharField(blank=True, db_column='HighVis_YesNo__c', max_length=1300, null=True, verbose_name='HighVis YesNo')),
        #         ('lead_referral_date', salesforce.fields.DateField(blank=True, db_column='Lead_Referral_Date__c', null=True, verbose_name='Lead Referral Date')),
        #         ('dns_formula', salesforce.fields.CharField(blank=True, db_column='DNS_Formula__c', max_length=1300, null=True, verbose_name='Do Not Sell List')),
        #         ('dns_trigger', salesforce.fields.TextField(blank=True, db_column='DNS_Trigger__c', null=True, verbose_name='DNS_Trigger')),
        #         ('primary_partner_type', salesforce.fields.CharField(blank=True, choices=[('Agent', 'Agent'), ('CPA', 'CPA')], db_column='Primary_Partner_Type__c', max_length=255, null=True, verbose_name='Primary Partner Type')),
        #         ('secondary_partner_type', salesforce.fields.CharField(blank=True, choices=[('Agent', 'Agent'), ('CPA', 'CPA')], db_column='Secondary_Partner_Type__c', max_length=255, null=True, verbose_name='Secondary Partner Type')),
        #         ('update_flag', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='UpdateFlag')),
        #         ('loss_notes', salesforce.fields.TextField(blank=True, db_column='Loss_Notes__c', help_text='Any details surrounding customer leaving payroll services', null=True, verbose_name='Loss Notes')),
        #         ('zchange_origin', salesforce.fields.CharField(blank=True, db_column='ZChangeOrigin__c', max_length=16, null=True, verbose_name='ZChangeOrigin')),
        #         ('number_of_full_time_equivalents', salesforce.fields.DecimalField(blank=True, db_column='Number_Of_Full_Time_Equivalents__c', decimal_places=0, max_digits=18, null=True, verbose_name='Number Of Full Time Equivalents')),
        #         ('number_of_full_time_equivalents_as_of_date', salesforce.fields.DateField(blank=True, db_column='Number_Of_Full_Time_Equivalents_AsOfDate__c', null=True, verbose_name='Number Of Full Time Equivalents AsOfDate')),
        #         ('first_name', salesforce.fields.CharField(blank=True, db_column='First_Name__c', max_length=40, null=True, verbose_name='First Name')),
        #         ('middle_name', salesforce.fields.CharField(blank=True, db_column='Middle_Name__c', max_length=40, null=True, verbose_name='Middle Name')),
        #         ('last_name', salesforce.fields.CharField(blank=True, db_column='Last_Name__c', max_length=50, null=True, verbose_name='Last Name')),
        #         ('broker_referral_program', salesforce.fields.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], db_column='Broker_Referral_Program__c', max_length=255, null=True, verbose_name='Broker Referral Program')),
        #         ('entitlement_program', salesforce.fields.CharField(blank=True, choices=[('Broker Referral', 'Broker Referral'), ('Payroll Subjective', 'Payroll Subjective')], db_column='Entitlement_Program__c', max_length=255, null=True, verbose_name='Entitlement Program')),
        #         ('entitlement', salesforce.fields.CharField(blank=True, max_length=1300, null=True)),
        #         ('primary_partner_type_f', salesforce.fields.CharField(blank=True, db_column='Primary_Partner_Type_f__c', max_length=1300, null=True, verbose_name='Primary Partner Type')),
        #         ('secondary_partner_type_f', salesforce.fields.CharField(blank=True, db_column='Secondary_Partner_Type_f__c', max_length=1300, null=True, verbose_name='Secondary Partner Type')),
        #         ('reverse_integration_error', salesforce.fields.TextField(blank=True, db_column='Reverse_Integration_Error__c', null=True, verbose_name='Reverse Integration Error')),
        #         ('pay_focus_hr_features', salesforce.fields.CharField(blank=True, choices=[('Position Profiles', 'Position Profiles'), ('Document Management', 'Document Management'), ('Org Chart', 'Org Chart'), ('Compliance Reporting', 'Compliance Reporting'), ('PTO Request', 'PTO Request'), ('Performance Management', 'Performance Management'), ('Custom Fields', 'Custom Fields'), ('Manager Self Service', 'Manager Self Service'), ('Company Calendar', 'Company Calendar')], db_column='PayFocus_HR_features__c', max_length=4099, null=True, verbose_name='PayFocus HR features')),
        #         ('original_date_of_first_payroll', salesforce.fields.DateField(blank=True, db_column='Original_Date_of_First_Payroll__c', null=True, verbose_name='Original Date of First Payroll')),
        #         ('people_focus_effective_date', salesforce.fields.DateField(blank=True, db_column='PeopleFocus_Effective_Date__c', null=True, verbose_name='PeopleFocus Effective Date')),
        #         ('people_focus_term_date', salesforce.fields.DateField(blank=True, db_column='PeopleFocus_Term_Date__c', null=True, verbose_name='PeopleFocus Term Date')),
        #         ('people_focus', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='PeopleFocus')),
        #         ('contracted_products', salesforce.fields.CharField(blank=True, choices=[('401k', '401k'), ('allCompliance', 'allCompliance'), ('HRFocus', 'HRFocus'), ('Time/Attendance', 'Time/Attendance'), ("Worker's Compensation", "Worker's Compensation"), ('Payroll', 'Payroll')], db_column='Contracted_Products__c', max_length=4099, null=True, verbose_name='Contracted Products')),
        #         ('retail_broker', salesforce.fields.CharField(blank=True, choices=[('AG', 'AG'), ('Forest', 'Forest')], db_column='Retail_Broker__c', max_length=255, null=True, verbose_name='Retail Broker')),
        #         ('payroll_platform', salesforce.fields.CharField(blank=True, db_column='Payroll_Platform__c', max_length=1300, null=True, verbose_name='Payroll Platform')),
        #         ('cs_team', salesforce.fields.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('4', '4'), ('7', '7'), ('8', '8'), ('C', 'C'), ('D', 'D'), ('H', 'H'), ('K', 'K'), ('M', 'M'), ('P', 'P'), ('R', 'R')], db_column='CS_Team__c', max_length=255, null=True, verbose_name='CS Team')),
        #         ('ffm', salesforce.fields.CharField(blank=True, db_column='FFM__c', help_text='Federally Facilitated Marketplace', max_length=100, null=True, verbose_name='FFM#')),
        #         ('npn', salesforce.fields.CharField(blank=True, db_column='NPN__c', help_text='National Producer Number', max_length=100, null=True, verbose_name='NPN#')),
        #         ('corporate_city', salesforce.fields.CharField(blank=True, db_column='Corporate_City__c', max_length=60, null=True, verbose_name='Corporate City')),
        #         ('corporate_name', salesforce.fields.TextField(blank=True, db_column='Corporate_Name__c', null=True, verbose_name='Corporate Name')),
        #         ('corporate_state_province', salesforce.fields.CharField(blank=True, db_column='Corporate_State_Province__c', max_length=60, null=True, verbose_name='Corporate State/Province')),
        #         ('corporate_street', salesforce.fields.CharField(blank=True, db_column='Corporate_Street__c', max_length=255, null=True, verbose_name='Corporate Street')),
        #         ('corporate_zip_postal_code', salesforce.fields.CharField(blank=True, db_column='Corporate_Zip_Postal_Code__c', max_length=15, null=True, verbose_name='Corporate Zip/Postal Code')),
        #         ('first_meeting_completed', salesforce.fields.DateField(blank=True, db_column='First_Meeting_Completed__c', null=True, verbose_name='First Meeting Completed')),
        #         ('products_offered_lost', salesforce.fields.CharField(blank=True, db_column='Products_Offered_Lost__c', max_length=4099, null=True, verbose_name='Products- Offered Lost')),
        #         ('products_offered_open', salesforce.fields.CharField(blank=True, db_column='Products_Offered_Open__c', max_length=4099, null=True, verbose_name='Products- Offered Open')),
        #         ('services_active', salesforce.fields.CharField(blank=True, choices=[('401k-Admin Only', '401k-Admin Only'), ('401k-Power401k', '401k-Power401k'), ('Abra Suite', 'Abra Suite'), ('Abra Sync', 'Abra Sync'), ('ACA Compliance', 'ACA Compliance'), ('allCompliance PEPM Charge', 'allCompliance PEPM Charge'), ('Compliance Posters (Biweekly)', 'Compliance Posters (Biweekly)'), ('Compliance Posters (Semimonthly)', 'Compliance Posters (Semimonthly)'), ('Compliance Posters (Weekly)', 'Compliance Posters (Weekly)'), ('Compupay 125', 'Compupay 125'), ('Deferred Comp', 'Deferred Comp'), ('Direct Deposit', 'Direct Deposit'), ('ESS', 'ESS'), ('FSA', 'FSA'), ('General Ledger', 'General Ledger'), ('GL Interface-Add-on to Basic', 'GL Interface-Add-on to Basic'), ('HR Manager Helpline', 'HR Manager Helpline'), ('HR360', 'HR360'), ('HRFocus 500 Installation Fee', 'HRFocus 500 Installation Fee'), ('HRFocus Hardware', 'HRFocus Hardware'), ('HRIntegrations', 'HRIntegrations'), ('HRIS-HR Online - 3rd party', 'HRIS-HR Online - 3rd party'), ('HRIS-Sage HRMS', 'HRIS-Sage HRMS'), ('HRO to CPO', 'HRO to CPO'), ('HROnline', 'HROnline'), ('Manager Helpline', 'Manager Helpline'), ('Manager Helpline (Biweekly)', 'Manager Helpline (Biweekly)'), ('Manager Helpline (Monthly)', 'Manager Helpline (Monthly)'), ('Manager Helpline (Semimonthly)', 'Manager Helpline (Semimonthly)'), ('Manager Self Service', 'Manager Self Service'), ('NY SDI Admin', 'NY SDI Admin'), ('One Pay', 'One Pay'), ('OnePay Check Service-Base Setup', 'OnePay Check Service-Base Setup'), ('PayAgent', 'PayAgent'), ('Payroll Base Fee', 'Payroll Base Fee'), ('Payroll Cards (P-Cards)-PayOptions Card', 'Payroll Cards (P-Cards)-PayOptions Card'), ('Poster E-Update Service', 'Poster E-Update Service'), ('Restaurant Svc Pack + Avero (Monthly)', 'Restaurant Svc Pack + Avero (Monthly)'), ('Restaurant Svc Pack + Avero (Weekly)', 'Restaurant Svc Pack + Avero (Weekly)'), ('SAGE ESS', 'SAGE ESS'), ('Section 125', 'Section 125'), ('Section 132', 'Section 132'), ('Tax Filing', 'Tax Filing'), ('Time & Attendance-CompuPay Time', 'Time & Attendance-CompuPay Time'), ('TimeFocus', 'TimeFocus'), ('TippedReporting', 'TippedReporting'), ('Worker Comp', 'Worker Comp'), ('Workers Compensation Report', 'Workers Compensation Report')], db_column='Services_Active__c', max_length=4099, null=True, verbose_name='Services - Active')),
        #         ('services_inactive', salesforce.fields.CharField(blank=True, choices=[('401k-Admin Only', '401k-Admin Only'), ('401k-Power401k', '401k-Power401k'), ('Abra Suite', 'Abra Suite'), ('Abra Sync', 'Abra Sync'), ('ACA Compliance', 'ACA Compliance'), ('allCompliance PEPM Charge', 'allCompliance PEPM Charge'), ('Compliance Posters (Biweekly)', 'Compliance Posters (Biweekly)'), ('Compliance Posters (Semimonthly)', 'Compliance Posters (Semimonthly)'), ('Compliance Posters (Weekly)', 'Compliance Posters (Weekly)'), ('Compupay 125', 'Compupay 125'), ('Deferred Comp', 'Deferred Comp'), ('Direct Deposit', 'Direct Deposit'), ('ESS', 'ESS'), ('FSA', 'FSA'), ('General Ledger', 'General Ledger'), ('GL Interface-Add-on to Basic', 'GL Interface-Add-on to Basic'), ('HR Manager Helpline', 'HR Manager Helpline'), ('HR360', 'HR360'), ('HRFocus 500 Installation Fee', 'HRFocus 500 Installation Fee'), ('HRFocus Hardware', 'HRFocus Hardware'), ('HRIntegrations', 'HRIntegrations'), ('HRIS-HR Online - 3rd party', 'HRIS-HR Online - 3rd party'), ('HRIS-Sage HRMS', 'HRIS-Sage HRMS'), ('HRO to CPO', 'HRO to CPO'), ('HROnline', 'HROnline'), ('Manager Helpline', 'Manager Helpline'), ('Manager Helpline (Biweekly)', 'Manager Helpline (Biweekly)'), ('Manager Helpline (Monthly)', 'Manager Helpline (Monthly)'), ('Manager Helpline (Semimonthly)', 'Manager Helpline (Semimonthly)'), ('Manager Self Service', 'Manager Self Service'), ('NY SDI Admin', 'NY SDI Admin'), ('One Pay', 'One Pay'), ('OnePay Check Service-Base Setup', 'OnePay Check Service-Base Setup'), ('PayAgent', 'PayAgent'), ('Payroll Base Fee', 'Payroll Base Fee'), ('Payroll Cards (P-Cards)-PayOptions Card', 'Payroll Cards (P-Cards)-PayOptions Card'), ('Poster E-Update Service', 'Poster E-Update Service'), ('Restaurant Svc Pack + Avero (Monthly)', 'Restaurant Svc Pack + Avero (Monthly)'), ('Restaurant Svc Pack + Avero (Weekly)', 'Restaurant Svc Pack + Avero (Weekly)'), ('SAGE ESS', 'SAGE ESS'), ('Section 125', 'Section 125'), ('Section 132', 'Section 132'), ('Tax Filing', 'Tax Filing'), ('Time & Attendance-CompuPay Time', 'Time & Attendance-CompuPay Time'), ('TimeFocus', 'TimeFocus'), ('TippedReporting', 'TippedReporting'), ('Worker Comp', 'Worker Comp'), ('Workers Compensation Report', 'Workers Compensation Report')], db_column='Services_Inactive__c', max_length=4099, null=True, verbose_name='Services - Inactive')),
        #         ('vanilla_soft_lead', salesforce.fields.BooleanField(db_column='VanillaSoft_Lead__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='LMT Processed')),
        #         ('cannabis_business', salesforce.fields.BooleanField(db_column='Cannabis_Business__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='MRB')),
        #         ('ps_scheduled_delivery_date_time_0', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_0__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 0')),
        #         ('ps_scheduled_delivery_date_time_1', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_1__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 1')),
        #         ('ps_scheduled_delivery_date_time_2', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_2__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 2')),
        #         ('ps_scheduled_delivery_date_time_3', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_3__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 3')),
        #         ('ps_scheduled_delivery_date_time_4', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_4__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 4')),
        #         ('ps_scheduled_delivery_date_time_5', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_5__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 5')),
        #         ('ps_scheduled_delivery_date_time_6', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_6__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 6')),
        #         ('ps_scheduled_delivery_date_time_7', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_7__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 7')),
        #         ('ps_scheduled_delivery_date_time_8', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_8__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 8')),
        #         ('ps_scheduled_delivery_date_time_9', salesforce.fields.DateTimeField(blank=True, db_column='PS_Scheduled_Delivery_Date_Time_9__c', null=True, verbose_name='PS-Scheduled Delivery Date/Time 9')),
        #         ('ps_service_0', salesforce.fields.CharField(blank=True, db_column='PS_Service_0__c', max_length=100, null=True, verbose_name='PS-Service 0')),
        #         ('ps_service_1', salesforce.fields.CharField(blank=True, db_column='PS_Service_1__c', max_length=100, null=True, verbose_name='PS-Service 1')),
        #         ('ps_service_2', salesforce.fields.CharField(blank=True, db_column='PS_Service_2__c', max_length=100, null=True, verbose_name='PS-Service 2')),
        #         ('ps_service_3', salesforce.fields.CharField(blank=True, db_column='PS_Service_3__c', max_length=100, null=True, verbose_name='PS-Service 3')),
        #         ('ps_service_4', salesforce.fields.CharField(blank=True, db_column='PS_Service_4__c', max_length=100, null=True, verbose_name='PS-Service 4')),
        #         ('ps_service_5', salesforce.fields.CharField(blank=True, db_column='PS_Service_5__c', max_length=100, null=True, verbose_name='PS-Service 5')),
        #         ('ps_service_6', salesforce.fields.CharField(blank=True, db_column='PS_Service_6__c', max_length=100, null=True, verbose_name='PS-Service 6')),
        #         ('ps_service_7', salesforce.fields.CharField(blank=True, db_column='PS_Service_7__c', max_length=100, null=True, verbose_name='PS-Service 7')),
        #         ('ps_service_8', salesforce.fields.CharField(blank=True, db_column='PS_Service_8__c', max_length=100, null=True, verbose_name='PS-Service 8')),
        #         ('ps_service_9', salesforce.fields.CharField(blank=True, db_column='PS_Service_9__c', max_length=100, null=True, verbose_name='PS-Service 9')),
        #         ('ps_ship_to_address_0', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_0__c', max_length=255, null=True, verbose_name='PS-Ship To Address 0')),
        #         ('ps_ship_to_address_1', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_1__c', max_length=255, null=True, verbose_name='PS-Ship To Address 1')),
        #         ('ps_ship_to_address_2', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_2__c', max_length=255, null=True, verbose_name='PS-Ship To Address 2')),
        #         ('ps_ship_to_address_3', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_3__c', max_length=255, null=True, verbose_name='PS-Ship To Address 3')),
        #         ('ps_ship_to_address_4', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_4__c', max_length=255, null=True, verbose_name='PS-Ship To Address 4')),
        #         ('ps_ship_to_address_5', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_5__c', max_length=255, null=True, verbose_name='PS-Ship To Address 5')),
        #         ('ps_ship_to_address_6', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_6__c', max_length=255, null=True, verbose_name='PS-Ship To Address 6')),
        #         ('ps_ship_to_address_7', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_7__c', max_length=255, null=True, verbose_name='PS-Ship To Address 7')),
        #         ('ps_ship_to_address_8', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_8__c', max_length=255, null=True, verbose_name='PS-Ship To Address 8')),
        #         ('ps_ship_to_address_9', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Address_9__c', max_length=255, null=True, verbose_name='PS-Ship To Address 9')),
        #         ('ps_ship_to_attention_0', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_0__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 0')),
        #         ('ps_ship_to_attention_1', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_1__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 1')),
        #         ('ps_ship_to_attention_2', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_2__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 2')),
        #         ('ps_ship_to_attention_3', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_3__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 3')),
        #         ('ps_ship_to_attention_4', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_4__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 4')),
        #         ('ps_ship_to_attention_5', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_5__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 5')),
        #         ('ps_ship_to_attention_6', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_6__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 6')),
        #         ('ps_ship_to_attention_7', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_7__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 7')),
        #         ('ps_ship_to_attention_8', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_8__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 8')),
        #         ('ps_ship_to_attention_9', salesforce.fields.CharField(blank=True, db_column='PS_Ship_To_Attention_9__c', max_length=100, null=True, verbose_name='PS-Ship To Attention 9')),
        #         ('ps_tracking_number_0', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_0__c', max_length=100, null=True, verbose_name='PS-Tracking Number 0')),
        #         ('ps_tracking_number_1', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_1__c', max_length=100, null=True, verbose_name='PS-Tracking Number 1')),
        #         ('ps_tracking_number_2', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_2__c', max_length=100, null=True, verbose_name='PS-Tracking Number 2')),
        #         ('ps_tracking_number_3', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_3__c', max_length=100, null=True, verbose_name='PS-Tracking Number 3')),
        #         ('ps_tracking_number_4', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_4__c', max_length=100, null=True, verbose_name='PS-Tracking Number 4')),
        #         ('ps_tracking_number_5', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_5__c', max_length=100, null=True, verbose_name='PS-Tracking Number 5')),
        #         ('ps_tracking_number_6', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_6__c', max_length=100, null=True, verbose_name='PS-Tracking Number 6')),
        #         ('ps_tracking_number_7', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_7__c', max_length=100, null=True, verbose_name='PS-Tracking Number 7')),
        #         ('ps_tracking_number_8', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_8__c', max_length=100, null=True, verbose_name='PS-Tracking Number 8')),
        #         ('ps_tracking_number_9', salesforce.fields.CharField(blank=True, db_column='PS_Tracking_Number_9__c', max_length=100, null=True, verbose_name='PS-Tracking Number 9')),
        #         ('ssn', salesforce.fields.CharField(blank=True, db_column='SSN__c', max_length=9, null=True, verbose_name='SSN')),
        #         ('ben_admin_system', salesforce.fields.CharField(blank=True, choices=[('EaseCentral', 'EaseCentral'), ('EmployerFocus', 'EmployerFocus'), ('EmployeeNavigator', 'EmployeeNavigator'), ('HR Focus', 'HR Focus')], db_column='BenAdmin_System__c', max_length=255, null=True, verbose_name='BenAdmin System')),
        #         ('naics_code', salesforce.fields.CharField(blank=True, db_column='NAICS_Code__c', max_length=8, null=True, verbose_name='NAICS Code')),
        #         ('marketing_engaged', salesforce.fields.BooleanField(db_column='Marketing_Engaged__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Marketing Engaged')),
        #         ('annualized_premium', salesforce.fields.DecimalField(blank=True, db_column='Annualized_Premium__c', decimal_places=2, max_digits=18, null=True, verbose_name='Annualized Premium')),
        #         ('naics_description', salesforce.fields.CharField(blank=True, db_column='NAICS_Description__c', max_length=120, null=True, verbose_name='NAICS Description')),
        #         ('active_assigned_dm_or_bse', salesforce.fields.BooleanField(db_column='Active_Assigned_DM_or_BSE__c', default=salesforce.backend.operations.DefaultedOnCreate(), verbose_name='Active Assigned DM or BSE')),
        #         ('noof_attachment', salesforce.fields.DecimalField(blank=True, decimal_places=0, max_digits=5, null=True, verbose_name='NoofAttachment')),
        #         ('broker_class', salesforce.fields.CharField(blank=True, choices=[('Active', 'Active'), ('Growth', 'Growth'), ('Inactive', 'Inactive')], db_column='Broker_Class__c', max_length=255, null=True, verbose_name='Broker Class')),
        #         ('hipaa_acceptance', salesforce.fields.BooleanField(db_column='HIPAA_Acceptance__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='HIPAA Acceptance')),
        #         ('hipaa_agreement', salesforce.fields.DateTimeField(blank=True, db_column='HIPAA_Agreement__c', null=True, verbose_name='HIPAA Agreement')),
        #         ('contract_term_date', salesforce.fields.DateField(blank=True, db_column='Contract_Term_Date__c', null=True, verbose_name='Contract Term Date')),
        #         ('do_not_contact', salesforce.fields.BooleanField(db_column='Do_Not_Contact__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Do Not Contact')),
        #         ('has_administered_plan', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='HasAdministeredPlan')),
        #         ('marketing_engaged_date', salesforce.fields.DateField(blank=True, db_column='Marketing_Engaged_Date__c', null=True, verbose_name='Marketing Engaged Date')),
        #         ('bank', salesforce.fields.CharField(blank=True, max_length=100, null=True)),
        #         ('benefit_enrollment_date', salesforce.fields.DateField(blank=True, db_column='Benefit_Enrollment_Date__c', null=True, verbose_name='Benefit Enrollment Date')),
        #         ('benefits_carrier', salesforce.fields.CharField(blank=True, db_column='Benefits_Carrier__c', max_length=100, null=True, verbose_name='Benefits Carrier')),
        #         ('benefits_offered', salesforce.fields.CharField(blank=True, choices=[('Medical', 'Medical'), ('Dental', 'Dental'), ('Vision', 'Vision'), ('WC', 'WC')], db_column='Benefits_Offered__c', max_length=4099, null=True, verbose_name='Benefits Offered')),
        #         ('broker2', salesforce.fields.CharField(blank=True, max_length=100, null=True, verbose_name='Broker')),
        #         ('current_hr_system', salesforce.fields.CharField(blank=True, choices=[('ADP', 'ADP'), ('Ascentis', 'Ascentis'), ('Bamboo HR', 'Bamboo HR'), ('Epicor', 'Epicor'), ('Kronos', 'Kronos'), ('Optimum Employer Solutions', 'Optimum Employer Solutions'), ('Oracle', 'Oracle'), ('Other', 'Other'), ('Paychex', 'Paychex'), ('Paycor', 'Paycor'), ('Paylocity', 'Paylocity'), ('PeopleSoft', 'PeopleSoft'), ('Proliant', 'Proliant'), ('Sage', 'Sage'), ('Ultimate Software', 'Ultimate Software'), ('Zenefits', 'Zenefits')], db_column='Current_HR_System__c', max_length=255, null=True, verbose_name='Current HR System')),
        #         ('current_time_system', salesforce.fields.CharField(blank=True, choices=[('Avero', 'Avero'), ('CTR/NY', 'CTR/NY'), ('HRFocus', 'HRFocus'), ('Insperity', 'Insperity'), ('iSolved Time', 'iSolved Time'), ('Kronos', 'Kronos'), ('Other', 'Other'), ('SwipeClock', 'SwipeClock'), ('TimeFocus', 'TimeFocus')], db_column='Current_Time_System__c', max_length=255, null=True, verbose_name='Current Time System')),
        #         ('wc_carrier', salesforce.fields.CharField(blank=True, db_column='WC_Carrier__c', max_length=100, null=True, verbose_name='WC Carrier')),
        #         ('wc_renewal_date', salesforce.fields.DateField(blank=True, db_column='WC_Renewal_Date__c', null=True, verbose_name='WC Renewal Date')),
        #         ('accountant', salesforce.fields.CharField(blank=True, max_length=100, null=True)),
        #         ('days_since_last_bfits_nb_case_created', salesforce.fields.DecimalField(blank=True, db_column='Days_Since_Last_Bfits_NB_Case_Created__c', decimal_places=0, max_digits=18, null=True, verbose_name='Days Since Last Bfits NB Case Created')),
        #         ('days_since_last_oppty_modified', salesforce.fields.DecimalField(blank=True, db_column='Days_Since_Last_Oppty_Modified__c', decimal_places=0, max_digits=18, null=True, verbose_name='Days Since Last Oppty Modified')),
        #         ('days_since_last_task_completed', salesforce.fields.DecimalField(blank=True, db_column='Days_Since_Last_Task_Completed__c', decimal_places=0, max_digits=18, null=True, verbose_name='Days Since Last Task Completed')),
        #         ('last_bfits_nb_case_created', salesforce.fields.DateField(blank=True, db_column='Last_Bfits_NB_Case_Created__c', null=True, verbose_name='Last Bfits NB Case Created')),
        #         ('last_oppty_modified', salesforce.fields.DateField(blank=True, db_column='Last_Oppty_Modified__c', null=True, verbose_name='Last Oppty Modified')),
        #         ('last_task_completed', salesforce.fields.DateField(blank=True, db_column='Last_Task_Completed__c', null=True, verbose_name='Last Task Completed')),
        #         ('ben_admin_integrated', salesforce.fields.BooleanField(db_column='BenAdmin_Integrated__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='BenAdmin Integrated')),
        #         ('inquisium_descriptor', salesforce.fields.CharField(blank=True, db_column='Inquisium_Descriptor__c', max_length=1300, null=True, verbose_name='Inquisium Descriptor')),
        #         ('local_code', salesforce.fields.CharField(blank=True, db_column='Local_Code__c', max_length=255, null=True, verbose_name='Local Code')),
        #         ('national_code', salesforce.fields.CharField(blank=True, db_column='National_Code__c', max_length=255, null=True, verbose_name='National Code')),
        #         ('reason_type', salesforce.fields.CharField(blank=True, db_column='Reason_Type__c', max_length=1300, null=True, verbose_name='Reason Type')),
        #         ('referral_nps', salesforce.fields.DecimalField(blank=True, db_column='Referral_NPS__c', decimal_places=2, max_digits=10, null=True, verbose_name='Referral NPS')),
        #         ('service_nps', salesforce.fields.DecimalField(blank=True, db_column='Service_NPS__c', decimal_places=2, max_digits=10, null=True, verbose_name='Service NPS')),
        #         ('bundle', salesforce.fields.CharField(blank=True, choices=[('HR Basic', 'HR Basic'), ('HR Essentials', 'HR Essentials'), ('HR Enhanced', 'HR Enhanced')], default=salesforce.backend.operations.DefaultedOnCreate('HR Basic'), max_length=255, null=True)),
        #         ('large_group_notifications', salesforce.fields.BooleanField(db_column='Large_Group_Notifications__c', default=salesforce.backend.operations.DefaultedOnCreate(True), verbose_name='Large Group Notifications')),
        #         ('small_group_notifications', salesforce.fields.BooleanField(db_column='Small_Group_Notifications__c', default=salesforce.backend.operations.DefaultedOnCreate(True), verbose_name='Small Group Notifications')),
        #         ('tpa_notification_email', salesforce.fields.EmailField(blank=True, db_column='TPA_Notification_Email__c', max_length=254, null=True, verbose_name='TPA Notification Email')),
        #         ('qbdialer_close_date', salesforce.fields.DateTimeField(blank=True, db_column='qbdialer__CloseDate__c', null=True, verbose_name='NeuralView: Close Score Last Updated')),
        #         ('qbdialer_close_score', salesforce.fields.DecimalField(blank=True, db_column='qbdialer__CloseScore__c', decimal_places=5, max_digits=9, null=True, verbose_name='NeuralView: Close Score')),
        #         ('qbdialer_dials', salesforce.fields.DecimalField(blank=True, db_column='qbdialer__Dials__c', decimal_places=0, default=salesforce.backend.operations.DefaultedOnCreate(), max_digits=18, null=True, verbose_name='Dials')),
        #         ('qbdialer_last_call_time', salesforce.fields.DateTimeField(blank=True, db_column='qbdialer__LastCallTime__c', null=True, verbose_name='Last Call Time')),
        #         ('qbdialer_related_contact_dials', salesforce.fields.DecimalField(blank=True, db_column='qbdialer__Related_Contact_Dials__c', decimal_places=0, default=salesforce.backend.operations.DefaultedOnCreate(), max_digits=18, null=True, verbose_name='Related Contact Dials')),
        #         ('qbdialer_related_contact_last_call_time', salesforce.fields.DateTimeField(blank=True, db_column='qbdialer__Related_Contact_LastCallTime__c', null=True, verbose_name='Related Contact Last Call Time')),
        #         ('qbdialer_response_time', salesforce.fields.DecimalField(blank=True, db_column='qbdialer__ResponseTime__c', decimal_places=0, max_digits=18, null=True, verbose_name='Response Time')),
        #         ('cascading_updates_new', salesforce.fields.CharField(blank=True, db_column='Cascading_Updates_New__c', max_length=255, null=True, verbose_name='Cascading Updates New')),
        #         ('noof_files', salesforce.fields.DecimalField(blank=True, decimal_places=0, default=salesforce.backend.operations.DefaultedOnCreate(), max_digits=5, null=True, verbose_name='NoofFiles')),
        #         ('days_since_last_bfits_nb_case_closed', salesforce.fields.DecimalField(blank=True, db_column='Days_Since_Last_Bfits_NB_Case_Closed__c', decimal_places=0, max_digits=18, null=True, verbose_name='Days Since Last Bfits NB Case Closed')),
        #         ('last_bfits_nb_case_closed', salesforce.fields.DateField(blank=True, db_column='Last_Bfits_NB_Case_Closed__c', null=True, verbose_name='Last Bfits NB Case Closed')),
        #         ('small_group_product_types', salesforce.fields.CharField(blank=True, choices=[('Dental', 'Dental'), ('Disability', 'Disability'), ('Life', 'Life'), ('Medical', 'Medical'), ('Other', 'Other'), ('Vision', 'Vision')], db_column='Small_Group_Product_Types__c', max_length=4099, null=True, verbose_name='Small Group Product Types')),
        #         ('large_group_product_types', salesforce.fields.CharField(blank=True, choices=[('Dental', 'Dental'), ('Disability', 'Disability'), ('Life', 'Life'), ('Medical', 'Medical'), ('Other', 'Other'), ('Vision', 'Vision')], db_column='Large_Group_Product_Types__c', max_length=4099, null=True, verbose_name='Large Group Product Types')),
        #         ('individual_product_types', salesforce.fields.CharField(blank=True, choices=[('Dental', 'Dental'), ('Disability', 'Disability'), ('Life', 'Life'), ('Medical', 'Medical'), ('Other', 'Other'), ('Vision', 'Vision')], db_column='Individual_Product_Types__c', max_length=4099, null=True, verbose_name='Individual Product Types')),
        #         ('senior_product_types', salesforce.fields.CharField(blank=True, choices=[('Annuities', 'Annuities'), ('Dental', 'Dental'), ('Final Expense', 'Final Expense'), ('First Diagnosis Cancer', 'First Diagnosis Cancer'), ('Hospital Indemnity', 'Hospital Indemnity'), ('LTC', 'LTC'), ('Medicare Advantage', 'Medicare Advantage'), ('Medicare Supplements', 'Medicare Supplements'), ('Prescription Drug Plan', 'Prescription Drug Plan'), ('Savings Card', 'Savings Card')], db_column='Senior_Product_Types__c', max_length=4099, null=True, verbose_name='Senior Product Types')),
        #         ('additional_product_types', salesforce.fields.CharField(blank=True, choices=[('Discount', 'Discount'), ('EAP/Telehealth/Wellness', 'EAP/Telehealth/Wellness'), ('HSA/HRA', 'HSA/HRA'), ('International', 'International'), ('Misc.', 'Misc.'), ('Worksite', 'Worksite')], db_column='Additional_Product_Types__c', max_length=4099, null=True, verbose_name='Additional Product Types')),
        #         ('stop_loss_product_types', salesforce.fields.CharField(blank=True, choices=[('Aggregate Stop Loss', 'Aggregate Stop Loss'), ('Specific Stop Loss', 'Specific Stop Loss')], db_column='Stop_Loss_Product_Types__c', max_length=4099, null=True, verbose_name='Stop Loss Product Types')),
        #         ('small_group_online_quoting_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Small_Group_Online_Quoting_States__c', max_length=4099, null=True, verbose_name='Small Group Online Quoting States')),
        #         ('large_group_online_quoting_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Large_Group_Online_Quoting_States__c', max_length=4099, null=True, verbose_name='Large Group Online Quoting States')),
        #         ('individual_online_quoting_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Individual_Online_Quoting_States__c', max_length=4099, null=True, verbose_name='Individual Online Quoting States')),
        #         ('stop_loss_online_quoting_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Stop_Loss_Online_Quoting_States__c', max_length=4099, null=True, verbose_name='Stop Loss Online Quoting States')),
        #         ('additional_online_quoting_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Additional_Online_Quoting_States__c', max_length=4099, null=True, verbose_name='Additional Online Quoting States')),
        #         ('senior_online_quoting_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Senior_Online_Quoting_States__c', max_length=4099, null=True, verbose_name='Senior Online Quoting States')),
        #         ('small_group_product_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Small_Group_Product_States__c', max_length=4099, null=True, verbose_name='Small Group Product States')),
        #         ('large_group_product_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Large_Group_Product_States__c', max_length=4099, null=True, verbose_name='Large Group Product States')),
        #         ('senior_product_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Senior_Product_States__c', max_length=4099, null=True, verbose_name='Senior Product States')),
        #         ('additional_product_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Additional_Product_States__c', max_length=4099, null=True, verbose_name='Additional Product States')),
        #         ('individual_product_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Individual_Product_States__c', max_length=4099, null=True, verbose_name='Individual Product States')),
        #         ('stop_loss_product_states', salesforce.fields.CharField(blank=True, choices=[('AL', 'AL'), ('AK', 'AK'), ('AZ', 'AZ'), ('AR', 'AR'), ('CA', 'CA'), ('CO', 'CO'), ('CT', 'CT'), ('DE', 'DE'), ('DC', 'DC'), ('FL', 'FL'), ('GA', 'GA'), ('HI', 'HI'), ('ID', 'ID'), ('IL', 'IL'), ('IN', 'IN'), ('IA', 'IA'), ('KS', 'KS'), ('KY', 'KY'), ('LA', 'LA'), ('ME', 'ME'), ('MD', 'MD'), ('MA', 'MA'), ('MI', 'MI'), ('MN', 'MN'), ('MS', 'MS'), ('MO', 'MO'), ('MT', 'MT'), ('NE', 'NE'), ('NV', 'NV'), ('NH', 'NH'), ('NJ', 'NJ'), ('NM', 'NM'), ('NY', 'NY'), ('NC', 'NC'), ('ND', 'ND'), ('OH', 'OH'), ('OK', 'OK'), ('OR', 'OR'), ('PA', 'PA'), ('RI', 'RI'), ('SC', 'SC'), ('SD', 'SD'), ('TN', 'TN'), ('TX', 'TX'), ('UT', 'UT'), ('VT', 'VT'), ('VA', 'VA'), ('WA', 'WA'), ('WV', 'WV'), ('WI', 'WI'), ('WY', 'WY')], db_column='Stop_Loss_Product_States__c', max_length=4099, null=True, verbose_name='Stop Loss Product States')),
        #     ],
        #     options={
        #         'verbose_name': 'Account',
        #         'verbose_name_plural': 'Accounts',
        #         'db_table': 'Account',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='BusinessProcess',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=80)),
        #         ('namespace_prefix', salesforce.fields.CharField(blank=True, max_length=15, null=True)),
        #         ('description', salesforce.fields.CharField(blank=True, max_length=255, null=True)),
        #         ('table_enum_or_id', salesforce.fields.CharField(choices=[('Case', None), ('Lead', None), ('Opportunity', None), ('Solution', None)], max_length=40, verbose_name='Entity Enumeration Or ID')),
        #         ('is_active', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Active')),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #     ],
        #     options={
        #         'verbose_name': 'Business Process',
        #         'verbose_name_plural': 'Business Process',
        #         'db_table': 'BusinessProcess',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='CallCenter',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=255)),
        #         ('internal_name', salesforce.fields.CharField(max_length=240)),
        #         ('version', salesforce.fields.DecimalField(blank=True, decimal_places=3, max_digits=18, null=True)),
        #         ('adapter_url', salesforce.fields.CharField(blank=True, max_length=2000, null=True, verbose_name='CTI Adapter URL')),
        #         ('custom_settings', salesforce.fields.CharField(blank=True, max_length=3000, null=True)),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #     ],
        #     options={
        #         'verbose_name': 'Call Center',
        #         'verbose_name_plural': 'Call Centers',
        #         'db_table': 'CallCenter',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='Group',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=40)),
        #         ('developer_name', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('type', salesforce.fields.CharField(choices=[('AllCustomerPortal', None), ('ChannelProgramGroup', None), ('CollaborationGroup', None), ('Manager', None), ('ManagerAndSubordinatesInternal', None), ('Organization', None), ('PRMOrganization', None), ('Queue', None), ('Regular', None), ('Role', None), ('RoleAndSubordinates', None), ('RoleAndSubordinatesInternal', None), ('Territory', None), ('TerritoryAndSubordinates', None)], max_length=40)),
        #         ('email', salesforce.fields.EmailField(blank=True, max_length=254, null=True)),
        #         ('does_send_email_to_members', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Send Email to Members')),
        #         ('does_include_bosses', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Include Bosses')),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #     ],
        #     options={
        #         'verbose_name': 'Group',
        #         'verbose_name_plural': 'Group',
        #         'db_table': 'Group',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='Profile',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=255)),
        #         ('permissions_email_single', salesforce.fields.BooleanField(default=False, verbose_name='Send Email')),
        #         ('permissions_email_mass', salesforce.fields.BooleanField(default=False, verbose_name='Mass Email')),
        #         ('permissions_edit_task', salesforce.fields.BooleanField(default=False, verbose_name='Edit Tasks')),
        #         ('permissions_edit_event', salesforce.fields.BooleanField(default=False, verbose_name='Edit Events')),
        #         ('permissions_export_report', salesforce.fields.BooleanField(default=False, verbose_name='Export Reports')),
        #         ('permissions_import_personal', salesforce.fields.BooleanField(default=False, verbose_name='Import Personal Contacts')),
        #         ('permissions_data_export', salesforce.fields.BooleanField(default=False, verbose_name='Weekly Data Export')),
        #         ('permissions_manage_users', salesforce.fields.BooleanField(default=False, verbose_name='Manage Users')),
        #         ('permissions_edit_public_filters', salesforce.fields.BooleanField(default=False, verbose_name='Manage Public List Views')),
        #         ('permissions_edit_public_templates', salesforce.fields.BooleanField(default=False, verbose_name='Manage Public Classic Email Templates')),
        #         ('permissions_modify_all_data', salesforce.fields.BooleanField(default=False, verbose_name='Modify All Data')),
        #         ('permissions_manage_cases', salesforce.fields.BooleanField(default=False, verbose_name='Manage Cases')),
        #         ('permissions_mass_inline_edit', salesforce.fields.BooleanField(default=False, verbose_name='Mass Edits from Lists')),
        #         ('permissions_edit_knowledge', salesforce.fields.BooleanField(default=False, verbose_name='Manage Articles')),
        #         ('permissions_manage_knowledge', salesforce.fields.BooleanField(default=False, verbose_name='Manage Salesforce Knowledge')),
        #         ('permissions_manage_solutions', salesforce.fields.BooleanField(default=False, verbose_name='Manage Published Solutions')),
        #         ('permissions_customize_application', salesforce.fields.BooleanField(default=False, verbose_name='Customize Application')),
        #         ('permissions_edit_readonly_fields', salesforce.fields.BooleanField(default=False, verbose_name='Edit Read Only Fields')),
        #         ('permissions_run_reports', salesforce.fields.BooleanField(default=False, verbose_name='Run Reports')),
        #         ('permissions_view_setup', salesforce.fields.BooleanField(default=False, verbose_name='View Setup and Configuration')),
        #         ('permissions_transfer_any_entity', salesforce.fields.BooleanField(default=False, verbose_name='Transfer Record')),
        #         ('permissions_new_report_builder', salesforce.fields.BooleanField(default=False, verbose_name='Report Builder')),
        #         ('permissions_manage_css_users', salesforce.fields.BooleanField(default=False, verbose_name='Manage Customer Users')),
        #         ('permissions_activate_contract', salesforce.fields.BooleanField(default=False, verbose_name='Activate Contracts')),
        #         ('permissions_import_leads', salesforce.fields.BooleanField(default=False, verbose_name='Import Leads')),
        #         ('permissions_manage_leads', salesforce.fields.BooleanField(default=False, verbose_name='Manage Leads')),
        #         ('permissions_transfer_any_lead', salesforce.fields.BooleanField(default=False, verbose_name='Transfer Leads')),
        #         ('permissions_view_all_data', salesforce.fields.BooleanField(default=False, verbose_name='View All Data')),
        #         ('permissions_edit_public_documents', salesforce.fields.BooleanField(default=False, verbose_name='Manage Public Documents')),
        #         ('permissions_view_encrypted_data', salesforce.fields.BooleanField(default=False, verbose_name='View Encrypted Data')),
        #         ('permissions_edit_brand_templates', salesforce.fields.BooleanField(default=False, verbose_name='Manage Letterheads')),
        #         ('permissions_edit_html_templates', salesforce.fields.BooleanField(default=False, verbose_name='Edit HTML Templates')),
        #         ('permissions_chatter_internal_user', salesforce.fields.BooleanField(default=False, verbose_name='Chatter Internal User')),
        #         ('permissions_manage_encryption_keys', salesforce.fields.BooleanField(default=False, verbose_name='Manage Encryption Keys')),
        #         ('permissions_delete_activated_contract', salesforce.fields.BooleanField(default=False, verbose_name='Delete Activated Contracts')),
        #         ('permissions_chatter_invite_external_users', salesforce.fields.BooleanField(default=False, verbose_name='Invite Customers To Chatter')),
        #         ('permissions_send_sit_requests', salesforce.fields.BooleanField(default=False, verbose_name='Send Stay-in-Touch Requests')),
        #         ('permissions_override_forecasts', salesforce.fields.BooleanField(default=False, verbose_name='Override Forecasts')),
        #         ('permissions_view_all_forecasts', salesforce.fields.BooleanField(default=False, verbose_name='View All Forecasts')),
        #         ('permissions_api_user_only', salesforce.fields.BooleanField(default=False, verbose_name='Api Only User')),
        #         ('permissions_manage_remote_access', salesforce.fields.BooleanField(default=False, verbose_name='Manage Connected Apps')),
        #         ('permissions_can_use_new_dashboard_builder', salesforce.fields.BooleanField(default=False, verbose_name='Drag-and-Drop Dashboard Builder')),
        #         ('permissions_manage_categories', salesforce.fields.BooleanField(default=False, verbose_name='Manage Categories')),
        #         ('permissions_convert_leads', salesforce.fields.BooleanField(default=False, verbose_name='Convert Leads')),
        #         ('permissions_password_never_expires', salesforce.fields.BooleanField(default=False, verbose_name='Password Never Expires')),
        #         ('permissions_use_team_reassign_wizards', salesforce.fields.BooleanField(default=False, verbose_name='Use Team Reassignment Wizards')),
        #         ('permissions_install_multiforce', salesforce.fields.BooleanField(default=False, verbose_name='Download AppExchange Packages')),
        #         ('permissions_publish_multiforce', salesforce.fields.BooleanField(default=False, verbose_name='Upload AppExchange Packages')),
        #         ('permissions_manage_partners', salesforce.fields.BooleanField(default=False, verbose_name='Manage External Users')),
        #         ('permissions_chatter_own_groups', salesforce.fields.BooleanField(default=False, verbose_name='Create and Own New Chatter Groups')),
        #         ('permissions_edit_opp_line_item_unit_price', salesforce.fields.BooleanField(default=False, verbose_name='Edit Opportunity Product Sales Price')),
        #         ('permissions_create_multiforce', salesforce.fields.BooleanField(default=False, verbose_name='Create AppExchange Packages')),
        #         ('permissions_bulk_api_hard_delete', salesforce.fields.BooleanField(default=False, verbose_name='Bulk API Hard Delete')),
        #         ('permissions_inbound_migration_tools_user', salesforce.fields.BooleanField(default=False, verbose_name='Deploy Change Sets')),
        #         ('permissions_solution_import', salesforce.fields.BooleanField(default=False, verbose_name='Import Solutions')),
        #         ('permissions_manage_call_centers', salesforce.fields.BooleanField(default=False, verbose_name='Manage Call Centers')),
        #         ('permissions_portal_super_user', salesforce.fields.BooleanField(default=False, verbose_name='Portal Super User')),
        #         ('permissions_manage_synonyms', salesforce.fields.BooleanField(default=False, verbose_name='Manage Synonyms')),
        #         ('permissions_outbound_migration_tools_user', salesforce.fields.BooleanField(default=False, verbose_name='Create and Upload Change Sets')),
        #         ('permissions_delegated_portal_user_admin', salesforce.fields.BooleanField(default=False, verbose_name='Delegated External User Administrator')),
        #         ('permissions_view_content', salesforce.fields.BooleanField(default=False, verbose_name='View Content in Portals')),
        #         ('permissions_manage_email_client_config', salesforce.fields.BooleanField(default=False, verbose_name='Manage Email Client Configurations')),
        #         ('permissions_enable_notifications', salesforce.fields.BooleanField(default=False, verbose_name='Send Outbound Messages')),
        #         ('permissions_is_sso_enabled', salesforce.fields.BooleanField(default=False, verbose_name='Is Single Sign-On Enabled')),
        #         ('permissions_manage_data_integrations', salesforce.fields.BooleanField(default=False, verbose_name='Manage Data Integrations')),
        #         ('permissions_distribute_from_pers_wksp', salesforce.fields.BooleanField(default=False, verbose_name='Create Content Deliveries')),
        #         ('permissions_view_data_categories', salesforce.fields.BooleanField(default=False, verbose_name='View Data Categories in Setup')),
        #         ('permissions_manage_data_categories', salesforce.fields.BooleanField(default=False, verbose_name='Manage Data Categories')),
        #         ('permissions_author_apex', salesforce.fields.BooleanField(default=False, verbose_name='Author Apex')),
        #         ('permissions_manage_mobile', salesforce.fields.BooleanField(default=False, verbose_name='Manage Mobile Configurations')),
        #         ('permissions_api_enabled', salesforce.fields.BooleanField(default=False, verbose_name='API Enabled')),
        #         ('permissions_manage_custom_report_types', salesforce.fields.BooleanField(default=False, verbose_name='Manage Custom Report Types')),
        #         ('permissions_edit_case_comments', salesforce.fields.BooleanField(default=False, verbose_name='Edit Case Comments')),
        #         ('permissions_transfer_any_case', salesforce.fields.BooleanField(default=False, verbose_name='Transfer Cases')),
        #         ('permissions_content_administrator', salesforce.fields.BooleanField(default=False, verbose_name='Manage Salesforce CRM Content')),
        #         ('permissions_create_workspaces', salesforce.fields.BooleanField(default=False, verbose_name='Create Libraries')),
        #         ('permissions_manage_content_permissions', salesforce.fields.BooleanField(default=False, verbose_name='Manage Content Permissions')),
        #         ('permissions_manage_content_properties', salesforce.fields.BooleanField(default=False, verbose_name='Manage Content Properties')),
        #         ('permissions_manage_content_types', salesforce.fields.BooleanField(default=False, verbose_name='Manage record types and layouts for Files')),
        #         ('permissions_schedule_job', salesforce.fields.BooleanField(default=False, verbose_name='Schedule Dashboards')),
        #         ('permissions_manage_exchange_config', salesforce.fields.BooleanField(default=False, verbose_name='Manage Lightning Sync')),
        #         ('permissions_manage_analytic_snapshots', salesforce.fields.BooleanField(default=False, verbose_name='Manage Reporting Snapshots')),
        #         ('permissions_schedule_reports', salesforce.fields.BooleanField(default=False, verbose_name='Schedule Reports')),
        #         ('permissions_manage_business_hour_holidays', salesforce.fields.BooleanField(default=False, verbose_name='Manage Business Hours Holidays')),
        #         ('permissions_manage_entitlements', salesforce.fields.BooleanField(default=False, verbose_name='Manage Entitlements')),
        #         ('permissions_manage_dynamic_dashboards', salesforce.fields.BooleanField(default=False, verbose_name='Manage Dynamic Dashboards')),
        #         ('permissions_manage_interaction', salesforce.fields.BooleanField(default=False, verbose_name='Manage Flow')),
        #         ('permissions_view_my_teams_dashboards', salesforce.fields.BooleanField(default=False, verbose_name="View My Team's Dashboards")),
        #         ('permissions_moderate_chatter', salesforce.fields.BooleanField(default=False, verbose_name='Moderate Chatter')),
        #         ('permissions_reset_passwords', salesforce.fields.BooleanField(default=False, verbose_name='Reset User Passwords and Unlock Users')),
        #         ('permissions_flow_uflrequired', salesforce.fields.BooleanField(db_column='PermissionsFlowUFLRequired', default=False, verbose_name='Require Flow User Feature License')),
        #         ('permissions_can_insert_feed_system_fields', salesforce.fields.BooleanField(default=False, verbose_name='Insert System Field Values for Chatter Feeds')),
        #         ('permissions_activities_access', salesforce.fields.BooleanField(default=False, verbose_name='Access Activities')),
        #         ('permissions_manage_knowledge_import_export', salesforce.fields.BooleanField(default=False, verbose_name='Manage Knowledge Article Import/Export')),
        #         ('permissions_email_template_management', salesforce.fields.BooleanField(default=False, verbose_name='Manage Email Templates')),
        #         ('permissions_email_administration', salesforce.fields.BooleanField(default=False, verbose_name='Email Administration')),
        #         ('permissions_manage_chatter_messages', salesforce.fields.BooleanField(default=False, verbose_name='Manage Chatter Messages and Direct Messages')),
        #         ('permissions_allow_email_ic', salesforce.fields.BooleanField(db_column='PermissionsAllowEmailIC', default=False, verbose_name='Email-Based Identity Verification Option')),
        #         ('permissions_chatter_file_link', salesforce.fields.BooleanField(default=False, verbose_name='Create Public Links')),
        #         ('permissions_force_two_factor', salesforce.fields.BooleanField(default=False, verbose_name='Two-Factor Authentication for User Interface Logins')),
        #         ('permissions_view_event_log_files', salesforce.fields.BooleanField(default=False, verbose_name='View Event Log Files')),
        #         ('permissions_manage_networks', salesforce.fields.BooleanField(default=False, verbose_name='Create and Set Up Communities')),
        #         ('permissions_manage_auth_providers', salesforce.fields.BooleanField(default=False, verbose_name='Manage Auth. Providers')),
        #         ('permissions_run_flow', salesforce.fields.BooleanField(default=False, verbose_name='Run Flows')),
        #         ('permissions_view_global_header', salesforce.fields.BooleanField(default=False, verbose_name='View Global Header')),
        #         ('permissions_manage_quotas', salesforce.fields.BooleanField(default=False, verbose_name='Manage Quotas')),
        #         ('permissions_create_customize_dashboards', salesforce.fields.BooleanField(default=False, verbose_name='Create and Customize Dashboards')),
        #         ('permissions_create_dashboard_folders', salesforce.fields.BooleanField(default=False, verbose_name='Create Dashboard Folders')),
        #         ('permissions_view_public_dashboards', salesforce.fields.BooleanField(default=False, verbose_name='View Dashboards in Public Folders')),
        #         ('permissions_manage_dashbds_in_pub_folders', salesforce.fields.BooleanField(default=False, verbose_name='Manage Dashboards in Public Folders')),
        #         ('permissions_create_customize_reports', salesforce.fields.BooleanField(default=False, verbose_name='Create and Customize Reports')),
        #         ('permissions_create_report_folders', salesforce.fields.BooleanField(default=False, verbose_name='Create Report Folders')),
        #         ('permissions_view_public_reports', salesforce.fields.BooleanField(default=False, verbose_name='View Reports in Public Folders')),
        #         ('permissions_manage_reports_in_pub_folders', salesforce.fields.BooleanField(default=False, verbose_name='Manage Reports in Public Folders')),
        #         ('permissions_edit_my_dashboards', salesforce.fields.BooleanField(default=False, verbose_name='Edit My Dashboards')),
        #         ('permissions_edit_my_reports', salesforce.fields.BooleanField(default=False, verbose_name='Edit My Reports')),
        #         ('permissions_view_all_users', salesforce.fields.BooleanField(default=False, verbose_name='View All Users')),
        #         ('permissions_allow_universal_search', salesforce.fields.BooleanField(default=False, verbose_name='Knowledge One')),
        #         ('permissions_connect_org_to_environment_hub', salesforce.fields.BooleanField(default=False, verbose_name='Connect Organization to Environment Hub')),
        #         ('permissions_create_customize_filters', salesforce.fields.BooleanField(default=False, verbose_name='Create and Customize List Views')),
        #         ('permissions_content_hub_user', salesforce.fields.BooleanField(default=False, verbose_name='Files Connect Cloud')),
        #         ('permissions_moderate_network_feeds', salesforce.fields.BooleanField(default=False, verbose_name='Moderate Communities Feeds')),
        #         ('permissions_moderate_network_files', salesforce.fields.BooleanField(default=False, verbose_name='Moderate Communities Files')),
        #         ('permissions_govern_networks', salesforce.fields.BooleanField(default=False, verbose_name='Manage Communities')),
        #         ('permissions_sales_console', salesforce.fields.BooleanField(default=False, verbose_name='Sales Console')),
        #         ('permissions_two_factor_api', salesforce.fields.BooleanField(default=False, verbose_name='Two-Factor Authentication for API Logins')),
        #         ('permissions_delete_topics', salesforce.fields.BooleanField(default=False, verbose_name='Delete Topics')),
        #         ('permissions_edit_topics', salesforce.fields.BooleanField(default=False, verbose_name='Edit Topics')),
        #         ('permissions_create_topics', salesforce.fields.BooleanField(default=False, verbose_name='Create Topics')),
        #         ('permissions_assign_topics', salesforce.fields.BooleanField(default=False, verbose_name='Assign Topics')),
        #         ('permissions_identity_enabled', salesforce.fields.BooleanField(default=False, verbose_name='Use Identity Features')),
        #         ('permissions_identity_connect', salesforce.fields.BooleanField(default=False, verbose_name='Use Identity Connect')),
        #         ('permissions_allow_view_knowledge', salesforce.fields.BooleanField(default=False, verbose_name='Allow View Knowledge')),
        #         ('permissions_content_workspaces', salesforce.fields.BooleanField(default=False, verbose_name='Access Libraries')),
        #         ('permissions_manage_search_promotion_rules', salesforce.fields.BooleanField(default=False, verbose_name='Manage Promoted Search Terms')),
        #         ('permissions_custom_mobile_apps_access', salesforce.fields.BooleanField(default=False, verbose_name='Access Custom Mobile Apps')),
        #         ('permissions_view_help_link', salesforce.fields.BooleanField(default=False, verbose_name='View Help Link')),
        #         ('permissions_manage_profiles_permissionsets', salesforce.fields.BooleanField(default=False, verbose_name='Manage Profiles and Permission Sets')),
        #         ('permissions_assign_permission_sets', salesforce.fields.BooleanField(default=False, verbose_name='Assign Permission Sets')),
        #         ('permissions_manage_roles', salesforce.fields.BooleanField(default=False, verbose_name='Manage Roles')),
        #         ('permissions_manage_ip_addresses', salesforce.fields.BooleanField(default=False, verbose_name='Manage IP Addresses')),
        #         ('permissions_manage_sharing', salesforce.fields.BooleanField(default=False, verbose_name='Manage Sharing')),
        #         ('permissions_manage_internal_users', salesforce.fields.BooleanField(default=False, verbose_name='Manage Internal Users')),
        #         ('permissions_manage_password_policies', salesforce.fields.BooleanField(default=False, verbose_name='Manage Password Policies')),
        #         ('permissions_manage_login_access_policies', salesforce.fields.BooleanField(default=False, verbose_name='Manage Login Access Policies')),
        #         ('permissions_manage_custom_permissions', salesforce.fields.BooleanField(default=False, verbose_name='Manage Custom Permissions')),
        #         ('permissions_can_verify_comment', salesforce.fields.BooleanField(default=False, verbose_name='Verify Answers to Chatter Questions')),
        #         ('permissions_manage_unlisted_groups', salesforce.fields.BooleanField(default=False, verbose_name='Manage Unlisted Groups')),
        #         ('permissions_std_automatic_activity_capture', salesforce.fields.BooleanField(default=False, verbose_name='Use Einstein Activity Capture Standard')),
        #         ('permissions_insights_app_dashboard_editor', salesforce.fields.BooleanField(default=False, verbose_name='Create and Edit Analytics Dashboards')),
        #         ('permissions_manage_two_factor', salesforce.fields.BooleanField(default=False, verbose_name='Manage Two-Factor Authentication in API')),
        #         ('permissions_insights_app_user', salesforce.fields.BooleanField(default=False, verbose_name='Use Analytics')),
        #         ('permissions_insights_app_admin', salesforce.fields.BooleanField(default=False, verbose_name='Manage Analytics')),
        #         ('permissions_insights_app_elt_editor', salesforce.fields.BooleanField(default=False, verbose_name='Edit Analytics Dataflows')),
        #         ('permissions_insights_app_upload_user', salesforce.fields.BooleanField(default=False, verbose_name='Upload External Data to Analytics')),
        #         ('permissions_insights_create_application', salesforce.fields.BooleanField(default=False, verbose_name='Create Analytics Apps')),
        #         ('permissions_debug_apex', salesforce.fields.BooleanField(default=False, verbose_name='Debug Apex')),
        #         ('permissions_lightning_experience_user', salesforce.fields.BooleanField(default=False, verbose_name='Lightning Experience User')),
        #         ('permissions_view_data_leakage_events', salesforce.fields.BooleanField(default=False, verbose_name='View Data Leakage Detection Events')),
        #         ('permissions_config_custom_recs', salesforce.fields.BooleanField(default=False, verbose_name='Configure Custom Recommendations')),
        #         ('permissions_submit_macros_allowed', salesforce.fields.BooleanField(default=False, verbose_name="Manage Macros Users Can't Undo")),
        #         ('permissions_bulk_macros_allowed', salesforce.fields.BooleanField(default=False, verbose_name='Run Macros on Multiple Records')),
        #         ('permissions_share_internal_articles', salesforce.fields.BooleanField(default=False, verbose_name='Share internal Knowledge articles externally')),
        #         ('permissions_moderate_network_messages', salesforce.fields.BooleanField(default=False, verbose_name='Moderate Communities Chatter Messages')),
        #         ('permissions_manage_session_permission_sets', salesforce.fields.BooleanField(default=False, verbose_name='Manage Session Permission Set Activations')),
        #         ('permissions_manage_templated_app', salesforce.fields.BooleanField(default=False, verbose_name='Manage Analytics Templated Apps')),
        #         ('permissions_use_templated_app', salesforce.fields.BooleanField(default=False, verbose_name='Use Analytics Templated Apps')),
        #         ('permissions_send_announcement_emails', salesforce.fields.BooleanField(default=False, verbose_name='Send announcement emails')),
        #         ('permissions_chatter_edit_own_post', salesforce.fields.BooleanField(default=False, verbose_name='Edit My Own Posts')),
        #         ('permissions_chatter_edit_own_record_post', salesforce.fields.BooleanField(default=False, verbose_name='Edit Posts on Records I Own')),
        #         ('permissions_admin_analytics_user', salesforce.fields.BooleanField(default=False, verbose_name='Access Event Monitoring Analytics Templates and Apps')),
        #         ('permissions_create_audit_fields', salesforce.fields.BooleanField(default=False, verbose_name='Set Audit Fields upon Record Creation')),
        #         ('permissions_update_with_inactive_owner', salesforce.fields.BooleanField(default=False, verbose_name='Update Records with Inactive Owners')),
        #         ('permissions_assign_user_to_skill', salesforce.fields.BooleanField(default=False, verbose_name='Assign Chat Skills to Users')),
        #         ('permissions_wave_trend_reports', salesforce.fields.BooleanField(default=False, verbose_name='Trend Report Data in Analytics')),
        #         ('permissions_wave_tabular_download', salesforce.fields.BooleanField(default=False, verbose_name='Download Analytics Data')),
        #         ('permissions_manage_sandboxes', salesforce.fields.BooleanField(default=False, verbose_name='Manage Sandboxes')),
        #         ('permissions_automatic_activity_capture', salesforce.fields.BooleanField(default=False, verbose_name='Use Einstein Activity Capture')),
        #         ('permissions_import_custom_objects', salesforce.fields.BooleanField(default=False, verbose_name='Import Custom Objects')),
        #         ('permissions_delegated_two_factor', salesforce.fields.BooleanField(default=False, verbose_name='Manage Two-Factor Authentication in User Interface')),
        #         ('permissions_chatter_compose_ui_codesnippet', salesforce.fields.BooleanField(default=False, verbose_name='Allow Inclusion of Code Snippets from UI')),
        #         ('permissions_select_files_from_salesforce', salesforce.fields.BooleanField(default=False, verbose_name='Select Files from Salesforce')),
        #         ('permissions_moderate_network_users', salesforce.fields.BooleanField(default=False, verbose_name='Moderate Community Users')),
        #         ('permissions_merge_topics', salesforce.fields.BooleanField(default=False, verbose_name='Merge Topics')),
        #         ('permissions_subscribe_to_lightning_reports', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Reports')),
        #         ('permissions_manage_pvt_rpts_and_dashbds', salesforce.fields.BooleanField(default=False, verbose_name='Manage All Private Reports and Dashboards')),
        #         ('permissions_campaign_influence2', salesforce.fields.BooleanField(default=False, verbose_name='Campaign Influence')),
        #         ('permissions_view_data_assessment', salesforce.fields.BooleanField(default=False, verbose_name='Access to view Data Assessment')),
        #         ('permissions_remove_direct_message_members', salesforce.fields.BooleanField(default=False, verbose_name='Remove People from Direct Messages')),
        #         ('permissions_can_approve_feed_post', salesforce.fields.BooleanField(default=False, verbose_name='Can Approve Feed Post and Comment')),
        #         ('permissions_add_direct_message_members', salesforce.fields.BooleanField(default=False, verbose_name='Add People to Direct Messages')),
        #         ('permissions_allow_view_edit_converted_leads', salesforce.fields.BooleanField(default=False, verbose_name='View and Edit Converted Leads')),
        #         ('permissions_show_company_name_as_user_badge', salesforce.fields.BooleanField(default=False, verbose_name='Show Company Name as Community Role')),
        #         ('permissions_access_cmc', salesforce.fields.BooleanField(db_column='PermissionsAccessCMC', default=False, verbose_name='Access Community Management')),
        #         ('permissions_archive_articles', salesforce.fields.BooleanField(default=False, verbose_name='Archive Articles')),
        #         ('permissions_publish_articles', salesforce.fields.BooleanField(default=False, verbose_name='Publish Articles')),
        #         ('permissions_view_health_check', salesforce.fields.BooleanField(default=False, verbose_name='View Health Check')),
        #         ('permissions_manage_health_check', salesforce.fields.BooleanField(default=False, verbose_name='Manage Health Check')),
        #         ('permissions_packaging2', salesforce.fields.BooleanField(default=False, verbose_name='Create and Update Second-Generation Packages')),
        #         ('permissions_manage_certificates', salesforce.fields.BooleanField(default=False, verbose_name='Manage Certificates')),
        #         ('permissions_create_report_in_lightning', salesforce.fields.BooleanField(default=False, verbose_name='Report Builder (Lightning Experience)')),
        #         ('permissions_prevent_classic_experience', salesforce.fields.BooleanField(default=False, verbose_name='Hide Option to Switch to Salesforce Classic')),
        #         ('permissions_hide_read_by_list', salesforce.fields.BooleanField(default=False, verbose_name='Hide the Seen By List')),
        #         ('permissions_submit_for_translation', salesforce.fields.BooleanField(default=False, verbose_name='Article Translation - Submit for Translation')),
        #         ('permissions_edit_translation', salesforce.fields.BooleanField(default=False, verbose_name='Article Translation - Edit')),
        #         ('permissions_publish_translation', salesforce.fields.BooleanField(default=False, verbose_name='Article Translation - Publish')),
        #         ('permissions_list_email_send', salesforce.fields.BooleanField(default=False, verbose_name='Allow sending of List Emails')),
        #         ('permissions_feed_pinning', salesforce.fields.BooleanField(default=False, verbose_name='Pin Posts in Feeds')),
        #         ('permissions_change_dashboard_colors', salesforce.fields.BooleanField(default=False, verbose_name='Change Dashboard Colors')),
        #         ('permissions_manage_recommendation_strategies', salesforce.fields.BooleanField(default=False, verbose_name='Manage Next Best Action Strategies')),
        #         ('permissions_manage_propositions', salesforce.fields.BooleanField(default=False, verbose_name='Manage Next Best Action Recommendations')),
        #         ('permissions_close_conversations', salesforce.fields.BooleanField(default=False, verbose_name='Close Conversation Threads')),
        #         ('permissions_subscribe_report_roles_grps', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Reports: Send to Groups and Roles')),
        #         ('permissions_subscribe_dashboard_roles_grps', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Dashboards: Send to Groups and Roles')),
        #         ('permissions_use_web_link', salesforce.fields.BooleanField(default=False, verbose_name='Allow Access to Customized Actions')),
        #         ('permissions_has_unlimited_nbaexecutions', salesforce.fields.BooleanField(db_column='PermissionsHasUnlimitedNBAExecutions', default=False, verbose_name='User Has Unlimited Next Best Action Strategy Executions')),
        #         ('permissions_view_only_embedded_app_user', salesforce.fields.BooleanField(default=False, verbose_name='Access to View-Only Licensed Templates and Apps')),
        #         ('permissions_view_all_activities', salesforce.fields.BooleanField(default=False, verbose_name='View All Activities')),
        #         ('permissions_subscribe_report_to_other_users', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Reports: Add Recipients')),
        #         ('permissions_lightning_console_allowed_for_user', salesforce.fields.BooleanField(default=False, verbose_name='Lightning Console User')),
        #         ('permissions_subscribe_reports_run_as_user', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Reports: Set Running User')),
        #         ('permissions_subscribe_to_lightning_dashboards', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Dashboards')),
        #         ('permissions_subscribe_dashboard_to_other_users', salesforce.fields.BooleanField(default=False, verbose_name='Subscribe to Dashboards: Add Recipients')),
        #         ('permissions_create_ltng_temp_in_pub', salesforce.fields.BooleanField(default=False, verbose_name='Manage Public Lightning Email Templates')),
        #         ('permissions_transactional_email_send', salesforce.fields.BooleanField(default=False, verbose_name='Send Non-Commercial Email')),
        #         ('permissions_view_private_static_resources', salesforce.fields.BooleanField(default=False, verbose_name='View Private Static Resources')),
        #         ('permissions_view_customer_sentiment', salesforce.fields.BooleanField(default=False, verbose_name='View Community 360')),
        #         ('permissions_create_ltng_temp_folder', salesforce.fields.BooleanField(default=False, verbose_name='Create Folders for Lightning Email Templates')),
        #         ('permissions_apex_rest_services', salesforce.fields.BooleanField(default=False, verbose_name='Apex REST Services')),
        #         ('permissions_enable_community_app_launcher', salesforce.fields.BooleanField(default=False, verbose_name='Show App Launcher in Communities')),
        #         ('permissions_give_recognition_badge', salesforce.fields.BooleanField(default=False, verbose_name='Give Recognition Badges in Lightning Communities')),
        #         ('permissions_use_my_search', salesforce.fields.BooleanField(default=False, verbose_name='Einstein Search')),
        #         ('permissions_ltng_promo_reserved01_user_perm', salesforce.fields.BooleanField(default=False, verbose_name='Remain in Salesforce Classic')),
        #         ('permissions_manage_subscriptions', salesforce.fields.BooleanField(default=False, verbose_name='Manage Analytics Subscriptions')),
        #         ('permissions_wave_manage_private_assets_user', salesforce.fields.BooleanField(default=False, verbose_name='Manage Analytics Private Assets')),
        #         ('permissions_can_edit_data_prep_recipe', salesforce.fields.BooleanField(default=False, verbose_name='Edit Dataset Recipes')),
        #         ('permissions_add_analytics_remote_connections', salesforce.fields.BooleanField(default=False, verbose_name='Add Analytics Remote Connections')),
        #         ('permissions_manage_surveys', salesforce.fields.BooleanField(default=False, verbose_name='Manage Surveys')),
        #         ('permissions_use_assistant_dialog', salesforce.fields.BooleanField(default=False, verbose_name='Einstein Search Record Previews')),
        #         ('permissions_use_query_suggestions', salesforce.fields.BooleanField(default=False, verbose_name='Einstein Search Results Based On Conversational Queries')),
        #         ('permissions_record_visibility_api', salesforce.fields.BooleanField(db_column='PermissionsRecordVisibilityAPI', default=False, verbose_name='Enable RecordVisibility API')),
        #         ('permissions_view_roles', salesforce.fields.BooleanField(default=False, verbose_name='View Roles and Role Hierarchy')),
        #         ('permissions_can_manage_maps', salesforce.fields.BooleanField(default=False, verbose_name='Manage Analytics Custom Maps')),
        #         ('permissions_lmoutbound_messaging_user_perm', salesforce.fields.BooleanField(db_column='PermissionsLMOutboundMessagingUserPerm', default=False, verbose_name='Agent Initiated Outbound Messaging')),
        #         ('permissions_modify_data_classification', salesforce.fields.BooleanField(default=False, verbose_name='Modify Data Classification')),
        #         ('permissions_privacy_data_access', salesforce.fields.BooleanField(default=False, verbose_name='Allow user to access privacy data')),
        #         ('permissions_query_all_files', salesforce.fields.BooleanField(default=False, verbose_name='Query All Files')),
        #         ('permissions_modify_metadata', salesforce.fields.BooleanField(default=False, verbose_name='Modify Metadata Through Metadata API Functions')),
        #         ('permissions_manage_cms', salesforce.fields.BooleanField(db_column='PermissionsManageCMS', default=False, verbose_name='Manage CMS Workspaces and Channels')),
        #         ('permissions_sandbox_testing_in_community_app', salesforce.fields.BooleanField(default=False, verbose_name='Enables testing a sandbox community in the Mobile Publisher for Community Cloud app.')),
        #         ('permissions_view_flow_usage_and_flow_event_data', salesforce.fields.BooleanField(default=False, verbose_name='View Flow Usage and Flow Event Data')),
        #         ('permissions_can_edit_prompts', salesforce.fields.BooleanField(default=False, verbose_name='Manage Prompts')),
        #         ('user_type', salesforce.fields.CharField(blank=True, choices=[('Standard', 'Standard'), ('PowerPartner', 'Partner'), ('PowerCustomerSuccess', 'Customer Portal Manager'), ('CustomerSuccess', 'Customer Portal User'), ('Guest', 'Guest'), ('CspLitePortal', 'High Volume Portal'), ('CsnOnly', 'CSN Only'), ('SelfService', 'Self Service')], max_length=40, null=True)),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('is_sso_enabled', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Is Single Sign-On Enabled')),
        #         ('description', salesforce.fields.CharField(blank=True, max_length=255, null=True)),
        #         ('last_viewed_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #         ('last_referenced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #     ],
        #     options={
        #         'verbose_name': 'Profile',
        #         'verbose_name_plural': 'Profile',
        #         'db_table': 'Profile',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='User',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('username', salesforce.fields.CharField(max_length=80)),
        #         ('last_name', salesforce.fields.CharField(max_length=80)),
        #         ('first_name', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('name', salesforce.fields.CharField(max_length=121, verbose_name='Full Name')),
        #         ('company_name', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('division', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('department', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('title', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('street', salesforce.fields.TextField(blank=True, null=True)),
        #         ('city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='State/Province')),
        #         ('postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Zip/Postal Code')),
        #         ('country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('state_code', salesforce.fields.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], max_length=10, null=True, verbose_name='State/Province Code')),
        #         ('country_code', salesforce.fields.CharField(blank=True, choices=[('CA', 'Canada'), ('US', 'United States')], default=salesforce.backend.operations.DefaultedOnCreate('US'), max_length=10, null=True)),
        #         ('latitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('longitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('geocode_accuracy', salesforce.fields.CharField(blank=True, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], max_length=40, null=True)),
        #         ('address', salesforce.fields.TextField(blank=True, null=True)),
        #         ('email', salesforce.fields.EmailField(max_length=254)),
        #         ('email_preferences_auto_bcc', salesforce.fields.BooleanField(default=False, verbose_name='AutoBcc')),
        #         ('email_preferences_auto_bcc_stay_in_touch', salesforce.fields.BooleanField(default=False, verbose_name='AutoBccStayInTouch')),
        #         ('email_preferences_stay_in_touch_reminder', salesforce.fields.BooleanField(default=False, verbose_name='StayInTouchReminder')),
        #         ('sender_email', salesforce.fields.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Sender Address')),
        #         ('sender_name', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Email Sender Name')),
        #         ('signature', salesforce.fields.TextField(blank=True, null=True, verbose_name='Email Signature')),
        #         ('stay_in_touch_subject', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Stay-in-Touch Email Subject')),
        #         ('stay_in_touch_signature', salesforce.fields.TextField(blank=True, null=True, verbose_name='Stay-in-Touch Email Signature')),
        #         ('stay_in_touch_note', salesforce.fields.CharField(blank=True, max_length=512, null=True, verbose_name='Stay-in-Touch Email Note')),
        #         ('phone', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('fax', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('mobile_phone', salesforce.fields.CharField(blank=True, max_length=40, null=True, verbose_name='Mobile')),
        #         ('alias', salesforce.fields.CharField(max_length=8)),
        #         ('community_nickname', salesforce.fields.CharField(max_length=40, verbose_name='Nickname')),
        #         ('badge_text', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='User Photo badge text overlay')),
        #         ('is_active', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Active')),
        #         ('time_zone_sid_key', salesforce.fields.CharField(choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')], max_length=40, verbose_name='Time Zone')),
        #         ('locale_sid_key', salesforce.fields.CharField(choices=[('af_ZA', 'Afrikaans (South Africa)'), ('sq_AL', 'Albanian (Albania)'), ('ar_DZ', 'Arabic (Algeria)'), ('ar_BH', 'Arabic (Bahrain)'), ('ar_EG', 'Arabic (Egypt)'), ('ar_IQ', 'Arabic (Iraq)'), ('ar_JO', 'Arabic (Jordan)'), ('ar_KW', 'Arabic (Kuwait)'), ('ar_LB', 'Arabic (Lebanon)'), ('ar_LY', 'Arabic (Libya)'), ('ar_MA', 'Arabic (Morocco)'), ('ar_OM', 'Arabic (Oman)'), ('ar_QA', 'Arabic (Qatar)'), ('ar_SA', 'Arabic (Saudi Arabia)'), ('ar_SD', 'Arabic (Sudan)'), ('ar_SY', 'Arabic (Syria)'), ('ar_TN', 'Arabic (Tunisia)'), ('ar_AE', 'Arabic (United Arab Emirates)'), ('ar_YE', 'Arabic (Yemen)'), ('hy_AM', 'Armenian (Armenia)'), ('az_AZ', 'Azerbaijani (Azerbaijan)'), ('bn_BD', 'Bangla (Bangladesh)'), ('bn_IN', 'Bangla (India)'), ('eu_ES', 'Basque (Spain)'), ('be_BY', 'Belarusian (Belarus)'), ('bs_BA', 'Bosnian (Bosnia & Herzegovina)'), ('bg_BG', 'Bulgarian (Bulgaria)'), ('my_MM', 'Burmese (Myanmar (Burma))'), ('ca_ES', 'Catalan (Spain)'), ('zh_CN_PINYIN', 'Chinese (China, Pinyin Ordering)'), ('zh_CN_STROKE', 'Chinese (China, Stroke Ordering)'), ('zh_CN', 'Chinese (China)'), ('zh_HK_STROKE', 'Chinese (Hong Kong SAR China, Stroke Ordering)'), ('zh_HK', 'Chinese (Hong Kong SAR China)'), ('zh_MO', 'Chinese (Macao SAR China)'), ('zh_SG', 'Chinese (Singapore)'), ('zh_TW_STROKE', 'Chinese (Taiwan, Stroke Ordering)'), ('zh_TW', 'Chinese (Taiwan)'), ('hr_HR', 'Croatian (Croatia)'), ('cs_CZ', 'Czech (Czechia)'), ('da_DK', 'Danish (Denmark)'), ('nl_AW', 'Dutch (Aruba)'), ('nl_BE', 'Dutch (Belgium)'), ('nl_NL', 'Dutch (Netherlands)'), ('nl_SR', 'Dutch (Suriname)'), ('dz_BT', 'Dzongkha (Bhutan)'), ('en_AG', 'English (Antigua & Barbuda)'), ('en_AU', 'English (Australia)'), ('en_BS', 'English (Bahamas)'), ('en_BB', 'English (Barbados)'), ('en_BZ', 'English (Belize)'), ('en_BM', 'English (Bermuda)'), ('en_BW', 'English (Botswana)'), ('en_CM', 'English (Cameroon)'), ('en_CA', 'English (Canada)'), ('en_KY', 'English (Cayman Islands)'), ('en_ER', 'English (Eritrea)'), ('en_SZ', 'English (Eswatini)'), ('en_FK', 'English (Falkland Islands)'), ('en_FJ', 'English (Fiji)'), ('en_GM', 'English (Gambia)'), ('en_GH', 'English (Ghana)'), ('en_GI', 'English (Gibraltar)'), ('en_GY', 'English (Guyana)'), ('en_HK', 'English (Hong Kong SAR China)'), ('en_IN', 'English (India)'), ('en_ID', 'English (Indonesia)'), ('en_IE', 'English (Ireland)'), ('en_JM', 'English (Jamaica)'), ('en_KE', 'English (Kenya)'), ('en_LR', 'English (Liberia)'), ('en_MG', 'English (Madagascar)'), ('en_MW', 'English (Malawi)'), ('en_MY', 'English (Malaysia)'), ('en_MU', 'English (Mauritius)'), ('en_NA', 'English (Namibia)'), ('en_NZ', 'English (New Zealand)'), ('en_NG', 'English (Nigeria)'), ('en_PK', 'English (Pakistan)'), ('en_PG', 'English (Papua New Guinea)'), ('en_PH', 'English (Philippines)'), ('en_RW', 'English (Rwanda)'), ('en_WS', 'English (Samoa)'), ('en_SC', 'English (Seychelles)'), ('en_SL', 'English (Sierra Leone)'), ('en_SG', 'English (Singapore)'), ('en_SX', 'English (Sint Maarten)'), ('en_SB', 'English (Solomon Islands)'), ('en_ZA', 'English (South Africa)'), ('en_SH', 'English (St. Helena)'), ('en_TZ', 'English (Tanzania)'), ('en_TO', 'English (Tonga)'), ('en_TT', 'English (Trinidad & Tobago)'), ('en_UG', 'English (Uganda)'), ('en_GB', 'English (United Kingdom)'), ('en_US', 'English (United States)'), ('en_VU', 'English (Vanuatu)'), ('et_EE', 'Estonian (Estonia)'), ('fi_FI', 'Finnish (Finland)'), ('fr_BE', 'French (Belgium)'), ('fr_CA', 'French (Canada)'), ('fr_KM', 'French (Comoros)'), ('fr_FR', 'French (France)'), ('fr_GN', 'French (Guinea)'), ('fr_HT', 'French (Haiti)'), ('fr_LU', 'French (Luxembourg)'), ('fr_MR', 'French (Mauritania)'), ('fr_MC', 'French (Monaco)'), ('fr_CH', 'French (Switzerland)'), ('fr_WF', 'French (Wallis & Futuna)'), ('ka_GE', 'Georgian (Georgia)'), ('de_AT', 'German (Austria)'), ('de_BE', 'German (Belgium)'), ('de_DE', 'German (Germany)'), ('de_LU', 'German (Luxembourg)'), ('de_CH', 'German (Switzerland)'), ('el_GR', 'Greek (Greece)'), ('gu_IN', 'Gujarati (India)'), ('iw_IL', 'Hebrew (Israel)'), ('hi_IN', 'Hindi (India)'), ('hu_HU', 'Hungarian (Hungary)'), ('is_IS', 'Icelandic (Iceland)'), ('in_ID', 'Indonesian (Indonesia)'), ('ga_IE', 'Irish (Ireland)'), ('it_IT', 'Italian (Italy)'), ('it_CH', 'Italian (Switzerland)'), ('ja_JP', 'Japanese (Japan)'), ('kn_IN', 'Kannada (India)'), ('kk_KZ', 'Kazakh (Kazakhstan)'), ('km_KH', 'Khmer (Cambodia)'), ('ko_KP', 'Korean (North Korea)'), ('ko_KR', 'Korean (South Korea)'), ('ky_KG', 'Kyrgyz (Kyrgyzstan)'), ('lo_LA', 'Lao (Laos)'), ('lv_LV', 'Latvian (Latvia)'), ('lt_LT', 'Lithuanian (Lithuania)'), ('lu_CD', 'Luba-Katanga (Congo - Kinshasa)'), ('lb_LU', 'Luxembourgish (Luxembourg)'), ('mk_MK', 'Macedonian (North Macedonia)'), ('ms_BN', 'Malay (Brunei)'), ('ms_MY', 'Malay (Malaysia)'), ('ml_IN', 'Malayalam (India)'), ('mt_MT', 'Maltese (Malta)'), ('mi_NZ', 'Maori (New Zealand)'), ('mr_IN', 'Marathi (India)'), ('sh_ME_USD', 'Montenegrin (Montenegro, USD)'), ('sh_ME', 'Montenegrin (Montenegro)'), ('ne_NP', 'Nepali (Nepal)'), ('no_NO', 'Norwegian (Norway)'), ('ps_AF', 'Pashto (Afghanistan)'), ('fa_IR', 'Persian (Iran)'), ('pl_PL', 'Polish (Poland)'), ('pt_AO', 'Portuguese (Angola)'), ('pt_BR', 'Portuguese (Brazil)'), ('pt_CV', 'Portuguese (Cape Verde)'), ('pt_MZ', 'Portuguese (Mozambique)'), ('pt_PT', 'Portuguese (Portugal)'), ('pt_ST', 'Portuguese (SÃ£o TomÃ© & PrÃ­ncipe)'), ('ro_MD', 'Romanian (Moldova)'), ('ro_RO', 'Romanian (Romania)'), ('rm_CH', 'Romansh (Switzerland)'), ('rn_BI', 'Rundi (Burundi)'), ('ru_KZ', 'Russian (Kazakhstan)'), ('ru_RU', 'Russian (Russia)'), ('sr_BA', 'Serbian (Cyrillic) (Bosnia and Herzegovina)'), ('sr_CS', 'Serbian (Cyrillic) (Serbia)'), ('sh_BA', 'Serbian (Latin) (Bosnia and Herzegovina)'), ('sh_CS', 'Serbian (Latin) (Serbia)'), ('sr_RS', 'Serbian (Serbia)'), ('sk_SK', 'Slovak (Slovakia)'), ('sl_SI', 'Slovenian (Slovenia)'), ('so_DJ', 'Somali (Djibouti)'), ('so_SO', 'Somali (Somalia)'), ('es_AR', 'Spanish (Argentina)'), ('es_BO', 'Spanish (Bolivia)'), ('es_CL', 'Spanish (Chile)'), ('es_CO', 'Spanish (Colombia)'), ('es_CR', 'Spanish (Costa Rica)'), ('es_CU', 'Spanish (Cuba)'), ('es_DO', 'Spanish (Dominican Republic)'), ('es_EC', 'Spanish (Ecuador)'), ('es_SV', 'Spanish (El Salvador)'), ('es_GT', 'Spanish (Guatemala)'), ('es_HN', 'Spanish (Honduras)'), ('es_MX', 'Spanish (Mexico)'), ('es_NI', 'Spanish (Nicaragua)'), ('es_PA', 'Spanish (Panama)'), ('es_PY', 'Spanish (Paraguay)'), ('es_PE', 'Spanish (Peru)'), ('es_PR', 'Spanish (Puerto Rico)'), ('es_ES', 'Spanish (Spain)'), ('es_US', 'Spanish (United States)'), ('es_UY', 'Spanish (Uruguay)'), ('es_VE', 'Spanish (Venezuela)'), ('sw_KE', 'Swahili (Kenya)'), ('sv_SE', 'Swedish (Sweden)'), ('tl_PH', 'Tagalog (Philippines)'), ('tg_TJ', 'Tajik (Tajikistan)'), ('ta_IN', 'Tamil (India)'), ('ta_LK', 'Tamil (Sri Lanka)'), ('te_IN', 'Telugu (India)'), ('th_TH', 'Thai (Thailand)'), ('ti_ET', 'Tigrinya (Ethiopia)'), ('tr_TR', 'Turkish (Turkey)'), ('uk_UA', 'Ukrainian (Ukraine)'), ('ur_PK', 'Urdu (Pakistan)'), ('uz_LATN_UZ', 'Uzbek (LATN,UZ)'), ('vi_VN', 'Vietnamese (Vietnam)'), ('cy_GB', 'Welsh (United Kingdom)'), ('xh_ZA', 'Xhosa (South Africa)'), ('yo_BJ', 'Yoruba (Benin)'), ('zu_ZA', 'Zulu (South Africa)')], max_length=40, verbose_name='Locale')),
        #         ('receives_info_emails', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Info Emails')),
        #         ('receives_admin_info_emails', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Admin Info Emails')),
        #         ('email_encoding_key', salesforce.fields.CharField(choices=[('UTF-8', 'Unicode (UTF-8)'), ('ISO-8859-1', 'General US & Western Europe (ISO-8859-1, ISO-LATIN-1)'), ('Shift_JIS', 'Japanese (Shift-JIS)'), ('ISO-2022-JP', 'Japanese (JIS)'), ('EUC-JP', 'Japanese (EUC)'), ('ks_c_5601-1987', 'Korean (ks_c_5601-1987)'), ('Big5', 'Traditional Chinese (Big5)'), ('GB2312', 'Simplified Chinese (GB2312)'), ('Big5-HKSCS', 'Traditional Chinese Hong Kong (Big5-HKSCS)'), ('x-SJIS_0213', 'Japanese (Shift-JIS_2004)')], max_length=40, verbose_name='Email Encoding')),
        #         ('user_type', salesforce.fields.CharField(blank=True, choices=[('Standard', 'Standard'), ('PowerPartner', 'Partner'), ('PowerCustomerSuccess', 'Customer Portal Manager'), ('CustomerSuccess', 'Customer Portal User'), ('Guest', 'Guest'), ('CspLitePortal', 'High Volume Portal'), ('CsnOnly', 'CSN Only'), ('SelfService', 'Self Service')], max_length=40, null=True)),
        #         ('language_locale_key', salesforce.fields.CharField(choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], max_length=40, verbose_name='Language')),
        #         ('employee_number', salesforce.fields.CharField(blank=True, max_length=20, null=True)),
        #         ('last_login_date', salesforce.fields.DateTimeField(blank=True, null=True, verbose_name='Last Login')),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('offline_trial_expiration_date', salesforce.fields.DateTimeField(blank=True, null=True, verbose_name='Offline Edition Trial Expiration Date')),
        #         ('offline_pda_trial_expiration_date', salesforce.fields.DateTimeField(blank=True, null=True, verbose_name='Sales Anywhere Trial Expiration Date')),
        #         ('user_permissions_marketing_user', salesforce.fields.BooleanField(default=False, verbose_name='Marketing User')),
        #         ('user_permissions_offline_user', salesforce.fields.BooleanField(default=False, verbose_name='Offline User')),
        #         ('user_permissions_avantgo_user', salesforce.fields.BooleanField(default=False, verbose_name='AvantGo User')),
        #         ('user_permissions_call_center_auto_login', salesforce.fields.BooleanField(default=False, verbose_name='Auto-login To Call Center')),
        #         ('user_permissions_mobile_user', salesforce.fields.BooleanField(default=False, verbose_name='Apex Mobile User')),
        #         ('user_permissions_sfcontent_user', salesforce.fields.BooleanField(db_column='UserPermissionsSFContentUser', default=False, verbose_name='Salesforce CRM Content User')),
        #         ('user_permissions_knowledge_user', salesforce.fields.BooleanField(default=False, verbose_name='Knowledge User')),
        #         ('user_permissions_interaction_user', salesforce.fields.BooleanField(default=False, verbose_name='Flow User')),
        #         ('user_permissions_support_user', salesforce.fields.BooleanField(default=False, verbose_name='Service Cloud User')),
        #         ('user_permissions_live_agent_user', salesforce.fields.BooleanField(default=False, verbose_name='Chat User')),
        #         ('user_permissions_chatter_answers_user', salesforce.fields.BooleanField(default=False, verbose_name='Chatter Answers User')),
        #         ('forecast_enabled', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Allow Forecasting')),
        #         ('user_preferences_activity_reminders_popup', salesforce.fields.BooleanField(default=False, verbose_name='ActivityRemindersPopup')),
        #         ('user_preferences_event_reminders_checkbox_default', salesforce.fields.BooleanField(default=False, verbose_name='EventRemindersCheckboxDefault')),
        #         ('user_preferences_task_reminders_checkbox_default', salesforce.fields.BooleanField(default=False, verbose_name='TaskRemindersCheckboxDefault')),
        #         ('user_preferences_reminder_sound_off', salesforce.fields.BooleanField(default=False, verbose_name='ReminderSoundOff')),
        #         ('user_preferences_disable_all_feeds_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableAllFeedsEmail')),
        #         ('user_preferences_disable_followers_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableFollowersEmail')),
        #         ('user_preferences_disable_profile_post_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableProfilePostEmail')),
        #         ('user_preferences_disable_change_comment_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableChangeCommentEmail')),
        #         ('user_preferences_disable_later_comment_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableLaterCommentEmail')),
        #         ('user_preferences_dis_prof_post_comment_email', salesforce.fields.BooleanField(default=False, verbose_name='DisProfPostCommentEmail')),
        #         ('user_preferences_content_no_email', salesforce.fields.BooleanField(default=False, verbose_name='ContentNoEmail')),
        #         ('user_preferences_content_email_as_and_when', salesforce.fields.BooleanField(default=False, verbose_name='ContentEmailAsAndWhen')),
        #         ('user_preferences_apex_pages_developer_mode', salesforce.fields.BooleanField(default=False, verbose_name='ApexPagesDeveloperMode')),
        #         ('user_preferences_receive_no_notifications_as_approver', salesforce.fields.BooleanField(default=False, verbose_name='ReceiveNoNotificationsAsApprover')),
        #         ('user_preferences_receive_notifications_as_delegated_approver', salesforce.fields.BooleanField(default=False, verbose_name='ReceiveNotificationsAsDelegatedApprover')),
        #         ('user_preferences_hide_csnget_chatter_mobile_task', salesforce.fields.BooleanField(db_column='UserPreferencesHideCSNGetChatterMobileTask', default=False, verbose_name='HideCSNGetChatterMobileTask')),
        #         ('user_preferences_disable_mentions_post_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableMentionsPostEmail')),
        #         ('user_preferences_dis_mentions_comment_email', salesforce.fields.BooleanField(default=False, verbose_name='DisMentionsCommentEmail')),
        #         ('user_preferences_hide_csndesktop_task', salesforce.fields.BooleanField(db_column='UserPreferencesHideCSNDesktopTask', default=False, verbose_name='HideCSNDesktopTask')),
        #         ('user_preferences_hide_chatter_onboarding_splash', salesforce.fields.BooleanField(default=False, verbose_name='HideChatterOnboardingSplash')),
        #         ('user_preferences_hide_second_chatter_onboarding_splash', salesforce.fields.BooleanField(default=False, verbose_name='HideSecondChatterOnboardingSplash')),
        #         ('user_preferences_dis_comment_after_like_email', salesforce.fields.BooleanField(default=False, verbose_name='DisCommentAfterLikeEmail')),
        #         ('user_preferences_disable_like_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableLikeEmail')),
        #         ('user_preferences_sort_feed_by_comment', salesforce.fields.BooleanField(default=False, verbose_name='SortFeedByComment')),
        #         ('user_preferences_disable_message_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableMessageEmail')),
        #         ('user_preferences_disable_bookmark_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableBookmarkEmail')),
        #         ('user_preferences_disable_share_post_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableSharePostEmail')),
        #         ('user_preferences_enable_auto_sub_for_feeds', salesforce.fields.BooleanField(default=False, verbose_name='EnableAutoSubForFeeds')),
        #         ('user_preferences_disable_file_share_notifications_for_api', salesforce.fields.BooleanField(default=False, verbose_name='DisableFileShareNotificationsForApi')),
        #         ('user_preferences_show_title_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowTitleToExternalUsers')),
        #         ('user_preferences_show_manager_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowManagerToExternalUsers')),
        #         ('user_preferences_show_email_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowEmailToExternalUsers')),
        #         ('user_preferences_show_work_phone_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowWorkPhoneToExternalUsers')),
        #         ('user_preferences_show_mobile_phone_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowMobilePhoneToExternalUsers')),
        #         ('user_preferences_show_fax_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowFaxToExternalUsers')),
        #         ('user_preferences_show_street_address_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowStreetAddressToExternalUsers')),
        #         ('user_preferences_show_city_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowCityToExternalUsers')),
        #         ('user_preferences_show_state_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowStateToExternalUsers')),
        #         ('user_preferences_show_postal_code_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowPostalCodeToExternalUsers')),
        #         ('user_preferences_show_country_to_external_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowCountryToExternalUsers')),
        #         ('user_preferences_show_profile_pic_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowProfilePicToGuestUsers')),
        #         ('user_preferences_show_title_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowTitleToGuestUsers')),
        #         ('user_preferences_show_city_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowCityToGuestUsers')),
        #         ('user_preferences_show_state_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowStateToGuestUsers')),
        #         ('user_preferences_show_postal_code_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowPostalCodeToGuestUsers')),
        #         ('user_preferences_show_country_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowCountryToGuestUsers')),
        #         ('user_preferences_pipeline_view_hide_help_popover', salesforce.fields.BooleanField(default=False, verbose_name='PipelineViewHideHelpPopover')),
        #         ('user_preferences_hide_s1_browser_ui', salesforce.fields.BooleanField(db_column='UserPreferencesHideS1BrowserUI', default=False, verbose_name='HideS1BrowserUI')),
        #         ('user_preferences_disable_endorsement_email', salesforce.fields.BooleanField(default=False, verbose_name='DisableEndorsementEmail')),
        #         ('user_preferences_path_assistant_collapsed', salesforce.fields.BooleanField(default=False, verbose_name='PathAssistantCollapsed')),
        #         ('user_preferences_cache_diagnostics', salesforce.fields.BooleanField(default=False, verbose_name='CacheDiagnostics')),
        #         ('user_preferences_show_email_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowEmailToGuestUsers')),
        #         ('user_preferences_show_manager_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowManagerToGuestUsers')),
        #         ('user_preferences_show_work_phone_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowWorkPhoneToGuestUsers')),
        #         ('user_preferences_show_mobile_phone_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowMobilePhoneToGuestUsers')),
        #         ('user_preferences_show_fax_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowFaxToGuestUsers')),
        #         ('user_preferences_show_street_address_to_guest_users', salesforce.fields.BooleanField(default=False, verbose_name='ShowStreetAddressToGuestUsers')),
        #         ('user_preferences_lightning_experience_preferred', salesforce.fields.BooleanField(default=False, verbose_name='LightningExperiencePreferred')),
        #         ('user_preferences_hide_end_user_onboarding_assistant_modal', salesforce.fields.BooleanField(default=False, verbose_name='HideEndUserOnboardingAssistantModal')),
        #         ('user_preferences_hide_lightning_migration_modal', salesforce.fields.BooleanField(default=False, verbose_name='HideLightningMigrationModal')),
        #         ('user_preferences_hide_sfx_welcome_mat', salesforce.fields.BooleanField(default=False, verbose_name='HideSfxWelcomeMat')),
        #         ('user_preferences_hide_bigger_photo_callout', salesforce.fields.BooleanField(default=False, verbose_name='HideBiggerPhotoCallout')),
        #         ('user_preferences_global_nav_bar_wtshown', salesforce.fields.BooleanField(db_column='UserPreferencesGlobalNavBarWTShown', default=False, verbose_name='GlobalNavBarWTShown')),
        #         ('user_preferences_global_nav_grid_menu_wtshown', salesforce.fields.BooleanField(db_column='UserPreferencesGlobalNavGridMenuWTShown', default=False, verbose_name='GlobalNavGridMenuWTShown')),
        #         ('user_preferences_create_lexapps_wtshown', salesforce.fields.BooleanField(db_column='UserPreferencesCreateLEXAppsWTShown', default=False, verbose_name='CreateLEXAppsWTShown')),
        #         ('user_preferences_favorites_wtshown', salesforce.fields.BooleanField(db_column='UserPreferencesFavoritesWTShown', default=False, verbose_name='FavoritesWTShown')),
        #         ('user_preferences_record_home_section_collapse_wtshown', salesforce.fields.BooleanField(db_column='UserPreferencesRecordHomeSectionCollapseWTShown', default=False, verbose_name='RecordHomeSectionCollapseWTShown')),
        #         ('user_preferences_record_home_reserved_wtshown', salesforce.fields.BooleanField(db_column='UserPreferencesRecordHomeReservedWTShown', default=False, verbose_name='RecordHomeReservedWTShown')),
        #         ('user_preferences_favorites_show_top_favorites', salesforce.fields.BooleanField(default=False, verbose_name='FavoritesShowTopFavorites')),
        #         ('user_preferences_exclude_mail_app_attachments', salesforce.fields.BooleanField(default=False, verbose_name='ExcludeMailAppAttachments')),
        #         ('user_preferences_suppress_task_sfxreminders', salesforce.fields.BooleanField(db_column='UserPreferencesSuppressTaskSFXReminders', default=False, verbose_name='SuppressTaskSFXReminders')),
        #         ('user_preferences_suppress_event_sfxreminders', salesforce.fields.BooleanField(db_column='UserPreferencesSuppressEventSFXReminders', default=False, verbose_name='SuppressEventSFXReminders')),
        #         ('user_preferences_preview_custom_theme', salesforce.fields.BooleanField(default=False, verbose_name='PreviewCustomTheme')),
        #         ('user_preferences_has_celebration_badge', salesforce.fields.BooleanField(default=False, verbose_name='HasCelebrationBadge')),
        #         ('user_preferences_user_debug_mode_pref', salesforce.fields.BooleanField(default=False, verbose_name='UserDebugModePref')),
        #         ('user_preferences_srhoverride_activities', salesforce.fields.BooleanField(db_column='UserPreferencesSRHOverrideActivities', default=False, verbose_name='SRHOverrideActivities')),
        #         ('user_preferences_new_lightning_report_run_page_enabled', salesforce.fields.BooleanField(default=False, verbose_name='NewLightningReportRunPageEnabled')),
        #         ('extension', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('portal_role', salesforce.fields.CharField(blank=True, choices=[('Executive', 'Executive'), ('Manager', 'Manager'), ('Worker', 'User'), ('PersonAccount', 'Person Account')], max_length=40, null=True, verbose_name='Portal Role Level')),
        #         ('is_portal_enabled', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False))),
        #         ('federation_identifier', salesforce.fields.CharField(blank=True, max_length=512, null=True, verbose_name='SAML Federation ID')),
        #         ('about_me', salesforce.fields.TextField(blank=True, null=True)),
        #         ('full_photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Url for full-sized Photo')),
        #         ('small_photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Photo')),
        #         ('is_ext_indicator_visible', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Show external indicator')),
        #         ('out_of_office_message', salesforce.fields.CharField(blank=True, max_length=40, null=True, verbose_name='Out of office message')),
        #         ('medium_photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Url for medium profile photo')),
        #         ('digest_frequency', salesforce.fields.CharField(choices=[('D', 'Daily'), ('W', 'Weekly'), ('N', 'Never')], default=salesforce.backend.operations.DefaultedOnCreate('N'), max_length=40, verbose_name='Chatter Email Highlights Frequency')),
        #         ('default_group_notification_frequency', salesforce.fields.CharField(choices=[('P', 'Email on Each Post'), ('D', 'Daily Digests'), ('W', 'Weekly Digests'), ('N', 'Never')], default=salesforce.backend.operations.DefaultedOnCreate('N'), max_length=40, verbose_name='Default Notification Frequency when Joining Groups')),
        #         ('last_viewed_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #         ('last_referenced_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #         ('banner_photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Url for banner photo')),
        #         ('small_banner_photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Url for IOS banner photo')),
        #         ('medium_banner_photo_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Url for Android banner photo')),
        #         ('is_profile_photo_active', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Has Profile Photo')),
        #         ('new_account_setup', salesforce.fields.CharField(blank=True, choices=[('East', 'East'), ('Central', 'Central'), ('West', 'West')], db_column='New_Account_Setup__c', max_length=255, null=True, verbose_name='New Account Setup Region')),
        #         ('benefit_region', salesforce.fields.CharField(blank=True, choices=[('West', 'West'), ('Southwest', 'Southwest'), ('Southeast', 'Southeast'), ('East', 'East'), ('Northeast', 'Northeast'), ('National', 'National')], db_column='Benefit_Region__c', max_length=255, null=True, verbose_name='Benefit Region')),
        #         ('hire_date', salesforce.fields.DateField(blank=True, db_column='Hire_Date__c', help_text='Employee Hire Date', null=True, verbose_name='Hire Date')),
        #         ('termination_date', salesforce.fields.DateField(blank=True, db_column='Termination_Date__c', null=True, verbose_name='Termination Date')),
        #         ('mkto_si_is_caching_anon_web_activity_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingAnonWebActivityList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingAnonWebActivityList')),
        #         ('mkto_si_is_caching_best_bets', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingBestBets__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingBestBets')),
        #         ('mkto_si_is_caching_email_activity_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingEmailActivityList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingEmailActivityList')),
        #         ('mkto_si_is_caching_grouped_web_activity_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingGroupedWebActivityList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingGroupedWebActivityList')),
        #         ('mkto_si_is_caching_interesting_moments_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingInterestingMomentsList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingInterestingMomentsList')),
        #         ('mkto_si_is_caching_scoring_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingScoringList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingScoringList')),
        #         ('mkto_si_is_caching_stream_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingStreamList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingStreamList')),
        #         ('mkto_si_is_caching_watch_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingWatchList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingWatchList')),
        #         ('mkto_si_is_caching_web_activity_list', salesforce.fields.BooleanField(db_column='mkto_si__IsCachingWebActivityList__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='IsCachingWebActivityList')),
        #         ('mkto_si_sales_insight_counter', salesforce.fields.DecimalField(blank=True, db_column='mkto_si__Sales_Insight_Counter__c', decimal_places=0, default=salesforce.backend.operations.DefaultedOnCreate(), max_digits=4, null=True, verbose_name='Marketo Sales Insight Welcome Counter')),
        #         ('payroll_area', salesforce.fields.CharField(blank=True, choices=[('APS', 'APS'), ('California', 'California'), ('Florida', 'Florida'), ('Inside Sales NA', 'Inside Sales NA'), ('Inside Sales SB', 'Inside Sales SB'), ('Mid Atlantic', 'Mid Atlantic'), ('New Jersey', 'New Jersey'), ('New York', 'New York'), ('Northeast', 'Northeast'), ('Northwest', 'Northwest'), ('Southeast', 'Southeast'), ('Southwest', 'Southwest'), ('Texas', 'Texas')], db_column='Payroll_Area__c', max_length=255, null=True, verbose_name='Payroll Area')),
        #         ('payroll_market', salesforce.fields.CharField(blank=True, choices=[('Arizona', 'Arizona'), ('Central Florida', 'Central Florida'), ('Central Texas', 'Central Texas'), ('Colorado', 'Colorado'), ('Houston', 'Houston'), ('Inside Sales', 'Inside Sales'), ('Inside Sales Channel', 'Inside Sales Channel'), ('Inside Sales Dallas', 'Inside Sales Dallas'), ('Irvine', 'Irvine'), ('Long Island/Queens', 'Long Island/Queens'), ('Los Angeles', 'Los Angeles'), ('Miami North', 'Miami North'), ('Miami South', 'Miami South'), ('Mid Atlantic', 'Mid Atlantic'), ('Miramar', 'Miramar'), ('N. California', 'N. California'), ('National Accounts', 'National Accounts'), ('Nevada', 'Nevada'), ('New England', 'New England'), ('New Jersey', 'New Jersey'), ('New York City', 'New York City'), ('NYC South', 'NYC South'), ('North Texas', 'North Texas'), ('Northwest', 'Northwest'), ('Orange County', 'Orange County'), ('Phoenix', 'Phoenix'), ('San Diego', 'San Diego'), ('Southeast', 'Southeast'), ('West Palm Beach', 'West Palm Beach'), ('Woodland Hills', 'Woodland Hills')], db_column='Payroll_Market__c', max_length=255, null=True, verbose_name='Payroll Market')),
        #         ('payroll_region', salesforce.fields.CharField(blank=True, choices=[('Northeast', 'Northeast'), ('Southeast', 'Southeast'), ('West', 'West'), ('Inside Sales', 'Inside Sales'), ('Business Development', 'Business Development')], db_column='Payroll_Region__c', max_length=255, null=True, verbose_name='Payroll Region')),
        #         ('team_name', salesforce.fields.CharField(blank=True, choices=[('Accounts_Receivable', 'Accounts Receivable'), ('APS - 401k', 'APS - 401k'), ('APS - Other', 'APS - Other'), ('APS - Sec125', 'APS - Sec125'), ('APS - Workers Comp', 'APS - Workers Comp'), ('Conversion', 'Conversion'), ('Executive', 'Executive'), ('HRIS Support', 'HRIS Support'), ('New Accounts - East', 'New Accounts - East'), ('New Accounts HRIS', 'New Accounts HRIS'), ('New Accounts - Mid-Market', 'New Accounts - Mid-Market'), ('New Accounts  PayFocus Central', 'New Accounts  PayFocus Central'), ('New Accounts PayFocus East', 'New Accounts PayFocus East'), ('New Accounts  PayFocus Tampa', 'New Accounts  PayFocus Tampa'), ('New Accounts PayFocus West', 'New Accounts PayFocus West'), ('New Accounts PRO Central', 'New Accounts PRO Central'), ('New Accounts PRO East', 'New Accounts PRO East'), ('New Accounts PRO West', 'New Accounts PRO West'), ('New Accounts QA Team - Construction Payroll', 'New Accounts QA Team - Construction Payroll'), ('New Accounts QA Team - CPO', 'New Accounts QA Team - CPO'), ('New Accounts QA Team - PAM', 'New Accounts QA Team - PAM'), ('New Accounts QA Team - PayFocus', 'New Accounts QA Team - PayFocus'), ('New Accounts QA Team - Payload', 'New Accounts QA Team - Payload'), ('New Accounts QA Team - PP/XP', 'New Accounts QA Team - PP/XP'), ('New Accounts - West', 'New Accounts - West'), ('PayFocus Support', 'PayFocus Support'), ('Service East - Construction Payroll', 'Service East - Construction Payroll'), ('Service East - Franklin', 'Service East - Franklin'), ('Service East - Maine', 'Service East - Maine'), ('Service East - Miramar', 'Service East - Miramar'), ('Service East - Tampa', 'Service East - Tampa'), ('Service Full Service - Miramar', 'Service Full Service - Miramar'), ('Service Full Service - Orange County', 'Service Full Service - Orange County'), ('Service Full Service - Phoenix', 'Service Full Service - Phoenix'), ('Service Full Service - Seattle', 'Service Full Service - Seattle'), ('Service Full Service - Tampa', 'Service Full Service - Tampa'), ('Service West - Orange County', 'Service West - Orange County'), ('Service West - Phoenix', 'Service West - Phoenix'), ('Service West - Seattle', 'Service West - Seattle'), ('Support - Credit', 'Support - Credit'), ('Support - Operations', 'Support - Operations'), ('Support - Tax Amendment', 'Support - Tax Amendment'), ('Support - Tax Compliance', 'Support - Tax Compliance'), ('Support - Tax Entity', 'Support - Tax Entity'), ('Support - Tax Notice', 'Support - Tax Notice'), ('Support - Tax Operations', 'Support - Tax Operations'), ('Support - Tax QA', 'Support - Tax QA'), ('Support - Tax Support Center', 'Support - Tax Support Center'), ('Support Team - Professional Services', 'Support Team - Professional Services'), ('Support - Treasury', 'Support - Treasury'), ('Tax Quality Assurance', 'Tax Quality Assurance'), ('White Glove - New Accounts and Support', 'White Glove - New Accounts and Support')], db_column='Team_Name__c', max_length=255, null=True, verbose_name='Team Name')),
        #         ('application_supported', salesforce.fields.CharField(blank=True, choices=[('CPO', 'CPO'), ('DSI', 'DSI'), ('PAM', 'PAM'), ('PL', 'PL'), ('PP/XP', 'PP/XP'), ('All', 'All')], db_column='Application_Supported__c', max_length=4099, null=True, verbose_name='Application Supported')),
        #         ('sma_allow_map_anything_exports', salesforce.fields.BooleanField(db_column='sma__AllowMapAnythingExports__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Allow MapAnything Exports')),
        #         ('sma_default_proximity_radius', salesforce.fields.DecimalField(blank=True, db_column='sma__DefaultProximityRadius__c', decimal_places=2, max_digits=7, null=True, verbose_name='Default Proximity Radius')),
        #         ('sma_edit_map_anything_org_wirde_queries', salesforce.fields.BooleanField(db_column='sma__EditMapAnythingOrgWirdeQueries__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Edit MapAnything Org Wide Queries')),
        #         ('sma_mabeta_tester', salesforce.fields.BooleanField(db_column='sma__MABetaTester__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='MapAnything Beta Tester')),
        #         ('sma_madefault_latitude', salesforce.fields.DecimalField(blank=True, db_column='sma__MADefaultLatitude__c', decimal_places=15, max_digits=18, null=True, verbose_name='MapAnything Default Latitude')),
        #         ('sma_madefault_longitude', salesforce.fields.DecimalField(blank=True, db_column='sma__MADefaultLongitude__c', decimal_places=15, max_digits=18, null=True, verbose_name='MapAnything Default Longitude')),
        #         ('sma_madefault_type', salesforce.fields.CharField(blank=True, db_column='sma__MADefaultType__c', max_length=255, null=True, verbose_name='MADefaultType')),
        #         ('sma_madefault_zoom_level', salesforce.fields.DecimalField(blank=True, db_column='sma__MADefaultZoomLevel__c', decimal_places=0, max_digits=2, null=True, verbose_name='MapAnything Default Zoom Level')),
        #         ('sma_mamax_export_size', salesforce.fields.DecimalField(blank=True, db_column='sma__MAMaxExportSize__c', decimal_places=0, max_digits=18, null=True, verbose_name='MapAnything Max Export Size')),
        #         ('sma_mamax_query_size', salesforce.fields.DecimalField(blank=True, db_column='sma__MAMaxQuerySize__c', decimal_places=0, max_digits=6, null=True, verbose_name='MapAnything Max Query Size')),
        #         ('sma_maversion', salesforce.fields.CharField(blank=True, choices=[('Previous', 'Previous'), ('Current', 'Current'), ('Beta', 'Beta')], db_column='sma__MAVersion__c', max_length=255, null=True, verbose_name='MapAnything Version')),
        #         ('sma_map_anything_settings', salesforce.fields.TextField(blank=True, db_column='sma__MapAnythingSettings__c', null=True, verbose_name='Map Anything Settings')),
        #         ('sma_preferred_type_of_measurement', salesforce.fields.CharField(blank=True, choices=[('Miles', 'Miles'), ('Km', 'Km'), ('Meters', 'Meters'), ('Yards', 'Yards'), ('Feet', 'Feet')], db_column='sma__PreferredTypeOfMeasurement__c', max_length=255, null=True, verbose_name='Preferred Type of Measurement')),
        #         ('sma_receive_batch_exception_emails', salesforce.fields.BooleanField(db_column='sma__ReceiveBatchExceptionEmails__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Receive Batch Exception Emails')),
        #         ('qbdialer_inside_sales_admin', salesforce.fields.BooleanField(db_column='qbdialer__InsideSales_Admin__c', default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='InsideSales Admin')),
        #         ('qbdialer_is_subdomain', salesforce.fields.CharField(blank=True, db_column='qbdialer__is_subdomain__c', max_length=20, null=True, verbose_name='InsideSales Subdomain')),
        #         ('qbdialer_is_token', salesforce.fields.CharField(blank=True, db_column='qbdialer__is_token__c', max_length=128, null=True, verbose_name='InsideSales Authorization Token')),
        #         ('qbdialer_password', salesforce.fields.CharField(blank=True, db_column='qbdialer__password__c', max_length=16, null=True, verbose_name='InsideSales Password')),
        #         ('qbdialer_permissions', salesforce.fields.TextField(blank=True, db_column='qbdialer__permissions__c', null=True, verbose_name='InsideSales Permissions')),
        #         ('qbdialer_username', salesforce.fields.CharField(blank=True, db_column='qbdialer__username__c', max_length=55, null=True, verbose_name='InsideSales Username')),
        #         ('benefit_market', salesforce.fields.CharField(blank=True, choices=[('North CA', 'North CA'), ('South CA', 'South CA'), ('Colorado', 'Colorado'), ('North TX', 'North TX'), ('South TX', 'South TX'), ('Central TX', 'Central TX'), ('North FL', 'North FL'), ('South FL', 'South FL'), ('Georgia', 'Georgia'), ('Mid-Atlantic', 'Mid-Atlantic'), ('North NJ', 'North NJ'), ('South NJ', 'South NJ'), ('Ohio', 'Ohio'), ('NY North', 'NY North'), ('NY South', 'NY South'), ('National', 'National')], db_column='Benefit_Market__c', max_length=255, null=True, verbose_name='Benefit Market')),
        #         ('account', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Account')),
        #         ('call_center', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.CallCenter')),
        #         ('created_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_createdby_set', to='app.User')),
        #         ('delegated_approver', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Group')),
        #         ('last_modified_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_lastmodifiedby_set', to='app.User')),
        #         ('manager', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_manager_set', to='app.User')),
        #         ('profile', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Profile')),
        #     ],
        #     options={
        #         'verbose_name': 'User',
        #         'verbose_name_plural': 'Users',
        #         'db_table': 'User',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='UserLicense',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('license_definition_key', salesforce.fields.CharField(max_length=40, verbose_name='License Def. ID')),
        #         ('total_licenses', salesforce.fields.IntegerField()),
        #         ('status', salesforce.fields.CharField(choices=[('Active', 'Active'), ('Disabled', 'Disabled')], max_length=40)),
        #         ('used_licenses', salesforce.fields.IntegerField()),
        #         ('used_licenses_last_updated', salesforce.fields.DateTimeField()),
        #         ('name', salesforce.fields.CharField(max_length=40)),
        #         ('master_label', salesforce.fields.CharField(max_length=80)),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #     ],
        #     options={
        #         'verbose_name': 'User License',
        #         'verbose_name_plural': 'User Licenses',
        #         'db_table': 'UserLicense',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        migrations.AlterField(
            model_name='defaultpage',
            name='body',
            field=wagtail.core.fields.StreamField([('wysiwyg_block', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('title_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('fixed', 'Fixed'), ('full', 'Full')), default='full', label='Layout', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('switchable', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('media_title_block', wagtail.core.blocks.StructBlock([('width', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('fixed', 'Fixed'), ('full', 'Full')), default='fixed', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('media', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('image', 'Image'), ('image-video', 'Image + Video')), default='image', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('video_source', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('https://www.youtube.com/embed/', 'YouTube'), ('https://player.vimeo.com/video/', 'Vimeo')), default='https://www.youtube.com/embed/', label='Video Source', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('video_id', wagtail.core.blocks.CharBlock(help_text='Enter the video source ID from YouTube or Vimeo. Should only consist of alphanumeric characters. Ex: 86036070', label='Video ID', required=False)), ('corners', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Square'), ('border--round', 'Rounded')), default='', label='Corners', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('shadow', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'No'), ('box-shadow-wide', 'Yes')), default='', label='Shadow', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('vertical_alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Top'), ('align-items-center', 'Middle')), default='', label='Vertical Alignment', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('three_column_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('columnlistitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('subhead_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h4', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'])), ('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('cta_horizontal_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('horizontal', 'Horizontal'), ('button', 'Button')), default='button', label='Layout', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('header', wagtail.core.blocks.TextBlock()), ('subhead_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h4', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.TextBlock(label='Body', required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('outline', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('none', 'None'), ('border', 'Bordered')), default='border', label='Outline', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('page', wagtail.core.blocks.PageChooserBlock(label='Link', required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('image_block', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('inline', 'Inline'), ('full', 'Full')), default='inline', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('image_feature_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('none', 'None'), ('border', 'Bordered'), ('overlay', 'Text Overlay')), default='none', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('columns', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('col-md-6 col-sm-12', '2'), ('col-md-4 col-sm-12', '3'), ('col-md-3 col-sm-6 col-xs-12', '4')), default='col-md-6 col-sm-12', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='0', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h3', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('imagefeatureitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('tabbed_images_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('tabbedimageitem', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('icon', wagtail.core.blocks.TextBlock(help_text='Choose an icon from the <a target="_blank" href="/admin/icon-reference">Icon Reference page</a>')), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('icon_feature_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('large-two', 'Large Two Column'), ('small-four', 'Small Four Column')), default='large-two', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('iconfeatureitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock()), ('icon', wagtail.core.blocks.CharBlock(help_text='Choose an icon from the <a target="_blank" href="/admin/icon-reference/">Icon Reference page</a>')), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('bio_list_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('three-column', 'Three Column'), ('two-column', 'Two Column')), default='three-column', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('bios', wagtail.core.blocks.StreamBlock([('biolistitem', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], label='Bios', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('testimonial_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('testimonialitem', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('location', wagtail.core.blocks.CharBlock()), ('testimonial', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('testimonial_photo_block', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('quote', wagtail.core.blocks.TextBlock()), ('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.TextBlock()), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('image_slider_block', wagtail.core.blocks.StructBlock([('slider_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('inline', 'Inline'), ('full', 'Full'), ('logo', 'Logo')), required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('sliderimage', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock())]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('anchor_block', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.TextBlock(help_text='The name of the anchor for linking to.'))])), ('iframe_block', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.TextBlock(help_text='The URL the iFrame should point to.')), ('name', wagtail.core.blocks.TextBlock(help_text='The name of the iFrame element.')), ('width', wagtail.core.blocks.TextBlock(default='100%', help_text='The width of the iFrame (default is 100%).')), ('height', wagtail.core.blocks.TextBlock(default='600px', help_text='The height of the iFrame (default is 600px).')), ('frameborder', wagtail.core.blocks.TextBlock(default='0', help_text='The width of the iFrame border (default is 0).'))])), ('process_block', wagtail.core.blocks.StructBlock([('process_layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('horizontal', 'Horizontal'), ('vertical', 'Vertical'), ('media', 'Media Beside'), ('boxes', 'Boxes')), default='horizontal', label='Layout', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('process_media', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('image', 'Image'), ('image-video', 'Image + Video')), default='image', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('video_source', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('https://www.youtube.com/embed/', 'YouTube'), ('https://player.vimeo.com/video/', 'Vimeo')), default='https://www.youtube.com/embed/', label='Video Source', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('video_id', wagtail.core.blocks.CharBlock(help_text='Enter the video source ID from YouTube or Vimeo. Should only consist of alphanumeric characters. Ex: 86036070', label='Video ID', required=False)), ('corners', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Square'), ('border--round', 'Rounded')), default='', label='Corners', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('shadow', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'No'), ('box-shadow-wide', 'Yes')), default='', label='Shadow', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))], label='Image or Video')), ('process_orientation', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', label='Orientation', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('process_items', wagtail.core.blocks.StreamBlock([('processitem', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock())]))], label='Items', required=True)), ('process_background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))], label='Background'))])), ('faq_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('faqs_col1', wagtail.core.blocks.StreamBlock([('faqitem', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.RichTextBlock())]))], label='FAQs Column 1', required=True)), ('faqs_col2', wagtail.core.blocks.StreamBlock([('faqitem', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.RichTextBlock())]))], label='FAQs Column 2', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('accordion_block', wagtail.core.blocks.StructBlock([('style', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('accordion-2', 'Text'), ('accordion-1', 'Button')), default='accordion-2', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('default_active', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('active', 'Yes'), ('', 'No')), default='active', label='Open First By Default?', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('accordionitem', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('body', wagtail.core.blocks.RichTextBlock())]))], label='Items', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('team_member_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('body', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('social_mail', wagtail.core.blocks.CharBlock(label='Email Address', required=False)), ('social_facebook', wagtail.core.blocks.CharBlock(label='Facebook Link', required=False)), ('social_instagram', wagtail.core.blocks.CharBlock(label='Instagram Link', required=False)), ('social_twitter', wagtail.core.blocks.CharBlock(label='Twitter Link', required=False)), ('social_linkedin', wagtail.core.blocks.CharBlock(label='Linkedin Link', required=False)), ('social_youtube', wagtail.core.blocks.CharBlock(label='Youtube Link', required=False))])), ('gallery_block', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('gallery', 'Gallery'), ('undertext', 'Under Text'), ('overlaytext', 'Overlay Text')), widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('hover', wagtail.core.blocks.BooleanBlock(help_text='If selected overlay text will appear when hovered by mouse.', label='Mouse Hover', required=False)), ('categories', wagtail.core.blocks.ListBlock(app.blocks.gallery_block.CategoryBlock)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('products_block', wagtail.core.blocks.StructBlock([('categories', wagtail.core.blocks.ListBlock(app.blocks.products_block.CategoryBlock)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('video_cover_block', wagtail.core.blocks.StructBlock([('video_id', wagtail.core.blocks.CharBlock(help_text='Youtube Video ID', required=True)), ('autoplay', wagtail.core.blocks.BooleanBlock(required=False)), ('placeholder_image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.TextBlock(required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('three_image_cover_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.TextBlock(required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('image_left', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_center', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_right', wagtail.images.blocks.ImageChooserBlock(required=False)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('pricing_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('feature_1', 'Feature 1'), ('feature_2', 'Feature 2'), ('feature_3', 'Feature 3')), default='feature_1', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('switchable', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('title', wagtail.core.blocks.CharBlock(required=False)), ('price', wagtail.core.blocks.IntegerBlock(required=False)), ('fine_print', wagtail.core.blocks.CharBlock(required=False)), ('header', wagtail.core.blocks.TextBlock(required=False)), ('small_text', wagtail.core.blocks.TextBlock(required=False)), ('features', wagtail.core.blocks.ListBlock(app.blocks.pricing_block.FeatureBlock)), ('link_text', wagtail.core.blocks.CharBlock(required=False)), ('link_url', wagtail.core.blocks.CharBlock(required=False)), ('testimonial', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('testimonial_name', wagtail.core.blocks.CharBlock(label='Name', required=False)), ('testimonial', wagtail.core.blocks.TextBlock(required=False)), ('testimonial_location', wagtail.core.blocks.CharBlock(label='Location', required=False))], required=False)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('lead_from_block', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock(max_length=512, required=False)), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h3', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('form_width', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('col-md-4', 'Small'), ('col-md-6', 'Med'), ('col-md-12', 'Large')), default='col-md-4', label='Form Width', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('lead_owner', wagtail.core.blocks.ChoiceBlock(choices=[('00Gc0000004I4ZuEAK', 'Paul McCartney'), ('00Gc0000004I4ZuEAL', 'John Lennon'), ('00Gc0000004I4ZuEAM', 'George Harrison'), ('00Gc0000004I4ZuEAN', 'Ringo Starr')]))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='formpage',
            name='text_above',
            field=wagtail.core.fields.StreamField([('wysiwyg_block', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('title_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('fixed', 'Fixed'), ('full', 'Full')), default='full', label='Layout', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('switchable', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('media_title_block', wagtail.core.blocks.StructBlock([('width', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('fixed', 'Fixed'), ('full', 'Full')), default='fixed', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('media', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('image', 'Image'), ('image-video', 'Image + Video')), default='image', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('video_source', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('https://www.youtube.com/embed/', 'YouTube'), ('https://player.vimeo.com/video/', 'Vimeo')), default='https://www.youtube.com/embed/', label='Video Source', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('video_id', wagtail.core.blocks.CharBlock(help_text='Enter the video source ID from YouTube or Vimeo. Should only consist of alphanumeric characters. Ex: 86036070', label='Video ID', required=False)), ('corners', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Square'), ('border--round', 'Rounded')), default='', label='Corners', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('shadow', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'No'), ('box-shadow-wide', 'Yes')), default='', label='Shadow', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('vertical_alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Top'), ('align-items-center', 'Middle')), default='', label='Vertical Alignment', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('three_column_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('columnlistitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('subhead_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h4', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'])), ('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('cta_horizontal_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('horizontal', 'Horizontal'), ('button', 'Button')), default='button', label='Layout', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('header', wagtail.core.blocks.TextBlock()), ('subhead_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h4', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.TextBlock(label='Body', required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('outline', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('none', 'None'), ('border', 'Bordered')), default='border', label='Outline', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('page', wagtail.core.blocks.PageChooserBlock(label='Link', required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('image_block', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('inline', 'Inline'), ('full', 'Full')), default='inline', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('image_feature_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('none', 'None'), ('border', 'Bordered'), ('overlay', 'Text Overlay')), default='none', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('columns', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('col-md-6 col-sm-12', '2'), ('col-md-4 col-sm-12', '3'), ('col-md-3 col-sm-6 col-xs-12', '4')), default='col-md-6 col-sm-12', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='0', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h3', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('imagefeatureitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('tabbed_images_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('tabbedimageitem', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('icon', wagtail.core.blocks.TextBlock(help_text='Choose an icon from the <a target="_blank" href="/admin/icon-reference">Icon Reference page</a>')), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('icon_feature_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('large-two', 'Large Two Column'), ('small-four', 'Small Four Column')), default='large-two', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('iconfeatureitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock()), ('icon', wagtail.core.blocks.CharBlock(help_text='Choose an icon from the <a target="_blank" href="/admin/icon-reference/">Icon Reference page</a>')), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('bio_list_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('three-column', 'Three Column'), ('two-column', 'Two Column')), default='three-column', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('bios', wagtail.core.blocks.StreamBlock([('biolistitem', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], label='Bios', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('testimonial_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('testimonialitem', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('location', wagtail.core.blocks.CharBlock()), ('testimonial', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('testimonial_photo_block', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('quote', wagtail.core.blocks.TextBlock()), ('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.TextBlock()), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('image_slider_block', wagtail.core.blocks.StructBlock([('slider_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('inline', 'Inline'), ('full', 'Full'), ('logo', 'Logo')), required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('sliderimage', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock())]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('anchor_block', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.TextBlock(help_text='The name of the anchor for linking to.'))])), ('iframe_block', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.TextBlock(help_text='The URL the iFrame should point to.')), ('name', wagtail.core.blocks.TextBlock(help_text='The name of the iFrame element.')), ('width', wagtail.core.blocks.TextBlock(default='100%', help_text='The width of the iFrame (default is 100%).')), ('height', wagtail.core.blocks.TextBlock(default='600px', help_text='The height of the iFrame (default is 600px).')), ('frameborder', wagtail.core.blocks.TextBlock(default='0', help_text='The width of the iFrame border (default is 0).'))])), ('process_block', wagtail.core.blocks.StructBlock([('process_layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('horizontal', 'Horizontal'), ('vertical', 'Vertical'), ('media', 'Media Beside'), ('boxes', 'Boxes')), default='horizontal', label='Layout', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('process_media', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('image', 'Image'), ('image-video', 'Image + Video')), default='image', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('video_source', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('https://www.youtube.com/embed/', 'YouTube'), ('https://player.vimeo.com/video/', 'Vimeo')), default='https://www.youtube.com/embed/', label='Video Source', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('video_id', wagtail.core.blocks.CharBlock(help_text='Enter the video source ID from YouTube or Vimeo. Should only consist of alphanumeric characters. Ex: 86036070', label='Video ID', required=False)), ('corners', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Square'), ('border--round', 'Rounded')), default='', label='Corners', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('shadow', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'No'), ('box-shadow-wide', 'Yes')), default='', label='Shadow', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))], label='Image or Video')), ('process_orientation', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', label='Orientation', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('process_items', wagtail.core.blocks.StreamBlock([('processitem', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock())]))], label='Items', required=True)), ('process_background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))], label='Background'))])), ('faq_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('faqs_col1', wagtail.core.blocks.StreamBlock([('faqitem', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.RichTextBlock())]))], label='FAQs Column 1', required=True)), ('faqs_col2', wagtail.core.blocks.StreamBlock([('faqitem', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.RichTextBlock())]))], label='FAQs Column 2', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('accordion_block', wagtail.core.blocks.StructBlock([('style', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('accordion-2', 'Text'), ('accordion-1', 'Button')), default='accordion-2', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('default_active', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('active', 'Yes'), ('', 'No')), default='active', label='Open First By Default?', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('accordionitem', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('body', wagtail.core.blocks.RichTextBlock())]))], label='Items', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('team_member_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('body', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('social_mail', wagtail.core.blocks.CharBlock(label='Email Address', required=False)), ('social_facebook', wagtail.core.blocks.CharBlock(label='Facebook Link', required=False)), ('social_instagram', wagtail.core.blocks.CharBlock(label='Instagram Link', required=False)), ('social_twitter', wagtail.core.blocks.CharBlock(label='Twitter Link', required=False)), ('social_linkedin', wagtail.core.blocks.CharBlock(label='Linkedin Link', required=False)), ('social_youtube', wagtail.core.blocks.CharBlock(label='Youtube Link', required=False))])), ('gallery_block', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('gallery', 'Gallery'), ('undertext', 'Under Text'), ('overlaytext', 'Overlay Text')), widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('hover', wagtail.core.blocks.BooleanBlock(help_text='If selected overlay text will appear when hovered by mouse.', label='Mouse Hover', required=False)), ('categories', wagtail.core.blocks.ListBlock(app.blocks.gallery_block.CategoryBlock)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('products_block', wagtail.core.blocks.StructBlock([('categories', wagtail.core.blocks.ListBlock(app.blocks.products_block.CategoryBlock)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('video_cover_block', wagtail.core.blocks.StructBlock([('video_id', wagtail.core.blocks.CharBlock(help_text='Youtube Video ID', required=True)), ('autoplay', wagtail.core.blocks.BooleanBlock(required=False)), ('placeholder_image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.TextBlock(required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('three_image_cover_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.TextBlock(required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('image_left', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_center', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_right', wagtail.images.blocks.ImageChooserBlock(required=False)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('pricing_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('feature_1', 'Feature 1'), ('feature_2', 'Feature 2'), ('feature_3', 'Feature 3')), default='feature_1', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('switchable', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('title', wagtail.core.blocks.CharBlock(required=False)), ('price', wagtail.core.blocks.IntegerBlock(required=False)), ('fine_print', wagtail.core.blocks.CharBlock(required=False)), ('header', wagtail.core.blocks.TextBlock(required=False)), ('small_text', wagtail.core.blocks.TextBlock(required=False)), ('features', wagtail.core.blocks.ListBlock(app.blocks.pricing_block.FeatureBlock)), ('link_text', wagtail.core.blocks.CharBlock(required=False)), ('link_url', wagtail.core.blocks.CharBlock(required=False)), ('testimonial', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('testimonial_name', wagtail.core.blocks.CharBlock(label='Name', required=False)), ('testimonial', wagtail.core.blocks.TextBlock(required=False)), ('testimonial_location', wagtail.core.blocks.CharBlock(label='Location', required=False))], required=False)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('lead_from_block', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock(max_length=512, required=False)), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h3', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('form_width', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('col-md-4', 'Small'), ('col-md-6', 'Med'), ('col-md-12', 'Large')), default='col-md-4', label='Form Width', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('lead_owner', wagtail.core.blocks.ChoiceBlock(choices=[('00Gc0000004I4ZuEAK', 'Paul McCartney'), ('00Gc0000004I4ZuEAL', 'John Lennon'), ('00Gc0000004I4ZuEAM', 'George Harrison'), ('00Gc0000004I4ZuEAN', 'Ringo Starr')]))]))], blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='formpage',
            name='text_below',
            field=wagtail.core.fields.StreamField([('wysiwyg_block', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('title_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('fixed', 'Fixed'), ('full', 'Full')), default='full', label='Layout', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('switchable', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('media_title_block', wagtail.core.blocks.StructBlock([('width', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('fixed', 'Fixed'), ('full', 'Full')), default='fixed', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('media', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('image', 'Image'), ('image-video', 'Image + Video')), default='image', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('video_source', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('https://www.youtube.com/embed/', 'YouTube'), ('https://player.vimeo.com/video/', 'Vimeo')), default='https://www.youtube.com/embed/', label='Video Source', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('video_id', wagtail.core.blocks.CharBlock(help_text='Enter the video source ID from YouTube or Vimeo. Should only consist of alphanumeric characters. Ex: 86036070', label='Video ID', required=False)), ('corners', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Square'), ('border--round', 'Rounded')), default='', label='Corners', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('shadow', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'No'), ('box-shadow-wide', 'Yes')), default='', label='Shadow', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('vertical_alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Top'), ('align-items-center', 'Middle')), default='', label='Vertical Alignment', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('three_column_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('columnlistitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('subhead_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h4', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('text', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'])), ('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('cta_horizontal_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('horizontal', 'Horizontal'), ('button', 'Button')), default='button', label='Layout', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('header', wagtail.core.blocks.TextBlock()), ('subhead_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h4', label='Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.TextBlock(label='Body', required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('outline', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('none', 'None'), ('border', 'Bordered')), default='border', label='Outline', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('page', wagtail.core.blocks.PageChooserBlock(label='Link', required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('image_block', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('inline', 'Inline'), ('full', 'Full')), default='inline', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('image_feature_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('none', 'None'), ('border', 'Bordered'), ('overlay', 'Text Overlay')), default='none', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('columns', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('col-md-6 col-sm-12', '2'), ('col-md-4 col-sm-12', '3'), ('col-md-3 col-sm-6 col-xs-12', '4')), default='col-md-6 col-sm-12', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='0', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h3', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('imagefeatureitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('tabbed_images_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('tabbedimageitem', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('icon', wagtail.core.blocks.TextBlock(help_text='Choose an icon from the <a target="_blank" href="/admin/icon-reference">Icon Reference page</a>')), ('text', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock()), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h1', 'H1'), ('h2', 'H2'), ('h3', 'H3')), default='h1', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['h3', 'h4', 'h5', 'bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('caption', wagtail.core.blocks.TextBlock(required=False))])), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('icon_feature_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('large-two', 'Large Two Column'), ('small-four', 'Small Four Column')), default='large-two', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('iconfeatureitem', wagtail.core.blocks.StructBlock([('header', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock()), ('icon', wagtail.core.blocks.CharBlock(help_text='Choose an icon from the <a target="_blank" href="/admin/icon-reference/">Icon Reference page</a>')), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('bio_list_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('three-column', 'Three Column'), ('two-column', 'Two Column')), default='three-column', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('bios', wagtail.core.blocks.StreamBlock([('biolistitem', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], label='Bios', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('testimonial_block', wagtail.core.blocks.StructBlock([('items', wagtail.core.blocks.StreamBlock([('testimonialitem', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.CharBlock()), ('location', wagtail.core.blocks.CharBlock()), ('testimonial', wagtail.core.blocks.TextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock(required=False))]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('testimonial_photo_block', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('quote', wagtail.core.blocks.TextBlock()), ('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.TextBlock()), ('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('image_slider_block', wagtail.core.blocks.StructBlock([('slider_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('inline', 'Inline'), ('full', 'Full'), ('logo', 'Logo')), required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('sliderimage', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock())]))], required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('anchor_block', wagtail.core.blocks.StructBlock([('name', wagtail.core.blocks.TextBlock(help_text='The name of the anchor for linking to.'))])), ('iframe_block', wagtail.core.blocks.StructBlock([('src', wagtail.core.blocks.TextBlock(help_text='The URL the iFrame should point to.')), ('name', wagtail.core.blocks.TextBlock(help_text='The name of the iFrame element.')), ('width', wagtail.core.blocks.TextBlock(default='100%', help_text='The width of the iFrame (default is 100%).')), ('height', wagtail.core.blocks.TextBlock(default='600px', help_text='The height of the iFrame (default is 600px).')), ('frameborder', wagtail.core.blocks.TextBlock(default='0', help_text='The width of the iFrame border (default is 0).'))])), ('process_block', wagtail.core.blocks.StructBlock([('process_layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('horizontal', 'Horizontal'), ('vertical', 'Vertical'), ('media', 'Media Beside'), ('boxes', 'Boxes')), default='horizontal', label='Layout', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('process_media', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('image', 'Image'), ('image-video', 'Image + Video')), default='image', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('video_source', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('https://www.youtube.com/embed/', 'YouTube'), ('https://player.vimeo.com/video/', 'Vimeo')), default='https://www.youtube.com/embed/', label='Video Source', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('video_id', wagtail.core.blocks.CharBlock(help_text='Enter the video source ID from YouTube or Vimeo. Should only consist of alphanumeric characters. Ex: 86036070', label='Video ID', required=False)), ('corners', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Square'), ('border--round', 'Rounded')), default='', label='Corners', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('shadow', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'No'), ('box-shadow-wide', 'Yes')), default='', label='Shadow', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))], label='Image or Video')), ('process_orientation', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', label='Orientation', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('process_items', wagtail.core.blocks.StreamBlock([('processitem', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('text', wagtail.core.blocks.TextBlock())]))], label='Items', required=True)), ('process_background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))], label='Background'))])), ('faq_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('faqs_col1', wagtail.core.blocks.StreamBlock([('faqitem', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.RichTextBlock())]))], label='FAQs Column 1', required=True)), ('faqs_col2', wagtail.core.blocks.StreamBlock([('faqitem', wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock()), ('answer', wagtail.core.blocks.RichTextBlock())]))], label='FAQs Column 2', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('accordion_block', wagtail.core.blocks.StructBlock([('style', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('accordion-2', 'Text'), ('accordion-1', 'Button')), default='accordion-2', required=True, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('default_active', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('active', 'Yes'), ('', 'No')), default='active', label='Open First By Default?', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('items', wagtail.core.blocks.StreamBlock([('accordionitem', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('body', wagtail.core.blocks.RichTextBlock())]))], label='Items', required=True)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('team_member_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('name', wagtail.core.blocks.CharBlock()), ('title', wagtail.core.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('body', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('body_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Standard'), ('lead', 'Lead')), default='lead', label='Body Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('social_mail', wagtail.core.blocks.CharBlock(label='Email Address', required=False)), ('social_facebook', wagtail.core.blocks.CharBlock(label='Facebook Link', required=False)), ('social_instagram', wagtail.core.blocks.CharBlock(label='Instagram Link', required=False)), ('social_twitter', wagtail.core.blocks.CharBlock(label='Twitter Link', required=False)), ('social_linkedin', wagtail.core.blocks.CharBlock(label='Linkedin Link', required=False)), ('social_youtube', wagtail.core.blocks.CharBlock(label='Youtube Link', required=False))])), ('gallery_block', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('gallery', 'Gallery'), ('undertext', 'Under Text'), ('overlaytext', 'Overlay Text')), widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('hover', wagtail.core.blocks.BooleanBlock(help_text='If selected overlay text will appear when hovered by mouse.', label='Mouse Hover', required=False)), ('categories', wagtail.core.blocks.ListBlock(app.blocks.gallery_block.CategoryBlock)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('products_block', wagtail.core.blocks.StructBlock([('categories', wagtail.core.blocks.ListBlock(app.blocks.products_block.CategoryBlock)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('video_cover_block', wagtail.core.blocks.StructBlock([('video_id', wagtail.core.blocks.CharBlock(help_text='Youtube Video ID', required=True)), ('autoplay', wagtail.core.blocks.BooleanBlock(required=False)), ('placeholder_image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('title', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.TextBlock(required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('three_image_cover_block', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=False)), ('text', wagtail.core.blocks.TextBlock(required=False)), ('link', wagtail.core.blocks.StructBlock([('link_type', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('url', 'URL'), ('page', 'Page'), ('document', 'Document'), ('email', 'Email'), ('phone', 'Phone')), default='', label='Type', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('url', wagtail.core.blocks.CharBlock(label='URL', required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('document', wagtail.documents.blocks.DocumentChooserBlock(required=False)), ('email', wagtail.core.blocks.EmailBlock(required=False)), ('phone', wagtail.core.blocks.CharBlock(required=False)), ('link_text', wagtail.core.blocks.CharBlock(label='Text', required=False)), ('link_format', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Text'), ('btn btn--primary', 'Button')), default='', label='Format', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))])), ('image_left', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_center', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_right', wagtail.images.blocks.ImageChooserBlock(required=False)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('pricing_block', wagtail.core.blocks.StructBlock([('layout', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('feature_1', 'Feature 1'), ('feature_2', 'Feature 2'), ('feature_3', 'Feature 3')), default='feature_1', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('switchable', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('switchable', 'Original'), ('switchable switchable--switch', 'Flipped')), default='switchable', widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('title', wagtail.core.blocks.CharBlock(required=False)), ('price', wagtail.core.blocks.IntegerBlock(required=False)), ('fine_print', wagtail.core.blocks.CharBlock(required=False)), ('header', wagtail.core.blocks.TextBlock(required=False)), ('small_text', wagtail.core.blocks.TextBlock(required=False)), ('features', wagtail.core.blocks.ListBlock(app.blocks.pricing_block.FeatureBlock)), ('link_text', wagtail.core.blocks.CharBlock(required=False)), ('link_url', wagtail.core.blocks.CharBlock(required=False)), ('testimonial', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('testimonial_name', wagtail.core.blocks.CharBlock(label='Name', required=False)), ('testimonial', wagtail.core.blocks.TextBlock(required=False)), ('testimonial_location', wagtail.core.blocks.CharBlock(label='Location', required=False))], required=False)), ('background', wagtail.core.blocks.StructBlock([('mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'Light'), ('bg--primary', 'Primary'), ('bg--secondary', 'Secondary'), ('bg--dark', 'Dark'), ('imagebg', 'Image')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('background_image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('image_effect', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'None'), ('parallax', 'Parallax'), ('section--ken-burns', 'Ken Burns')), default='', label='Image Effect', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_invert', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-times'), ('image--light', 'icon-fa-check')), default='', label='Invert Dark/Light', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('image_overlay', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('0', 'Off'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', 'Full')), default='4', label='Overlay Opacity', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing_mode', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('padding', 'Padding'), ('percent', 'Percentage')), default='padding', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('padding', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('space--xxs', 'xxs'), ('space--xs', 'xs'), ('space--sm', 'sm'), ('', 'Auto'), ('space--md', 'md'), ('space--lg', 'lg'), ('space--xlg', 'xlg')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('sizing', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('height-10', '10%'), ('height-20', '20%'), ('height-30', '30%'), ('height-40', '40%'), ('height-50', '50%'), ('height-60', '60%'), ('height-70', '70%'), ('height-80', '80%'), ('height-90', '90%'), ('height-100', '100%')), default='height-50', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect))]))])), ('lead_from_block', wagtail.core.blocks.StructBlock([('alignment', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('', 'icon-fa-align-left'), ('text-center', 'icon-fa-align-center'), ('text-right', 'icon-fa-align-right'), ('text-justify', 'icon-fa-align-justify')), default='', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('heading', wagtail.core.blocks.CharBlock(max_length=512, required=False)), ('heading_size', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5')), default='h3', label='Heading Size', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('body', wagtail.core.blocks.RichTextBlock(features=['bold', 'italic', 'ol', 'ul', 'link', 'document-link'], required=False)), ('form_width', app.blocks.custom_choice_block.CustomChoiceBlock(choices=(('col-md-4', 'Small'), ('col-md-6', 'Med'), ('col-md-12', 'Large')), default='col-md-4', label='Form Width', required=False, widget=app.widgets.custom_radio_select.CustomRadioSelect)), ('lead_owner', wagtail.core.blocks.ChoiceBlock(choices=[('00Gc0000004I4ZuEAK', 'Paul McCartney'), ('00Gc0000004I4ZuEAL', 'John Lennon'), ('00Gc0000004I4ZuEAM', 'George Harrison'), ('00Gc0000004I4ZuEAN', 'Ringo Starr')]))]))], blank=True, null=True),
        ),
        # migrations.CreateModel(
        #     name='UserRole',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=80)),
        #         ('rollup_description', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='Description')),
        #         ('opportunity_access_for_account_owner', salesforce.fields.CharField(choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')], max_length=40, verbose_name='Opportunity Access Level for Account Owner')),
        #         ('case_access_for_account_owner', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')], max_length=40, null=True, verbose_name='Case Access Level for Account Owner')),
        #         ('contact_access_for_account_owner', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write')], max_length=40, null=True, verbose_name='Contact Access Level for Account Owner')),
        #         ('may_forecast_manager_share', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False))),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('developer_name', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('portal_type', salesforce.fields.CharField(blank=True, choices=[('None', 'None'), ('CustomerPortal', 'Customer Portal'), ('Partner', 'Partner Portal')], max_length=40, null=True)),
        #         ('portal_role', salesforce.fields.CharField(blank=True, choices=[('Executive', 'Executive'), ('Manager', 'Manager'), ('Worker', 'User'), ('PersonAccount', 'Person Account')], max_length=40, null=True)),
        #         ('forecast_user', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='userrole_forecastuser_set', to='app.User')),
        #         ('last_modified_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='userrole_lastmodifiedby_set', to='app.User')),
        #         ('parent_role', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.UserRole')),
        #         ('portal_account', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Account')),
        #         ('portal_account_owner', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='userrole_portalaccountowner_set', to='app.User')),
        #     ],
        #     options={
        #         'verbose_name': 'Role',
        #         'verbose_name_plural': 'Role',
        #         'db_table': 'UserRole',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.AddField(
        #     model_name='user',
        #     name='user_role',
        #     field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.UserRole'),
        # ),
        # migrations.CreateModel(
        #     name='RecordType',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=80)),
        #         ('developer_name', salesforce.fields.CharField(max_length=80, verbose_name='Record Type Name')),
        #         ('namespace_prefix', salesforce.fields.CharField(blank=True, max_length=15, null=True)),
        #         ('description', salesforce.fields.CharField(blank=True, max_length=255, null=True)),
        #         ('sobject_type', salesforce.fields.CharField(choices=[('Account', None), ('Account_Bundle__c', None), ('AccountBrand', None), ('Agent_Affiliation__c', None), ('AgentWork', None), ('Alert__c', None), ('ambition__AmbitionEmailRecipient__c', None), ('ambition__AmbitionEntity__c', None), ('ambition__AmbitionEntityField__c', None), ('ambition__AmbitionGeneralConfig__c', None), ('ambition__AmbitionLogEntry__c', None), ('ambition__AmbitionPushableObject__c', None), ('ambition__AmbitionPushableObjectField__c', None), ('ambition__AmbitionPushableObjectTestObject__c', None), ('ambition__AmbitionReportFilter__c', None), ('ambition__AmbitionReportInstance__c', None), ('ambition__AmbitionReportInstanceChunk__c', None), ('ambition__AmbitionReportRunConfig__c', None), ('ambition__log_entry__c', None), ('AMS_Account_Team__c', None), ('Announcement', None), ('ANTS_Letters_and_Attachments__c', None), ('Apex_Error__c', None), ('AppAnalyticsQueryRequest', None), ('Asset', None), ('AssetRelationship', None), ('AssistantProgress', None), ('Authorization__c', None), ('AuthorizationForm', None), ('AuthorizationFormConsent', None), ('AuthorizationFormDataUse', None), ('AuthorizationFormText', None), ('Benefits_Upsell_Opportunity__c', None), ('Broker_Commission__c', None), ('Broker_Email_Archive__c', None), ('Broker_Favorites__c', None), ('Broker_Trip_Status__c', None), ('BrokerOpportunity__c', None), ('BrokerSales__c', None), ('CalendarModel', None), ('CalendarView', None), ('Campaign', None), ('CampaignMember', None), ('Carrier__c', None), ('Carrier_Data_Mapping__c', None), ('Carrier_RFP__c', None), ('CarrierLibrary__c', None), ('Case', None), ('Case_Dimension_Email__c', None), ('Case_Route__c', None), ('CaseExternalDocument', None), ('Checklist__c', None), ('Class__c', None), ('CollaborationGroup', None), ('CollaborationGroupRank', None), ('CollaborationGroupRecord', None), ('Commission__c', None), ('CommSubscription', None), ('CommSubscriptionChannelType', None), ('CommSubscriptionConsent', None), ('CommSubscriptionTiming', None), ('Community_Message__c', None), ('CommunityTiles__c', None), ('ComponentResponseCache', None), ('Connection_Credential__c', None), ('Contact', None), ('ContactPointConsent', None), ('ContactPointEmail', None), ('ContactPointPhone', None), ('ContactPointTypeConsent', None), ('ContactRequest', None), ('ContentDocumentListViewMapping', None), ('ContentFolderDistribution', None), ('ContentVersion', None), ('Contract', None), ('ContractLineItem', None), ('ConversationContextEntry', None), ('Course__c', None), ('Credential__c', None), ('DataPrepServiceLocator', None), ('DataUseLegalBasis', None), ('DataUsePurpose', None), ('DeflectionSignal', None), ('DuplicateErrorLog', None), ('DuplicateRecordItem', None), ('DuplicateRecordSet', None), ('Email_Signature_Attachments__c', None), ('EngagementChannelType', None), ('Enrollment__c', None), ('Entitlement', None), ('EntitlementContact', None), ('Event', None), ('ExpressionFilter', None), ('ExpressionFilterCriteria', None), ('Feedback__c', None), ('FileInspectionResult', None), ('FileSearchActivity', None), ('FlowExecutionEventMetric', None), ('FlowRecordRelation', None), ('FlowStageRelation', None), ('Group_Calendar__c', None), ('Idea', None), ('Image', None), ('InboundSocialPost', None), ('Individual', None), ('INQ__Criteria_Fields_Status__c', None), ('INQ__Data_Mapping_Configuration__c', None), ('INQ__Data_Transfer_Criteria__c', None), ('INQ__Data_Transfer_Criteria_Detail__c', None), ('INQ__Email_Template_Mapping_Configuration__c', None), ('INQ__Exception_Logger__c', None), ('INQ__iConnectionStatus__c', None), ('INQ__Inquisium_Activity_Tracker__c', None), ('INQ__Respondent__c', None), ('INQ__Respondent_Field_Mapping__c', None), ('INQ__Survey_Answer__c', None), ('INQ__Survey_Criteria__c', None), ('INQ__Survey_Criteria_Detail__c', None), ('INQ__Survey_Program__c', None), ('INQ__Survey_Program_Question__c', None), ('INQ__Survey_Staging__c', None), ('INQ__Trigger_Object_Exclusion__c', None), ('Intake__c', None), ('Knowledge__kav', None), ('KnowledgeMigrationStat', None), ('Lead', None), ('Lead_Assignment_Rules__c', None), ('LinkedArticle', None), ('ListEmail', None), ('ListEmailIndividualRecipient', None), ('ListEmailRecipientSource', None), ('ListEmailSentResult', None), ('LiveAgentSession', None), ('LiveChatFileToken', None), ('LiveChatTranscript', None), ('Macro', None), ('MacroAction', None), ('MacroInstruction', None), ('MacroUsage', None), ('ManagedContent', None), ('ManagedContentBlock', None), ('ManagedContentBlockVersion', None), ('ManagedContentBodyLink', None), ('ManagedContentChannel', None), ('ManagedContentFolderMember', None), ('ManagedContentMigration', None), ('ManagedContentNode', None), ('ManagedContentNodeRefTree', None), ('ManagedContentNodeRendition', None), ('ManagedContentRelease', None), ('ManagedContentReleaseItem', None), ('ManagedContentSet', None), ('ManagedContentSetLink', None), ('ManagedContentSpaceChannel', None), ('ManagedContentSpaceFolderMember', None), ('ManagedContentSpaceItem', None), ('ManagedContentTranslationJob', None), ('ManagedContentTranslationTask', None), ('ManagedContentTypeSearchBlackList', None), ('ManagedContentVariant', None), ('ManagedContentVersion', None), ('Menu__c', None), ('Migration_Task__c', None), ('mkto_si__Best_Bets_View__c', None), ('mkto_si__Best_Bets_View_Detail__c', None), ('mkto_si__BestBetsCache__c', None), ('mkto_si__EmailActivityCache__c', None), ('mkto_si__GroupedWebActivityCache__c', None), ('mkto_si__InterestingMomentsCache__c', None), ('mkto_si__Marketo_Sales_Insight_Config__c', None), ('mkto_si__ScoringCache__c', None), ('mkto_si__Value__c', None), ('mkto_si__WebActivityCache__c', None), ('myobj__c', None), ('NetworkSearchQueryFrequency', None), ('NetworkUserHistoryRecent', None), ('Notification__c', None), ('OE_Error__c', None), ('Office__c', None), ('Opportunity', None), ('Opportunity_Pipeline_Snapshot__c', None), ('OrgDeleteRequest', None), ('OrgMetric', None), ('OrgMetricScanResult', None), ('OrgMetricScanSummary', None), ('Out_Of_Office__c', None), ('PartyConsent', None), ('Payroll_Price_Book__c', None), ('PendingServiceRouting', None), ('PersonalizationResource', None), ('Plan_Selection__c', None), ('Plan_Type__c', None), ('Platform_History__c', None), ('Postal_Code__c', None), ('Pricebook2', None), ('Product2', None), ('PromptAction', None), ('qbdialer__ContactScore__c', None), ('qbdialer__DialerQuery__c', None), ('qbdialer__DialerQueryAttendee__c', None), ('qbdialer__DialerQueryItem__c', None), ('qbdialer__isDialerConfig__c', None), ('qbdialer__SeekInitiative__c', None), ('qbdialer__SeekInitiativeAttendee__c', None), ('qbdialer__SeekInitiativeItem__c', None), ('QuickText', None), ('QuickTextUsage', None), ('Quote', None), ('Quote_Line_Item__c', None), ('Recommendation', None), ('RecommendationReaction', None), ('RecordAction', None), ('RecordMergeHistory', None), ('RecordOrigin', None), ('Referral__c', None), ('ReportResultBlob', None), ('RequestsForAccessSIQ', None), ('sbv2__Group__c', None), ('sbv2__List_Object__c', None), ('sbv2__Quality_Sample__c', None), ('sbv2__Sample_Criteria_Filter__c', None), ('sbv2__Score_List__c', None), ('sbv2__Summary_Score__c', None), ('sbv2__Team__c', None), ('sbv2__Team_User__c', None), ('Scorecard', None), ('ScorecardAssociation', None), ('ScorecardMetric', None), ('SearchActivity', None), ('SearchPromotionRule', None), ('Security_Questions__c', None), ('seismic__Debug_Log__c', None), ('ServiceContract', None), ('Services__c', None), ('SetupAssistantAnswer', None), ('SetupAssistantProgress', None), ('SetupFlowProgress', None), ('Shipment__c', None), ('SIC_Code__c', None), ('SiqUserBlacklist', None), ('sma__AvailableField__c', None), ('sma__MAAJAXDebugLog__c', None), ('sma__MAAnalytic__c', None), ('sma__MAArcGISBatchPushLog__c', None), ('sma__MAArcGISBatchPushSetting__c', None), ('sma__MAArcGISBatchPushTest__c', None), ('sma__MAAssignmentDebugLog__c', None), ('sma__MAAssignmentPlan__c', None), ('sma__MAAssignmentRule__c', None), ('sma__MABaseObject__c', None), ('sma__MAButtonSet__c', None), ('sma__MACache__c', None), ('sma__MAClick2Create__c', None), ('sma__MACustomAction__c', None), ('sma__MADataLayerSetting__c', None), ('sma__MADataLoad__c', None), ('sma__MADataLoadSegment__c', None), ('sma__MADriveProfile__c', None), ('sma__MAEventBaseObj__c', None), ('sma__MAEventLookup__c', None), ('sma__MAExport__c', None), ('sma__MAExportRow__c', None), ('sma__MAFolder__c', None), ('sma__MAFolderPermission__c', None), ('sma__MALayer__c', None), ('sma__MALocation__c', None), ('sma__MALocationFolder__c', None), ('sma__MALog__c', None), ('sma__MAMiniMapSetting__c', None), ('sma__MARelatedList__c', None), ('sma__MARoute__c', None), ('sma__MASavedQry__c', None), ('sma__MASavedQryComponent__c', None), ('sma__MAScheduledJob__c', None), ('sma__MASettingsAssignments__c', None), ('sma__MASettingsGroup__c', None), ('sma__MAShift__c', None), ('sma__MATerritory__c', None), ('sma__MATerritoryAggregation__c', None), ('sma__MATerritoryAggregationSetting__c', None), ('sma__MATerritoryCollection__c', None), ('sma__MATerritoryCollectionBaseObject__c', None), ('sma__MATerritoryCollectionFieldUpdate__c', None), ('sma__MATerritoryGeometry__c', None), ('sma__MATerritoryNode__c', None), ('sma__MATerritoryRollup__c', None), ('sma__MATerritoryRollupComponent__c', None), ('sma__MATerritoryRollupFolder__c', None), ('sma__MATerritoryRollupRun__c', None), ('sma__MATerritoryRollupValue__c', None), ('sma__MAWaypoint__c', None), ('SocialPost', None), ('Solution', None), ('Source_Account_Team__c', None), ('StrategyMonthlyStats', None), ('StreamActivityAccess', None), ('SyncTransactionLog', None), ('Task', None), ('TaxNotice__c', None), ('trailheadapp__Badge__c', None), ('trailheadapp__Debug_Log__c', None), ('trailheadapp__Trail__c', None), ('trailheadapp__Trailhead_User_Data__c', None), ('trailheadapp__Trailmix__c', None), ('trailheadapp__Trailmix_Assignment__c', None), ('trailheadapp__User_Badge__c', None), ('trailheadapp__User_Trailmix__c', None), ('TrainingEnrollment__c', None), ('TransactionSecurityAction', None), ('TransactionSecurityActionEvent', None), ('Trip_Status_Eligibility__c', None), ('Twilio_Voice_Response__c', None), ('Upsell_Opportunity__c', None), ('User_Login_Snapshot__c', None), ('UserEmailPreferredPerson', None), ('UserMetrics', None), ('UserNavItem', None), ('UserServicePresence', None), ('vidyard__Video_View__c', None), ('XactlyCorp__XactlyUserBusiness__c', None), ('XactlyCorp__XCIncentBusiness__c', None)], max_length=80, verbose_name='Sobject Type Name')),
        #         ('is_active', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Active')),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('business_process', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.BusinessProcess')),
        #         ('created_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='recordtype_createdby_set', to='app.User')),
        #         ('last_modified_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='recordtype_lastmodifiedby_set', to='app.User')),
        #     ],
        #     options={
        #         'verbose_name': 'Record Type',
        #         'verbose_name_plural': 'Record Types',
        #         'db_table': 'RecordType',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.CreateModel(
        #     name='QueueRoutingConfig',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('is_deleted', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Deleted')),
        #         ('developer_name', salesforce.fields.CharField(max_length=80)),
        #         ('language', salesforce.fields.CharField(choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], max_length=40, verbose_name='Master Language')),
        #         ('master_label', salesforce.fields.CharField(max_length=80, verbose_name='Routing Configuration Name')),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('routing_priority', salesforce.fields.IntegerField()),
        #         ('routing_model', salesforce.fields.CharField(choices=[('LeastActive', 'Least Active'), ('MostAvailable', 'Most Available'), ('ExternalRouting', 'External Routing')], max_length=255)),
        #         ('capacity_weight', salesforce.fields.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Units of Capacity')),
        #         ('capacity_percentage', salesforce.fields.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Percentage  of Capacity')),
        #         ('push_timeout', salesforce.fields.IntegerField(blank=True, null=True, verbose_name='Push Time-Out (seconds)')),
        #         ('is_attribute_based', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Use with Attribute Setup for Skills-Based Routing')),
        #         ('drop_additional_skills_timeout', salesforce.fields.IntegerField(blank=True, null=True, verbose_name='Drop Additional Skills Time-Out (seconds)')),
        #         ('created_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='queueroutingconfig_createdby_set', to='app.User')),
        #         ('last_modified_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='queueroutingconfig_lastmodifiedby_set', to='app.User')),
        #         ('overflow_assignee', salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='queueroutingconfig_overflowassignee_set', to='app.Group')),
        #     ],
        #     options={
        #         'verbose_name': 'Routing Configuration',
        #         'verbose_name_plural': 'Routing Configurations',
        #         'db_table': 'QueueRoutingConfig',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.AddField(
        #     model_name='profile',
        #     name='created_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='profile_createdby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='profile',
        #     name='last_modified_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='profile_lastmodifiedby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='profile',
        #     name='user_license',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.UserLicense'),
        # ),
        # migrations.CreateModel(
        #     name='Organization',
        #     fields=[
        #         ('id', salesforce.fields.SalesforceAutoField(auto_created=True, db_column='Id', primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', salesforce.fields.CharField(max_length=80)),
        #         ('division', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('street', salesforce.fields.TextField(blank=True, null=True)),
        #         ('city', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('state', salesforce.fields.CharField(blank=True, max_length=80, null=True, verbose_name='State/Province')),
        #         ('postal_code', salesforce.fields.CharField(blank=True, max_length=20, null=True, verbose_name='Zip/Postal Code')),
        #         ('country', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('state_code', salesforce.fields.CharField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AB', 'Alberta'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('BC', 'British Columbia'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MB', 'Manitoba'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('NT', 'Northwest Territories'), ('NS', 'Nova Scotia'), ('NU', 'Nunavut'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('ON', 'Ontario'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PE', 'Prince Edward Island'), ('PR', 'Puerto Rico'), ('QC', 'Quebec'), ('RI', 'Rhode Island'), ('SK', 'Saskatchewan'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('VI', 'US Virgin Islands'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('YT', 'Yukon Territories')], max_length=10, null=True, verbose_name='State/Province Code')),
        #         ('country_code', salesforce.fields.CharField(blank=True, choices=[('CA', 'Canada'), ('US', 'United States')], default=salesforce.backend.operations.DefaultedOnCreate('US'), max_length=10, null=True)),
        #         ('latitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('longitude', salesforce.fields.DecimalField(blank=True, decimal_places=15, max_digits=18, null=True)),
        #         ('geocode_accuracy', salesforce.fields.CharField(blank=True, choices=[('Address', 'Address'), ('NearAddress', 'NearAddress'), ('Block', 'Block'), ('Street', 'Street'), ('ExtendedZip', 'ExtendedZip'), ('Zip', 'Zip'), ('Neighborhood', 'Neighborhood'), ('City', 'City'), ('County', 'County'), ('State', 'State'), ('Unknown', 'Unknown')], max_length=40, null=True)),
        #         ('address', salesforce.fields.TextField(blank=True, null=True)),
        #         ('phone', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('fax', salesforce.fields.CharField(blank=True, max_length=40, null=True)),
        #         ('primary_contact', salesforce.fields.CharField(blank=True, max_length=80, null=True)),
        #         ('default_locale_sid_key', salesforce.fields.CharField(choices=[('af_ZA', 'Afrikaans (South Africa)'), ('sq_AL', 'Albanian (Albania)'), ('ar_DZ', 'Arabic (Algeria)'), ('ar_BH', 'Arabic (Bahrain)'), ('ar_EG', 'Arabic (Egypt)'), ('ar_IQ', 'Arabic (Iraq)'), ('ar_JO', 'Arabic (Jordan)'), ('ar_KW', 'Arabic (Kuwait)'), ('ar_LB', 'Arabic (Lebanon)'), ('ar_LY', 'Arabic (Libya)'), ('ar_MA', 'Arabic (Morocco)'), ('ar_OM', 'Arabic (Oman)'), ('ar_QA', 'Arabic (Qatar)'), ('ar_SA', 'Arabic (Saudi Arabia)'), ('ar_SD', 'Arabic (Sudan)'), ('ar_SY', 'Arabic (Syria)'), ('ar_TN', 'Arabic (Tunisia)'), ('ar_AE', 'Arabic (United Arab Emirates)'), ('ar_YE', 'Arabic (Yemen)'), ('hy_AM', 'Armenian (Armenia)'), ('az_AZ', 'Azerbaijani (Azerbaijan)'), ('bn_BD', 'Bangla (Bangladesh)'), ('bn_IN', 'Bangla (India)'), ('eu_ES', 'Basque (Spain)'), ('be_BY', 'Belarusian (Belarus)'), ('bs_BA', 'Bosnian (Bosnia & Herzegovina)'), ('bg_BG', 'Bulgarian (Bulgaria)'), ('my_MM', 'Burmese (Myanmar (Burma))'), ('ca_ES', 'Catalan (Spain)'), ('zh_CN_PINYIN', 'Chinese (China, Pinyin Ordering)'), ('zh_CN_STROKE', 'Chinese (China, Stroke Ordering)'), ('zh_CN', 'Chinese (China)'), ('zh_HK_STROKE', 'Chinese (Hong Kong SAR China, Stroke Ordering)'), ('zh_HK', 'Chinese (Hong Kong SAR China)'), ('zh_MO', 'Chinese (Macao SAR China)'), ('zh_SG', 'Chinese (Singapore)'), ('zh_TW_STROKE', 'Chinese (Taiwan, Stroke Ordering)'), ('zh_TW', 'Chinese (Taiwan)'), ('hr_HR', 'Croatian (Croatia)'), ('cs_CZ', 'Czech (Czechia)'), ('da_DK', 'Danish (Denmark)'), ('nl_AW', 'Dutch (Aruba)'), ('nl_BE', 'Dutch (Belgium)'), ('nl_NL', 'Dutch (Netherlands)'), ('nl_SR', 'Dutch (Suriname)'), ('dz_BT', 'Dzongkha (Bhutan)'), ('en_AG', 'English (Antigua & Barbuda)'), ('en_AU', 'English (Australia)'), ('en_BS', 'English (Bahamas)'), ('en_BB', 'English (Barbados)'), ('en_BZ', 'English (Belize)'), ('en_BM', 'English (Bermuda)'), ('en_BW', 'English (Botswana)'), ('en_CM', 'English (Cameroon)'), ('en_CA', 'English (Canada)'), ('en_KY', 'English (Cayman Islands)'), ('en_ER', 'English (Eritrea)'), ('en_SZ', 'English (Eswatini)'), ('en_FK', 'English (Falkland Islands)'), ('en_FJ', 'English (Fiji)'), ('en_GM', 'English (Gambia)'), ('en_GH', 'English (Ghana)'), ('en_GI', 'English (Gibraltar)'), ('en_GY', 'English (Guyana)'), ('en_HK', 'English (Hong Kong SAR China)'), ('en_IN', 'English (India)'), ('en_ID', 'English (Indonesia)'), ('en_IE', 'English (Ireland)'), ('en_JM', 'English (Jamaica)'), ('en_KE', 'English (Kenya)'), ('en_LR', 'English (Liberia)'), ('en_MG', 'English (Madagascar)'), ('en_MW', 'English (Malawi)'), ('en_MY', 'English (Malaysia)'), ('en_MU', 'English (Mauritius)'), ('en_NA', 'English (Namibia)'), ('en_NZ', 'English (New Zealand)'), ('en_NG', 'English (Nigeria)'), ('en_PK', 'English (Pakistan)'), ('en_PG', 'English (Papua New Guinea)'), ('en_PH', 'English (Philippines)'), ('en_RW', 'English (Rwanda)'), ('en_WS', 'English (Samoa)'), ('en_SC', 'English (Seychelles)'), ('en_SL', 'English (Sierra Leone)'), ('en_SG', 'English (Singapore)'), ('en_SX', 'English (Sint Maarten)'), ('en_SB', 'English (Solomon Islands)'), ('en_ZA', 'English (South Africa)'), ('en_SH', 'English (St. Helena)'), ('en_TZ', 'English (Tanzania)'), ('en_TO', 'English (Tonga)'), ('en_TT', 'English (Trinidad & Tobago)'), ('en_UG', 'English (Uganda)'), ('en_GB', 'English (United Kingdom)'), ('en_US', 'English (United States)'), ('en_VU', 'English (Vanuatu)'), ('et_EE', 'Estonian (Estonia)'), ('fi_FI', 'Finnish (Finland)'), ('fr_BE', 'French (Belgium)'), ('fr_CA', 'French (Canada)'), ('fr_KM', 'French (Comoros)'), ('fr_FR', 'French (France)'), ('fr_GN', 'French (Guinea)'), ('fr_HT', 'French (Haiti)'), ('fr_LU', 'French (Luxembourg)'), ('fr_MR', 'French (Mauritania)'), ('fr_MC', 'French (Monaco)'), ('fr_CH', 'French (Switzerland)'), ('fr_WF', 'French (Wallis & Futuna)'), ('ka_GE', 'Georgian (Georgia)'), ('de_AT', 'German (Austria)'), ('de_BE', 'German (Belgium)'), ('de_DE', 'German (Germany)'), ('de_LU', 'German (Luxembourg)'), ('de_CH', 'German (Switzerland)'), ('el_GR', 'Greek (Greece)'), ('gu_IN', 'Gujarati (India)'), ('iw_IL', 'Hebrew (Israel)'), ('hi_IN', 'Hindi (India)'), ('hu_HU', 'Hungarian (Hungary)'), ('is_IS', 'Icelandic (Iceland)'), ('in_ID', 'Indonesian (Indonesia)'), ('ga_IE', 'Irish (Ireland)'), ('it_IT', 'Italian (Italy)'), ('it_CH', 'Italian (Switzerland)'), ('ja_JP', 'Japanese (Japan)'), ('kn_IN', 'Kannada (India)'), ('kk_KZ', 'Kazakh (Kazakhstan)'), ('km_KH', 'Khmer (Cambodia)'), ('ko_KP', 'Korean (North Korea)'), ('ko_KR', 'Korean (South Korea)'), ('ky_KG', 'Kyrgyz (Kyrgyzstan)'), ('lo_LA', 'Lao (Laos)'), ('lv_LV', 'Latvian (Latvia)'), ('lt_LT', 'Lithuanian (Lithuania)'), ('lu_CD', 'Luba-Katanga (Congo - Kinshasa)'), ('lb_LU', 'Luxembourgish (Luxembourg)'), ('mk_MK', 'Macedonian (North Macedonia)'), ('ms_BN', 'Malay (Brunei)'), ('ms_MY', 'Malay (Malaysia)'), ('ml_IN', 'Malayalam (India)'), ('mt_MT', 'Maltese (Malta)'), ('mi_NZ', 'Maori (New Zealand)'), ('mr_IN', 'Marathi (India)'), ('sh_ME_USD', 'Montenegrin (Montenegro, USD)'), ('sh_ME', 'Montenegrin (Montenegro)'), ('ne_NP', 'Nepali (Nepal)'), ('no_NO', 'Norwegian (Norway)'), ('ps_AF', 'Pashto (Afghanistan)'), ('fa_IR', 'Persian (Iran)'), ('pl_PL', 'Polish (Poland)'), ('pt_AO', 'Portuguese (Angola)'), ('pt_BR', 'Portuguese (Brazil)'), ('pt_CV', 'Portuguese (Cape Verde)'), ('pt_MZ', 'Portuguese (Mozambique)'), ('pt_PT', 'Portuguese (Portugal)'), ('pt_ST', 'Portuguese (SÃ£o TomÃ© & PrÃ­ncipe)'), ('ro_MD', 'Romanian (Moldova)'), ('ro_RO', 'Romanian (Romania)'), ('rm_CH', 'Romansh (Switzerland)'), ('rn_BI', 'Rundi (Burundi)'), ('ru_KZ', 'Russian (Kazakhstan)'), ('ru_RU', 'Russian (Russia)'), ('sr_BA', 'Serbian (Cyrillic) (Bosnia and Herzegovina)'), ('sr_CS', 'Serbian (Cyrillic) (Serbia)'), ('sh_BA', 'Serbian (Latin) (Bosnia and Herzegovina)'), ('sh_CS', 'Serbian (Latin) (Serbia)'), ('sr_RS', 'Serbian (Serbia)'), ('sk_SK', 'Slovak (Slovakia)'), ('sl_SI', 'Slovenian (Slovenia)'), ('so_DJ', 'Somali (Djibouti)'), ('so_SO', 'Somali (Somalia)'), ('es_AR', 'Spanish (Argentina)'), ('es_BO', 'Spanish (Bolivia)'), ('es_CL', 'Spanish (Chile)'), ('es_CO', 'Spanish (Colombia)'), ('es_CR', 'Spanish (Costa Rica)'), ('es_CU', 'Spanish (Cuba)'), ('es_DO', 'Spanish (Dominican Republic)'), ('es_EC', 'Spanish (Ecuador)'), ('es_SV', 'Spanish (El Salvador)'), ('es_GT', 'Spanish (Guatemala)'), ('es_HN', 'Spanish (Honduras)'), ('es_MX', 'Spanish (Mexico)'), ('es_NI', 'Spanish (Nicaragua)'), ('es_PA', 'Spanish (Panama)'), ('es_PY', 'Spanish (Paraguay)'), ('es_PE', 'Spanish (Peru)'), ('es_PR', 'Spanish (Puerto Rico)'), ('es_ES', 'Spanish (Spain)'), ('es_US', 'Spanish (United States)'), ('es_UY', 'Spanish (Uruguay)'), ('es_VE', 'Spanish (Venezuela)'), ('sw_KE', 'Swahili (Kenya)'), ('sv_SE', 'Swedish (Sweden)'), ('tl_PH', 'Tagalog (Philippines)'), ('tg_TJ', 'Tajik (Tajikistan)'), ('ta_IN', 'Tamil (India)'), ('ta_LK', 'Tamil (Sri Lanka)'), ('te_IN', 'Telugu (India)'), ('th_TH', 'Thai (Thailand)'), ('ti_ET', 'Tigrinya (Ethiopia)'), ('tr_TR', 'Turkish (Turkey)'), ('uk_UA', 'Ukrainian (Ukraine)'), ('ur_PK', 'Urdu (Pakistan)'), ('uz_LATN_UZ', 'Uzbek (LATN,UZ)'), ('vi_VN', 'Vietnamese (Vietnam)'), ('cy_GB', 'Welsh (United Kingdom)'), ('xh_ZA', 'Xhosa (South Africa)'), ('yo_BJ', 'Yoruba (Benin)'), ('zu_ZA', 'Zulu (South Africa)')], max_length=40, verbose_name='Locale')),
        #         ('time_zone_sid_key', salesforce.fields.CharField(choices=[('Pacific/Kiritimati', '(GMT+14:00) Line Islands Time (Pacific/Kiritimati)'), ('Pacific/Chatham', '(GMT+13:45) Chatham Daylight Time (Pacific/Chatham)'), ('Pacific/Auckland', '(GMT+13:00) New Zealand Daylight Time (Pacific/Auckland)'), ('Pacific/Enderbury', '(GMT+13:00) Phoenix Islands Time (Pacific/Enderbury)'), ('Pacific/Tongatapu', '(GMT+13:00) Tonga Standard Time (Pacific/Tongatapu)'), ('Asia/Kamchatka', '(GMT+12:00) Petropavlovsk-Kamchatski Standard Time (Asia/Kamchatka)'), ('Pacific/Fiji', '(GMT+12:00) Fiji Standard Time (Pacific/Fiji)'), ('Pacific/Norfolk', '(GMT+12:00) Norfolk Island Time (Pacific/Norfolk)'), ('Australia/Lord_Howe', '(GMT+11:00) Lord Howe Daylight Time (Australia/Lord_Howe)'), ('Australia/Sydney', '(GMT+11:00) Australian Eastern Daylight Time (Australia/Sydney)'), ('Pacific/Guadalcanal', '(GMT+11:00) Solomon Islands Time (Pacific/Guadalcanal)'), ('Australia/Adelaide', '(GMT+10:30) Australian Central Daylight Time (Australia/Adelaide)'), ('Australia/Brisbane', '(GMT+10:00) Australian Eastern Standard Time (Australia/Brisbane)'), ('Australia/Darwin', '(GMT+09:30) Australian Central Standard Time (Australia/Darwin)'), ('Asia/Seoul', '(GMT+09:00) Korean Standard Time (Asia/Seoul)'), ('Asia/Tokyo', '(GMT+09:00) Japan Standard Time (Asia/Tokyo)'), ('Asia/Hong_Kong', '(GMT+08:00) Hong Kong Standard Time (Asia/Hong_Kong)'), ('Asia/Kuala_Lumpur', '(GMT+08:00) Malaysia Time (Asia/Kuala_Lumpur)'), ('Asia/Manila', '(GMT+08:00) Philippine Standard Time (Asia/Manila)'), ('Asia/Shanghai', '(GMT+08:00) China Standard Time (Asia/Shanghai)'), ('Asia/Singapore', '(GMT+08:00) Singapore Standard Time (Asia/Singapore)'), ('Asia/Taipei', '(GMT+08:00) Taipei Standard Time (Asia/Taipei)'), ('Australia/Perth', '(GMT+08:00) Australian Western Standard Time (Australia/Perth)'), ('Asia/Bangkok', '(GMT+07:00) Indochina Time (Asia/Bangkok)'), ('Asia/Ho_Chi_Minh', '(GMT+07:00) Indochina Time (Asia/Ho_Chi_Minh)'), ('Asia/Jakarta', '(GMT+07:00) Western Indonesia Time (Asia/Jakarta)'), ('Asia/Rangoon', '(GMT+06:30) Myanmar Time (Asia/Rangoon)'), ('Asia/Dhaka', '(GMT+06:00) Bangladesh Standard Time (Asia/Dhaka)'), ('Asia/Kathmandu', '(GMT+05:45) Nepal Time (Asia/Kathmandu)'), ('Asia/Colombo', '(GMT+05:30) India Standard Time (Asia/Colombo)'), ('Asia/Kolkata', '(GMT+05:30) India Standard Time (Asia/Kolkata)'), ('Asia/Karachi', '(GMT+05:00) Pakistan Standard Time (Asia/Karachi)'), ('Asia/Tashkent', '(GMT+05:00) Uzbekistan Standard Time (Asia/Tashkent)'), ('Asia/Yekaterinburg', '(GMT+05:00) Yekaterinburg Standard Time (Asia/Yekaterinburg)'), ('Asia/Kabul', '(GMT+04:30) Afghanistan Time (Asia/Kabul)'), ('Asia/Tehran', '(GMT+04:30) Iran Daylight Time (Asia/Tehran)'), ('Asia/Baku', '(GMT+04:00) Azerbaijan Standard Time (Asia/Baku)'), ('Asia/Dubai', '(GMT+04:00) Gulf Standard Time (Asia/Dubai)'), ('Asia/Tbilisi', '(GMT+04:00) Georgia Standard Time (Asia/Tbilisi)'), ('Asia/Yerevan', '(GMT+04:00) Armenia Standard Time (Asia/Yerevan)'), ('Africa/Nairobi', '(GMT+03:00) East Africa Time (Africa/Nairobi)'), ('Asia/Baghdad', '(GMT+03:00) Arabian Standard Time (Asia/Baghdad)'), ('Asia/Kuwait', '(GMT+03:00) Arabian Standard Time (Asia/Kuwait)'), ('Asia/Riyadh', '(GMT+03:00) Arabian Standard Time (Asia/Riyadh)'), ('Europe/Istanbul', '(GMT+03:00) Europe/Istanbul'), ('Europe/Minsk', '(GMT+03:00) Moscow Standard Time (Europe/Minsk)'), ('Europe/Moscow', '(GMT+03:00) Moscow Standard Time (Europe/Moscow)'), ('Africa/Cairo', '(GMT+02:00) Eastern European Standard Time (Africa/Cairo)'), ('Africa/Johannesburg', '(GMT+02:00) South Africa Standard Time (Africa/Johannesburg)'), ('Asia/Beirut', '(GMT+02:00) Eastern European Standard Time (Asia/Beirut)'), ('Asia/Jerusalem', '(GMT+02:00) Israel Standard Time (Asia/Jerusalem)'), ('Europe/Athens', '(GMT+02:00) Eastern European Standard Time (Europe/Athens)'), ('Europe/Bucharest', '(GMT+02:00) Eastern European Standard Time (Europe/Bucharest)'), ('Europe/Helsinki', '(GMT+02:00) Eastern European Standard Time (Europe/Helsinki)'), ('Africa/Algiers', '(GMT+01:00) Central European Standard Time (Africa/Algiers)'), ('Africa/Casablanca', '(GMT+01:00) Africa/Casablanca'), ('Europe/Amsterdam', '(GMT+01:00) Central European Standard Time (Europe/Amsterdam)'), ('Europe/Berlin', '(GMT+01:00) Central European Standard Time (Europe/Berlin)'), ('Europe/Brussels', '(GMT+01:00) Central European Standard Time (Europe/Brussels)'), ('Europe/Paris', '(GMT+01:00) Central European Standard Time (Europe/Paris)'), ('Europe/Prague', '(GMT+01:00) Central European Standard Time (Europe/Prague)'), ('Europe/Rome', '(GMT+01:00) Central European Standard Time (Europe/Rome)'), ('Europe/Dublin', '(GMT+00:00) Greenwich Mean Time (Europe/Dublin)'), ('Europe/Lisbon', '(GMT+00:00) Western European Standard Time (Europe/Lisbon)'), ('Europe/London', '(GMT+00:00) Greenwich Mean Time (Europe/London)'), ('GMT', '(GMT+00:00) Greenwich Mean Time (GMT)'), ('America/Scoresbysund', '(GMT-01:00) East Greenland Standard Time (America/Scoresbysund)'), ('Atlantic/Azores', '(GMT-01:00) Azores Standard Time (Atlantic/Azores)'), ('Atlantic/Cape_Verde', '(GMT-01:00) Cape Verde Standard Time (Atlantic/Cape_Verde)'), ('Atlantic/South_Georgia', '(GMT-02:00) South Georgia Time (Atlantic/South_Georgia)'), ('America/St_Johns', '(GMT-02:30) Newfoundland Daylight Time (America/St_Johns)'), ('America/Argentina/Buenos_Aires', '(GMT-03:00) Argentina Standard Time (America/Argentina/Buenos_Aires)'), ('America/Halifax', '(GMT-03:00) Atlantic Daylight Time (America/Halifax)'), ('America/Santiago', '(GMT-03:00) Chile Summer Time (America/Santiago)'), ('America/Sao_Paulo', '(GMT-03:00) Brasilia Standard Time (America/Sao_Paulo)'), ('Atlantic/Bermuda', '(GMT-03:00) Atlantic Daylight Time (Atlantic/Bermuda)'), ('America/Caracas', '(GMT-04:00) Venezuela Time (America/Caracas)'), ('America/Indiana/Indianapolis', '(GMT-04:00) Eastern Daylight Time (America/Indiana/Indianapolis)'), ('America/New_York', '(GMT-04:00) Eastern Daylight Time (America/New_York)'), ('America/Puerto_Rico', '(GMT-04:00) Atlantic Standard Time (America/Puerto_Rico)'), ('America/Bogota', '(GMT-05:00) Colombia Standard Time (America/Bogota)'), ('America/Chicago', '(GMT-05:00) Central Daylight Time (America/Chicago)'), ('America/Lima', '(GMT-05:00) Peru Standard Time (America/Lima)'), ('America/Panama', '(GMT-05:00) Eastern Standard Time (America/Panama)'), ('America/Denver', '(GMT-06:00) Mountain Daylight Time (America/Denver)'), ('America/El_Salvador', '(GMT-06:00) Central Standard Time (America/El_Salvador)'), ('America/Mexico_City', '(GMT-06:00) Central Standard Time (America/Mexico_City)'), ('America/Los_Angeles', '(GMT-07:00) Pacific Daylight Time (America/Los_Angeles)'), ('America/Mazatlan', '(GMT-07:00) Mexican Pacific Standard Time (America/Mazatlan)'), ('America/Phoenix', '(GMT-07:00) Mountain Standard Time (America/Phoenix)'), ('America/Tijuana', '(GMT-07:00) Pacific Daylight Time (America/Tijuana)'), ('America/Anchorage', '(GMT-08:00) Alaska Daylight Time (America/Anchorage)'), ('Pacific/Pitcairn', '(GMT-08:00) Pitcairn Time (Pacific/Pitcairn)'), ('America/Adak', '(GMT-09:00) Hawaii-Aleutian Daylight Time (America/Adak)'), ('Pacific/Gambier', '(GMT-09:00) Gambier Time (Pacific/Gambier)'), ('Pacific/Marquesas', '(GMT-09:30) Marquesas Time (Pacific/Marquesas)'), ('Pacific/Honolulu', '(GMT-10:00) Hawaii-Aleutian Standard Time (Pacific/Honolulu)'), ('Pacific/Niue', '(GMT-11:00) Niue Time (Pacific/Niue)'), ('Pacific/Pago_Pago', '(GMT-11:00) Samoa Standard Time (Pacific/Pago_Pago)')], max_length=40, verbose_name='Time Zone')),
        #         ('language_locale_key', salesforce.fields.CharField(choices=[('en_US', 'English'), ('de', 'German'), ('es', 'Spanish'), ('fr', 'French'), ('it', 'Italian'), ('ja', 'Japanese'), ('sv', 'Swedish'), ('ko', 'Korean'), ('zh_TW', 'Chinese (Traditional)'), ('zh_CN', 'Chinese (Simplified)'), ('pt_BR', 'Portuguese (Brazil)'), ('nl_NL', 'Dutch'), ('da', 'Danish'), ('th', 'Thai'), ('fi', 'Finnish'), ('ru', 'Russian'), ('es_MX', 'Spanish (Mexico)'), ('no', 'Norwegian')], max_length=40, verbose_name='Language')),
        #         ('receives_info_emails', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Info Emails')),
        #         ('receives_admin_info_emails', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Info Emails Admin')),
        #         ('preferences_require_opportunity_products', salesforce.fields.BooleanField(default=False, verbose_name='RequireOpportunityProducts')),
        #         ('fiscal_year_start_month', salesforce.fields.IntegerField(blank=True, null=True, verbose_name='Fiscal Year Starts In')),
        #         ('uses_start_date_as_fiscal_year_name', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False), verbose_name='Fiscal Year Name by Start')),
        #         ('default_account_access', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByLeadOrContact', 'ControlledByLeadOrContact'), ('ControlledByCampaign', 'ControlledByCampaign')], max_length=40, null=True)),
        #         ('default_contact_access', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByParent', 'Controlled By Parent')], max_length=40, null=True)),
        #         ('default_opportunity_access', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ControlledByLeadOrContact', 'ControlledByLeadOrContact'), ('ControlledByCampaign', 'ControlledByCampaign')], max_length=40, null=True)),
        #         ('default_lead_access', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ReadEditTransfer', 'Read/Write/Transfer')], max_length=40, null=True)),
        #         ('default_case_access', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('ReadEditTransfer', 'Read/Write/Transfer')], max_length=40, null=True)),
        #         ('default_calendar_access', salesforce.fields.CharField(blank=True, choices=[('HideDetails', 'Hide Details'), ('HideDetailsInsert', 'Hide Details and Add Events'), ('ShowDetails', 'Show Details'), ('ShowDetailsInsert', 'Show Details and Add Events'), ('AllowEdits', 'Full Access')], default=salesforce.backend.operations.DefaultedOnCreate('HideDetailsInsert'), max_length=40, null=True)),
        #         ('default_pricebook_access', salesforce.fields.CharField(blank=True, choices=[('None', 'No Access'), ('Read', 'View Only'), ('ReadSelect', 'Use')], max_length=40, null=True, verbose_name='Default Price Book Access')),
        #         ('default_campaign_access', salesforce.fields.CharField(blank=True, choices=[('None', 'Private'), ('Read', 'Read Only'), ('Edit', 'Read/Write'), ('All', 'Owner')], max_length=40, null=True)),
        #         ('delegated_authentication_service_url', salesforce.fields.URLField(blank=True, null=True, verbose_name='Single Sign-On Gateway URL')),
        #         ('system_modstamp', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('compliance_bcc_email', salesforce.fields.EmailField(blank=True, max_length=254, null=True, verbose_name='Compliance BCC Email')),
        #         ('ui_skin', salesforce.fields.CharField(blank=True, choices=[('Theme1', 'salesforce.com Classic'), ('Theme2', 'Salesforce'), ('PortalDefault', 'Portal Default'), ('Webstore', 'Webstore'), ('Theme3', 'Aloha')], default=salesforce.backend.operations.DefaultedOnCreate('Theme3'), max_length=40, null=True, verbose_name='UI Skin')),
        #         ('signup_country_iso_code', salesforce.fields.CharField(blank=True, max_length=2, null=True, verbose_name='Signup Country')),
        #         ('trial_expiration_date', salesforce.fields.DateTimeField(blank=True, null=True)),
        #         ('num_knowledge_service', salesforce.fields.IntegerField(blank=True, null=True, verbose_name='Knowledge Licenses')),
        #         ('organization_type', salesforce.fields.CharField(blank=True, choices=[('Team Edition', None), ('Professional Edition', None), ('Enterprise Edition', None), ('Developer Edition', None), ('Personal Edition', None), ('Unlimited Edition', None), ('Contact Manager Edition', None), ('Base Edition', None)], max_length=40, null=True, verbose_name='Edition')),
        #         ('namespace_prefix', salesforce.fields.CharField(blank=True, max_length=15, null=True)),
        #         ('instance_name', salesforce.fields.CharField(blank=True, max_length=5, null=True)),
        #         ('is_sandbox', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False))),
        #         ('web_to_case_default_origin', salesforce.fields.CharField(blank=True, max_length=40, null=True, verbose_name='Web to Cases Default Origin')),
        #         ('monthly_page_views_used', salesforce.fields.IntegerField(blank=True, null=True)),
        #         ('monthly_page_views_entitlement', salesforce.fields.IntegerField(blank=True, null=True, verbose_name='Monthly Page Views Allowed')),
        #         ('is_read_only', salesforce.fields.BooleanField(default=salesforce.backend.operations.DefaultedOnCreate(False))),
        #         ('created_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('last_modified_date', salesforce.fields.DateTimeField(default=salesforce.backend.operations.DefaultedOnCreate())),
        #         ('created_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='organization_createdby_set', to='app.User')),
        #         ('last_modified_by', salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='organization_lastmodifiedby_set', to='app.User')),
        #     ],
        #     options={
        #         'verbose_name': 'Organization',
        #         'verbose_name_plural': 'Organizations',
        #         'db_table': 'Organization',
        #         'abstract': False,
        #         'base_manager_name': 'objects',
        #     },
        # ),
        # migrations.AddField(
        #     model_name='group',
        #     name='created_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='group_createdby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='group',
        #     name='last_modified_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='group_lastmodifiedby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='group',
        #     name='owner',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='app.Organization'),
        # ),
        # migrations.AddField(
        #     model_name='group',
        #     name='queue_routing_config',
        #     field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.QueueRoutingConfig'),
        # ),
        # migrations.AddField(
        #     model_name='group',
        #     name='related',
        #     field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='group_related_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='callcenter',
        #     name='created_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='callcenter_createdby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='callcenter',
        #     name='last_modified_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='callcenter_lastmodifiedby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='businessprocess',
        #     name='created_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='businessprocess_createdby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='businessprocess',
        #     name='last_modified_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='businessprocess_lastmodifiedby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='bse_assigned',
        #     field=salesforce.fields.ForeignKey(blank=True, db_column='BSE_Assigned__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_bseassigned_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='bws_principle_agent_agency',
        #     field=salesforce.fields.ForeignKey(blank=True, db_column='BWS_Principle_Agent_Agency__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_bwsprincipleagentagency_set', to='app.Account'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='created_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_createdby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='last_modified_by',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_lastmodifiedby_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='master_record',
        #     field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_masterrecord_set', to='app.Account'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='owner',
        #     field=salesforce.fields.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_owner_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='parent',
        #     field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_parent_set', to='app.Account'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='primary_partner',
        #     field=salesforce.fields.ForeignKey(blank=True, db_column='Primary_Partner__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_primarypartner_set', to='app.Account'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='record_type',
        #     field=salesforce.fields.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.RecordType'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='referring_employee',
        #     field=salesforce.fields.ForeignKey(blank=True, db_column='Referring_Employee__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_referringemployee_set', to='app.User'),
        # ),
        # migrations.AddField(
        #     model_name='account',
        #     name='secondary_partner',
        #     field=salesforce.fields.ForeignKey(blank=True, db_column='Secondary_Partner__c', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='account_secondarypartner_set', to='app.Account'),
        # ),
    ]